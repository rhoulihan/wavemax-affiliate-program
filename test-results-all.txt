
> wavemax-affiliate-program@1.0.0 test
> jest --runInBand --forceExit

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/logger.test.js
  Logger Utility
    ✓ should export logger methods (111 ms)
    ✓ should be a winston logger instance (17 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/routingRoutes.test.js
  Routing Routes
    GET /
      ✓ should serve filmwalk index.html (27 ms)
      ✓ should handle root path without trailing slash (4 ms)
      ✓ should return 404 for non-existent paths (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentModel.test.js
  Payment Model Methods
    Instance Methods
      ✓ should determine if payment can be captured (109 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryption.test.js
  Encryption Utility
    ✓ should hash password correctly (64 ms)
    ✓ should verify password correctly (153 ms)
    ✓ should encrypt and decrypt data correctly (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixService.test.js
  Paygistix Service
    getConfig
      ✓ should return client config from paygistixConfig (2 ms)
    isConfigured
      ✓ should return true when properly configured (1 ms)
      ✓ should return false when not configured

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paginationMiddleware.test.js
  Pagination Middleware
    ✓ should set default pagination values when no query params provided (2 ms)
    ✓ should parse page and limit from query params
    ✓ should enforce minimum values (1 ms)
    ✓ should enforce maximum limit
    ✓ should handle non-numeric values
    ✓ should calculate skip correctly for different pages (1 ms)
    ✓ should handle floating point numbers (1 ms)
    ✓ should preserve other query parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/helpers.test.js
  Helpers Utility Functions
    formatCurrency
      ✓ should format a number as USD currency by default (15 ms)
      ✓ should handle null and undefined amounts
      ✓ should handle NaN values (1 ms)
      ✓ should parse string amounts
      ✓ should format with different currencies
      ✓ should handle negative amounts
      ✓ should round to 2 decimal places
    formatDate
      ✓ should format date with short format by default (5 ms)
      ✓ should format date with long format (1 ms)
      ✓ should format date with ISO format
      ✓ should handle string dates
      ✓ should handle null and undefined dates (2 ms)
      ✓ should handle invalid dates (1 ms)
      ✓ should handle different format cases

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportGoogleOnly.test.js
  Google OAuth Passport Configuration - Isolated
    ✓ should handle Google OAuth callback correctly (2 ms)
    ✓ should configure Google strategy with correct parameters (1 ms)
    ✓ should support state parameter for context detection (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/quickbooksRoutesSimple.test.js
  QuickBooks Routes - Simple
    GET /api/quickbooks/vendors/export
      ✓ should export vendors (8 ms)
      ✓ should export vendors as CSV (3 ms)
    GET /api/quickbooks/payments/export
      ✓ should export payment summary (4 ms)
    GET /api/quickbooks/commissions/export
      ✓ should export commission detail (4 ms)
    GET /api/quickbooks/exports
      ✓ should get export history (3 ms)
      ✓ should filter export history by type (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateModel.test.js
  Affiliate Model Methods
    Virtual Properties
      ✓ should calculate full name virtual property (164 ms)
    Payment Methods
      ✓ should determine if affiliate can receive payments (176 ms)
    W9 Status Display
      ✓ should return correct W9 status display text (141 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportFacebookOnly.test.js
  Facebook OAuth Passport Configuration - Isolated
    ✓ should handle Facebook OAuth callback correctly
    ✓ should configure Facebook strategy with profile fields
    ✓ should configure Facebook strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportLinkedInOnly.test.js
  LinkedIn OAuth Passport Configuration - Isolated
    ✓ should handle LinkedIn OAuth callback correctly (1 ms)
    ✓ should configure LinkedIn strategy with correct scope
    ✓ should configure LinkedIn strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorAdditional.test.js
  Administrator Model - Additional Coverage
    Permission Methods
      ✓ should check single permission with hasPermission (227 ms)
      ✓ should check all permissions with hasAllPermissions (248 ms)
    Password History
      ✓ should check if password is in history (655 ms)
      ✓ should handle empty password history (170 ms)
    Virtual Properties
      ✓ should calculate isLocked virtual property correctly (129 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /non-existent-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /protected-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /file%20with%20spaces.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /../../../etc/passwd

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /styles.css

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /script.js

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] POST /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] PUT /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] DELETE /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

PASS tests/unit/coverageRoutesAdditional.test.js
  Coverage Routes - Additional Coverage
    Error Handler Function
      ✓ should handle file not found errors (17 ms)
      ✓ should handle permission denied errors (5 ms)
    Static File Serving Edge Cases
      ✓ should handle requests with special characters in filename (4 ms)
      ✓ should handle requests with directory traversal attempts (4 ms)
      ✓ should serve CSS files with proper headers (4 ms)
      ✓ should serve JS files with proper headers (3 ms)
    Environment-specific Behavior
      ✓ should handle staging environment (2 ms)
    Request Method Handling
      ✓ should reject POST requests (4 ms)
      ✓ should reject PUT requests (4 ms)
      ✓ should reject DELETE requests (4 ms)
    Concurrent Request Handling
      ✓ should handle multiple simultaneous requests (33 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutesSimple.test.js
  Order Routes - Simple
    POST /api/orders
      ✓ should create order with valid data (12 ms)
    GET /api/orders/export
      ✓ should export orders (3 ms)
    GET /api/orders/search
      ✓ should search orders (3 ms)
    GET /api/orders/statistics
      ✓ should get order statistics (2 ms)
    PUT /api/orders/bulk/status
      ✓ should bulk update order status (2 ms)
    POST /api/orders/bulk/cancel
      ✓ should bulk cancel orders (2 ms)
    GET /api/orders/:orderId
      ✓ should get order details (2 ms)
    PUT /api/orders/:orderId/status
      ✓ should update order status (2 ms)
    POST /api/orders/:orderId/cancel
      ✓ should cancel order (2 ms)
    PUT /api/orders/:orderId/payment-status
      ✓ should update payment status (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModelSimple.test.js
  Order Model - Line Coverage
    SystemConfig Error Handling (Line 110)
      ✓ should use default base rate when SystemConfig.getValue throws error (206 ms)
    Status Timestamp Updates (Lines 132-148)
      ✓ should set processingStartedAt when status changes to processing (245 ms)
      ✓ should set processedAt when status changes to processed (248 ms)
      ✓ should set completedAt when status changes to complete (266 ms)
      ✓ should set cancelledAt when status changes to cancelled (246 ms)
      ✓ should not overwrite existing timestamps (234 ms)
    Actual Weight and Commission Calculations
      ✓ should calculate actualTotal and commission when actualWeight is set (233 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:01.497Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:01.662Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T01:33:01.710Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:01.893Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:02.024Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:02.715Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:33:02.832Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

PASS tests/unit/docusignToken.test.js
  DocuSignToken Model
    saveToken
      ✓ should save a new token with all fields (156 ms)
      ✓ should update existing token if one exists (235 ms)
      ✓ should calculate expiration time correctly (127 ms)
    getCurrentToken
      ✓ should return the most recent token (160 ms)
      ✓ should return null if no tokens exist (107 ms)
    clearTokens
      ✓ should remove all tokens (238 ms)
    token expiration
      ✓ should identify expired tokens (184 ms)
      ✓ should handle tokens without refresh token (127 ms)
    lastUsed tracking
      ✓ should update lastUsed when token is accessed (264 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/modelsAdditional.test.js
  Models - Additional Coverage
    Administrator Model - Pre-save Hook
      ✓ should add password to history on password change (314 ms)
      ✓ should limit password history to 5 entries (180 ms)
    Payment Model - Helper Methods
      ✓ should have a method to format payment display (134 ms)
      ✓ should validate payment can be refunded (136 ms)
      ✓ should calculate net amount after fees (121 ms)
    Edge Cases and Error Handling
      ✓ should handle missing required fields gracefully (107 ms)
      ✓ should handle invalid enum values (108 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethodModel.test.js
  PaymentMethod Model Methods
    Virtual Properties
      ✓ should calculate displayName for card payment method (94 ms)
      ✓ should calculate displayName for bank account payment method (103 ms)
      ✓ should return unknown for unsupported payment type (82 ms)
      ✓ should check if card is expired (98 ms)
    Static Methods
      ✓ should find default payment method for customer (437 ms)
      ✓ should find active payment methods for customer (205 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutes.isolated.test.js
  Order Routes - Isolated V2
    ✓ POST /api/orders - should create a new order (14 ms)
    ✓ GET /api/orders/export - should export orders (3 ms)
    ✓ GET /api/orders/search - should search orders (2 ms)
    ✓ GET /api/orders/statistics - should get statistics (2 ms)
    ✓ PUT /api/orders/bulk/status - should bulk update (2 ms)
    ✓ POST /api/orders/bulk/cancel - should bulk cancel (2 ms)
    ✓ GET /api/orders/:orderId - should get order details (2 ms)
    ✓ PUT /api/orders/:orderId/status - should update status (2 ms)
    ✓ POST /api/orders/:orderId/cancel - should cancel order (2 ms)
    ✓ PUT /api/orders/:orderId/payment-status - should update payment (3 ms)
    ✓ Error handling - should return 404 for unknown routes (2 ms)
    ✓ Error handling - should handle controller errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/authRoutesSimple.test.js
  Auth Routes - Simple
    POST /api/auth/login
      ✓ should login with valid credentials (9 ms)
      ✓ should reject invalid credentials (3 ms)
    POST /api/auth/register
      ✓ should register new user (3 ms)
    POST /api/auth/logout
      ✓ should logout with valid token (3 ms)
      ✓ should reject logout without token (2 ms)
    POST /api/auth/forgot-password
      ✓ should send password reset email (4 ms)
    POST /api/auth/reset-password
      ✓ should reset password with valid token (3 ms)
    GET /api/auth/verify-email/:token
      ✓ should verify email with valid token (2 ms)
    POST /api/auth/refresh-token
      ✓ should refresh token (3 ms)
    GET /api/auth/me
      ✓ should get current user with valid token (2 ms)
      ✓ should reject without token (5 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateLoginInit.test.js
  Affiliate Login Initialization
    Module Loading
      ✓ should initialize when form is found (3 ms)
      ✓ should handle missing form gracefully (1 ms)
    URL Parameter Handling Logic
      ✓ should correctly parse customer parameter from URL
      ✓ should handle URL without customer parameter
      ✓ should construct redirect URL correctly with customer parameter (1 ms)
      ✓ should construct redirect URL correctly without customer parameter
    URL Validation
      ✓ should validate customer ID format (1 ms)
      ✓ should handle URL encoding correctly
    Integration with Email URLs
      ✓ should parse email-generated URLs correctly (1 ms)
      ✓ should handle both login and customer parameters together
    Parameter Preservation Logic
      ✓ should preserve customer parameter through login flow (1 ms)
      ✓ should handle multiple URL parameters correctly

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.isolated.test.js
  Payment Routes - Isolated
    GET /api/v1/payments/config
      ✓ should return payment configuration (5 ms)
    POST /api/v1/payments/log-submission
      ✓ should log payment submission (5 ms)
    POST /api/v1/payments/create-token
      ✓ should create payment token (2 ms)
    GET /api/v1/payments/check-status/:token
      ✓ should check payment status (1 ms)
    POST /api/v1/payments/cancel-token/:token
      ✓ should cancel payment token (1 ms)
    POST /api/v1/payments/update-status/:token
      ✓ should update payment status (2 ms)
    GET /api/v1/payments/pool-stats
      ✓ should return pool statistics (2 ms)
    Error Handling
      ✓ should handle controller errors gracefully (1 ms)
      ✓ should handle missing routes with 404 (3 ms)
    Request Validation
      ✓ should pass through request headers (1 ms)
      ✓ should handle JSON parsing errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Export orders error: Error: Export failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:114:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      827 |     }
      828 |   } catch (error) {
    > 829 |     console.error('Export orders error:', error);
          |             ^
      830 |     res.status(500).json({
      831 |       success: false,
      832 |       message: 'An error occurred while exporting orders'

      at error (server/controllers/orderController.js:829:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:117:7)

  console.error
    Search orders error: Error: Search failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:237:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |     });
      1035 |   } catch (error) {
    > 1036 |     console.error('Search orders error:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'An error occurred while searching orders'

      at error (server/controllers/orderController.js:1036:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:240:7)

PASS tests/unit/orderControllerUncovered.test.js
  Order Controller - Uncovered Functions
    exportOrders
      ✓ should export orders as CSV (296 ms)
      ✓ should export orders as Excel (143 ms)
      ✓ should export orders as JSON by default (109 ms)
      ✓ should handle export errors (126 ms)
    searchOrders
      ✓ should search orders by customer name (103 ms)
      ✓ should search orders without search term (102 ms)
      ✓ should handle search with no results (103 ms)
      ✓ should handle search errors (116 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorEmailService.test.js
  Administrator Email Service Tests
    sendAdministratorWelcomeEmail
      ✓ should call sendAdministratorWelcomeEmail function (1 ms)
      ✓ should handle admin with different permission sets
      ✓ should handle admin with single permission (1 ms)
      ✓ should handle admin with no permissions
    sendAdministratorPasswordResetEmail
      ✓ should call sendAdministratorPasswordResetEmail function
      ✓ should handle different reset URLs (1 ms)
    Email template data processing
      ✓ should replace uppercase placeholders correctly
      ✓ should handle missing placeholders gracefully (1 ms)
      ✓ should include current year in template data
      ✓ should format permissions correctly as comma-separated string
      ✓ should handle empty permissions array (1 ms)
      ✓ should handle single permission
    Email service integration
      ✓ should be available as a module export
      ✓ should not throw error when sending welcome email (1 ms)
      ✓ should not throw error when sending password reset email
    Admin data validation
      ✓ should handle admin with required fields (1 ms)
      ✓ should handle admin with different adminId formats (2 ms)
      ✓ should handle admin with different email formats (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminDirectly.test.js
  Create Admin Directly Script Unit Tests
    generateAdminId function
      ✓ should generate ADM001 when no administrators exist (1 ms)
      ✓ should generate next sequential ID when administrators exist (1 ms)
      ✓ should handle double-digit admin IDs correctly
    Permission selection
      ✓ should handle "all" permission selection (1 ms)
      ✓ should handle specific permission selection
      ✓ should filter out invalid permission numbers
    Database operations
      ✓ should connect to MongoDB successfully (1 ms)
      ✓ should create administrator with correct data
      ✓ should handle database save errors (1 ms)
    Email functionality
      ✓ should send welcome email after admin creation
      ✓ should handle email sending errors gracefully (1 ms)
    Input validation
      ✓ should handle empty input fields
      ✓ should handle whitespace in permission input
    Error handling
      ✓ should handle MongoDB connection errors (1 ms)
      ✓ should close database connection in finally block
      ✓ should close readline interface in finally block

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModel.test.js
  Order Model - Additional Coverage
    Pre-save Hook Coverage
      SystemConfig Error Handling
        ✓ should use default base rate when SystemConfig.getValue throws error (334 ms)
      Status Timestamp Updates
        ✓ should set processingStartedAt timestamp when status changes to processing (212 ms)
        ✓ should not overwrite existing processingStartedAt timestamp (214 ms)
      Actual Weight and Commission Calculations
        ✓ should calculate actual total and commission when actual weight is set (234 ms)
        ✓ should set processedAt timestamp when status changes to processed (214 ms)
        ✓ should set completedAt timestamp when status changes to complete (216 ms)
        ✓ should set cancelledAt timestamp when status changes to cancelled (207 ms)
        ✓ should properly calculate commission with different fee structures (183 ms)
        ✓ should not overwrite existing timestamps (222 ms)
      Edge Cases
        ✓ should handle status change to processing (212 ms)
        ✓ should calculate commission for large orders (174 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/wdfCreditModel.test.js
  WDF Credit Model Tests
    Order Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (269 ms)
      ✓ should calculate estimated total with positive WDF credit (283 ms)
      ✓ should calculate estimated total with negative WDF credit (debit) (263 ms)
      ✓ should calculate actual total with WDF credit when weight is updated (290 ms)
      ✓ should store weight difference and generated credit (248 ms)
    Customer Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (273 ms)
      ✓ should store positive WDF credit (253 ms)
      ✓ should store negative WDF credit (debit) (252 ms)
    WDF Credit Calculation Logic
      ✓ should handle precision correctly (265 ms)
      ✓ should handle zero credit correctly (265 ms)
    Order Total Recalculation
      ✓ should recalculate total when weight changes (292 ms)
      ✓ should maintain affiliate commission calculation with WDF credit (281 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailService.test.js
  Email Service Mock
    All Email Functions
      ✓ should have all required email functions mocked (1 ms)
      ✓ should return expected mock response for all functions (2 ms)
      ✓ should track function calls correctly
      ✓ should handle errors when mocked to reject (8 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/controllersAdditional.test.js
  Controllers - Additional Function Coverage
    Order Controller - Additional Functions
      searchOrders - Additional Cases
        ✓ should handle search with affiliate filter (61 ms)
        ✓ should handle empty search query (65 ms)
      exportOrders - Edge Cases
        ✓ should handle export with date filters (85 ms)
      getOrderStatistics - Various Scenarios
        ✓ should get order statistics with time range (61 ms)
        ✓ should handle statistics for affiliate user (57 ms)
    Affiliate Controller - Additional Functions
      getAffiliateDashboardStats - Edge Cases
        ✓ should handle empty statistics (68 ms)
        ✓ should handle date range filters (67 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:56:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:62:7)

  console.error
    Error creating administrator: Error: Duplicate key
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:79:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:85:7)

  console.error
    Error deleting administrator: TypeError: Cannot read properties of undefined (reading 'length')
        at length (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:352:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:164:7)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at error (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:164:7)

  console.error
    Error fetching dashboard data: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:225:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1249 |
      1250 |   } catch (error) {
    > 1251 |     console.error('Error fetching dashboard data:', error);
           |             ^
      1252 |     res.status(500).json({
      1253 |       success: false,
      1254 |       message: 'Failed to fetch dashboard data'

      at error (server/controllers/administratorController.js:1251:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:227:7)

PASS tests/unit/administratorControllerAdditional.test.js
  Administrator Controller - Additional Coverage
    createAdministrator - Error Handling
      ✓ should handle validation errors from pre-save hooks (153 ms)
      ✓ should handle duplicate email errors (137 ms)
    updateAdministrator - Edge Cases
      ✓ should prevent self-deactivation (60 ms)
      ✓ should handle administrator not found (51 ms)
    deleteAdministrator - Error Cases
      ✓ should prevent deleting the last administrator with full permissions (52 ms)
      ✓ should handle deletion errors (66 ms)
    getDashboard - Complex Scenarios
      ✓ should handle empty analytics data (58 ms)
      ✓ should handle database errors gracefully (53 ms)
    getOrderAnalytics - Date Range Handling
      ✓ should handle custom date range (52 ms)
      ✓ should handle invalid date format (64 ms)
    Helper Functions
      ✓ should export updateOperatorStats function (52 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixConfig.test.js
  Paygistix Config
    validateEnvironment
      ✓ should warn when required environment variables are missing (2 ms)
      ✓ should not warn when all required variables are present (1 ms)
    getEnvironment
      ✓ should return configured environment (1 ms)
      ✓ should default to production if not configured (1 ms)
    getMerchantId
      ✓ should return merchant ID when configured (1 ms)
      ✓ should throw error when not configured (9 ms)
    getFormId
      ✓ should return form ID when configured (1 ms)
      ✓ should throw error when not configured (1 ms)
    getFormHash
      ✓ should return form hash when configured
      ✓ should throw error when not configured (1 ms)
    getFormActionUrl
      ✓ should return configured form action URL (6 ms)
      ✓ should return default URL when not configured
    getReturnUrl
      ✓ should return configured return URL
      ✓ should return default URL when not configured (1 ms)
    isConfigured
      ✓ should return true when all required config is present (1 ms)
      ✓ should return false and log error when config is incomplete
    getClientConfig
      ✓ should return complete client config when properly configured (1 ms)
      ✓ should throw and log error when config is missing (1 ms)
      ✓ should set testModeEnabled to false when not configured (1 ms)
    getFullConfig
      ✓ should return complete config including hash (1 ms)
      ✓ should throw and log error when config is missing (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateDashboardInit.test.js
  Affiliate Dashboard Customer Filtering
    URL Parameter Detection Logic
      ✓ should detect customer parameter from URL search params (1 ms)
      ✓ should handle URL without customer parameter
      ✓ should parse customer parameter from complex URL
      ✓ should handle regex pattern matching for customer parameter
    Customer Highlighting Logic
      ✓ should identify highlighted customer correctly
      ✓ should generate correct CSS classes for highlighted customer
      ✓ should generate correct HTML content for highlighted customer
      ✓ should not highlight non-matching customers (1 ms)
    Tab Switching Logic
      ✓ should determine correct tab activation based on customer parameter
      ✓ should not switch tabs when no customer parameter
      ✓ should handle empty string customer parameter
    Authentication Check Logic
      ✓ should identify authenticated state correctly
      ✓ should identify unauthenticated state when missing token
      ✓ should identify unauthenticated state when missing affiliate
    Customer Data Processing
      ✓ should handle empty customer list
      ✓ should process customer list without filtering (1 ms)
      ✓ should filter customer list by customer ID
    URL Construction and Validation
      ✓ should construct API URLs correctly
      ✓ should validate customer ID format (1 ms)
    Timing and Delays
      ✓ should calculate correct delay for tab switching
      ✓ should handle immediate execution when no customer parameter

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.test.js
  Payment Routes
    Static Routes
      GET /api/v1/payments/config
        ✓ should return payment configuration (11 ms)
      POST /api/v1/payments/log-submission
        ✓ should log payment submission (10 ms)
      POST /api/v1/payments/create-token
        ✓ should create payment token (4 ms)
      GET /api/v1/payments/check-status/:token
        ✓ should check payment status (3 ms)
      POST /api/v1/payments/cancel-token/:token
        ✓ should cancel payment token (2 ms)
      POST /api/v1/payments/update-status/:token
        ✓ should update payment status (3 ms)
      GET /api/v1/payments/pool-stats
        ✓ should return pool statistics (2 ms)
    Dynamic Callback Routes
      ✓ should handle GET callback routes (3 ms)
      ✓ should handle POST callback routes (3 ms)
      ✓ should handle multiple callback paths (4 ms)
    Error Handling
      ✓ should handle controller errors gracefully (3 ms)
      ✓ should handle missing routes with 404 (3 ms)
      ✓ should handle JSON parsing errors (3 ms)
    Request Validation
      ✓ should pass through request headers (2 ms)
      ✓ should handle empty request bodies (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilterWdfCredit.test.js
  Field Filter WDF Credit Support
    Customer WDF Credit Fields
      ✓ should include WDF credit fields for customer viewing own profile (1 ms)
      ✓ should include WDF credit fields for affiliate viewing customer (1 ms)
      ✓ should include WDF credit fields for admin viewing customer
      ✓ should NOT include WDF credit for public access (1 ms)
      ✓ should NOT include WDF credit for other customers (1 ms)
    Order WDF Credit Fields
      ✓ should include WDF fields for customer viewing own order
      ✓ should include WDF fields for affiliate viewing order (1 ms)
      ✓ should include WDF fields for admin viewing order
    Field Definition Verification
      ✓ should have WDF credit fields defined in customer field definitions (1 ms)
      ✓ should have WDF credit fields defined in order field definitions (5 ms)
    Array Filtering
      ✓ should filter WDF credit fields in customer arrays (1 ms)
      ✓ should filter WDF credit fields in order arrays
    Edge Cases
      ✓ should handle null/undefined WDF credit values
      ✓ should handle zero WDF credit values (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/errorHandler.test.js
  Error Handler Middleware
    errorHandler
      ✓ should handle generic errors with 500 status (10 ms)
      ✓ should handle custom status codes (1 ms)
      ✓ should handle Mongoose validation errors
      ✓ should handle MongoDB duplicate key errors (1 ms)
      ✓ should handle JWT errors
      ✓ should handle JWT token expiration errors (1 ms)
      ✓ should handle rate limiting errors
      ✓ should handle CastError (invalid MongoDB ObjectId) (1 ms)
      ✓ should include user context when available
      ✓ should handle errors with customer context (1 ms)
      ✓ should hide error details in production
      ✓ should show error details in development (1 ms)
      ✓ should use original message for non-500 errors in production
      ✓ should handle errors without message (1 ms)
      ✓ should handle errors with code property
      ✓ should log all console error sections (1 ms)
    AppError
      ✓ should create custom error with status code (1 ms)
      ✓ should have stack trace
      ✓ should work with error handler (1 ms)
    Edge cases
      ✓ should handle null error (2 ms)
      ✓ should handle undefined error
      ✓ should handle non-error objects (1 ms)
      ✓ should handle errors thrown from within error handler

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderWithSystemConfig.test.js (12.043 s)
  Order Model with SystemConfig Integration
    Dynamic WDF Pricing
      ✓ should fetch base rate from SystemConfig on order creation (1098 ms)
      ✓ should use default rate when SystemConfig is not available (1227 ms)
      ✓ should calculate estimated total using SystemConfig rate (832 ms)
      ✓ should calculate actual total using SystemConfig rate (787 ms)
    Commission Calculations
      ✓ should calculate affiliate commission correctly with custom WDF rate (839 ms)
      ✓ should calculate commission for zero delivery fee (824 ms)
      ✓ should handle commission calculation for large orders (819 ms)
    Edge Cases
      ✓ should handle commission when only estimated size is available (760 ms)
      ✓ should update calculations when base rate changes (976 ms)
      ✓ should validate minimum and maximum base rates (1107 ms)
    Revenue Calculator Scenarios
      ✓ should match revenue calculator example - 10 customers scenario (1392 ms)
      ✓ should match revenue calculator with different parameters (816 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.full.test.js
  Payment Routes - Full Coverage
    Dynamic Route Loading
      ✓ should load dynamic callback routes when not in test environment (28 ms)
      ✓ should handle GET requests on dynamic callback routes (28 ms)
      ✓ should handle POST requests on dynamic callback routes (38 ms)
      ✓ should handle errors when loading config file (21 ms)
      ✓ should handle invalid JSON in config file (20 ms)
      ✓ should skip dynamic route loading in test environment (30 ms)
    Static Routes
      ✓ should handle GET /config (21 ms)
      ✓ should handle POST /log-submission (30 ms)
      ✓ should handle POST /create-token (23 ms)
      ✓ should handle GET /check-status/:token (32 ms)
      ✓ should handle POST /cancel-token/:token (24 ms)
      ✓ should handle POST /update-status/:token (25 ms)
      ✓ should handle GET /pool-stats (18 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/customerDashboardWdfCredit.test.js (7.184 s)
  Customer Dashboard WDF Credit Display
    Dashboard Stats with WDF Credit
      ✓ should include WDF credit information in dashboard response (898 ms)
      ✓ should show zero WDF credit for new customers (586 ms)
      ✓ should show negative WDF credit (debit) correctly (635 ms)
      ✓ should include both bag credit and WDF credit (610 ms)
    Dashboard with Order History
      ✓ should show WDF credit alongside order statistics (740 ms)
    Access Control
      ✓ should allow affiliates to see customer WDF credit (624 ms)
      ✓ should not allow unrelated affiliates to see customer WDF credit (481 ms)
      ✓ should allow admins to see any customer WDF credit (645 ms)
    Edge Cases
      ✓ should handle null WDF credit fields gracefully (633 ms)
      ✓ should handle very small WDF credit amounts (612 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/tokenBlacklist.test.js
  TokenBlacklist Model
    Schema Validation
      ✓ should create a valid token blacklist entry (194 ms)
      ✓ should use default values for blacklistedAt and reason (147 ms)
      ✓ should require all mandatory fields (83 ms)
      ✓ should enforce unique token constraint (354 ms)
      ✓ should validate userType enum (85 ms)
      ✓ should accept all valid userTypes (250 ms)
    Static Methods
      blacklistToken
        ✓ should successfully blacklist a token (120 ms)
        ✓ should use default reason when not provided (125 ms)
        ✓ should return null when token already blacklisted (281 ms)
        ✓ should handle custom reasons (123 ms)
        ✓ should propagate non-duplicate errors (83 ms)
      isBlacklisted
        ✓ should return true for blacklisted token (150 ms)
        ✓ should return false for non-blacklisted token (109 ms)
        ✓ should handle empty token (103 ms)
        ✓ should handle null token (103 ms)
      cleanupExpired
        ✓ should delete expired tokens (257 ms)
        ✓ should return 0 when no expired tokens (230 ms)
        ✓ should handle empty collection (102 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] Google callback: {
      error: null,
      user: 'exists',
      userObject: { id: '12345', email: 'test@example.com', provider: 'google' },
      isExistingAffiliate: undefined,
      info: null
    }

      at log (server/routes/socialAuthRoutes.js:40:13)

PASS tests/unit/socialAuthRoutes.full.test.js
  Social Auth Routes - Full Coverage
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (49 ms)
      ✓ should return 404 when Google OAuth is not configured (55 ms)
      ✓ should handle Google OAuth callback (83 ms)
      ✓ should pass state parameter through OAuth (53 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (47 ms)
      ✓ should return 404 when Facebook OAuth is not configured (70 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (37 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (50 ms)
      ✓ should redirect customer Google OAuth callback (56 ms)
      ✓ should handle customer Facebook OAuth callback (48 ms)
      ✓ should initiate Facebook OAuth for customers (54 ms)
      ✓ should return 404 when Facebook OAuth is not configured for customers (44 ms)
      ✓ should initiate LinkedIn OAuth for customers (55 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured for customers (66 ms)
      ✓ should handle customer LinkedIn OAuth callback (73 ms)
    Social Registration Completion
      ✓ should complete affiliate social registration (89 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/validators.test.js
  Validators
    isValidEmail
      ✓ should validate correct email addresses (3 ms)
      ✓ should reject invalid email addresses (1 ms)
    isValidPhone
      ✓ should validate correct US phone numbers
      ✓ should reject invalid phone numbers (1 ms)
    isValidUsername
      ✓ should validate correct usernames
      ✓ should reject invalid usernames (1 ms)
    isValidZipCode
      ✓ should validate correct US zip codes (1 ms)
      ✓ should reject invalid zip codes
    isValidTimeFormat
      ✓ should validate correct time formats (1 ms)
      ✓ should reject invalid time formats
    isValidName
      ✓ should validate correct names (1 ms)
      ✓ should reject invalid names
    mongooseValidators
      ✓ should provide email validator
      ✓ should provide phone validator
      ✓ should provide username validator
      ✓ should provide zipCode validator (1 ms)
      ✓ should provide timeFormat validator
      ✓ should provide name validator
    expressValidators
      ✓ should provide email validator function
      ✓ should provide phone validator function (1 ms)
      ✓ should provide username validator function
      ✓ should provide zipCode validator function
      ✓ should provide timeFormat validator function
      ✓ should provide name validator function (1 ms)
    Client-side validation functions
      validateEmail
        ✓ should return validation result for emails (1 ms)
      validatePhone
        ✓ should return validation result for phones
      validateUsername
        ✓ should return validation result for usernames (1 ms)
      validateZipCode
        ✓ should return validation result for zip codes
      validateTimeFormat
        ✓ should return validation result for time formats
      validateName
        ✓ should return validation result for names

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission: invalid_permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:49:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:70:7)

  console.error
    Error creating administrator: Error: E11000 duplicate key error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:88:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:109:7)

PASS tests/unit/administratorControllerUncovered.test.js
  Administrator Controller - Uncovered Functions
    createAdministrator - Additional Error Cases
      ✓ should handle pre-save validation errors (75 ms)
      ✓ should handle duplicate email error (11000) (79 ms)
    deleteAdministrator - Last Admin Check
      ✓ should prevent deleting the last administrator with full permissions (76 ms)
    getDashboard - All Statistics
      ✓ should return dashboard with all statistics (87 ms)
    getOrderAnalytics - With Date Filters
      ✓ should handle date range in analytics (78 ms)
    exportReport - Different Formats
      ✓ should export orders report (58 ms)
      ✓ should handle invalid report type (63 ms)
    getAffiliatesList - With Filters
      ✓ should get filtered affiliates list (53 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /non-existent-page

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /action-plan.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /critical-files.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /missing

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

PASS tests/unit/coverageRoutes.test.js
  Coverage Routes
    Access Control Middleware
      ✓ should allow access in development environment (26 ms)
      ✓ should allow access in test environment (7 ms)
      ✓ should deny access in production without key
      ✓ should allow access in production with valid key (7 ms)
      ✓ should deny access in production with invalid key (12 ms)
    Embedded Access Prevention
      ✓ should deny access when Sec-Fetch-Dest is iframe (3 ms)
      ✓ should deny access when X-Frame-Options is present (2 ms)
      ✓ should deny access when referer contains /embed (2 ms)
      ✓ should allow access with normal referer (5 ms)
    Route Handlers
      ✓ should serve index.html at root path (9 ms)
      ✓ should serve critical-files page (9 ms)
      ✓ should serve test-templates page (18 ms)
      ✓ should serve action-plan page (8 ms)
      ✓ should return 404 for non-existent pages (15 ms)
    Static File Headers
      ✓ should set no-cache headers for static files (7 ms)
      ✓ should set no-cache headers for HTML files (5 ms)
      ✓ should set no-cache headers for other HTML files (17 ms)
    Environment Variable Handling
      ✓ should handle missing COVERAGE_ACCESS_KEY (2 ms)
      ✓ should handle empty COVERAGE_ACCESS_KEY (9 ms)
    Multiple Middleware Interaction
      ✓ should check embedded access before access control (3 ms)
      ✓ should apply X-Frame-Options even with valid access (13 ms)
    HTML Response Validation
      ✓ should return valid HTML for access denied page (2 ms)
      ✓ should return valid HTML for 404 page (4 ms)
    Query Parameter Handling
      ✓ should ignore extra query parameters (9 ms)
      ✓ should handle URL-encoded keys (9 ms)
    Edge Cases
      ✓ should handle root path without trailing slash (13 ms)
      ✓ should handle specific route handlers (6 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailServiceAdditional.test.js
  Email Service - Additional Coverage
    Affiliate Commission Email
      ✓ should send affiliate commission email successfully (5 ms)
      ✓ should handle email sending error (3 ms)
    Customer Password Reset Email
      ✓ should send customer password reset email (2 ms)
    Administrator Emails
      ✓ should send administrator welcome email with language support (2 ms)
      ✓ should send administrator password reset email (2 ms)
    Operator Emails
      ✓ should send operator PIN reset email (2 ms)
      ✓ should send operator shift reminder email (3 ms)
    System Alerts
      ✓ should send service down alert to multiple admins (3 ms)
      ✓ should handle service alert with minimal details (2 ms)
    Template Loading Errors
      ✓ should handle template file read errors (4 ms)
    Console Email Provider
      ✓ should log emails to console when using console provider (4 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryptionEnhanced.test.js
  Encryption Utility - Enhanced Coverage
    Encryption Error Paths
      ✓ should return null for falsy inputs (3 ms)
      ✓ should throw error with invalid encryption key length (9 ms)
      ✓ should throw error when encryption key is missing (1 ms)
      ✓ should handle crypto errors gracefully (2 ms)
    Decryption Error Paths
      ✓ should return null for falsy inputs
      ✓ should throw error with invalid encrypted object structure (2 ms)
      ✓ should throw error with tampered data (1 ms)
      ✓ should throw error with wrong encryption key (1 ms)
      ✓ should handle corrupted encrypted data (1 ms)
    Password Hashing Error Paths
      ✓ should handle crypto.randomBytes failure (1 ms)
      ✓ should handle crypto.pbkdf2Sync failure (1 ms)
      ✓ should handle empty password (53 ms)
    Password Verification Error Paths
      ✓ should throw error when pbkdf2Sync fails (13 ms)
      ✓ should handle invalid inputs gracefully (169 ms)
      ✓ should return false for invalid salt format (73 ms)
    Token and Barcode Generation
      ✓ should generate tokens of correct length
      ✓ should generate unique tokens (2 ms)
      ✓ should handle token generation errors (1 ms)
      ✓ should generate barcodes with correct format (1 ms)
      ✓ should generate unique barcodes (1 ms)
      ✓ should handle barcode generation errors (1 ms)
    Edge Cases and Security Tests
      ✓ should handle large data encryption/decryption (14 ms)
      ✓ should handle unicode and special characters (1 ms)
      ✓ should produce different IVs for same input (2 ms)
      ✓ should validate encryption output structure (1 ms)
      ✓ should handle password edge cases (1324 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/models.test.js (9.969 s)
  Model Tests
    Affiliate Model
      ✓ should create a valid affiliate (695 ms)
      ✓ should require required fields (335 ms)
      ✓ should enforce unique constraints (687 ms)
      ✓ should handle payment information correctly (364 ms)
    Customer Model
      ✓ should create a valid customer (369 ms)
    Order Model
      ✓ should create a valid order (432 ms)
      ✓ should calculate estimated total correctly (401 ms)
      ✓ should calculate actual total and commission when weight is set (418 ms)
      ✓ should update timestamps for status changes (519 ms)
    Transaction Model
      ✓ should create a valid transaction (355 ms)
      ✓ should validate transaction type (310 ms)
      ✓ should validate transaction status (315 ms)
    RefreshToken Model
      ✓ should create a valid refresh token (388 ms)
      ✓ should validate user type (330 ms)
      ✓ should check if token is expired (423 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching public configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:88:55)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      21 |     res.json(formattedConfigs);
      22 |   } catch (error) {
    > 23 |     console.error('Error fetching public configs:', error);
         |             ^
      24 |     res.status(500).json({ error: 'Failed to fetch public configurations' });
      25 |   }
      26 | });

      at error (server/routes/systemConfigRoutes.js:23:13)

  console.error
    Error fetching config: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:141:46)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      47 |     });
      48 |   } catch (error) {
    > 49 |     console.error('Error fetching config:', error);
         |             ^
      50 |     res.status(500).json({ error: 'Failed to fetch configuration' });
      51 |   }
      52 | });

      at error (server/routes/systemConfigRoutes.js:49:13)

  console.error
    Error fetching configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:190:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      70 |     res.json(configs);
      71 |   } catch (error) {
    > 72 |     console.error('Error fetching configs:', error);
         |             ^
      73 |     res.status(500).json({ error: 'Failed to fetch configurations' });
      74 |   }
      75 | });

      at error (server/routes/systemConfigRoutes.js:72:13)

  console.error
    Error updating config: Error: Invalid value
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:333:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

  console.error
    Error initializing configs: Error: Init failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:359:57)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      103 |     res.json({ message: 'Default configurations initialized' });
      104 |   } catch (error) {
    > 105 |     console.error('Error initializing configs:', error);
          |             ^
      106 |     res.status(500).json({ error: 'Failed to initialize configurations' });
      107 |   }
      108 | });

      at error (server/routes/systemConfigRoutes.js:105:13)

PASS tests/unit/systemConfigRoutes.test.js
  System Config Routes
    GET /api/system-config/public
      ✓ should return public configurations (25 ms)
      ✓ should handle errors when fetching public configs (5 ms)
    GET /api/system-config/public/:key
      ✓ should return specific public configuration (5 ms)
      ✓ should return 404 for non-existent public config (2 ms)
      ✓ should handle errors when fetching specific config (4 ms)
    GET /api/system-config (authenticated)
      ✓ should return all configurations for admin (3 ms)
      ✓ should filter configurations by category (2 ms)
      ✓ should handle errors when fetching all configs (3 ms)
      ✓ should require authentication (2 ms)
      ✓ should require administrator role (60 ms)
    PUT /api/system-config/:key
      ✓ should update configuration value (11 ms)
      ✓ should require system_config permission (114 ms)
      ✓ should handle validation errors (4 ms)
    POST /api/system-config/initialize
      ✓ should initialize default configurations (2 ms)
      ✓ should handle errors during initialization (3 ms)
      ✓ should require authentication and admin role (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:79:7)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:98:7)

  console.warn
    Email template placeholder [content] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:351:7)

PASS tests/unit/emailServiceUncovered.test.js
  Email Service - Uncovered Functions
    sendOperatorShiftReminderEmail
      ✓ should send shift reminder email successfully (17 ms)
      ✓ should handle email sending error (3 ms)
    sendOperatorPasswordResetEmail
      ✓ should log error since operators use PINs (3 ms)
      ✓ should still log error even with missing reset URL (1 ms)
    sendServiceDownAlert
      ✓ should send service down alert to all admin emails (2 ms)
      ✓ should handle empty admin emails (3 ms)
      ○ skipped should handle email sending errors gracefully
    sendOrderReadyNotification
      ✓ should send order ready notification successfully (2 ms)
      ✓ should handle missing data fields (1 ms)
    sendOrderPickedUpNotification
      ✓ should send order picked up notification successfully (1 ms)
      ○ skipped should handle email error and log it
    Console Email Provider
      ✓ should log emails when using console provider (12 ms)
    Template Loading Errors
      ✓ should handle template file not found (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/adminIdGeneration.test.js
  Admin ID Generation Logic Tests
    generateAdminId function logic
      ✓ should generate ADM001 when no administrators exist (200 ms)
      ✓ should generate ADM002 when ADM001 exists (249 ms)
      ✓ should generate ADM003 when ADM001 and ADM002 exist (283 ms)
      ✓ should handle non-sequential admin IDs correctly (289 ms)
      ✓ should handle double-digit admin IDs (229 ms)
      ✓ should handle triple-digit admin IDs (241 ms)
      ✓ should handle large admin ID numbers (222 ms)
    Admin ID format validation
      ✓ should maintain three-digit padding for numbers below 100 (114 ms)
      ✓ should handle numbers above 999 without padding issues (104 ms)
    Admin ID parsing logic
      ✓ should correctly parse admin ID numbers (108 ms)
      ✓ should handle edge cases in admin ID parsing (130 ms)
    Admin ID generation with mixed data
      ✓ should work correctly with inactive administrators (291 ms)
      ✓ should work correctly with different creation dates (280 ms)
      ✓ should work correctly with different permissions (338 ms)
    Performance and reliability
      ✓ should handle database query efficiently (384 ms)
      ✓ should handle concurrent admin creation scenario (292 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/csrfConfig.test.js
  CSRF Configuration
    CSRF_CONFIG
      ✓ should define all endpoint categories (2 ms)
      ✓ should have valid endpoint patterns (11 ms)
      ✓ should not have duplicate endpoints across categories
      ✓ should include critical security endpoints (1 ms)
      ✓ should exclude authentication endpoints from CSRF
      ✓ should exclude registration endpoints from CSRF
    shouldEnforceCsrf
      HTTP method checks
        ✓ should not enforce CSRF for GET requests
        ✓ should not enforce CSRF for HEAD requests
        ✓ should not enforce CSRF for OPTIONS requests
        ✓ should consider CSRF for POST requests
        ✓ should consider CSRF for PUT requests (1 ms)
        ✓ should consider CSRF for DELETE requests
        ✓ should consider CSRF for PATCH requests
      Public endpoints
        ✓ should not enforce CSRF for public endpoints
        ✓ should not enforce CSRF for health check endpoints (1 ms)
      Authentication endpoints
        ✓ should not enforce CSRF for login endpoints
        ✓ should not enforce CSRF for forgot password
        ✓ should not enforce CSRF for refresh token
      Registration endpoints
        ✓ should not enforce CSRF for affiliate registration
        ✓ should not enforce CSRF for customer registration (1 ms)
      Critical endpoints
        ✓ should enforce CSRF for logout
        ✓ should enforce CSRF for order creation
        ✓ should enforce CSRF for order cancellation
        ✓ should enforce CSRF for password changes (1 ms)
        ✓ should enforce CSRF for data deletion
        ✓ should enforce CSRF for admin operations
        ✓ should enforce CSRF for operator shift changes (1 ms)
        ✓ should enforce CSRF for order status updates
      High priority endpoints
        ✓ should not enforce CSRF for high priority endpoints when CSRF_PHASE < 2
        ✓ should enforce CSRF for high priority endpoints when CSRF_PHASE >= 2
        ✓ should handle bag management endpoints based on phase
        ✓ should handle payment updates based on phase
      Read-only endpoints
        ✓ should not enforce CSRF for dashboard endpoints (1 ms)
        ✓ should enforce CSRF for search endpoints with state-changing methods
        ✓ should enforce CSRF for export endpoints with state-changing methods
      Pattern matching
        ✓ should match parameterized routes
        ✓ should match nested parameterized routes
        ✓ should not match partial paths
        ✓ should handle complex IDs in paths
      Default behavior
        ✓ should enforce CSRF for unknown state-changing endpoints
        ✓ should enforce CSRF for unmatched PUT requests
        ✓ should not enforce CSRF for unknown GET endpoints
      Edge cases
        ✓ should handle missing CSRF_PHASE environment variable
        ✓ should handle non-numeric CSRF_PHASE (1 ms)
        ✓ should handle paths with query parameters
        ✓ should handle paths with trailing slashes

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilter.test.js
  Field Filter Utility
    filterFields
      ✓ should filter object to include only allowed fields (1 ms)
      ✓ should handle empty allowed fields array
      ✓ should handle null or undefined objects (1 ms)
      ✓ should handle non-object inputs
      ✓ should handle missing fields gracefully
      ✓ should not include inherited properties (1 ms)
      ✓ should handle nested objects without deep filtering
    filterArray
      ✓ should filter array of objects (1 ms)
      ✓ should handle empty array
      ✓ should handle non-array inputs
      ✓ should handle arrays with mixed types
    fieldDefinitions
      ✓ should have definitions for all data types
      ✓ should have different field sets for different roles (2 ms)
      ✓ should not expose sensitive fields in public view
      ✓ should include appropriate fields for each role (1 ms)
    getFilteredData
      ✓ should filter data based on admin role
      ✓ should filter data based on public role
      ✓ should handle self context for customers
      ✓ should handle arrays of data (1 ms)
      ✓ should return data as-is for unknown data types
      ✓ should handle null or undefined data
      ✓ should use fallback field definitions (1 ms)
    responseFilter middleware
      ✓ should create filtered json method
      ✓ should filter response data when _filterType is provided
      ✓ should not filter when _filterType is not provided (1 ms)
      ✓ should handle public role when user is not authenticated
      ✓ should extract user ID from different user types (1 ms)
      ✓ should preserve other response properties
      ✓ should handle responses without data property
      ✓ should maintain this context in json method (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/storeIPs.test.js
  storeIPs configuration
    IP whitelist configuration
      ✓ should load single store IP from environment (5 ms)
      ✓ should handle empty store IP
      ✓ should load additional IPs from environment
      ✓ should trim whitespace from IPs (1 ms)
      ✓ should filter out empty IP entries
      ✓ should load IP ranges from environment (1 ms)
      ✓ should handle empty IP ranges
    Session renewal configuration
      ✓ should use default session renewal settings
      ✓ should load custom session renewal settings from environment (1 ms)
      ✓ should handle invalid numeric values
    isWhitelisted function
      ✓ should return true for directly whitelisted IPs
      ✓ should return false for non-whitelisted IPs (1 ms)
      ✓ should check IP ranges (2 ms)
      ✓ should return false for IPs outside ranges
    isInRange function
      ✓ should correctly check IPs in /24 subnet (1 ms)
      ✓ should correctly check IPs in /16 subnet (1 ms)
      ✓ should correctly check IPs in /8 subnet
      ✓ should correctly check IPs in /32 subnet (single host) (1 ms)
      ✓ should correctly check IPs in /0 subnet (all IPs)
      ✓ should handle invalid CIDR notation
      ✓ should handle invalid mask bits (1 ms)
      ✓ should handle invalid IP addresses
      ✓ should handle IP parts out of range
      ✓ should handle edge cases with console error (1 ms)
      ✓ should correctly handle boundary cases (1 ms)
      ✓ should handle various subnet sizes correctly (1 ms)
    Configuration export structure
      ✓ should export all required properties and functions (1 ms)
      ✓ should have correct session renewal properties (1 ms)
    Integration scenarios
      ✓ should handle complex whitelist configuration (1 ms)
      ✓ should work with no configuration

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPoolManager.test.js
  CallbackPoolManager
    constructor
      ✓ should initialize with correct configuration (2 ms)
    initializePool
      ✓ should create or update callback entries for all paths (1 ms)
      ✓ should start cleanup job after initialization (1 ms)
    acquireCallback
      ✓ should acquire callback successfully
      ✓ should return null when no callbacks available
    releaseCallback
      ✓ should release callback successfully
      ✓ should handle null callback gracefully
    getPoolStatus
      ✓ should return pool status with all handler details (1 ms)
      ✓ should handle empty pool
    startCleanupJob
      ✓ should start cleanup interval (2 ms)
      ✓ should run cleanup task every 5 minutes (1 ms)
      ✓ should handle cleanup errors gracefully (1 ms)
      ✓ should not log when no locks are released
    stopCleanupJob
      ✓ should stop cleanup interval when running (1 ms)
      ✓ should handle stopping when no interval exists
    integration scenarios
      ✓ should handle complete payment flow
      ✓ should handle concurrent acquire attempts (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidator.test.js
  Password Validator Utility
    validatePasswordStrength
      Basic Requirements
        ✓ should validate minimum length requirement (1 ms)
        ✓ should require uppercase letters (1 ms)
        ✓ should require lowercase letters
        ✓ should require numbers (1 ms)
        ✓ should require special characters
      Security Validations
        ✓ should reject common passwords (1 ms)
        ✓ should reject passwords containing username
        ✓ should reject passwords containing email (1 ms)
        ✓ should reject sequential characters
        ✓ should reject repeated characters
      Valid Passwords
        ✓ should accept strong valid passwords (1 ms)
      Edge Cases
        ✓ should handle empty password
        ✓ should handle null/undefined password
        ✓ should handle case-insensitive username/email checks (1 ms)
    customPasswordValidator
      ✓ should work as express-validator custom validator (22 ms)
      ✓ should include validation errors in thrown message
    passwordValidationMiddleware
      ✓ should create middleware function (1 ms)
      ✓ should validate password and call next on success
      ✓ should return error response on validation failure (1 ms)
    isPasswordInHistory
      ✓ should return false for empty history
      ✓ should return false for password not in history (84 ms)
      ✓ should handle null/undefined history
    getPasswordStrength
      ✓ should return higher scores for stronger passwords (1 ms)
      ✓ should score length appropriately
      ✓ should score character variety (1 ms)
      ✓ should penalize common patterns
    commonPasswords array
      ✓ should contain common passwords
      ✓ should contain domain-specific passwords (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPool.test.js (7.759 s)
  CallbackPool Model
    Schema and Indexes
      ✓ should have required fields (255 ms)
      ✓ should have default values (166 ms)
      ✓ should have unique constraint on callbackPath (173 ms)
      ✓ should create document with defaults (205 ms)
    Instance Methods
      lock()
        ✓ should lock callback with payment token (223 ms)
        ✓ should increment usage count on each lock (388 ms)
        ✓ should update lastUsedAt timestamp (231 ms)
      release()
        ✓ should release locked callback (265 ms)
        ✓ should handle releasing already unlocked callback (200 ms)
    Static Methods
      acquireCallback()
        ✓ should acquire available unlocked callback (236 ms)
        ✓ should use least recently used callback (313 ms)
        ✓ should acquire expired locked callback (283 ms)
        ✓ should return null when no callbacks available (314 ms)
        ✓ should increment usage count atomically (258 ms)
      releaseCallback()
        ✓ should release callback by payment token (223 ms)
        ✓ should return null if no callback found with token (187 ms)
        ✓ should only release callback locked by specific token (241 ms)
      releaseExpiredLocks()
        ✓ should release callbacks locked longer than timeout (487 ms)
        ✓ should not release recently locked callbacks (349 ms)
        ✓ should handle custom timeout values (305 ms)
        ✓ should return 0 when no expired locks (322 ms)
        ✓ should handle empty collection (281 ms)
    Edge Cases and Error Handling
      ✓ should handle concurrent lock attempts (193 ms)
      ✓ should maintain data integrity with rapid lock/release cycles (920 ms)
      ✓ should handle invalid ObjectId gracefully (181 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/sanitization.test.js (5.442 s)
  Sanitization Middleware
    sanitizeInput
      ✓ should sanitize string input (1 ms)
      ✓ should sanitize arrays recursively (1 ms)
      ✓ should sanitize objects recursively (1 ms)
      ✓ should handle null values
      ✓ should handle undefined values
      ✓ should handle numbers (1 ms)
      ✓ should handle booleans
      ✓ should handle deeply nested objects
      ✓ should handle arrays of objects (1 ms)
      ✓ should not modify prototype properties
    sanitizeRequest
      ✓ should sanitize request body (1 ms)
      ✓ should sanitize query parameters
      ✓ should sanitize URL parameters (1 ms)
      ✓ should handle missing request properties
      ✓ should handle all properties in one request (1 ms)
    sanitizeEmail
      ✓ should sanitize and validate email
      ✓ should remove HTML from email
      ✓ should return empty string for invalid email (1 ms)
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (6 ms)
      ✓ should handle empty string
      ✓ should validate complex email formats
    sanitizePhone
      ✓ should keep only allowed characters
      ✓ should remove invalid characters (1 ms)
      ✓ should handle international format
      ✓ should remove HTML and special characters
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
    sanitizeId
      ✓ should keep alphanumeric characters and hyphens
      ✓ should remove special characters
      ✓ should remove spaces
      ✓ should handle script injection attempts
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
      ✓ should handle MongoDB ObjectId format (1 ms)
    sanitizePath
      ✓ should allow valid file paths
      ✓ should remove directory traversal attempts
      ✓ should remove multiple directory traversal attempts
      ✓ should allow valid characters in paths (1 ms)
      ✓ should remove invalid characters
      ✓ should handle Windows-style paths
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should handle empty string
      ✓ should handle complex path traversal attempts
      ✓ should preserve forward slashes
    Integration tests
      ✓ should work with express middleware chain (1 ms)
      ✓ should handle complex nested structures

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error checking active orders: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerAdditional.test.js:99:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      86 |     });
      87 |   } catch (error) {
    > 88 |     console.error('Error checking active orders:', error);
         |             ^
      89 |     res.status(500).json({
      90 |       success: false,
      91 |       message: 'Failed to check active orders'

      at Object.error [as checkActiveOrders] (server/controllers/orderController.js:88:13)
      at Object.<anonymous> (tests/unit/orderControllerAdditional.test.js:102:7)

  console.log
    Creating order with data: {
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 20
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

PASS tests/unit/orderControllerAdditional.test.js
  Order Controller - Additional Coverage
    checkActiveOrders
      ✓ should check active orders for authenticated customer (56 ms)
      ✓ should return no active orders when none exist (69 ms)
      ✓ should handle missing customer ID (60 ms)
      ✓ should handle database errors (77 ms)
    createOrder error handling
      ✓ should handle general errors during order creation (101 ms)
    exportOrders
      ✓ should export orders as CSV (61 ms)
      ✓ should export orders as JSON when format=json (62 ms)
      ✓ should handle export errors (52 ms)
      ✓ should handle unauthorized access (59 ms)
    updateOrderStatus edge cases
      ✓ should handle invalid status transitions (58 ms)
    cancelOrder method
      ✓ should handle order not found (51 ms)
      ✓ should handle cancellation of non-cancellable order (55 ms)
    updatePaymentStatus
      ✓ should handle order not found (52 ms)
      ✓ should prevent payment updates on non-complete orders (58 ms)
      ✓ should allow refund on complete orders regardless of payment status (50 ms)
    bulkUpdateOrderStatus
      ✓ should handle invalid order IDs format (53 ms)
      ✓ should handle empty order IDs array (58 ms)
      ✓ should handle unauthorized access (64 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.error
    Failed to send notification emails: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderController.test.js:109:73)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      231 |       await emailService.sendAffiliateNewOrderEmail(affiliate, customer, newOrder);
      232 |     } catch (emailError) {
    > 233 |       console.error('Failed to send notification emails:', emailError);
          |               ^
      234 |       // Continue with the response even if emails fail
      235 |     }
      236 |

      at Object.error [as createOrder] (server/controllers/orderController.js:233:15)
      at Object.<anonymous> (tests/unit/orderController.test.js:112:7)

  console.log
    Creating order with data: { customerId: 'INVALID', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:130:15)

  console.log
    Creating order with data: { customerId: 'CUST123', affiliateId: 'INVALID' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: { customerId: 'CUST456', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST456

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

PASS tests/unit/orderController.test.js
  Order Controller
    createOrder
      ✓ should successfully create a new order (232 ms)
      ✓ should handle email sending failures gracefully (200 ms)
      ✓ should return error for invalid customer (75 ms)
      ✓ should return error for invalid affiliate (60 ms)
      ✓ should enforce authorization (61 ms)
    getOrderDetails
      ✓ should return order details for authorized user (52 ms)
      ✓ should return 404 for non-existent order (52 ms)
      ✓ should enforce authorization for customers (64 ms)
    updateOrderStatus
      ✓ should successfully update order status (51 ms)
      ✓ should update actual weight when processing (54 ms)
      ✓ should validate status transitions (54 ms)
      ✓ should send commission email when complete (56 ms)
    cancelOrder
      ✓ should successfully cancel an order (56 ms)
      ✓ should prevent cancelling non-cancellable orders (57 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/auditLogger.test.js
  Audit Logger
    AuditEvents
      ✓ should define all audit event types (1 ms)
      ✓ should have unique event names (1 ms)
    logAuditEvent
      ✓ should log basic audit event
      ✓ should add request context when provided (1 ms)
      ✓ should handle customer context
      ✓ should use error level for critical events (1 ms)
      ✓ should use info level for non-critical events
      ✓ should handle missing user context
      ✓ should handle connection.remoteAddress fallback (1 ms)
    auditMiddleware
      ✓ should create middleware that logs on response finish
      ✓ should log successful responses (1 ms)
      ✓ should not log failed responses
      ✓ should include request context in logs (1 ms)
    logLoginAttempt
      ✓ should log successful login
      ✓ should log failed login with reason
      ✓ should handle null reason
    logSensitiveDataAccess
      ✓ should log sensitive data access
      ✓ should handle different data types and actions (1 ms)
    logPaymentActivity
      ✓ should log payment info access
      ✓ should log payment info update
      ✓ should handle additional details (1 ms)
    logSuspiciousActivity
      ✓ should log suspicious activity with error level
      ✓ should include request context
      ✓ should merge all details (1 ms)
    Logger configuration
      ✓ should export audit logger with required methods
      ✓ should not add console transport in production (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminScript.test.js (13.934 s)
  Create Admin Script Tests
    Script File Structure
      ✓ should exist and be readable (639 ms)
      ✓ should contain required functionality markers (456 ms)
    Admin ID Generation Logic
      ✓ should generate sequential admin IDs starting from ADM001 (697 ms)
      ✓ should calculate next admin ID correctly (817 ms)
    Password Security Requirements
      ✓ should enforce strong password requirements for admins (477 ms)
      ✓ should accept strong passwords for admins (976 ms)
    Permission System Validation
      ✓ should validate all permission types (600 ms)
      ✓ should handle partial permission sets (678 ms)
    Unique Constraint Validation
      ✓ should prevent duplicate administrator IDs (743 ms)
      ✓ should prevent duplicate emails (655 ms)
    Email Integration
      ✓ should handle admin creation with welcome email sending (742 ms)
    Data Validation and Sanitization
      ✓ should handle special characters in names correctly (674 ms)
      ✓ should normalize email addresses (568 ms)
      ✓ should validate email format (1420 ms)
    Administrator Model Integration
      ✓ should integrate with existing administrator model schema (610 ms)
      ✓ should work with password hashing middleware (565 ms)
    Script Error Handling
      ✓ should handle database connection errors gracefully (593 ms)
      ✓ should handle invalid input gracefully (516 ms)
    Security Considerations
      ✓ should not log or expose passwords (492 ms)
      ✓ should generate secure random passwords when needed (451 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed for path: /api/test - User role: undefined Allowed roles: [ 'admin' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed - No user object on request for path: /api/test

      at log (server/middleware/auth.js:219:15)

  console.log
    Token renewed for operator OP123 from store IP 127.0.0.1

      at log (server/middleware/auth.js:136:17)

  console.error
    Authentication error: Error: Generic error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:446:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as verify] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at verify (/var/www/wavemax/wavemax-affiliate-program/server/middleware/auth.js:99:21)
        at Object.authenticate (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:449:13)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      198 |     }
      199 |
    > 200 |     console.error('Authentication error:', error);
          |             ^
      201 |
      202 |     res.status(500).json({
      203 |       success: false,

      at error (server/middleware/auth.js:200:13)
      at Object.authenticate (tests/unit/authMiddleware.test.js:449:13)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

PASS tests/unit/authMiddleware.test.js (7.36 s)
  Auth Middleware
    authenticate
      ✓ should authenticate valid Bearer token (744 ms)
      ✓ should authenticate valid x-auth-token header (252 ms)
      ✓ should reject request with no token (294 ms)
      ✓ should reject request with invalid token (231 ms)
      ✓ should reject request with expired token (231 ms)
      ✓ should handle malformed Authorization header (213 ms)
      ✓ should reject blacklisted token (265 ms)
    authorize
      ✓ should authorize user with correct role (214 ms)
      ✓ should authorize user with one of multiple roles (205 ms)
      ✓ should reject user with incorrect role (234 ms)
      ✓ should reject user with no role (212 ms)
      ✓ should reject when user is not set (281 ms)
    authLimiter
      ✓ should be a function (205 ms)
      ✓ should have rate limit configuration (222 ms)
      ✓ should skip rate limiting in test environment (214 ms)
    validateRequest
      ✓ should pass valid request (218 ms)
      ✓ should reject invalid request (225 ms)
      ✓ should reject request with missing required fields (206 ms)
      ✓ should handle complex validation schemas (216 ms)
    authenticate - additional edge cases
      ✓ should handle requirePasswordChange flag (208 ms)
      ✓ should allow password change endpoint when requirePasswordChange is true (211 ms)
      ✓ should handle operator token renewal from store IP (225 ms)
      ✓ should handle generic authentication errors (224 ms)
      ✓ should handle W9 endpoint logging (203 ms)
    authorize - array syntax
      ✓ should accept array of roles (213 ms)
      ✓ should reject user not in array of roles (236 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/oAuthSession.test.js (8.348 s)
  OAuthSession Model
    Schema Validation
      ✓ should create a valid OAuth session with all required fields (263 ms)
      ✓ should require sessionId field (247 ms)
      ✓ should require result field (277 ms)
      ✓ should automatically set createdAt (314 ms)
      ✓ should automatically set expiresAt to 5 minutes from now (281 ms)
      ✓ should enforce unique sessionId (317 ms)
      ✓ should allow complex result objects (330 ms)
    Static Methods
      createSession
        ✓ should create and save a new OAuth session (336 ms)
        ✓ should throw error for duplicate session IDs (359 ms)
        ✓ should handle database errors (417 ms)
      getSession
        ✓ should retrieve existing session result by sessionId (413 ms)
        ✓ should return null for non-existent session (337 ms)
      consumeSession
        ✓ should retrieve and delete session in one operation (349 ms)
        ✓ should return null when consuming non-existent session (318 ms)
        ✓ should handle race conditions safely (347 ms)
      cleanupExpired
        ✓ should manually delete expired sessions (541 ms)
        ✓ should return zero deletions when no expired sessions exist (354 ms)
    TTL Behavior
      ✓ should have TTL index configured on expiresAt field (263 ms)
      ✓ should respect custom expiresAt when provided (330 ms)
    Data Integrity
      ✓ should preserve all data types in result field (304 ms)
      ✓ should handle empty and minimal result objects (422 ms)
    Error Handling
      ✓ should handle MongoDB connection errors gracefully (227 ms)
      ✓ should handle very large result objects (392 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c59ab679f512bf8e08a9c","orderId":"ORD-TEST-001","path":"","timestamp":"2025-07-07T23:35:08.119Z","totalWeight":25,"userId":"686c59ab679f512bf8e08a9c"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c59ae679f512bf8e08ad9","orderId":"ORD-TEST-002","path":"","timestamp":"2025-07-07T23:35:10.361Z","totalWeight":25,"userId":"686c59ae679f512bf8e08ad9"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c59b0679f512bf8e08b14","orderId":"ORD-TEST-003","path":"","timestamp":"2025-07-07T23:35:12.241Z","totalWeight":20,"userId":"686c59b0679f512bf8e08b14"}
  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T23:35:14.579Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test instructions'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: Test Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Applying WDF credit of $10 to order for customer CUST-TEST-001

      at log (server/controllers/orderController.js:188:15)

  console.log
    Reset WDF credit for customer CUST-TEST-001 after applying to order ORD430068

      at log (server/controllers/orderController.js:218:15)

  console.error
    Order creation error: TypeError: Cannot read properties of undefined (reading 'isEmpty')
        at isEmpty (/var/www/wavemax/wavemax-affiliate-program/server/controllers/orderController.js:104:17)
        at Object.createOrder (/var/www/wavemax/wavemax-affiliate-program/tests/unit/wdfCredit.test.js:333:13)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      243 |     });
      244 |   } catch (error) {
    > 245 |     console.error('Order creation error:', error);
          |             ^
      246 |     res.status(500).json({
      247 |       success: false,
      248 |       message: 'An error occurred while scheduling the pickup'

      at error (server/controllers/orderController.js:245:13)
      at Object.createOrder (tests/unit/wdfCredit.test.js:333:13)

  console.error
    Order creation error: TypeError: Cannot read properties of undefined (reading 'isEmpty')
        at isEmpty (/var/www/wavemax/wavemax-affiliate-program/server/controllers/orderController.js:104:17)
        at Object.createOrder (/var/www/wavemax/wavemax-affiliate-program/tests/unit/wdfCredit.test.js:388:13)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      243 |     });
      244 |   } catch (error) {
    > 245 |     console.error('Order creation error:', error);
          |             ^
      246 |     res.status(500).json({
      247 |       success: false,
      248 |       message: 'An error occurred while scheduling the pickup'

      at error (server/controllers/orderController.js:245:13)
      at Object.createOrder (tests/unit/wdfCredit.test.js:388:13)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686c59bc679f512bf8e08c4e","orderId":"ORD-TEST-004","path":"","timestamp":"2025-07-07T23:35:24.425Z","totalWeight":24.3,"userId":"686c59bc679f512bf8e08c4e"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686c59be679f512bf8e08c86","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T23:35:26.356Z","totalWeight":20,"userId":"686c59be679f512bf8e08c86"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":2,"operatorId":"686c59be679f512bf8e08c86","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T23:35:26.495Z","totalWeight":45,"userId":"686c59be679f512bf8e08c86"}
FAIL tests/unit/wdfCredit.test.js (22.035 s)
  WDF Credit System
    WDF Credit Calculation
      ✓ should calculate positive WDF credit when actual weight > estimated weight (3133 ms)
      ✓ should calculate negative WDF credit when actual weight < estimated weight (2087 ms)
      ✓ should only calculate credit when all bags are weighed (2212 ms)
    WDF Credit Application
      ✓ should apply positive WDF credit to new order (2304 ms)
      ✕ should apply negative WDF credit (debit) to new order (1889 ms)
      ✕ should not apply credit if customer has zero credit (1978 ms)
    Order Model WDF Credit Calculations
      ✓ should correctly calculate estimated total with positive credit (1766 ms)
      ✓ should correctly calculate actual total with negative credit (1907 ms)
    Edge Cases
      ✓ should handle precision correctly for credit calculations (2042 ms)
      ✓ should handle sequential bag weighing correctly (2035 ms)

  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      334 |
      335 |       // Check response
    > 336 |       expect(res.statusCode).toBe(201);
          |                              ^
      337 |       const responseData = JSON.parse(res._getData());
      338 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      339 |

      at Object.toBe (tests/unit/wdfCredit.test.js:336:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      389 |
      390 |       // Check response
    > 391 |       expect(res.statusCode).toBe(201);
          |                              ^
      392 |       
      393 |       // Verify no credit was applied
      394 |       const responseData = JSON.parse(res._getData());

      at Object.toBe (tests/unit/wdfCredit.test.js:391:30)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethod.test.js
  PaymentMethod Model Unit Tests
    Schema Validation
      ✓ should create a valid payment method (62 ms)
      ✓ should require customerId (101 ms)
      ✓ should require paygistixId (108 ms)
      ✓ should validate type enum (70 ms)
      ✓ should reject invalid type (56 ms)
      ✓ should default type to card (64 ms)
    Card Validation
      ✓ should require card details when type is card (71 ms)
      ✓ should validate card last4 length (79 ms)
      ✓ should validate card brand enum (123 ms)
      ✓ should reject invalid card brand (69 ms)
      ✓ should validate expiry month range (54 ms)
      ✓ should validate expiry year is not in the past (53 ms)
      ✓ should require card fingerprint (53 ms)
    Bank Account Validation
      ✓ should create valid bank account payment method (59 ms)
      ✓ should require bank account details when type is bank_account (53 ms)
      ✓ should validate bank account last4 length (53 ms)
      ✓ should validate account type enum (53 ms)
      ✓ should reject invalid account type (53 ms)
    Wallet Validation
      ✓ should create valid wallet payment method (53 ms)
      ✓ should require wallet type when type is wallet (53 ms)
      ✓ should validate wallet type enum (55 ms)
    Default Values
      ✓ should default isDefault to false (52 ms)
      ✓ should default isActive to true (52 ms)
      ✓ should default isVerified to false (59 ms)
    Virtual Properties
      displayName
        ✓ should format card display name (53 ms)
        ✓ should format bank account display name (53 ms)
        ✓ should format wallet display name (69 ms)
        ✓ should handle google_pay formatting (63 ms)
        ✓ should return default for unknown type (54 ms)
      isExpired
        ✓ should return false for non-card types (53 ms)
        ✓ should return false for future expiry (54 ms)
        ✓ should return true for past year (55 ms)
        ✓ should return true for current year past month (53 ms)
        ✓ should return false for current year future month (53 ms)
    Instance Methods
      canUse()
        ✓ should allow use of active non-expired card (57 ms)
        ✓ should not allow use of inactive payment method (55 ms)
        ✓ should not allow use of expired card (55 ms)
        ✓ should not allow use of unverified bank account (78 ms)
        ✓ should allow use of verified bank account (54 ms)
      markAsUsed()
        ✓ should update lastUsedAt (53 ms)
    Static Methods
      findDefault()
        ✓ should find default payment method for customer (53 ms)
      findActiveByCustomer()
        ✓ should find active payment methods sorted by default and date (61 ms)
      checkDuplicate()
        ✓ should check for duplicate card fingerprint (65 ms)
        ✓ should return null if no duplicate found (53 ms)
    Middleware
      Pre-save middleware existence
        ✓ should have pre-save middleware defined (63 ms)
    Metadata Field
      ✓ should store metadata as Map (85 ms)
    JSON Transformation
      ✓ should include virtuals and exclude sensitive fields (57 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/payment.test.js
  Payment Model Unit Tests
    Schema Validation
      ✓ should create a valid payment (54 ms)
      ✓ should require orderId (64 ms)
      ✓ should require customerId (64 ms)
      ✓ should require paymentMethodId (64 ms)
      ✓ should require paygistixId (67 ms)
      ✓ should require amount (68 ms)
      ✓ should validate amount is non-negative (63 ms)
      ✓ should default currency to USD (72 ms)
      ✓ should validate currency enum (66 ms)
      ✓ should reject invalid currency (80 ms)
      ✓ should validate status enum (58 ms)
      ✓ should reject invalid status (66 ms)
      ✓ should default status to pending (76 ms)
    Default Values
      ✓ should default capturedAmount to 0 (58 ms)
      ✓ should default refundedAmount to 0 (105 ms)
      ✓ should default hasDispute to false (53 ms)
      ✓ should have empty refunds array (73 ms)
    Virtual Properties
      ✓ should calculate netAmount correctly (71 ms)
      ✓ should handle zero amounts (203 ms)
      ✓ should handle full refund (78 ms)
    Instance Methods
      canRefund()
        ✓ should allow refund when status is captured (70 ms)
        ✓ should allow refund when status is partially_refunded (87 ms)
        ✓ should not allow refund when status is pending (59 ms)
        ✓ should not allow refund when fully refunded (52 ms)
        ✓ should validate refund amount (65 ms)
        ✓ should handle null amount parameter (51 ms)
      canCapture()
        ✓ should allow capture when status is authorized (51 ms)
        ✓ should not allow capture when status is captured (58 ms)
        ✓ should not allow capture when status is pending (55 ms)
      addRefund()
        ✓ should add refund to refunds array (54 ms)
        ✓ should update refundedAmount (74 ms)
        ✓ should update lastRefundAt (51 ms)
        ✓ should set status to partially_refunded for partial refund (53 ms)
        ✓ should set status to refunded for full refund (52 ms)
        ✓ should handle multiple refunds (61 ms)
        ✓ should handle refund that exceeds captured amount (69 ms)
    Static Methods
      findByOrder()
        ✓ should find payments by orderId (64 ms)
      findSuccessfulByCustomer()
        ✓ should find successful payments by customer with default limit (62 ms)
        ✓ should accept custom limit (52 ms)
      calculateRevenue()
        ✓ should calculate revenue for a period (51 ms)
    Middleware
      ✓ should have pre-save middleware defined (52 ms)
    Refund Schema
      ✓ should validate refund subdocument (55 ms)
      ✓ should require refundId in refund (61 ms)
      ✓ should require amount in refund (52 ms)
      ✓ should validate refund amount is non-negative (54 ms)
      ✓ should set default createdAt for refund (57 ms)
    Dispute Tracking
      ✓ should validate dispute status enum (59 ms)
      ✓ should allow dispute fields when hasDispute is true (54 ms)
      ✓ should validate dispute amount is non-negative (53 ms)
    Metadata and Response Fields
      ✓ should store metadata as Map (58 ms)
      ✓ should store response as mixed type (59 ms)
    JSON Transformation
      ✓ should remove __v and response fields from JSON (53 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/socialAuthRoutes.test.js
  Social Auth Routes - Simple Tests
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (11 ms)
      ✓ should return 404 when Google OAuth is not configured (4 ms)
      ✓ should handle Google OAuth callback (2 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (3 ms)
      ✓ should return 404 when Facebook OAuth is not configured (2 ms)
      ✓ should handle Facebook OAuth callback (2 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (2 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured (2 ms)
      ✓ should handle LinkedIn OAuth callback (2 ms)
    Social Registration Route
      ✓ should handle social registration with valid data (9 ms)
      ✓ should validate required fields for social registration (3 ms)
      ✓ should validate service radius range (4 ms)
      ✓ should validate payment method (2 ms)
    Social Account Linking Route
      ✓ should handle social account linking (2 ms)
      ✓ should validate provider for account linking (3 ms)
      ✓ should require social token for account linking (2 ms)
    Social Login Callback Route
      ✓ should handle social login callback (2 ms)
      ✓ should validate social login data (3 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (3 ms)
      ✓ should handle customer Google OAuth callback redirect (2 ms)
      ✓ should handle customer Facebook callback (3 ms)
      ✓ should handle customer LinkedIn callback (2 ms)
    Customer Social Registration Route
      ✓ should handle customer social registration (3 ms)
      ✓ should validate customer registration fields (3 ms)
      ✓ should validate service frequency (2 ms)
    Error Handling
      ✓ should handle errors gracefully (14 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentController.test.js
  Payment Controller
    getConfig
      ✓ should return payment configuration when properly configured (53 ms)
      ✓ should return error when Paygistix is not configured (65 ms)
      ✓ should handle errors gracefully (67 ms)
    logSubmission
      ✓ should log payment submission successfully (78 ms)
      ✓ should handle logging errors (52 ms)
    createPaymentToken
      ✓ should create payment token successfully (51 ms)
      ✓ should handle no available callbacks (81 ms)
      ✓ should handle token creation errors (50 ms)
    checkPaymentStatus
      ✓ should return payment status successfully (51 ms)
      ✓ should handle token not found (52 ms)
      ✓ should handle database errors (63 ms)
    cancelPaymentToken
      ✓ should cancel pending payment token (87 ms)
      ✓ should not cancel non-pending tokens (96 ms)
      ✓ should handle token not found (94 ms)
    updatePaymentStatus
      ✓ should update payment status to success (70 ms)
      ✓ should update payment status to failed (54 ms)
    handleFormCallback
      ✓ should process callback successfully (53 ms)
      ✓ should handle no pending payment for callback (53 ms)
      ✓ should handle callback processing errors (55 ms)
    processCallbackResult
      ✓ should process successful payment from query params (64 ms)
      ✓ should process failed payment (54 ms)
      ✓ should handle body parameters (53 ms)
      ✓ should redirect with all parameters (52 ms)
    getPoolStats
      ✓ should return pool statistics (57 ms)
      ✓ should handle stats retrieval errors (62 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentCallbackRoute.test.js
  Payment Callback Route
    GET /payment_callback
      Successful payment
        ✓ should handle approved payment successfully (11 ms)
        ✓ should handle success status as well as approved (3 ms)
        ✓ should update existing payment if found (2 ms)
        ✓ should handle customer not found gracefully (7 ms)
        ✓ should handle email send failure gracefully (15 ms)
        ✓ should not update customer if already active (2 ms)
      Failed payment
        ✓ should handle declined payment (3 ms)
        ✓ should handle failed status (2 ms)
        ✓ should increment payment attempts on failure (2 ms)
        ✓ should use default error message when none provided (1 ms)
      Error handling
        ✓ should handle order not found (1 ms)
        ✓ should handle unknown payment status (2 ms)
        ✓ should handle database errors gracefully (1 ms)
        ✓ should handle payment save error (3 ms)
      Edge cases
        ✓ should handle missing amount parameter (2 ms)
        ✓ should handle malformed maskedCard (2 ms)
        ✓ should log callback parameters (2 ms)
    POST /payment_callback
      ✓ should handle POST callback and return JSON response (6 ms)
      ✓ should handle POST callback errors (3 ms)
      ✓ should handle empty POST body (1 ms)
      ✓ should handle POST with form-urlencoded data (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-002', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-002' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    Updating bags to completed. Current bag statuses: [
      { bagId: 'bag-001', status: 'processed' },
      { bagId: 'bag-002', status: 'processed' }
    ]

      at Object.log [as completePickup] (server/controllers/operatorController.js:1299:13)

  console.log
    Before save - Order status: complete

      at Object.log [as completePickup] (server/controllers/operatorController.js:1312:13)

  console.log
    Before save - Bag statuses: [
      { bagId: 'bag-001', status: 'completed' },
      { bagId: 'bag-002', status: 'completed' }
    ]

      at Object.log [as completePickup] (server/controllers/operatorController.js:1313:13)

  console.log
    After save - Order status: complete

      at Object.log [as completePickup] (server/controllers/operatorController.js:1318:15)

  console.log
    After save - Bag statuses: [
      { bagId: 'bag-001', status: 'completed' },
      { bagId: 'bag-002', status: 'completed' }
    ]

      at Object.log [as completePickup] (server/controllers/operatorController.js:1319:15)

  console.log
    completePickup called with: { bagIds: [ 'bag-001' ], orderId: 'ORD-123456', operatorId: 'op123' }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-wrong' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

PASS tests/unit/bagTracking.test.js
  Bag Tracking System
    scanBag
      ✓ should parse new QR format correctly (1 ms)
      ✓ should handle legacy QR format (1 ms)
    weighBags
      ✓ should add bags to order and update status
      ✓ should prevent duplicate bag IDs
    scanProcessed
      ✓ should update bag status to processed (16 ms)
      ✓ should show warning for already processed bag (2 ms)
      ✓ should trigger completion actions when all bags processed (3 ms)
    completePickup
      ✓ should complete order when all bags scanned (3 ms)
      ✓ should reject if bag count mismatch (1 ms)
      ✓ should reject if wrong bag scanned (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:102:13)

  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:94:15)

PASS tests/unit/quickbooksController.test.js
  QuickBooks Controller
    exportVendors
      ✓ should export vendors as JSON (9 ms)
      ✓ should export vendors as CSV (2 ms)
      ✓ should return 404 when no verified vendors found (1 ms)
      ✓ should handle errors gracefully
    exportPaymentSummary
      ✓ should export payment summary as JSON (2 ms)
      ✓ should export payment summary as CSV (1 ms)
      ✓ should return 400 when dates are missing
      ✓ should return 404 when no payable commissions found (1 ms)
      ✓ should filter out orders without verified W-9
    exportCommissionDetail
      ✓ should export commission detail as JSON (1 ms)
      ✓ should return 400 when required parameters are missing (1 ms)
      ✓ should return 404 when affiliate not found
      ✓ should return 400 when affiliate has no verified W-9 (1 ms)
    getExportHistory
      ✓ should get export history (1 ms)
      ✓ should filter by type

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidatorEnhanced.test.js
  Enhanced Password Validator
    validatePasswordStrength
      Length Requirements
        ✓ should reject passwords shorter than 8 characters (2 ms)
        ✓ should accept passwords with 8 or more characters
      Character Type Requirements
        ✓ should require at least one uppercase letter (1 ms)
        ✓ should require at least one lowercase letter
        ✓ should require at least one number (2 ms)
        ✓ should require at least one special character (1 ms)
        ✓ should accept passwords with all required character types (1 ms)
      Common Password Detection
        ✓ should reject common passwords (5 ms)
        ✓ should accept non-common passwords (1 ms)
      Sequential Character Detection
        ✓ should reject passwords with sequential numbers (1 ms)
        ✓ should reject passwords with sequential letters
        ✓ should accept passwords without sequential characters (1 ms)
      Repeated Character Detection
        ✓ should reject passwords with too many repeated characters
        ✓ should accept passwords with acceptable repeated characters (1 ms)
      Username/Email Inclusion Check
        ✓ should reject passwords containing username
        ✓ should reject passwords containing email (1 ms)
        ✓ should accept passwords not containing username or email
      Password History Check
        ✓ should reject passwords in history (1 ms)
        ✓ should accept passwords not in history
      Complete Valid Passwords
        ✓ should accept completely valid passwords
    getPasswordStrength
      ✓ should return correct strength scores (1 ms)
      ✓ should return correct strength labels (1 ms)
    isPasswordInHistory
      ✓ should return true for passwords in history
      ✓ should return false for passwords not in history
      ✓ should handle empty history (1 ms)
    customPasswordValidator
      ✓ should return custom validator function
      ✓ should validate passwords correctly in express-validator context
      ✓ should throw for invalid passwords in express-validator context (14 ms)
      ✓ should include admin-specific validation when userType is admin (1 ms)
      ✓ should include admin-specific validation when userType is operator
    passwordValidationMiddleware
      ✓ should call next() for valid passwords (1 ms)
      ✓ should return 400 error for invalid passwords
      ✓ should skip validation if no password in request (1 ms)
      ✓ should include strength assessment in response for invalid passwords
    Edge Cases and Security
      ✓ should handle null and undefined inputs gracefully (5 ms)
      ✓ should handle very long passwords
      ✓ should handle special Unicode characters
      ✓ should be case-sensitive for username/email checks (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administrator.test.js (9.138 s)
  Administrator Model
    Schema Validation
      ✓ should create a valid administrator (312 ms)
      ✓ should require all mandatory fields (97 ms)
      ✓ should enforce email format validation (148 ms)
      ✓ should enforce unique email constraint (766 ms)
      ✓ should enforce unique adminId constraint (563 ms)
      ✓ should validate permission enum values (160 ms)
      ✓ should accept valid permissions (180 ms)
      ✓ should trim whitespace from string fields (197 ms)
      ✓ should convert email to lowercase (205 ms)
      ✓ should not allow role to be changed after creation (239 ms)
    Password Handling
      ✓ should store password as hash and salt (205 ms)
      ✓ should verify correct password (255 ms)
      ✓ should reject incorrect password (278 ms)
      ✓ should not expose password in JSON output (218 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (303 ms)
      ✓ should lock account after 5 failed attempts (258 ms)
      ✓ should reset login attempts on successful login (287 ms)
      ✓ should reset attempts if lock has expired (244 ms)
      ✓ should correctly identify locked accounts (223 ms)
    Password Reset
      ✓ should generate password reset token (180 ms)
      ✓ should set password reset expiry to 30 minutes (189 ms)
    Permissions
      ✓ should check single permission correctly (188 ms)
      ✓ should check multiple permissions with AND operation (185 ms)
      ✓ should check multiple permissions with OR operation (236 ms)
      ✓ should set default permissions if none provided (183 ms)
    Static Methods
      ✓ should find active administrators (405 ms)
      ✓ should find administrator by email with password (207 ms)
      ✓ should handle case-insensitive email search (227 ms)
      ✓ should return null for non-existent email (103 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (178 ms)
      ✓ should update updatedAt on modification (361 ms)
    Admin ID Generation
      ✓ should auto-generate unique admin ID (326 ms)
      ✓ should not override provided admin ID (178 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/generalPaymentCallback.test.js
  General Payment Callback Routes
    GET /
      Registration Payment
        ✓ should redirect to success page on approved registration payment (5 ms)
        ✓ should redirect to success page on success status (2 ms)
        ✓ should redirect to register page with error on failed registration payment (2 ms)
        ✓ should handle missing response message on failure (2 ms)
        ✓ should handle registration payment callback errors (1 ms)
      Order Payment
        ✓ should handle approved order payment successfully (5 ms)
        ✓ should handle success status for order payment (5 ms)
        ✓ should update existing payment record (1 ms)
        ✓ should handle declined order payment (3 ms)
        ✓ should handle failed order payment (4 ms)
        ✓ should handle unknown payment status (2 ms)
        ✓ should handle order not found (1 ms)
        ✓ should handle missing orderId in query (1 ms)
        ✓ should handle email service failure gracefully (2 ms)
        ✓ should skip customer update if customer not found (2 ms)
        ✓ should not update already active customer (2 ms)
        ✓ should handle payment callback errors (2 ms)
        ✓ should use order amount if payment amount not provided (3 ms)
        ✓ should handle partial masked card (2 ms)
        ✓ should handle missing masked card (2 ms)
      General error handling
        ✓ should handle general callback errors (1 ms)
    POST /
      Registration Payment
        ✓ should create customer on approved registration payment with session (7 ms)
        ✓ should handle success status for registration (2 ms)
        ✓ should handle customer creation error (3 ms)
        ✓ should handle no pending registration (4 ms)
        ✓ should handle declined registration payment (3 ms)
        ✓ should handle failed registration payment without message (2 ms)
      Order Payment POST
        ✓ should acknowledge order payment callback (4 ms)
        ✓ should handle order payment with explicit type (1 ms)
      General POST error handling
        ✓ should handle POST callback errors (15 ms)
        ✓ should log POST callback data (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/rbac.test.js
  RBAC Middleware
    Role Hierarchy
      ✓ should define correct role hierarchy (1 ms)
      ✓ should define allowed roles
    checkRole Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should reject when user has no role (1 ms)
      ✓ should reject when user has invalid role
      ✓ should accept when user has exact required role (1 ms)
      ✓ should accept when user has higher role in hierarchy
      ✓ should reject when user has lower role in hierarchy (1 ms)
      ✓ should handle array of required roles
      ✓ should accept administrator accessing operator resources
      ✓ should reject operator accessing administrator resources (2 ms)
    checkAllRoles Middleware
      ✓ should reject when no user is present (11 ms)
      ✓ should accept when user has access to all required roles (1 ms)
      ✓ should reject when user lacks access to any required role
      ✓ should accept admin for any combination of roles (1 ms)
    checkResourceOwnership Middleware
      ✓ should reject when no user is present
      ✓ should allow admin access to any resource (1 ms)
      ✓ should allow administrator access to any resource
      ✓ should allow affiliate access to own resource via params
      ✓ should allow customer access to own resource via body (1 ms)
      ✓ should allow operator access to own resource
      ✓ should reject affiliate access to another affiliate resource
      ✓ should prefer params over body for resource ID
    checkAdminPermission Middleware
      ✓ should reject when user is not administrator
      ✓ should reject when administrator not found
      ✓ should reject when administrator is not active
      ✓ should accept when administrator has required permission
      ✓ should handle array of required permissions (1 ms)
      ✓ should reject when administrator lacks any required permission
      ✓ should handle database errors (1 ms)
    checkOperatorStatus Middleware
      ✓ should skip check for non-operators
      ✓ should reject when operator not found
      ✓ should reject when operator is not active
      ✓ should reject when operator is not on shift
      ✓ should accept active operator on shift (1 ms)
      ✓ should handle database errors
    filterResponseFields Middleware
      ✓ should pass through data when no user present (1 ms)
      ✓ should pass through data when user has no role
      ✓ should pass through all fields when role has wildcard permission
      ✓ should filter fields based on role permissions
      ✓ should handle nested field permissions (1 ms)
      ✓ should handle array data
      ✓ should handle standard response format with data property (1 ms)
      ✓ should use default permissions when role not specified
      ✓ should handle deeply nested fields
      ✓ should handle non-object data gracefully
      ✓ should handle empty allowed fields

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[31merror[39m: Failed to retrieve PKCE verifier: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json' {"code":"ENOENT","errno":-2,"path":"/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json","service":"wavemax-affiliate","stack":"Error: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json'\n    at open (node:internal/fs/promises:639:25)\n    at Object.readFile (node:internal/fs/promises:1246:14)\n    at DocuSignService.getPkceVerifier (/var/www/wavemax/wavemax-affiliate-program/server/services/docusignService.js:85:23)\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/docusignService.test.js:113:31)","syscall":"open","timestamp":"2025-07-07T23:35:54.635Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.053Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":13}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:35:55.053Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: Token saved to database {"expiresAt":"2025-07-08T00:35:55.053Z","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.105Z","tokenId":"default"}
[32minfo[39m: Token exchange successful {"expiresIn":3600,"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.105Z"}
[31merror[39m: PKCE verifier not found for state: {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.250Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.405Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":8}
[31merror[39m: Failed to exchange code for token: {"error":"Network error","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:55.406Z"}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:35:55.513Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:35:55.576Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-08T00:35:55.844Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: DocuSign envelope created: {"affiliateId":"123456789","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:56.342Z"}
[31merror[39m: Failed to create W9 envelope: {"affiliateEmail":"test@example.com","data":{"message":"Invalid template ID"},"service":"wavemax-affiliate","status":400,"templateId":"test_template_id","timestamp":"2025-07-07T23:35:56.451Z"}
[32minfo[39m: DocuSign in test mode - returning mock envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:56.543Z"}
[32minfo[39m: Embedded signing URL generated: {"affiliateId":"123456","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:56.653Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-completed","service":"wavemax-affiliate","status":"completed","timestamp":"2025-07-07T23:35:56.963Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-declined","service":"wavemax-affiliate","status":"declined","timestamp":"2025-07-07T23:35:57.070Z"}
[32minfo[39m: Downloaded completed W9: {"envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:57.240Z"}
[32minfo[39m: Voided envelope: {"envelopeId":"test_envelope_id","reason":"Cancelled by user","service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:57.321Z"}
[31merror[39m: Authentication required: {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:35:58.077Z"}
PASS tests/unit/docusignService.test.js (5.284 s)
  DocuSign Service
    PKCE Generation
      ✓ should generate valid PKCE challenge and verifier (98 ms)
    PKCE Storage
      ✓ should store and retrieve PKCE verifier (95 ms)
      ✓ should delete verifier after retrieval (204 ms)
      ✓ should clean up old PKCE files (78 ms)
    Authorization URL
      ✓ should generate correct authorization URL (115 ms)
      ✓ should use provided state if given (93 ms)
    Token Exchange
      ✓ should exchange authorization code for tokens (197 ms)
      ✓ should throw error if PKCE verifier not found (127 ms)
      ✓ should handle token exchange errors (115 ms)
    Token Refresh
      ✓ should refresh access token using refresh token (225 ms)
      ✓ should throw error if no refresh token available (123 ms)
    Access Token Management
      ✓ should return valid access token if not expired (192 ms)
      ✓ should refresh token if expired (151 ms)
      ✓ should throw error if no valid token and no refresh token (147 ms)
    Envelope Creation
      ✓ should create W9 envelope for affiliate (116 ms)
      ✓ should handle envelope creation errors (85 ms)
      ✓ should return mock envelope in test mode (107 ms)
    Embedded Signing URL
      ✓ should generate embedded signing URL (99 ms)
    Webhook Signature Verification
      ✓ should verify valid webhook signature (99 ms)
      ✓ should reject invalid webhook signature (108 ms)
    Webhook Event Processing
      ✓ should process completed envelope event (122 ms)
      ✓ should handle declined envelope (80 ms)
    Envelope Status
      ✓ should get envelope status (82 ms)
    Document Download
      ✓ should download completed W9 document (89 ms)
    Envelope Voiding
      ✓ should void an envelope (78 ms)
    hasValidToken
      ✓ should return true when a valid token exists (177 ms)
      ✓ should return false when no valid token exists (112 ms)
      ✓ should return false when token is expired (169 ms)
    authenticate
      ✓ should return access token when authentication succeeds (186 ms)
      ✓ should throw error when authentication fails (113 ms)
    extractTaxInfoFromTabs
      ✓ should extract SSN tax info from tabs (79 ms)
      ✓ should extract EIN tax info from tabs (81 ms)
      ✓ should extract business name from tabs (77 ms)
      ✓ should return empty object when no tax info found (84 ms)
      ✓ should handle empty tabs (79 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'customer_test-session-id', popup: 'true' },
      headers: {},
      state: 'customer_test-session-id',
      stateStartsWithCustomer: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'customer_test-session-id',
      isCustomerRequest: true,
      willDelegate: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    [OAuth] Delegating to handleCustomerSocialCallback

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:986:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: {},
      headers: {},
      state: undefined,
      stateStartsWithCustomer: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: undefined,
      isCustomerRequest: undefined,
      willDelegate: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: { state: undefined, sessionId: null, allParams: {} }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-07-07T23:36:00.604Z","userType":"affiliate","username":"johndoe"}
  console.error
    Error storing OAuth session: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:128:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1087 |             await OAuthSession.createSession(sessionId, message);
      1088 |           } catch (dbError) {
    > 1089 |             console.error('Error storing OAuth session:', dbError);
           |                     ^
      1090 |           }
      1091 |         }
      1092 |

      at Object.error [as handleSocialCallback] (server/controllers/authController.js:1089:21)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:131:7)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'customer@example.com',
        firstName: 'Customer',
        lastName: 'User',
        isNewUser: true
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:240:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T23:36:01.249Z","userType":"affiliate"}
  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:330:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T23:36:02.044Z","userType":"affiliate"}
  console.error
    Missing customer or affiliate data for welcome email

      883 |     // Validate inputs
      884 |     if (!customer || !affiliate) {
    > 885 |       console.error('Missing customer or affiliate data for welcome email');
          |               ^
      886 |       return;
      887 |     }
      888 |

      at Object.error [as sendCustomerWelcomeEmail] (server/utils/emailService.js:885:15)
      at Object.sendCustomerWelcomeEmail [as completeSocialCustomerRegistration] (server/controllers/authController.js:2253:26)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:388:7)

info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T23:36:02.474Z","userType":"customer"}
  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'not found',
      resultData: null
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:583:65)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:585:7)

PASS tests/unit/authControllerEnhanced.test.js (6.154 s)
  Enhanced Auth Controller - OAuth Methods
    handleSocialCallback
      ✓ should create OAuth session and redirect for affiliate context (375 ms)
      ✓ should handle customer context from state parameter (202 ms)
      ✓ should handle missing user data gracefully (203 ms)
      ✓ should handle OAuth session creation errors (217 ms)
      ✓ should extract profile data correctly for different providers (194 ms)
    handleCustomerSocialCallback
      ✓ should create customer OAuth session (200 ms)
    completeSocialRegistration
      ✓ should complete social registration successfully (255 ms)
      ✓ should sanitize social data and reject if fields become empty (249 ms)
      ✓ should check for existing email and username (160 ms)
      ✓ should check for existing social account (162 ms)
      ✓ should generate unique username from social data (211 ms)
      ✓ should handle JWT verification errors (169 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration successfully (221 ms)
      ✓ should validate affiliate existence (185 ms)
      ✓ should sanitize customer social data (155 ms)
    pollOAuthSession
      ✓ should return complete session data when available (161 ms)
      ✓ should return social-auth-login session data (163 ms)
      ✓ should return social-auth-error session data (161 ms)
      ✓ should return social-auth-account-conflict session data for affiliate conflict (174 ms)
      ✓ should return social-auth-account-conflict session data for customer conflict (160 ms)
      ✓ should return pending status when session not ready (159 ms)
      ✓ should handle database errors gracefully (164 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed JWT tokens (189 ms)
      ✓ should handle database connection errors (163 ms)
      ✓ should handle missing required fields in social data (168 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.error
    Token verification error: Error: User data not found in request
        at Object.<anonymous>.exports.verifyToken (/var/www/wavemax/wavemax-affiliate-program/server/controllers/authController.js:860:13)
        at Object.verifyToken (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authController.test.js:370:28)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      881 |     });
      882 |   } catch (error) {
    > 883 |     console.error('Token verification error:', error);
          |             ^
      884 |     res.status(500).json({
      885 |       success: false,
      886 |       message: 'An error occurred during token verification'

      at Object.error [as verifyToken] (server/controllers/authController.js:883:13)
      at Object.verifyToken (tests/unit/authController.test.js:370:28)

PASS tests/unit/authController.test.js
  Auth Controller
    affiliateLogin
      ✓ should successfully login an affiliate with valid credentials (3 ms)
      ✓ should return 401 for non-existent affiliate (1 ms)
      ✓ should return 401 for incorrect password
    customerLogin
      ✓ should successfully login a customer with valid credentials (7 ms)
      ✓ should return 401 for non-existent customer (1 ms)
      ✓ should login customer using emailOrUsername field (2 ms)
      ✓ should prioritize emailOrUsername over username field (2 ms)
      ✓ should return error when neither username nor emailOrUsername provided (2 ms)
    verifyToken
      ✓ should verify a valid JWT token (2 ms)
      ✓ should handle missing user data (38 ms)
      ✓ should return customer user data (1 ms)
    refreshToken
      ✓ should refresh token successfully (14 ms)
      ✓ should return error for invalid refresh token (1 ms)
      ✓ should return error for expired refresh token (1 ms)
    administratorLogin
      ✓ should successfully login administrator (1 ms)
      ✓ should handle locked account
      ✓ should handle inactive administrator (1 ms)
    operatorLogin
      ✓ should successfully login operator with PIN
      ✓ should increment login attempts on failure (1 ms)
    logout
      ✓ should logout user and blacklist token (1 ms)
    forgotPassword
      ✓ should send password reset email for affiliate
      ✓ should handle non-existent email gracefully (1 ms)
    resetPassword
      ✓ should reset password with valid token (1 ms)
      ✓ should reject expired token

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportConfig.test.js
  Passport Configuration Tests
    Strategy Configuration
      ✓ should configure Google strategy when credentials are present (3 ms)
      ✓ should not configure Google strategy without credentials (1 ms)
      ✓ should configure Facebook strategy when credentials are present (1 ms)
      ✓ should not configure Facebook strategy without credentials (1 ms)
      ✓ should configure LinkedIn strategy when credentials are present (1 ms)
    Google OAuth Strategy
      ✓ should handle database errors (1 ms)
      Customer Context
        ✓ should handle existing customer with Google account (1 ms)
        ✓ should link Google account to existing customer (1 ms)
        ✓ should handle existing affiliate conflict (1 ms)
        ✓ should return new user data (1 ms)
      Affiliate Context
        ✓ should handle existing affiliate with Google account (1 ms)
        ✓ should handle customer conflict (1 ms)
        ✓ should link Google account to existing affiliate with email (1 ms)
        ✓ should return new affiliate user data (1 ms)
    Facebook OAuth Strategy
      ✓ should handle existing affiliate
      ✓ should return new user data for registration
      ✓ should link Facebook account to existing affiliate (1 ms)
      ✓ should handle Facebook error (1 ms)
    LinkedIn OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should link LinkedIn account to existing affiliate (8 ms)
      ✓ should return new LinkedIn user data (1 ms)
      ✓ should handle LinkedIn error (1 ms)
    Serialization
      ✓ should serialize user with _id (1 ms)
      ✓ should serialize user with socialId (1 ms)
      ✓ should deserialize user (1 ms)
      ✓ should handle deserialization errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentExport.test.js (5.199 s)
  PaymentExport Model Unit Tests
    Schema Validation
      ✓ should create a valid PaymentExport (58 ms)
      ✓ should generate exportId automatically (66 ms)
      ✓ should require type field (61 ms)
      ✓ should validate type enum values (69 ms)
      ✓ should reject invalid type values (69 ms)
      ✓ should require generatedBy field (64 ms)
    Period Fields
      ✓ should store period dates for payment summary (52 ms)
      ✓ should store period dates for commission detail (52 ms)
    Export Data
      ✓ should store vendor export data (57 ms)
      ✓ should store payment summary data (53 ms)
      ✓ should store commission detail data (54 ms)
    Affiliate IDs
      ✓ should store multiple affiliate IDs for vendor export (62 ms)
      ✓ should store single affiliate ID for commission detail (61 ms)
      ✓ should allow empty affiliate IDs array (52 ms)
    Timestamps
      ✓ should have createdAt and updatedAt timestamps (52 ms)
    Indexes
      ✓ should have required indexes defined (51 ms)
    Different Export Types
      ✓ should handle vendor export type correctly (64 ms)
      ✓ should handle payment summary export type correctly (55 ms)
      ✓ should handle commission detail export type correctly (61 ms)
    Export ID Generation
      ✓ should generate unique export IDs (52 ms)
    Reference Validation
      ✓ should validate generatedBy as ObjectId reference (54 ms)
      ✓ should accept valid ObjectId for generatedBy (52 ms)
    Instance Methods
      markDownloaded()
        ✓ should mark export as downloaded (191 ms)
        ✓ should increment download count on multiple downloads (249 ms)
        ✓ should not change status if already downloaded (178 ms)
        ✓ should update downloadedAt timestamp (195 ms)
      updateImportStatus()
        ✓ should update import status to success (201 ms)
        ✓ should update import status to failed (186 ms)
        ✓ should handle partial import status (251 ms)
    Static Methods
      findByPeriod()
        ✓ should find exports within period (221 ms)
        ✓ should filter by type when specified (216 ms)
        ✓ should return empty array when no matches (172 ms)
        ✓ should sort by generatedAt descending (216 ms)
      existsForPeriod()
        ✓ should find existing export for period (193 ms)
        ✓ should not find export for different period (225 ms)
        ✓ should exclude failed exports (213 ms)
        ✓ should find export with non-failed status (222 ms)
    Virtual Properties
      ageInDays
        ✓ should calculate age in days correctly (98 ms)
        ✓ should return 1 for exports created today (107 ms)
        ✓ should handle exports created in the past correctly (54 ms)
        ✓ should update as time passes (56 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/systemConfig.test.js (11.996 s)
  SystemConfig Model
    Schema Validation
      ✓ should create a valid system config (208 ms)
      ✓ should require mandatory fields (92 ms)
      ✓ should enforce unique key constraint (329 ms)
      ✓ should validate category enum (76 ms)
      ✓ should validate dataType enum (351 ms)
      ✓ should accept all valid categories (477 ms)
      ✓ should accept all valid data types (264 ms)
      ✓ should trim string fields (131 ms)
    Value Validation
      Number validation
        ✓ should reject non-number values for number dataType (77 ms)
        ✓ should enforce minimum value validation (84 ms)
        ✓ should enforce maximum value validation (117 ms)
        ✓ should accept valid number within range (189 ms)
      Boolean validation
        ✓ should reject non-boolean values for boolean dataType (90 ms)
        ✓ should accept boolean values (134 ms)
      String validation
        ✓ should reject non-string values for string dataType (90 ms)
        ✓ should enforce regex validation (79 ms)
        ✓ should accept valid string matching regex (144 ms)
      Array validation
        ✓ should reject non-array values for array dataType (562 ms)
        ✓ should accept array values (1250 ms)
      Object validation
        ✓ should reject non-object values for object dataType (242 ms)
        ✓ should reject arrays for object dataType (312 ms)
        ✓ should accept object values (219 ms)
      Allowed values validation
        ✓ should enforce allowed values (98 ms)
        ✓ should accept allowed values (145 ms)
    Static Methods
      getValue
        ✓ should return config value (220 ms)
        ✓ should return defaultValue when value is undefined (170 ms)
        ✓ should return provided default when config not found (107 ms)
        ✓ should return null when config not found and no default provided (103 ms)
      setValue
        ✓ should update config value (195 ms)
        ✓ should throw error for non-existent config (103 ms)
        ✓ should throw error for non-editable config (146 ms)
        ✓ should update updatedBy when provided (218 ms)
        ✓ should validate new value according to dataType (164 ms)
      getByCategory
        ✓ should return all configs for a category (208 ms)
        ✓ should return only public configs when specified (252 ms)
        ✓ should return empty array for non-existent category (222 ms)
        ✓ should sort by key (245 ms)
      getPublicConfigs
        ✓ should return only public configs (213 ms)
        ✓ should sort by category then key (192 ms)
      initializeDefaults
        ✓ should create default configurations (664 ms)
        ✓ should not overwrite existing configurations (630 ms)
        ✓ should add missing configurations (627 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (149 ms)
      ✓ should update updatedAt on modification (258 ms)
    toJSON transformation
      ✓ should include currentValue in JSON output (138 ms)
      ✓ should use defaultValue when value is undefined (121 ms)
    Edge Cases
      ✓ should handle mixed types for value and defaultValue (120 ms)
      ✓ should handle empty validation object (122 ms)
      ✓ should skip validation when value is not modified (154 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Checking email availability for: new@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'new@example.com',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: existing@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'existing@example.com',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: customer@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'customer@example.com',
      affiliateFound: false,
      customerFound: true,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: test@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.error
    Check email error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:130:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2408 |
      2409 |   } catch (error) {
    > 2410 |     console.error('Check email error:', error);
           |             ^
      2411 |     res.status(500).json({
      2412 |       success: false,
      2413 |       message: 'Error checking email availability'

      at Object.error [as checkEmail] (server/controllers/authController.js:2410:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:132:7)

  console.log
    Checking username availability for: newuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'newuser',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: existinguser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'existinguser',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: testuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.error
    Check username error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:186:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2355 |
      2356 |   } catch (error) {
    > 2357 |     console.error('Check username error:', error);
           |             ^
      2358 |     res.status(500).json({
      2359 |       success: false,
      2360 |       message: 'Error checking username availability'

      at Object.error [as checkUsername] (server/controllers/authController.js:2357:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:188:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login attempt from IP: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login denied - IP not whitelisted: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:390:15)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.error
    Default operator not found: OP001

      400 |     
      401 |     if (!operator) {
    > 402 |       console.error('Default operator not found:', defaultOperatorId);
          |               ^
      403 |       return res.status(404).json({
      404 |         success: false,
      405 |         message: 'Default operator not configured'

      at Object.error [as operatorAutoLogin] (server/controllers/authController.js:402:15)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:282:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'existing-customer',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'jane@example.com',
        firstName: 'Jane',
        lastName: 'Doe',
        isNewUser: true,
        displayName: 'Jane Doe'
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: invalid

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: { sessionId: 'invalid', sessionResult: 'not found', resultData: null }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:812:53)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:814:7)

PASS tests/unit/authControllerAdditional.test.js
  Auth Controller - Additional Coverage
    checkEmail
      ✓ should return available when email does not exist (7 ms)
      ✓ should return not available when email exists in Affiliate (2 ms)
      ✓ should return not available when email exists in Customer (2 ms)
      ✓ should handle errors (22 ms)
      ✓ should return error for missing email
    checkUsername
      ✓ should return available when username does not exist (3 ms)
      ✓ should return not available when username exists (2 ms)
      ✓ should handle errors (4 ms)
      ✓ should return error for missing username (2 ms)
    operatorAutoLogin
      ✓ should auto-login operator from store IP (7 ms)
      ✓ should fail from invalid IP (6 ms)
      ✓ should handle missing default operator (32 ms)
      ✓ should handle inactive operator (12 ms)
    handleSocialCallback
      ✓ should handle successful social auth callback for affiliate (10 ms)
      ✓ should redirect new user to registration (21 ms)
      ✓ should handle errors (11 ms)
    handleCustomerSocialCallback
      ✓ should handle customer social auth callback (13 ms)
      ✓ should handle new customer registration (4 ms)
    completeSocialRegistration
      ✓ should complete affiliate social registration (21 ms)
      ✓ should handle existing email (1 ms)
      ✓ should handle invalid token (1 ms)
      ✓ should handle missing social data
    completeSocialCustomerRegistration
      ✓ should complete customer social registration (1 ms)
      ✓ should handle invalid affiliate code (1 ms)
    pollOAuthSession
      ✓ should return completed session data (22 ms)
      ✓ should return session data for pending session (3 ms)
      ✓ should handle session not found (2 ms)
      ✓ should handle errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/operator.test.js (12.298 s)
  Operator Model
    Schema Validation
      ✓ should create a valid operator (214 ms)
      ✓ should require all mandatory fields (283 ms)
      ✓ should enforce email format validation (105 ms)
      ✓ should enforce unique email constraint (793 ms)
      ✓ should enforce unique username constraint (807 ms)
      ✓ should validate username format (87 ms)
      ✓ should validate shift time format (82 ms)
      ✓ should accept valid shift times (188 ms)
      ✓ should enforce quality score range (95 ms)
      ✓ should trim whitespace from string fields (204 ms)
      ✓ should convert email and username to lowercase (249 ms)
      ✓ should not allow role to be changed after creation (373 ms)
    Password Handling
      ✓ should hash password on save (212 ms)
      ✓ should verify correct password (315 ms)
      ✓ should reject incorrect password (267 ms)
      ✓ should not expose password in JSON output (171 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (240 ms)
      ✓ should lock account after 5 failed attempts (489 ms)
      ✓ should lock for 30 minutes (493 ms)
      ✓ should reset login attempts on successful login (307 ms)
      ✓ should reset attempts if lock has expired (273 ms)
      ✓ should correctly identify locked accounts (203 ms)
    Password Reset
      ✓ should generate password reset token (85 ms)
      ✓ should set password reset expiry to 30 minutes (92 ms)
    Shift Management
      isOnShift virtual
        ✓ should return true when no shift times are set (79 ms)
        ✓ should correctly identify operator on shift during normal hours (81 ms)
        ✓ should correctly identify operator off shift (85 ms)
        ✓ should handle overnight shifts correctly (79 ms)
    Processing Statistics
      ✓ should update processing stats correctly (216 ms)
      ✓ should handle first order processing (286 ms)
      ✓ should update quality score with passing result (293 ms)
      ✓ should update quality score with failing result (238 ms)
    Static Methods
      findActive
        ✓ should find only active operators (331 ms)
      findOnShift
        ✓ should find only operators on shift (313 ms)
      findByEmailWithPassword
        ✓ should find operator by email with password (221 ms)
        ✓ should handle case-insensitive email search (207 ms)
        ✓ should return null for non-existent email (109 ms)
      findAvailableOperators
        ✓ should find operators with low order count (310 ms)
        ✓ should sort by current order count (309 ms)
        ✓ should respect limit parameter (1063 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (181 ms)
      ✓ should update updatedAt on modification (321 ms)
    Operator ID Generation
      ✓ should auto-generate unique operator ID (262 ms)
      ✓ should not override provided operator ID (170 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Failed to initiate W9 signing: Error: Template not found
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/w9ControllerDocuSign.test.js:250:58)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

  console.log
    Envelope mismatch: { expected: 'test_envelope_id', received: 'wrong_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

  console.log
    Envelope mismatch: { expected: undefined, received: 'test_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

PASS tests/unit/w9ControllerDocuSign.test.js (9.232 s)
  W9 Controller DocuSign Methods
    Check DocuSign Auth
      ✓ should return authorized true if valid token exists (393 ms)
      ✓ should return authorization URL if no valid token (166 ms)
      ✓ should handle service errors (125 ms)
    OAuth Callback
      ✓ should handle successful OAuth callback (129 ms)
      ✓ should handle missing authorization code (142 ms)
      ✓ should handle missing state parameter (140 ms)
      ✓ should display error page on token exchange failure (131 ms)
    Initiate W9 Signing
      ✓ should create new envelope and return signing URL (229 ms)
      ✓ should return existing envelope if one is in progress (196 ms)
      ✓ should require DocuSign authorization if no valid token (156 ms)
      ✓ should handle affiliate not found (204 ms)
      ✓ should handle envelope creation errors (177 ms)
    Get Envelope Status
      ✓ should return envelope status from DocuSign (754 ms)
      ✓ should handle mismatched envelope ID (185 ms)
      ✓ should handle affiliate with no W9 information (227 ms)
      ✓ should return local status if DocuSign API fails (186 ms)
      ✓ should clear envelope ID if declined (284 ms)
    DocuSign Webhook
      ✓ should process completed envelope webhook (346 ms)
      ✓ should reject webhook with invalid signature (146 ms)
      ✓ should handle affiliate not found (197 ms)
      ✓ should process completed W9 without downloading document (253 ms)
    Check Authorization Status
      ✓ should return authorized true if valid token exists (132 ms)
      ✓ should return authorized false if no valid token (169 ms)
      ✓ should handle service errors (130 ms)
    Get W9 Signing Status
      ✓ should return W9 status for affiliate (123 ms)
      ✓ should include tax info for verified W9 (130 ms)
      ✓ should check DocuSign status for in-progress envelopes (120 ms)
      ✓ should handle affiliate not found (132 ms)
      ✓ should handle errors gracefully (129 ms)
    Cancel W9 Signing
      ✓ should cancel W9 signing successfully (230 ms)
      ✓ should handle no W9 signing in progress (167 ms)
      ✓ should handle affiliate not found (124 ms)
      ✓ should handle void envelope errors (164 ms)
    Resend W9 Request
      ✓ should resend W9 request successfully (160 ms)
      ✓ should handle affiliate not found (127 ms)
      ✓ should continue if voiding existing envelope fails (182 ms)
      ✓ should handle envelope creation errors (140 ms)
    Send W9 To Affiliate
      ✓ should send W9 to affiliate successfully (187 ms)
      ✓ should handle affiliate not found (127 ms)
      ✓ should prevent sending to affiliate with verified W9 (129 ms)
      ✓ should prevent sending to affiliate with submitted W9 (127 ms)
      ✓ should handle authorization errors (125 ms)
      ✓ should handle template configuration errors (168 ms)
      ✓ should handle general errors (148 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Welcome email could not be sent: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:159:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      101 |       // Email sent successfully - no need to check result
      102 |     } catch (emailError) {
    > 103 |       console.warn('Welcome email could not be sent:', emailError);
          |               ^
      104 |       // Continue with registration process even if email fails
      105 |     }
      106 |

      at Object.warn [as registerAffiliate] (server/controllers/affiliateController.js:103:15)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:161:7)

  console.error
    Affiliate registration error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:176:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      111 |     });
      112 |   } catch (error) {
    > 113 |     console.error('Affiliate registration error:', error);
          |             ^
      114 |     res.status(500).json({
      115 |       success: false,
      116 |       message: 'An error occurred during registration'

      at Object.error [as registerAffiliate] (server/controllers/affiliateController.js:113:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:178:7)

  console.error
    Error decrypting PayPal email: Error: Decryption failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:273:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as decrypt] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at Object.decrypt [as getAffiliateProfile] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:175:28)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:276:7)

      176 |           : affiliate.paypalEmail;
      177 |       } catch (error) {
    > 178 |         console.error('Error decrypting PayPal email:', error);
          |                 ^
      179 |         // Don't include if decryption fails
      180 |       }
      181 |     }

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:178:17)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:276:7)

  console.error
    Get affiliate orders error: TypeError: Cannot read properties of undefined (reading 'forEach')
        at Object.forEach [as getAffiliateOrders] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:599:15)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:695:7)

      647 |     });
      648 |   } catch (error) {
    > 649 |     console.error('Get affiliate orders error:', error);
          |             ^
      650 |     res.status(500).json({
      651 |       success: false,
      652 |       message: 'An error occurred while retrieving orders'

      at Object.error [as getAffiliateOrders] (server/controllers/affiliateController.js:649:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:695:7)

  console.error
    Get affiliate profile error: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:942:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      187 |     });
      188 |   } catch (error) {
    > 189 |     console.error('Get affiliate profile error:', error);
          |             ^
      190 |     res.status(500).json({
      191 |       success: false,
      192 |       message: 'An error occurred while retrieving affiliate profile'

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:189:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:944:7)

  console.error
    Delete affiliate data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:1031:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error('Delete affiliate data error:', error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteAffiliateData] (server/controllers/affiliateController.js:901:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:1033:7)

PASS tests/unit/affiliateController.test.js
  Affiliate Controller
    registerAffiliate
      ✓ should successfully register a new affiliate (2 ms)
      ✓ should return validation errors
      ✓ should handle duplicate email or username
      ✓ should handle email service failure gracefully (30 ms)
      ✓ should handle database errors (2 ms)
    getAffiliateProfile
      ✓ should return affiliate profile for authorized user (2 ms)
      ✓ should return 404 for non-existent affiliate
      ✓ should return 403 for unauthorized access
      ✓ should handle decryption errors gracefully (7 ms)
    updateAffiliateProfile
      ✓ should successfully update affiliate profile (3 ms)
      ✓ should handle password change (1 ms)
      ✓ should reject incorrect current password
      ✓ should update payment method (1 ms)
    getAffiliateEarnings
      ✓ should return earnings for specified period (1 ms)
      ✓ should handle different time periods (1 ms)
      ✓ should handle missing customers gracefully
    getAffiliateCustomers
      ✓ should return paginated customers with search (1 ms)
      ✓ should handle different sort options
    getAffiliateOrders
      ✓ should return filtered orders (1 ms)
      ✓ should handle date filters correctly (2 ms)
    getAffiliateTransactions
      ✓ should return paginated transactions (2 ms)
    getAffiliateDashboardStats
      ✓ should return comprehensive dashboard statistics (1 ms)
      ✓ should handle empty data gracefully (1 ms)
    getPublicAffiliateInfo
      ✓ should return only public affiliate information (1 ms)
      ✓ should return 404 for non-existent affiliate
    Error handling
      ✓ should handle database connection errors (2 ms)
    deleteAffiliateData
      ✓ should delete all affiliate data in development environment (1 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion (1 ms)
      ✓ should handle deletion errors (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: TypeError: Administrator.find(...).select is not a function
        at select (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:54:8)
        at Object.getAdministrators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:161:15)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.getAdministrators (tests/unit/administratorControllerEnhanced.test.js:161:15)

  console.error
    Error updating operator profile: TypeError: updatedOperator.toObject is not a function
        at toObject (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2255:70)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1078:9)

      2261 |     });
      2262 |   } catch (error) {
    > 2263 |     console.error('Error updating operator profile:', error);
           |             ^
      2264 |     res.status(500).json({
      2265 |       success: false,
      2266 |       message: 'An error occurred while updating the profile'

      at error (server/controllers/administratorController.js:2263:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1078:9)

  console.error
    Error fetching administrators: Error: Connection timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1093:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1096:7)

PASS tests/unit/administratorControllerEnhanced.test.js
  Administrator Controller - Enhanced Coverage
    Administrator Management
      getAdministrators
        ✓ should get all administrators with pagination (3 ms)
        ✓ should filter administrators by search query (1 ms)
        ✓ should handle database errors (42 ms)
      getAdministratorById
        ✓ should get administrator by ID (1 ms)
        ✓ should return 404 for non-existent administrator
        ✓ should return 400 for invalid ObjectId (1 ms)
      createAdministrator
        ✓ should create new administrator with valid data (49 ms)
        ✓ should return validation errors
        ✓ should handle duplicate email error (1 ms)
      updateAdministrator
        ✓ should update administrator successfully (1 ms)
        ✓ should not allow self-demotion of last super admin
      deleteAdministrator
        ✓ should delete administrator successfully (1 ms)
        ✓ should prevent self-deletion (1 ms)
        ✓ should prevent deletion of last administrator
      resetAdministratorPassword
        ✓ should reset administrator password (60 ms)
        ✓ should handle email sending failure (48 ms)
      getPermissions
        ✓ should return all available permissions (1 ms)
    Operator Management Extensions
      deactivateOperator
        ✓ should deactivate operator
        ✓ should handle non-existent operator
      resetOperatorPassword
        ✓ should reset operator password and send email (1 ms)
      resetOperatorPin
        ✓ should reset operator PIN (1 ms)
        ✓ should validate PIN format
      deleteOperator
        ✓ should delete operator permanently (1 ms)
      getAvailableOperators
        ✓ should get available operators for assignment
      updateOperatorStats
        ✓ should update operator statistics (1 ms)
    Analytics Extensions
      getOperatorAnalytics
        ✓ should get operator analytics with date range
        ✓ should handle missing date range (4 ms)
      getAffiliateAnalytics
        ✓ should get affiliate analytics (1 ms)
      exportReport
        ✓ should export report as CSV
        ✓ should export report as JSON (1 ms)
        ✓ should reject invalid report type
    Operator Self-Management
      getOperatorSelf
        ✓ should get current operator profile (1 ms)
        ✓ should handle non-operator users
      updateOperatorSelf
        ✓ should allow operator to update own profile (1 ms)
        ✓ should prevent changing restricted fields (2 ms)
    Error Handling
      ✓ should handle database connection errors (3 ms)
      ✓ should handle validation errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating new customer with email: jane@example.com username: janesmith

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST123456

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

  console.error
    Delete customer data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:460:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      615 |     });
      616 |   } catch (error) {
    > 617 |     console.error('Delete customer data error:', error);
          |             ^
      618 |     res.status(500).json({
      619 |       success: false,
      620 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteCustomerData] (server/controllers/customerController.js:617:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:462:7)

  console.error
    Get customer dashboard stats error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:735:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      503 |     });
      504 |   } catch (error) {
    > 505 |     console.error('Get customer dashboard stats error:', error);
          |             ^
      506 |     res.status(500).json({
      507 |       success: false,
      508 |       message: 'An error occurred while retrieving dashboard statistics'

      at Object.error [as getCustomerDashboardStats] (server/controllers/customerController.js:505:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:737:7)

  console.error
    Update payment info error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:839:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      557 |     });
      558 |   } catch (error) {
    > 559 |     console.error('Update payment info error:', error);
          |             ^
      560 |     res.status(500).json({
      561 |       success: false,
      562 |       message: 'An error occurred while updating payment information'

      at Object.error [as updatePaymentInfo] (server/controllers/customerController.js:559:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:841:7)

  console.error
    Update customer password error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1004:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      687 |     });
      688 |   } catch (error) {
    > 689 |     console.error('Update customer password error:', error);
          |             ^
      690 |     res.status(500).json({
      691 |       success: false,
      692 |       message: 'An error occurred while updating password'

      at Object.error [as updateCustomerPassword] (server/controllers/customerController.js:689:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1006:7)

  console.error
    Get customers for admin error: TypeError: Cannot read properties of undefined (reading 'search')
        at Object.search [as getCustomersForAdmin] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/customerController.js:707:19)
        at Object.getCustomersForAdmin (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1239:32)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      784 |     });
      785 |   } catch (error) {
    > 786 |     console.error('Get customers for admin error:', error);
          |             ^
      787 |     res.status(500).json({
      788 |       success: false,
      789 |       message: 'Failed to retrieve customers'

      at Object.error [as getCustomersForAdmin] (server/controllers/customerController.js:786:13)
      at Object.getCustomersForAdmin (tests/unit/customerController.test.js:1239:32)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.error
    Customer registration error: Error: Database save failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1306:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      152 |     });
      153 |   } catch (error) {
    > 154 |     console.error('Customer registration error:', error);
          |             ^
      155 |     res.status(500).json({
      156 |       success: false,
      157 |       message: 'An error occurred during registration'

      at Object.error [as registerCustomer] (server/controllers/customerController.js:154:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1325:7)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST999

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

PASS tests/unit/customerController.test.js
  Customer Controller
    registerCustomer
      ✓ should successfully register a new customer (12 ms)
      ✓ should return error for invalid affiliate (1 ms)
      ✓ should return error for duplicate email
    getCustomerProfile
      ✓ should return customer profile for authorized customer (1 ms)
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should return 404 for non-existent customer
    updateCustomerProfile
      ✓ should successfully update customer profile (1 ms)
      ✓ should prevent updating protected fields (1 ms)
    getCustomerOrders
      ✓ should return customer orders with pagination (1 ms)
    deleteCustomerData
      ✓ should delete all customer data in development environment (1 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion (1 ms)
      ✓ should handle deletion errors (28 ms)
      ✓ should return 404 for non-existent customer
    getCustomerDashboardStats
      ✓ should return dashboard stats for authorized customer (1 ms)
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access
      ✓ should allow affiliate access to their customer dashboard (1 ms)
      ✓ should handle database errors gracefully (1 ms)
    updatePaymentInfo
      ✓ should successfully update payment information (1 ms)
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should allow admin to update customer payment info
      ✓ should handle database errors (1 ms)
    updateCustomerPassword
      ✓ should successfully update password (1 ms)
      ✓ should reject incorrect current password (1 ms)
      ✓ should validate new password length
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should handle missing new password
      ✓ should handle database errors (1 ms)
    getCustomersForAdmin
      ✓ should return all customers for admin (1 ms)
      ✓ should filter customers by search query (1 ms)
      ✓ should filter customers by affiliate
      ✓ should filter customers by active status
      ✓ should filter customers by inactive status (1 ms)
      ✓ should filter new customers with no orders
      ✓ should handle combined filters (1 ms)
      ✓ should handle database errors (7 ms)
      ✓ should ignore "all" filter values
    validation errors
      ✓ should return validation errors for registerCustomer (1 ms)
    error handling for registration
      ✓ should handle database save errors during registration (2 ms)
      ✓ should handle missing payment info gracefully (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: 'CUST123' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: 'INVALID' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1070:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1608:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)
      at Object.<anonymous> (tests/unit/operatorController.test.js:1610:7)

PASS tests/unit/operatorController.test.js
  Operator Controller
    getOrderQueue
      ✓ should return available orders for operator workstation (1 ms)
    claimOrder
      ✓ should allow operator to claim an order (1 ms)
      ✓ should fail if order is already claimed
      ✓ should fail if order not found (1 ms)
      ✓ should handle database error during claim
    updateOrderStatus
      ✓ should update order status (1 ms)
      ✓ should handle invalid status transition
      ✓ should handle order not found
      ✓ should handle unauthorized operator (1 ms)
      ✓ should update workstation when washing status with new workstation (1 ms)
      ✓ should set processingCompleted when status is ready
      ✓ should handle database error (1 ms)
    performQualityCheck
      ✓ should record quality check results (1 ms)
      ✓ should handle order not found
      ✓ should handle order not ready for quality check
      ✓ should handle database error during quality check (7 ms)
    getMyOrders
      ✓ should return orders assigned to operator (2 ms)
    updateShiftStatus
      ✓ should update operator shift status
      ✓ should handle operator not found (1 ms)
      ✓ should end shift successfully
      ✓ should handle database error (1 ms)
    getPerformanceStats
      ✓ should return operator performance statistics (1 ms)
    getCustomerDetails
      ✓ should return customer details for an order
    addCustomerNote
      ✓ should add a note to an order (1 ms)
      ✓ should handle customer not found
      ✓ should handle errors during note addition (1 ms)
    Error handling in existing functions
      ✓ should handle error in getOrderQueue
      ✓ should handle different filters in getOrderQueue
      ✓ should handle operator at max capacity in claimOrder
      ✓ should handle quality check failure in performQualityCheck (1 ms)
      ✓ should handle workstation conflict in updateShiftStatus
      ✓ should handle incomplete orders when ending shift
      ✓ should handle invalid action in updateShiftStatus
      ✓ should handle missing workstation when starting shift
      ✓ should handle different time periods in getPerformanceStats (1 ms)
      ✓ should handle operator not found in getPerformanceStats
      ✓ should handle customer not found in getCustomerDetails (1 ms)
      ✓ should handle filters in getMyOrders
    scanCustomer
      ✓ should scan customer and return current order (11 ms)
      ✓ should handle customer not found (2 ms)
    scanBag
      ✓ should redirect to scanCustomer (1 ms)
      ✓ should handle error in scanBag (28 ms)
    receiveOrder
      ✓ should receive order and update status (1 ms)
      ✓ should handle order not found
    markBagProcessed
      ✓ should mark bag as processed (1 ms)
      ✓ should update order status when all bags processed (107 ms)
    confirmPickup
      ✓ should confirm pickup and complete order
      ✓ should handle partial pickup (1 ms)
    getTodayStats
      ✓ should return today's operator statistics (1 ms)
      ✓ should handle no orders for today
    getWorkstationStatus
      ✓ should return workstation status for all workstations (1 ms)
      ✓ should handle database error
    Additional coverage tests
      ✓ should handle error in getMyOrders (1 ms)
      ✓ should handle different performance stat periods
      ✓ should handle error in getPerformanceStats (1 ms)
      ✓ should handle error in getCustomerDetails
      ✓ should handle no active order in scanCustomer (2 ms)
      ✓ should handle different scan actions in scanCustomer (2 ms)
      ✓ should handle affiliate lookup in scanCustomer (1 ms)
      ✓ should handle error in scanCustomer (2 ms)
      ✓ should handle error in receiveOrder (4 ms)
      ✓ should handle order not found in markBagProcessed
      ✓ should handle error in markBagProcessed (1 ms)
      ✓ should handle order not found in confirmPickup
      ✓ should handle error in confirmPickup
      ✓ should handle error in getTodayStats (1 ms)
      ✓ should handle markOrderReady (deprecated function) (1 ms)
      ✓ should handle markOrderReady with affiliate notification
      ✓ should handle errors in markOrderReady (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:380:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at Object.error [as getAdministrators] (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:383:7)

  console.error
    Error fetching administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:814:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      109 |
      110 |   } catch (error) {
    > 111 |     console.error('Error fetching administrator:', error);
          |             ^
      112 |     res.status(500).json({
      113 |       success: false,
      114 |       message: 'Failed to fetch administrator'

      at Object.error [as getAdministratorById] (server/controllers/administratorController.js:111:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:817:7)

  console.error
    Error changing administrator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:929:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      544 |
      545 |   } catch (error) {
    > 546 |     console.error('Error changing administrator password:', error);
          |             ^
      547 |     res.status(500).json({
      548 |       success: false,
      549 |       message: 'Failed to change password'

      at Object.error [as changeAdministratorPassword] (server/controllers/administratorController.js:546:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:932:7)

  console.error
    Error fetching operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:996:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      849 |
      850 |   } catch (error) {
    > 851 |     console.error('Error fetching operator:', error);
          |             ^
      852 |     res.status(500).json({
      853 |       success: false,
      854 |       message: 'Failed to fetch operator details'

      at Object.error [as getOperatorById] (server/controllers/administratorController.js:851:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:999:7)

  console.error
    Error resetting operator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1062:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |
      1035 |   } catch (error) {
    > 1036 |     console.error('Error resetting operator password:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'Failed to reset operator password'

      at Object.error [as resetOperatorPassword] (server/controllers/administratorController.js:1036:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1064:7)

  console.error
    Error fetching operator analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1117:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1510 |
      1511 |   } catch (error) {
    > 1512 |     console.error('Error fetching operator analytics:', error);
           |             ^
      1513 |     res.status(500).json({
      1514 |       success: false,
      1515 |       message: 'Failed to fetch operator analytics'

      at Object.error [as getOperatorAnalytics] (server/controllers/administratorController.js:1512:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1119:7)

  console.error
    Error fetching affiliate analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1171:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1612 |
      1613 |   } catch (error) {
    > 1614 |     console.error('Error fetching affiliate analytics:', error);
           |             ^
      1615 |     res.status(500).json({
      1616 |       success: false,
      1617 |       message: 'Failed to fetch affiliate analytics'

      at Object.error [as getAffiliateAnalytics] (server/controllers/administratorController.js:1614:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1173:7)

  console.error
    Error exporting report: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1293:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1677 |
      1678 |   } catch (error) {
    > 1679 |     console.error('Error exporting report:', error);
           |             ^
      1680 |     res.status(500).json({
      1681 |       success: false,
      1682 |       message: 'Failed to export report'

      at Object.error [as exportReport] (server/controllers/administratorController.js:1679:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1296:7)

  console.error
    Error fetching affiliates list: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1339:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1730 |     });
      1731 |   } catch (error) {
    > 1732 |     console.error('Error fetching affiliates list:', error);
           |             ^
      1733 |     res.status(500).json({
      1734 |       success: false,
      1735 |       message: 'Failed to fetch affiliates list',

      at Object.error [as getAffiliatesList] (server/controllers/administratorController.js:1732:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1342:7)

  console.error
    Error updating operator stats: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1520:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2080 |     });
      2081 |   } catch (error) {
    > 2082 |     console.error('Error updating operator stats:', error);
           |             ^
      2083 |     res.status(500).json({
      2084 |       success: false,
      2085 |       message: 'An error occurred while updating operator statistics'

      at Object.error [as updateOperatorStats] (server/controllers/administratorController.js:2082:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1522:7)

  console.error
    Error getting available operators: TypeError: Operator.find(...).sort(...).limit is not a function
        at Object.limit [as getAvailableOperators] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2103:8)
        at Object.getAvailableOperators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1570:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2109 |     });
      2110 |   } catch (error) {
    > 2111 |     console.error('Error getting available operators:', error);
           |             ^
      2112 |     res.status(500).json({
      2113 |       success: false,
      2114 |       message: 'An error occurred while fetching available operators'

      at Object.error [as getAvailableOperators] (server/controllers/administratorController.js:2111:13)
      at Object.getAvailableOperators (tests/unit/administratorController.test.js:1570:37)

  console.error
    Error deleting operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1624:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2159 |     });
      2160 |   } catch (error) {
    > 2161 |     console.error('Error deleting operator:', error);
           |             ^
      2162 |     res.status(500).json({
      2163 |       success: false,
      2164 |       message: 'An error occurred while deleting the operator'

      at Object.error [as deleteOperator] (server/controllers/administratorController.js:2161:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1626:7)

  console.error
    Error resetting operator PIN: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1684:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2207 |     });
      2208 |   } catch (error) {
    > 2209 |     console.error('Error resetting operator PIN:', error);
           |             ^
      2210 |     res.status(500).json({
      2211 |       success: false,
      2212 |       message: 'An error occurred while resetting the PIN'

      at Object.error [as resetOperatorPin] (server/controllers/administratorController.js:2209:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1686:7)

  console.error
    Error fetching environment variables: TypeError: Cannot read properties of undefined (reading 'DEFAULT_ADMIN_EMAIL')
        at Object.DEFAULT_ADMIN_EMAIL [as getEnvironmentVariables] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2402:56)
        at Object.getEnvironmentVariables (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1732:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2443 |
      2444 |   } catch (error) {
    > 2445 |     console.error('Error fetching environment variables:', error);
           |             ^
      2446 |     res.status(500).json({
      2447 |       success: false,
      2448 |       message: 'Failed to fetch environment variables'

      at Object.error [as getEnvironmentVariables] (server/controllers/administratorController.js:2445:13)
      at Object.getEnvironmentVariables (tests/unit/administratorController.test.js:1732:37)

  console.error
    Error updating administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1852:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      313 |
      314 |   } catch (error) {
    > 315 |     console.error('Error updating administrator:', error);
          |             ^
      316 |     res.status(500).json({
      317 |       success: false,
      318 |       message: 'Failed to update administrator'

      at Object.error [as updateAdministrator] (server/controllers/administratorController.js:315:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1855:7)

  console.error
    Error deleting administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1889:44)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at Object.error [as deleteAdministrator] (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1891:7)

PASS tests/unit/administratorController.test.js
  Administrator Controller
    getAdministrators
      ✓ should get administrators with pagination (1 ms)
      ✓ should handle errors (35 ms)
    createAdministrator
      ✓ should create administrator (1 ms)
      ✓ should handle validation errors
    updateAdministrator
      ✓ should update administrator (1 ms)
      ✓ should prevent self-deactivation
    deleteAdministrator
      ✓ should delete administrator (1 ms)
      ✓ should prevent self-deletion
    resetAdministratorPassword
      ✓ should reset password (1 ms)
    Operator Management
      ✓ createOperator should create new operator (1 ms)
      ✓ getOperators should return operators list (1 ms)
      ✓ updateOperator should update operator details
      ✓ deactivateOperator should deactivate operator
    Analytics Functions
      ✓ getDashboard should return dashboard data
      ✓ getOrderAnalytics should return order analytics (1 ms)
    System Configuration
      ✓ getSystemConfig should return configurations (1 ms)
      ✓ updateSystemConfig should update configuration
    getPermissions
      ✓ should return available permissions (7 ms)
    getAdministratorById
      ✓ should get administrator by id
      ✓ should handle not found
      ✓ should handle errors (3 ms)
    changeAdministratorPassword
      ✓ should change password successfully (1 ms)
      ✓ should reject incorrect current password (1 ms)
      ✓ should validate new password strength
      ✓ should handle errors (3 ms)
    getOperatorById
      ✓ should get operator by id (1 ms)
      ✓ should handle operator not found
      ✓ should handle errors (1 ms)
    resetOperatorPassword
      ✓ should reset operator password (1 ms)
      ✓ should handle operator not found (1 ms)
      ✓ should handle errors (1 ms)
    getOperatorAnalytics
      ✓ should get operator analytics
      ✓ should handle errors (2 ms)
    getAffiliateAnalytics
      ✓ should get affiliate analytics (1 ms)
      ✓ should handle errors (1 ms)
    exportReport
      ✓ should export orders report
      ✓ should export operators report (1 ms)
      ✓ should handle invalid report type
      ✓ should handle errors (2 ms)
    getAffiliatesList
      ✓ should get affiliates list (1 ms)
      ✓ should handle errors (2 ms)
    getSystemHealth
      ✓ should get system health status (1 ms)
      ✓ should handle database connection issues
      ✓ should handle errors (1 ms)
    updateOperatorStats
      ✓ should update operator stats with processing time
      ✓ should handle operator not found (1 ms)
      ✓ should validate processing time
      ✓ should handle errors (2 ms)
    getAvailableOperators
      ✓ should get available operators (9 ms)
      ✓ should handle errors (22 ms)
    deleteOperator
      ✓ should delete operator (1 ms)
      ✓ should prevent deletion with active orders (1 ms)
      ✓ should handle errors (2 ms)
    resetOperatorPin
      ✓ should reset operator PIN (1 ms)
      ✓ should handle operator not found
      ✓ should handle errors (2 ms)
    getEnvironmentVariables
      ✓ should get environment variables (1 ms)
      ✓ should handle errors (2 ms)
    Additional coverage for getAdministrators
      ✓ should handle search with active filter
    Additional coverage for createAdministrator
      ✓ should handle duplicate email (1 ms)
      ✓ should handle password validation failure
    Additional coverage for updateAdministrator
      ✓ should handle administrator not found (1 ms)
      ✓ should handle database errors (1 ms)
    Additional coverage for deleteAdministrator
      ✓ should prevent deleting last super admin
      ✓ should handle database errors (1 ms)
    Additional coverage for resetAdministratorPassword
      ✓ should handle admin not found
      ✓ should handle weak password (1 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:36:54.537Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/customers/CUST-API-001/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:36:55.747Z"}
[0mGET /api/v1/customers/CUST-API-001/dashboard [32m200[0m 224.517 ms - 457[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:36:57.409Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-API-001',
      affiliateId: 'AFF-API-001',
      pickupDate: '2025-07-07T23:36:57.407Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test order with credit'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-API-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: API Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-API-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: API Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Applying WDF credit of $15.5 to order for customer CUST-API-001

      at log (server/controllers/orderController.js:188:15)

  console.log
    Reset WDF credit for customer CUST-API-001 after applying to order ORD619915

      at log (server/controllers/orderController.js:218:15)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.customer@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD619915
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $40.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> API Affiliate
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> api.affiliate@test.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.affiliate@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD619915
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> API Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 API Ave, API City, AP 12345
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 25 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Test order with credit
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 311.173 ms - 128[0m
[34mdebug[39m: GET /api/v1/orders/ORD-API-001 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:36:59.045Z"}
[0mGET /api/v1/orders/ORD-API-001 [32m200[0m 113.685 ms - 827[0m
PASS tests/integration/wdfCreditSimple.test.js (7.365 s)
  WDF Credit Integration Test
    WDF Credit API Endpoints
      ✓ should include WDF credit in customer dashboard (2304 ms)
      ✓ should apply WDF credit when creating new order (1623 ms)
      ✓ should show WDF credit in order details (1127 ms)
    WDF Credit Calculation
      ✓ should generate correct credit for weight differences (932 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:01.761Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:02.081Z"}
  console.log
    CSRF token generation: {
      sessionID: '8e842e5d5e00ea57f1aa00b1b80074d0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Ltlfk3dI-kGalO9b5Pl2GN8YsvUCM_FKEVbI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8e842e5d5e00ea57f1aa00b1b80074d0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LouHN2l7_Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.842 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:03.309Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:04.426Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:04.426Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:04.550Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-1969a9ef-dcf9-4bb7-aec1-d5f6e10421c1",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 167.876 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:04.788Z"}
[32minfo[39m: Payment config accessed {"hasHash":true,"hostname":"127.0.0.1","ip":"::ffff:127.0.0.1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:04.791Z"}
[0mGET /api/v1/payments/config [32m200[0m 2.681 ms - 310[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:05.853Z"}
  console.log
    CSRF token generation: {
      sessionID: '51aef97f8d7eb8a6d36c7fee0b5e5e80',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: omv8LVKl-dNsyRD2_yR0fyqnFxTz4T7h6pk0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 51aef97f8d7eb8a6d36c7fee0b5e5e80

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bNrqEUQ5il...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.633 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:05.993Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.364Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.364Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.463Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-422910ba-f83a-4895-8921-4706e62ca64c",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 149.431 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.680Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqkcb-8wdbi6l: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.718Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:06.756Z","token":"mctqqkcb-8wdbi6l"}
[0mPOST /api/v1/payments/create-token [32m200[0m 75.068 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:07.532Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dd62527098c783f78d72d63dc1263845',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7JUTd5GP--pTvOzisGbkDnFBDsF7sYIbS-VE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dd62527098c783f78d72d63dc1263845

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: y9kenAdKsR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.434 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:07.678Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.019Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.020Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.111Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-92bcffee-4916-42ed-ac5b-8a380801261a",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 142.786 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.327Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqlm3-dnmcdo0: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.366Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.403Z","token":"mctqqlm3-dnmcdo0"}
[0mPOST /api/v1/payments/create-token [32m200[0m 74.403 ms - 283[0m
[34mdebug[39m: GET /api/v1/payments/check-status/mctqqlm3-dnmcdo0 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:08.407Z"}
[0mGET /api/v1/payments/check-status/mctqqlm3-dnmcdo0 [32m200[0m 29.177 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:09.273Z"}
  console.log
    CSRF token generation: {
      sessionID: '283148e3465c571c8e0754588b074ae9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: X0a9aRu3-rYzkeAaLPVoGBzzUjGkFfxESdUE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 283148e3465c571c8e0754588b074ae9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 81gn8hAY46...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.799 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:09.430Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:09.864Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:09.864Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:09.954Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-ba406d7a-282e-4255-8e7a-ee0a557629fc",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 144.616 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.231Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqn2y-j6bxg5d: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.272Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.309Z","token":"mctqqn2y-j6bxg5d"}
[0mPOST /api/v1/payments/create-token [32m200[0m 76.716 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctqqn2y-j6bxg5d {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.311Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctqqn2y-j6bxg5d {
      sessionID: '283148e3465c571c8e0754588b074ae9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A283148e3465c571c8e0754588b074ae9.P1IC6YvR0qjPee83JX0%2FTO1L2wIM%2F5mOBBfNEc6dupY',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctqqn2y-j6bxg5d: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.414Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:10.414Z","token":"mctqqn2y-j6bxg5d"}
[0mPOST /api/v1/payments/cancel-token/mctqqn2y-j6bxg5d [32m200[0m 103.515 ms - 73[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:11.221Z"}
  console.log
    CSRF token generation: {
      sessionID: '6aa5a51b480b1421700085c05a8e382a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7ocfXtW8-T4uNUUGXrmtZeE4lbygNyFpdev4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6aa5a51b480b1421700085c05a8e382a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 70_INSmMPw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.283 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:11.396Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:11.744Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:11.745Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:11.835Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-ffd72ac9-8593-4318-b88b-70c88a5f3d15",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 141.880 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.046Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.050Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.052Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.053Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.055Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.058Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.060Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.061Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.063Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.064Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohc-0x3absf: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.087Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohn-iprjy3f: {"callbackPath":"/api/v1/payments/callback/handler-4","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-4","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.115Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohh-ohu7ij9: {"callbackPath":"/api/v1/payments/callback/handler-6","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-6","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.119Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohq-xu86lga: {"callbackPath":"/api/v1/payments/callback/handler-10","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-10","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.122Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqoht-vdzynow: {"callbackPath":"/api/v1/payments/callback/handler-8","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-8","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.126Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohs-nlesv3b: {"callbackPath":"/api/v1/payments/callback/handler-9","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-9","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.129Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqoho-2i7s0c9: {"callbackPath":"/api/v1/payments/callback/handler-7","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-7","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.136Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohk-52cqeod: {"callbackPath":"/api/v1/payments/callback/handler-3","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-3","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.138Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohi-syrmavh: {"callbackPath":"/api/v1/payments/callback/handler-5","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-5","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.140Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqohf-6p0l4fb: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.142Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"customer0@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.145Z","token":"mctqqohc-0x3absf"}
[0mPOST /api/v1/payments/create-token [32m200[0m 98.704 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-4","customerEmail":"customer5@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.155Z","token":"mctqqohn-iprjy3f"}
[0mPOST /api/v1/payments/create-token [32m200[0m 97.701 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-10","customerEmail":"customer7@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.163Z","token":"mctqqohq-xu86lga"}
[0mPOST /api/v1/payments/create-token [32m200[0m 102.220 ms - 285[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-6","customerEmail":"customer2@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.182Z","token":"mctqqohh-ohu7ij9"}
[0mPOST /api/v1/payments/create-token [32m200[0m 130.664 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-9","customerEmail":"customer8@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.184Z","token":"mctqqohs-nlesv3b"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-7","customerEmail":"customer6@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.185Z","token":"mctqqoho-2i7s0c9"}
[0mPOST /api/v1/payments/create-token [32m200[0m 121.516 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 125.599 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-8","customerEmail":"customer9@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.195Z","token":"mctqqoht-vdzynow"}
[0mPOST /api/v1/payments/create-token [32m200[0m 131.521 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"customer1@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.201Z","token":"mctqqohf-6p0l4fb"}
[0mPOST /api/v1/payments/create-token [32m200[0m 151.850 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-5","customerEmail":"customer3@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.205Z","token":"mctqqohi-syrmavh"}
[0mPOST /api/v1/payments/create-token [32m200[0m 152.501 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-3","customerEmail":"customer4@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.211Z","token":"mctqqohk-52cqeod"}
[0mPOST /api/v1/payments/create-token [32m200[0m 156.085 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.222Z"}
[33mwarn[39m: No callback handlers available. All handlers are currently in use. {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:12.255Z"}
[0mPOST /api/v1/payments/create-token [31m503[0m 32.683 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.046Z"}
  console.log
    CSRF token generation: {
      sessionID: '9f5cb6240eae1c41d4dc7de1008c5669',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: P8DIc4rE-I27BZuuGSFUno9BCACsvJLjbalU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9f5cb6240eae1c41d4dc7de1008c5669

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jTfitx8k6A...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.102 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.196Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.608Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.609Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.699Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-37f8289a-1fe9-4502-a9fd-7f72faf6080d",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 144.673 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.946Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqpy4-3fcugm7: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:13.997Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"cancel@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.038Z","token":"mctqqpy4-3fcugm7"}
[0mPOST /api/v1/payments/create-token [32m200[0m 92.727 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctqqpy4-3fcugm7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.043Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctqqpy4-3fcugm7 {
      sessionID: '9f5cb6240eae1c41d4dc7de1008c5669',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9f5cb6240eae1c41d4dc7de1008c5669.xywTfh5LWr06Z1GQ1yDQRvwsIiiYukEiWyujtNXAeh8',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctqqpy4-3fcugm7: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.167Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.168Z","token":"mctqqpy4-3fcugm7"}
[0mPOST /api/v1/payments/cancel-token/mctqqpy4-3fcugm7 [32m200[0m 124.998 ms - 73[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.171Z"}
[32minfo[39m: Acquired callback handler for payment token mctqqq4c-nouku8a: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.210Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"new@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:14.246Z","token":"mctqqq4c-nouku8a"}
[0mPOST /api/v1/payments/create-token [32m200[0m 75.534 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.107Z"}
  console.log
    CSRF token generation: {
      sessionID: '1de09306ab6bd12f991f224f3d032c0a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 052zmAFM-ErqghHVvRdZycXN67aSN7jLAKLY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1de09306ab6bd12f991f224f3d032c0a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EbQSzoTfdi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.321 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.270Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.621Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.622Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.715Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-09e9037e-c0e1-4c46-881f-3d9993c48b86",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 179.153 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/pool-stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:15.990Z"}
[0mGET /api/v1/payments/pool-stats [32m200[0m 30.364 ms - -[0m
[32minfo[39m: Callback pool cleanup job stopped {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:16.806Z"}
PASS tests/integration/payment.test.js (15.863 s)
  Payment Integration Tests
    Payment Configuration Tests
      ✓ should get payment configuration (3784 ms)
    Payment Token Tests
      ✓ should create payment token (1679 ms)
      ✓ should check payment status (1741 ms)
      ✓ should cancel payment token (1947 ms)
    Payment Callback Tests
      ✓ should return 503 when all callback handlers are locked (1825 ms)
      ✓ should release callback handler when payment is cancelled (2061 ms)
    Pool Statistics Tests
      ✓ should get pool statistics (1700 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:17.564Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:19.245Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:19.652Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 406.437 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:20.935Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:21.080Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 144.173 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-599e56d3-24cd-4e5e-b9c1-f0244529a7e8/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:21.092Z"}
[0mGET /api/v1/affiliates/AFF-599e56d3-24cd-4e5e-b9c1-f0244529a7e8/customers [32m200[0m 115.988 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:22.175Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:22.337Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 162.553 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-f0f8c41d-c936-420d-bf60-b45f6a37d984/customers?customerId=CUST-55a75d4a-a90b-4e0a-9d4f-27e730a06d46 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:22.428Z"}
[0mGET /api/v1/affiliates/AFF-f0f8c41d-c936-420d-bf60-b45f6a37d984/customers?customerId=CUST-55a75d4a-a90b-4e0a-9d4f-27e730a06d46 [32m200[0m 119.057 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:23.528Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:23.685Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.942 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-859bc582-8aa5-499d-b45e-1b6e4801f615/customers?customerId=NONEXISTENT123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:23.689Z"}
[0mGET /api/v1/affiliates/AFF-859bc582-8aa5-499d-b45e-1b6e4801f615/customers?customerId=NONEXISTENT123 [32m200[0m 116.346 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:24.921Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:25.092Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 171.091 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-8de0d39e-b9d9-4f4d-bfd2-2d8bf0557e32/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:25.095Z"}
[0mGET /api/v1/affiliates/AFF-8de0d39e-b9d9-4f4d-bfd2-2d8bf0557e32/customers [33m401[0m 0.933 ms - 47[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:26.051Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:26.230Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 180.809 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:26.237Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:26.383Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.263 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-1d8a0974-70a9-46e4-a319-07b55d02a21c/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:26.386Z"}
[0mGET /api/v1/affiliates/AFF-1d8a0974-70a9-46e4-a319-07b55d02a21c/customers [32m200[0m 120.575 ms - 437[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-1d8a0974-70a9-46e4-a319-07b55d02a21c/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:26.510Z"}
[0mGET /api/v1/affiliates/AFF-1d8a0974-70a9-46e4-a319-07b55d02a21c/dashboard [32m200[0m 138.500 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:27.634Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:27.794Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 159.398 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:29.560Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:29.734Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 172.182 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-b2451da8-862f-4275-8110-89aa9d97b60e {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:29.746Z"}
[0mGET /api/v1/affiliates/AFF-b2451da8-862f-4275-8110-89aa9d97b60e [32m200[0m 119.372 ms - 573[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:30.844Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:31.030Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 186.197 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-abc09b33-d663-420c-9d45-f11e897f0547/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:31.035Z"}
[0mGET /api/v1/affiliates/AFF-abc09b33-d663-420c-9d45-f11e897f0547/dashboard [32m200[0m 139.851 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:32.131Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:32.283Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 152.395 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-dc3f0951-4d2a-4a32-a990-8cdc7c2086bc/customers?customerId=INVALID_ID {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:32.287Z"}
[0mGET /api/v1/affiliates/AFF-dc3f0951-4d2a-4a32-a990-8cdc7c2086bc/customers?customerId=INVALID_ID [32m200[0m 111.627 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:33.423Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:33.608Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 184.711 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/INVALID_AFFILIATE/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:33.611Z"}
[0mGET /api/v1/affiliates/INVALID_AFFILIATE/customers [33m403[0m 41.250 ms - 42[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:35.066Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:35.240Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 174.759 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-66e343b8-9e84-451c-bf4f-e7bde6e200d0/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:35.243Z"}
[0mGET /api/v1/affiliates/AFF-66e343b8-9e84-451c-bf4f-e7bde6e200d0/customers [32m200[0m 112.544 ms - 437[0m
PASS tests/integration/affiliateCustomerFiltering.test.js (19.356 s)
  Affiliate Customer Filtering Integration Tests
    Email URL Generation for Customer Filtering
      ✓ should generate correct dashboard URL with customer parameter (2888 ms)
    Affiliate Dashboard Customer Filtering API
      ✓ should return customers for authenticated affiliate (1223 ms)
      ✓ should filter customers by customerId when provided (1373 ms)
      ✓ should return empty array when filtering by non-existent customerId (1391 ms)
      ✓ should require authentication to access customer list (1137 ms)
    Complete Email-to-Dashboard Flow Simulation
      ✓ should handle complete flow from email generation to dashboard access (1574 ms)
      ✓ should handle URL parameters correctly throughout the flow (1942 ms)
    Dashboard Data Loading for Customer Highlighting
      ✓ should load affiliate profile data correctly (1254 ms)
      ✓ should load dashboard statistics correctly (1308 ms)
    Error Handling in Customer Filtering Flow
      ✓ should handle invalid customer ID gracefully (1286 ms)
      ✓ should handle invalid affiliate ID (1631 ms)
      ✓ should handle database connection issues gracefully (1291 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:37.046Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:37.418Z"}
  console.log
    CSRF token generation: {
      sessionID: '179f25429f189aaa21e9c6fa63d3cb0e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OXWR9Djr-tVIMNTJ_l_W2p1NjO8o9Jl9Q-CQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 179f25429f189aaa21e9c6fa63d3cb0e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nA4XGDdEYt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.755 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:37.824Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: new@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi New,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-a30c2d7c-f9c7-4081-af4d-e85824ca7564</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a30c2d7c-f9c7-4081-af4d-e85824ca7564">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a30c2d7c-f9c7-4081-af4d-e85824ca7564</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a30c2d7c-f9c7-4081-af4d-e85824ca7564">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a30c2d7c-f9c7-4081-af4d-e85824ca7564</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 811.582 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:40.136Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f675984e14bc1dd302e3c56ef9ea9ca1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SGHODnNr-NeVAD3py70Z5CSS9EQqY8ft5ofE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f675984e14bc1dd302e3c56ef9ea9ca1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7OcfX5g0Uu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.232 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-7e2ba99c-9da7-4d57-90af-ec0a4657b696 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:40.195Z"}
[0mGET /api/v1/affiliates/AFF-7e2ba99c-9da7-4d57-90af-ec0a4657b696 [32m200[0m 66.570 ms - 495[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:41.050Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bb11a592d747a40f0b5a4c8aee1e91a8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fhybfFTA-4s89Uinfm41qu1eBNOnWK_HXQwA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bb11a592d747a40f0b5a4c8aee1e91a8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GU_FptG8lj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.749 ms - 67[0m
[34mdebug[39m: PUT /api/v1/affiliates/AFF-f9dba1ab-5dbb-4775-bcdd-8ea48748ce07 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:41.109Z"}
[0mPUT /api/v1/affiliates/AFF-f9dba1ab-5dbb-4775-bcdd-8ea48748ce07 [32m200[0m 109.944 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:42.042Z"}
  console.log
    CSRF token generation: {
      sessionID: '9f52a1de2d3023da769945512c61a118',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Cp936k2N-j1hkzX8n7RBYQd1Ju6AqfKhReac

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9f52a1de2d3023da769945512c61a118

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JaVDuD1JhW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.393 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:42.178Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:37:42.333Z","userType":"affiliate","username":"testaffiliate"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.007 ms - 629[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:43.243Z"}
  console.log
    CSRF token generation: {
      sessionID: '9e3f59de59fe2157df802c4d19fd0940',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Bkp4PQF5-Ns8Ife19HetBswZpat53SEs0pnU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9e3f59de59fe2157df802c4d19fd0940

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4Vevu5spIS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.219 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-41eb790c-1d92-4f1a-aa09-06c6fd1b06cc/customers?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:43.372Z"}
[0mGET /api/v1/affiliates/AFF-41eb790c-1d92-4f1a-aa09-06c6fd1b06cc/customers?page=1&limit=10 [32m200[0m 114.315 ms - 689[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:44.254Z"}
  console.log
    CSRF token generation: {
      sessionID: '26356cce0de64f1e1a02652f7ec49c9b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KZTL5v9q-ZSFtkqjrd-BBlz3QQeUGIMXiml0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 26356cce0de64f1e1a02652f7ec49c9b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VEPiOasAB2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.410 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-e2f5f765-d0eb-4091-8ced-c3ecedb323de/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:44.387Z"}
[0mGET /api/v1/affiliates/AFF-e2f5f765-d0eb-4091-8ced-c3ecedb323de/orders?page=1&limit=10 [32m200[0m 111.948 ms - 576[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:45.264Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b3b20d2bb10d61f6978d12b0040e6057',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OYoqRphf-3BHzB4PqDj8Sw12mpfavH6ptYp0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b3b20d2bb10d61f6978d12b0040e6057

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fcgoJBJpjh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.821 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-a130292b-5ae8-4b5b-ab60-ebd8e5c34aa7/transactions?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:45.382Z"}
[0mGET /api/v1/affiliates/AFF-a130292b-5ae8-4b5b-ab60-ebd8e5c34aa7/transactions?page=1&limit=10 [32m200[0m 133.999 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:46.287Z"}
  console.log
    CSRF token generation: {
      sessionID: '6383f0353b06ef5486fc3ef6bef57ded',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GhZk3nHS-79MJLOcmDYrSEzRReSQbbmLwqpE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6383f0353b06ef5486fc3ef6bef57ded

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Lsgkmt3Sdl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.219 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-5b5cba2d-12b7-4734-95de-b4c217d186d0/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:46.450Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-5b5cba2d-12b7-4734-95de-b4c217d186d0/delete-all-data {
      sessionID: '6383f0353b06ef5486fc3ef6bef57ded',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6383f0353b06ef5486fc3ef6bef57ded.WITi2%2Beo5%2BPP9fl3mgF8CQO%2F05maeOuVoewM4xMMQB4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-5b5cba2d-12b7-4734-95de-b4c217d186d0/delete-all-data [32m200[0m 209.878 ms - 191[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:47.576Z"}
  console.log
    CSRF token generation: {
      sessionID: '90718a8d7c281612f9d690a2ccdab8a1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: z69ctkrd-Fi57NiM94K4YecVuLjGPmGHcwWs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 90718a8d7c281612f9d690a2ccdab8a1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CRcSta76bF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.304 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-91202bc1-3504-4ae6-b851-b19d9de33179/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:47.641Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-91202bc1-3504-4ae6-b851-b19d9de33179/delete-all-data {
      sessionID: '90718a8d7c281612f9d690a2ccdab8a1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A90718a8d7c281612f9d690a2ccdab8a1.l%2FR1P%2BJs4exeOdPoh83IHy9k3abLq1t%2B1vTc44dzdmk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-91202bc1-3504-4ae6-b851-b19d9de33179/delete-all-data [33m403[0m 33.839 ms - 59[0m
PASS tests/integration/affiliate.test.js (12.312 s)
  Affiliate API
    ✓ should register a new affiliate (2730 ms)
    ✓ should get affiliate profile (913 ms)
    ✓ should update affiliate profile (992 ms)
    ✓ should login affiliate (1200 ms)
    ✓ should get affiliate's customers list (1012 ms)
    ✓ should get affiliate's orders (1011 ms)
    ✓ should get affiliate's earnings/transactions (1023 ms)
    ✓ Delete all affiliate data (development only) (1289 ms)
    ✓ Reject delete in production environment (892 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.log
    Missing template: order-confirmation.html

      at Object.log (tests/integration/emailService.integration.test.js:226:19)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: 
            <!DOCTYPE html>
            <html>
            <head><title>Test Email</title></head>
            <body>
              <h1>Test Email Template</h1>
              <p></p>
              <p>Reset Link: </p>
              <p>User: </p>
              <p>Email: </p>
            </body>
            </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

PASS tests/integration/emailService.integration.test.js
  Email Service Integration
    Email Service Configuration
      ✓ should load and configure the email service correctly (15 ms)
      ✓ should have all required email functions (23 ms)
    Console Email Provider
      ✓ should log affiliate welcome emails to console (44 ms)
      ✓ should log customer welcome emails to console (25 ms)
      ✓ should log password reset emails to console (34 ms)
    Email Template Verification
      ✓ should verify email templates directory exists (9 ms)
      ✓ should verify essential email templates exist (8 ms)
    Mailcow SMTP Configuration
      ✓ should handle Mailcow SMTP configuration (10 ms)
      ✓ should handle secure Mailcow SMTP on port 465 (10 ms)
    Error Handling
      ✓ should handle missing required fields gracefully (19 ms)
      ✓ should handle invalid email addresses (29 ms)
    Bulk Email Operations
      ✓ should handle multiple email sends efficiently (38 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:50.163Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/w9/check-auth {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.150Z"}
[0mGET /api/v1/w9/check-auth [32m200[0m 98.263 ms - 115[0m
[34mdebug[39m: GET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.256Z"}
[32minfo[39m: OAuth callback - token exchange completed {"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.260Z"}
[0mGET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 [32m200[0m 3.443 ms - -[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.539Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"env_123456","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686c5a4ec9d7dc12932f8d3b","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T23:37:51.666Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 127.055 ms - 139[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/env_123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.710Z"}
[0mGET /api/v1/w9/envelope-status/env_123456 [32m200[0m 221.657 ms - 48[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:51.934Z"}
[32minfo[39m: W9 status updated for affiliate AFF000001: {"details":{"envelopeId":"env_123456","event":"envelope-completed","status":"completed","success":true},"docusignStatus":"completed","envelopeId":"env_123456","performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"system@docusign","userName":"DocuSign System","userType":"system"},"service":"wavemax-affiliate","status":"verified","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T23:37:52.014Z"}
[0mPOST /api/v1/w9/docusign-webhook [32m200[0m 79.999 ms - 70[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:53.315Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[0mPOST /api/v1/w9/initiate-signing [32m200[0m 65.116 ms - 156[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/declined_env {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:54.274Z"}
[0mGET /api/v1/w9/envelope-status/declined_env [32m200[0m 92.793 ms - 49[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:55.294Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"new_env_after_refresh","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686c5a53c9d7dc12932f8dd2","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T23:37:55.398Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 102.529 ms - 143[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:56.269Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Invalid template ID
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Invalid template ID {"service":"wavemax-affiliate","stack":"Error: Invalid template ID\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T23:37:56.330Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 61.054 ms - 79[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:57.608Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Network timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Network timeout {"service":"wavemax-affiliate","stack":"Error: Network timeout\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T23:37:57.668Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 60.432 ms - 75[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:58.543Z"}
[33mwarn[39m: Invalid DocuSign webhook signature {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:58.545Z"}
[0mPOST /api/v1/w9/docusign-webhook [33m401[0m 2.228 ms - 29[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/other_envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:37:59.463Z"}
  console.log
    Envelope mismatch: { expected: undefined, received: 'other_envelope' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

[0mGET /api/v1/w9/envelope-status/other_envelope [33m403[0m 56.950 ms - 24[0m
[34mdebug[39m: GET /api/v1/w9/authorization-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:00.463Z"}
[0mGET /api/v1/w9/authorization-status [32m200[0m 31.740 ms - 65[0m
PASS tests/integration/docusignW9.test.js (12.087 s)
  DocuSign W9 Integration Tests
    Complete W9 Signing Flow
      ✓ should complete full W9 signing flow from authorization to completion (2708 ms)
    Resume Existing Signing Session
      ✓ should resume existing envelope instead of creating new one (975 ms)
    Handle Declined Envelope
      ✓ should reset W9 status when envelope is declined (991 ms)
    Token Refresh Flow
      ✓ should handle expired token and refresh automatically (1027 ms)
    Error Handling
      ✓ should handle DocuSign service errors gracefully (1328 ms)
      ✓ should handle network errors during envelope creation (953 ms)
    Security Tests
      ✓ should reject webhook with invalid signature (876 ms)
      ✓ should prevent accessing another affiliates envelope status (1039 ms)
    Authorization Status Check
      ✓ should verify authorization after OAuth callback (871 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/integration/adminCreation.test.js (6.507 s)
  Admin Creation Integration Tests
    Direct Database Admin Creation
      ✓ should create admin with sequential ID when no admins exist (341 ms)
      ✓ should create admin with next sequential ID when admins exist (375 ms)
      ✓ should handle admin creation with all permissions (225 ms)
      ✓ should handle admin creation with partial permissions (211 ms)
    Admin Model Validation
      ✓ should require email field (166 ms)
      ✓ should save admins with different adminIds successfully (280 ms)
      ✓ should save admins with different emails successfully (305 ms)
    Password Handling
      ✓ should hash password before saving (440 ms)
      ✓ should validate password with verifyPassword method (344 ms)
    Admin Query Operations
      ✓ should find admin by adminId (340 ms)
      ✓ should find admin by email (397 ms)
      ✓ should find active admins only (431 ms)
      ✓ should find admins with specific permissions (345 ms)
      ✓ should get last admin for ID generation (381 ms)
    Email Integration
      ✓ should call email service after admin creation (201 ms)
      ✓ should handle email service failures gracefully (229 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:08.818Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:10.385Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-INT-001',
      affiliateId: 'AFF-INT-001',
      pickupDate: '2025-07-07T23:38:10.382Z',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      specialPickupInstructions: 'First order'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-INT-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-INT-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: Test Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane.smith@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD319343
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> Test Affiliate
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> affiliate@test.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: affiliate@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello Test,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD319343
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Test Ave, Test City, TS 12345
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> First order
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 388.736 ms - 124[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:10.778Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"::ffff:127.0.0.1","method":"POST","newBags":2,"numberOfBags":2,"operatorId":"686c5a623687ccaf92164f5f","orderId":"ORD319343","path":"/orders/weigh-bags","timestamp":"2025-07-07T23:38:11.059Z","totalWeight":35,"userId":"686c5a623687ccaf92164f5f","userRole":"operator"}
[0mPOST /api/v1/operators/orders/weigh-bags [32m200[0m 283.567 ms - -[0m
[34mdebug[39m: GET /api/v1/customers/CUST-INT-001/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:11.067Z"}
[0mGET /api/v1/customers/CUST-INT-001/dashboard [32m200[0m 167.860 ms - 621[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:11.240Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-INT-001',
      affiliateId: 'AFF-INT-001',
      pickupDate: '2025-07-07T23:38:11.239Z',
      pickupTime: 'afternoon',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Second order with credit'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-INT-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Customer already has an active order: ORD319343

      at log (server/controllers/orderController.js:145:15)

[0mPOST /api/v1/orders [33m400[0m 89.208 ms - 187[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:12.921Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-INT-001',
      affiliateId: 'AFF-INT-001',
      pickupDate: '2025-07-07T23:38:12.920Z',
      pickupTime: 'evening',
      estimatedWeight: 40,
      numberOfBags: 1,
      specialPickupInstructions: 'Overestimated weight'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-INT-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-INT-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: Test Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane.smith@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD218172
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Evening (5pm - 8pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $75.00
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> Test Affiliate
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> affiliate@test.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: affiliate@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello Test,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD218172
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Test Ave, Test City, TS 12345
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Evening (5pm - 8pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 40 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Overestimated weight
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 293.579 ms - 122[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:13.218Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"::ffff:127.0.0.1","method":"POST","newBags":1,"numberOfBags":1,"operatorId":"686c5a643687ccaf92164fb6","orderId":"ORD218172","path":"/orders/weigh-bags","timestamp":"2025-07-07T23:38:13.376Z","totalWeight":35,"userId":"686c5a643687ccaf92164fb6","userRole":"operator"}
[0mPOST /api/v1/operators/orders/weigh-bags [32m200[0m 160.843 ms - -[0m
[34mdebug[39m: GET /api/v1/customers/CUST-INT-001/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:13.384Z"}
[0mGET /api/v1/customers/CUST-INT-001/dashboard [32m200[0m 142.900 ms - 620[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:13.530Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-INT-001',
      affiliateId: 'AFF-INT-001',
      pickupDate: '2025-07-07T23:38:13.529Z',
      pickupTime: 'morning',
      estimatedWeight: 20,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-INT-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Customer already has an active order: ORD218172

      at log (server/controllers/orderController.js:145:15)

[0mPOST /api/v1/orders [33m400[0m 92.956 ms - 187[0m
[34mdebug[39m: GET /api/v1/customers/CUST-INT-001/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:14.873Z"}
[0mGET /api/v1/customers/CUST-INT-001/profile [32m200[0m 83.360 ms - 604[0m
[34mdebug[39m: GET /api/v1/orders/search?customerId=CUST-INT-001 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:16.326Z"}
[0mGET /api/v1/orders/search?customerId=CUST-INT-001 [33m403[0m 43.075 ms - 42[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:17.693Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[0mPOST /api/v1/operators/orders/weigh-bags [33m404[0m 66.419 ms - 43[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:19.009Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"::ffff:127.0.0.1","method":"POST","newBags":1,"numberOfBags":1,"operatorId":"686c5a6a3687ccaf92165085","orderId":"ORD-DUP-001","path":"/orders/weigh-bags","timestamp":"2025-07-07T23:38:19.113Z","totalWeight":10,"userId":"686c5a6a3687ccaf92165085","userRole":"operator"}
[0mPOST /api/v1/operators/orders/weigh-bags [32m200[0m 105.235 ms - -[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:19.119Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[0mPOST /api/v1/operators/orders/weigh-bags [33m400[0m 59.342 ms - 106[0m
[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:20.473Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[34mdebug[39m: POST /api/v1/operators/orders/weigh-bags {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:20.481Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"::ffff:127.0.0.1","method":"POST","newBags":1,"numberOfBags":1,"operatorId":"686c5a6c3687ccaf921650ba","orderId":"ORD-CONC-002","path":"/orders/weigh-bags","timestamp":"2025-07-07T23:38:20.659Z","totalWeight":28,"userId":"686c5a6c3687ccaf921650ba","userRole":"operator"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"::ffff:127.0.0.1","method":"POST","newBags":1,"numberOfBags":1,"operatorId":"686c5a6c3687ccaf921650ba","orderId":"ORD-CONC-001","path":"/orders/weigh-bags","timestamp":"2025-07-07T23:38:20.662Z","totalWeight":25,"userId":"686c5a6c3687ccaf921650ba","userRole":"operator"}
[0mPOST /api/v1/operators/orders/weigh-bags [32m200[0m 179.640 ms - -[0m
[0mPOST /api/v1/operators/orders/weigh-bags [32m200[0m 189.317 ms - -[0m
FAIL tests/integration/wdfCreditIntegration.test.js (13.846 s)
  WDF Credit System Integration Tests
    End-to-End WDF Credit Flow
      ✕ should complete full credit cycle: create order → weigh bags → generate credit → apply to next order (3404 ms)
      ✕ should handle debit scenario when actual weight is less than estimated (1958 ms)
    API Response Validation
      ✓ should include WDF credit fields in customer profile (1352 ms)
      ✕ should include WDF credit in order search results (1538 ms)
    Error Handling
      ✓ should handle order not found error when weighing bags (1230 ms)
      ✓ should prevent duplicate bag weighing (1427 ms)
    Concurrent Operations
      ✓ should handle concurrent credit updates correctly (1567 ms)

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      173 |         });
      174 |
    > 175 |       expect(secondOrderRes.status).toBe(201);
          |                                     ^
      176 |       expect(secondOrderRes.body.wdfCreditApplied).toBe(6.25);
      177 |       
      178 |       // Step 5: Verify credit was consumed

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:175:37)

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      246 |         });
      247 |
    > 248 |       expect(secondOrderRes.status).toBe(201);
          |                                     ^
      249 |       expect(secondOrderRes.body.wdfCreditApplied).toBe(-6.25);
      250 |
      251 |       // Verify total includes the debit

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:248:37)

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      299 |         .query({ customerId: testCustomer.customerId });
      300 |
    > 301 |       expect(res.status).toBe(200);
          |                          ^
      302 |       expect(res.body.orders).toHaveLength(1);
      303 |       expect(res.body.orders[0]).toHaveProperty('wdfCreditApplied', 5.00);
      304 |       expect(res.body.orders[0]).toHaveProperty('wdfCreditGenerated', 6.25);

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:301:26)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:22.593Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:24.525Z"}
[0mGET /api/v1/system/config/public [32m200[0m 31.044 ms - 752[0m
[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:26.312Z"}
[0mGET /api/v1/system/config/public [32m200[0m 35.389 ms - 752[0m
[34mdebug[39m: GET /api/v1/system/config/public/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:27.706Z"}
[0mGET /api/v1/system/config/public/wdf_base_rate_per_pound [32m200[0m 28.068 ms - 172[0m
[34mdebug[39m: GET /api/v1/system/config/public/non_existent_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:29.038Z"}
[0mGET /api/v1/system/config/public/non_existent_key [33m404[0m 27.563 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config/public/private_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:30.804Z"}
[0mGET /api/v1/system/config/public/private_key [33m404[0m 33.175 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:32.315Z"}
[0mGET /api/v1/system/config [32m200[0m 60.466 ms - -[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:33.638Z"}
[0mGET /api/v1/system/config [33m401[0m 0.978 ms - 47[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:34.919Z"}
[0mGET /api/v1/system/config [33m403[0m 29.076 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:36.392Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bcbc3dfb2ce2098e248187bc70d58b07',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RV3IgPQK-2e5lS9cnroPopBQeXfRT_gBFGGc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bcbc3dfb2ce2098e248187bc70d58b07

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QHcZ7BPWW1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.487 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:36.516Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'bcbc3dfb2ce2098e248187bc70d58b07',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Abcbc3dfb2ce2098e248187bc70d58b07.9A07xfbBkXi4mq6Tupel4XmuW8QRDFohRRISPSxa%2BsE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [32m200[0m 119.450 ms - 149[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:37.993Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c0b1bae91056a6d47bd8c59edce483d4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zcXmKMQx-PuJrH7OG2GE9B8s7AzMg6ikUbsU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c0b1bae91056a6d47bd8c59edce483d4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: P0NH_Aqh7A...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.896 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:38.114Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'c0b1bae91056a6d47bd8c59edce483d4',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac0b1bae91056a6d47bd8c59edce483d4.%2BGkm7vLNw487RlmGW%2BCyEYJuz9aGPnKDY9LpuKvfP14',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be a number for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:67:21)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 94.181 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:39.500Z"}
  console.log
    CSRF token generation: {
      sessionID: '27ce48ac23da5046f2cad1b550118b7a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Iv2Ywnz6-uaxWgnneeeLdm5R5_Oe8Yb3CmzQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 27ce48ac23da5046f2cad1b550118b7a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: uTq-1f791h...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.319 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:39.670Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '27ce48ac23da5046f2cad1b550118b7a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A27ce48ac23da5046f2cad1b550118b7a.j7x%2F5tstsHahZSJM%2FQx4sML9tzqwBYYvxef%2BKcF9Hfs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be at least 0.5 for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:72:23)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 104.096 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:41.118Z"}
  console.log
    CSRF token generation: {
      sessionID: '9c13c71f73d18fe32b0ecb6baf4407ff',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M6tqoyVz-1yvb2DtraajNx_swRvXVHNOMWqw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9c13c71f73d18fe32b0ecb6baf4407ff

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aBYAPQMnCe...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.052 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/non_editable_config {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:41.294Z"}
  console.log
    CSRF check for: /api/v1/system/config/non_editable_config {
      sessionID: '9c13c71f73d18fe32b0ecb6baf4407ff',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9c13c71f73d18fe32b0ecb6baf4407ff.ljw2KgVwGr6eusEJKWYzDn293pHrEf0Ewrk0tqM4cvc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Configuration is not editable: non_editable_config
        at Function.Object.<anonymous>.systemConfigSchema.statics.setValue (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:140:11)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /var/www/wavemax/wavemax-affiliate-program/server/routes/systemConfigRoutes.js:83:20

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/non_editable_config [33m400[0m 87.534 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:42.677Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f132d5aa3f8f68c09bba3eec912fb868',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8zLporkA-7bEjEc9ycnGtwK-Wxw57jycbCgY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f132d5aa3f8f68c09bba3eec912fb868

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ylwFqOAdPd...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.403 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:42.902Z"}
  console.log
    CSRF token generation: {
      sessionID: '0c53c764630308556c3192ab8100ccd1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hAgs3gCL-c1U6pcD62GCuxZ3pFDfj9TGvL44

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0c53c764630308556c3192ab8100ccd1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fI8mAoBeIi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.580 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:42.915Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '0c53c764630308556c3192ab8100ccd1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0c53c764630308556c3192ab8100ccd1.ekyd%2B6wWUDmX5x%2FN64SUW3cNJqHG8wUv%2BTUQXVXG5ys',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m403[0m 55.407 ms - 78[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:44.332Z"}
  console.log
    CSRF token generation: {
      sessionID: '184228a17027402fadbb4c6df3b3f9d5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uIAKTVyW-Cg1vuhnDZgi7r_wIsLOabtK_x5Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 184228a17027402fadbb4c6df3b3f9d5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bYk9aXUA_y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.386 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:44.374Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: '184228a17027402fadbb4c6df3b3f9d5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A184228a17027402fadbb4c6df3b3f9d5.GI5vCWSTrrMzH8gRfQfKqjq4yQT5oKcY3z6CgPrxWcs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 390.299 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:46.069Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c990b68f6b29251b05f5f6d8b0a8e795',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eub6ar6Y-XR92v8idABuNF3A1-OPIQOpavMk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c990b68f6b29251b05f5f6d8b0a8e795

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BoMGMvJ25z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.024 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:46.144Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'c990b68f6b29251b05f5f6d8b0a8e795',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac990b68f6b29251b05f5f6d8b0a8e795.LpYREDCtjfIkpJhm1h3ur%2BbuH0qyLGOaVhz%2BAWAykpg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 417.056 ms - 48[0m
PASS tests/integration/systemConfig.test.js (27.416 s)
  System Config API Tests
    Public Endpoints
      GET /api/v1/system/config/public
        ✓ should return all public configurations (1945 ms)
        ✓ should not return private configurations (1529 ms)
      GET /api/v1/system/config/public/:key
        ✓ should return a specific public configuration (1275 ms)
        ✓ should return 404 for non-existent config (1414 ms)
        ✓ should return 404 for private config accessed via public endpoint (1883 ms)
    Admin Endpoints
      GET /api/v1/system/config
        ✓ should return all configurations for admin (1326 ms)
        ✓ should return 401 without authentication (1303 ms)
        ✓ should return 403 for non-admin users (1437 ms)
      PUT /api/v1/system/config/:key
        ✓ should update a configuration value (1627 ms)
        ✓ should validate value based on data type (1484 ms)
        ✓ should validate value against min/max constraints (1635 ms)
        ✓ should not allow updating non-editable configs (1588 ms)
        ✓ should require system_config permission (1614 ms)
      POST /api/v1/system/config/initialize
        ✓ should initialize default configurations (1751 ms)
        ✓ should not overwrite existing configurations (1852 ms)
    Integration with Order Model
      ✓ should use SystemConfig WDF rate in new orders (1669 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:50.155Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:52.264Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-317b7f95-72f5-4d2e-8fc3-7de3aa2acb1b

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 114.730 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:54.140Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-7ed810d7-37ad-4801-8174-cb3650b66166

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 95.608 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:55.909Z"}
[0mGET /api/v1/quickbooks/vendors [33m404[0m 55.363 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:57.415Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 123.479 ms - 316[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:38:59.224Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json [32m200[0m 125.409 ms - 961[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:00.859Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m400[0m 29.846 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:02.429Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 [33m404[0m 94.302 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:04.241Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 159.789 ms - 169[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:05.920Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 [33m400[0m 30.636 ms - 81[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:07.365Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 [33m400[0m 56.020 ms - 76[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:09.040Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 [33m404[0m 55.105 ms - 49[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:10.596Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-d74d353b-0ced-4580-a277-d32157758e1e

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 102.194 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:10.704Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 87.908 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:10.797Z"}
[0mGET /api/v1/quickbooks/history [32m200[0m 99.366 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:12.490Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-479afce2-c392-40e4-a116-5b2f65e43a5d

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 95.201 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:12.589Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 128.417 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?type=vendor {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:12.722Z"}
[0mGET /api/v1/quickbooks/history?type=vendor [32m200[0m 144.598 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:14.546Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-d911c258-9cd1-4df8-a120-0827b7ee6ce2

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 99.707 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:14.652Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 80.302 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:14.735Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-e2cc43f2-dc6a-420d-8ebb-c5962b64a7bd

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 100.746 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:14.839Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-ecd73593-703e-4710-9fa2-c0d8a97ca8d0

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 97.021 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:14.939Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-7cfe44a5-616f-4f99-b3e8-c4a58ae16f3b

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 92.434 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:15.034Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-d57d802c-425d-406e-9f8e-5c764c36cc0d

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 97.026 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:15.134Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-2042fa41-7c8b-4e73-811e-70ebb362f211

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 109.990 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?limit=3 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:15.248Z"}
[0mGET /api/v1/quickbooks/history?limit=3 [32m200[0m 88.169 ms - -[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:16.793Z"}
[0mGET /api/v1/quickbooks/vendors [33m401[0m 1.227 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:16.796Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m401[0m 1.025 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:16.799Z"}
[0mGET /api/v1/quickbooks/commission-detail [33m401[0m 0.580 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:16.801Z"}
[0mGET /api/v1/quickbooks/history [33m401[0m 1.265 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:18.287Z"}
  console.log
    Authorization failed for path: /vendors - User role: affiliate Allowed roles: [ 'administrator' ]

      at log (server/middleware/auth.js:227:15)

[0mGET /api/v1/quickbooks/vendors [33m403[0m 40.478 ms - 54[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:19.957Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-c45a135c-0337-494e-8df1-d707c36d4561

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 108.385 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:21.518Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 122.847 ms - 316[0m
PASS tests/integration/quickbooks.test.js (33.463 s)
  QuickBooks Export Integration Tests
    Vendor Export
      ✓ should export verified vendors as CSV (2694 ms)
      ✓ should export vendors as JSON (1617 ms)
      ✓ should handle no verified vendors gracefully (1667 ms)
    Payment Summary Export
      ✓ should export payment summary for date range as CSV (1679 ms)
      ✓ should export payment summary as JSON with correct aggregations (1745 ms)
      ✓ should require date parameters (1540 ms)
      ✓ should handle empty date range (1831 ms)
    Commission Detail Export
      ✓ should export commission details for specific affiliate (1750 ms)
      ✓ should require all parameters (1445 ms)
      ✓ should reject unverified affiliate export (1558 ms)
      ✓ should handle non-existent affiliate (1587 ms)
    Export History
      ✓ should retrieve export history (1965 ms)
      ✓ should filter export history by type (2016 ms)
      ✓ should limit export history results (2282 ms)
    Security and Permissions
      ✓ should require admin authentication for all QuickBooks endpoints (1429 ms)
      ✓ should not allow affiliate access to QuickBooks exports (1574 ms)
    CSV Format Validation
      ✓ should generate QuickBooks-compatible vendor CSV (1702 ms)
      ✓ should generate QuickBooks-compatible payment CSV (1735 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:23.622Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:23.980Z"}
  console.log
    CSRF token generation: {
      sessionID: '89f8587a8efbdad36167a366c87b007d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rumJHNdv-CXDQ-ikhbUtTTobex4dWtZ6EpMw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 89f8587a8efbdad36167a366c87b007d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oc-PhKJgaW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.922 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:24.950Z"}
  console.log
    Creating new customer with email: bob@example.com username: bobjohnson

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-32c55a9b-59fe-47a4-bf8d-f195c5282eac

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: bob@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Bob,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-32c55a9b-59fe-47a4-bf8d-f195c5282eac</p>
            <p><strong>Your Service Provider:</strong> John Doe</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> John Doe<br>
            <strong>Phone:</strong> 555-123-4567<br>
            <strong>Email:</strong> john@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: bob@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-32c55a9b-59fe-47a4-bf8d-f195c5282eac</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Bob Johnson</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>bob@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>555-555-5555</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>789 Pine St, Austin, TX 78703</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-32c55a9b-59fe-47a4-bf8d-f195c5282eac" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 272.413 ms - 297[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:26.445Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b9bd1f84d5dfaa892eb0b8a969324529',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8AtME1pG-wB0OXIiyixlD1qH4E8SI1EIAjTM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b9bd1f84d5dfaa892eb0b8a969324529

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eksKzqN5MZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.955 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:26.730Z"}
[0mPOST /api/v1/customers/register [33m400[0m 29.376 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:27.598Z"}
  console.log
    CSRF token generation: {
      sessionID: '8bed8e4751329d2595c7d22566d24732',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fy6fHEKw-Q0wnUqYB55S63lVWz1Kfthu_8jM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8bed8e4751329d2595c7d22566d24732

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ERDownDKeb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.916 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:27.853Z"}
[0mPOST /api/v1/customers/register [33m400[0m 61.467 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:28.694Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fe1e051c97376361e265930f9c893150',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tXNn6FBw-1KdZWMUCUU6Ce0rjTPMLqBXkFCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fe1e051c97376361e265930f9c893150

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: a0UGLqUA3O...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.347 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:28.950Z"}
[0mPOST /api/v1/customers/register [33m400[0m 55.518 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:29.762Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c6ff2471225ebd66dda51fb185448c18',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XoCGtPWe-a731_bTTrdn8L5DKO6uYlNNFXPU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c6ff2471225ebd66dda51fb185448c18

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -icmOsYe50...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.759 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:30.045Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 95.749 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:31.160Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a23fc8d5fb1836ace06460c6fd0084f7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KSjPVxR9-3kIbsoVa6bQLsbKiWOl5YXXnLbw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a23fc8d5fb1836ace06460c6fd0084f7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Ya4qV32Hsx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.659 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:31.455Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 86.629 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:32.302Z"}
  console.log
    CSRF token generation: {
      sessionID: '436a5b7d48a1b7b636730fc428290c13',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 95gJZXZY-oBKPDzdiIqYubSgvw8HvrqNowyY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 436a5b7d48a1b7b636730fc428290c13

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tPGv2IOu8Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.319 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:32.562Z"}
[0mGET /api/v1/customers/CUST123/profile [33m403[0m 70.883 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:33.427Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e3fde8ad4fe26687b92a2ad9f6040ff5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3qpiH57w-HU3weMJ28_08_sRn7iCp4JcCgpU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e3fde8ad4fe26687b92a2ad9f6040ff5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VYCpu1l7OR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.068 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:33.719Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 57.369 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:34.525Z"}
  console.log
    CSRF token generation: {
      sessionID: '310ff4ad68a54bf3a788fb4e3fb4d5d3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7ZOEz2mr-pwBvfD9F4Dj3ZLQkBR-Nhy6uEgo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 310ff4ad68a54bf3a788fb4e3fb4d5d3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kMnVjf7wtQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.243 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:34.847Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 122.258 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:35.915Z"}
  console.log
    CSRF token generation: {
      sessionID: '246d76d0ac33ed2a6514625cb7132a33',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: CcOBE101-qQ0utJ0zzXBaeqk5Ryur4Jjk0SU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 246d76d0ac33ed2a6514625cb7132a33

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8WCQYD6UiA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.219 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:36.188Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 81.037 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:37.056Z"}
  console.log
    CSRF token generation: {
      sessionID: '5809ce18de982b5d992b748240e7dfb3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xns6YqUg-uXhI5hc8R-QIErz8clwKT7A-yvw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5809ce18de982b5d992b748240e7dfb3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1QFGvygu1Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.021 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:37.384Z"}
[0mGET /api/v1/customers/CUST123/orders?page=1&limit=10 [32m200[0m 109.450 ms - 603[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:38.284Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a7cba8a478a38c49b57c59f4bfa56dac',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rRBO5Be0-eemDryz57H4BrdOak4Q_UOsysMA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a7cba8a478a38c49b57c59f4bfa56dac

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fq2wbOSYQc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.272 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?status=complete {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:38.618Z"}
[0mGET /api/v1/customers/CUST123/orders?status=complete [32m200[0m 108.322 ms - 365[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:39.593Z"}
  console.log
    CSRF token generation: {
      sessionID: '240ea683b5ebfaca2becd5eabcb524b0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: u7JfcYZu-bwFynzUTL1cT0HZ3wqpnJH2jbuE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 240ea683b5ebfaca2becd5eabcb524b0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yoQLuKQvbf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.038 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:39.892Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '240ea683b5ebfaca2becd5eabcb524b0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A240ea683b5ebfaca2becd5eabcb524b0.VnfHBAWC4P63aYqiNrGWvI8PG5ZxZBaDy1Qb87marAg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [32m200[0m 332.111 ms - 58[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:40.230Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 156.543 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:41.257Z"}
  console.log
    CSRF token generation: {
      sessionID: '8b17ea46f0d9d47889b85546d95cfc64',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gzwTCrAB-Qf3b7PposQFdmjdv3YPkuqi-Mkc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8b17ea46f0d9d47889b85546d95cfc64

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4OkUcAFctv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.716 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:41.532Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '8b17ea46f0d9d47889b85546d95cfc64',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8b17ea46f0d9d47889b85546d95cfc64.EkS0qumX1bDybzpZcEA2qsBv%2FFY4FH5D7H%2BcGXz0%2Fp8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m401[0m 118.851 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:42.449Z"}
  console.log
    CSRF token generation: {
      sessionID: '66b33b83997a069312a5f37116c765b9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Q50Cjul5-t0jbXBrrRc79MWjK661C07nZmCE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 66b33b83997a069312a5f37116c765b9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: C4QdCOYoYE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.304 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:42.752Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '66b33b83997a069312a5f37116c765b9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A66b33b83997a069312a5f37116c765b9.iBPe%2FqQqDJOnfoeqgZZbqX3clbmeZ6cgvSJWKszwtWw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m400[0m 112.435 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:43.611Z"}
  console.log
    CSRF token generation: {
      sessionID: '4d671e8bbf2d446c911796d619d62012',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RoNkIvJ8-6kjH9v5a4UQyrrVLDlm84lHdoRE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4d671e8bbf2d446c911796d619d62012

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LmU24LkxQ9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.178 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:43.937Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 138.611 ms - 889[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:44.917Z"}
  console.log
    CSRF token generation: {
      sessionID: '1e8eac1a22c8543fb243ffd8f0fabefa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: FZKbNzBA-mBeXX2S-BH0UAgYQhfXJgj-rHDc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1e8eac1a22c8543fb243ffd8f0fabefa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q6n11ih73_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.678 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:45.247Z"}
[0mGET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true [32m200[0m 135.888 ms - 889[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:46.149Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f20e16b80080aba297a40bd631fd5db1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1SxENWaU-Vhf6CYVLRgGfQzLnThq5iy1kupY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f20e16b80080aba297a40bd631fd5db1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0oWCpXo2VX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.532 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:46.453Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 135.279 ms - 889[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:47.356Z"}
  console.log
    CSRF token generation: {
      sessionID: '59661e6979d4bc772837b0de40532e83',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Yrkql3wR-nUQXmH0lre8_RIvDXHuIR8ZAFTs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 59661e6979d4bc772837b0de40532e83

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Da4k63WULQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.422 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:47.734Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: '59661e6979d4bc772837b0de40532e83',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A59661e6979d4bc772837b0de40532e83.XR5kPn1Ex12l7Mk3hftk%2FR0OTXSIRM2RGa4T6EeZ5VM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [32m200[0m 148.673 ms - 107[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:48.905Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd5820ac63b848915e3bc13946a0eeb35',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nwIFPrSn-tdQyG3PwUy8TS0BIma_ryAIVbSk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d5820ac63b848915e3bc13946a0eeb35

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: T6h_HA0eQC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.721 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:49.185Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'd5820ac63b848915e3bc13946a0eeb35',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad5820ac63b848915e3bc13946a0eeb35.jSwVzm6dJfiwhVI5R3RWbGW3b6g0o15hVFVFHUmkLAs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 36.663 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:50.027Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fb054582307cdd25f5b34a9dbd3cfd3e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6BrOmnRR-oPcMBrHhvxBZEizhwD3l3X2taac

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fb054582307cdd25f5b34a9dbd3cfd3e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8mI8pnT1h4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.474 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:50.399Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'fb054582307cdd25f5b34a9dbd3cfd3e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afb054582307cdd25f5b34a9dbd3cfd3e.E7NHhDq%2FGz0lNNudUh0pm6MvZ4RrPrnerlkxbkoaxwk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 30.138 ms - 63[0m
PASS tests/integration/customer.test.js (28.633 s)
  Customer Integration Tests
    POST /api/v1/customers/register
      ✓ should register a new customer (2478 ms)
      ✓ should fail with invalid affiliate ID (1153 ms)
      ✓ should fail with duplicate email (1095 ms)
      ✓ should fail with duplicate username (1069 ms)
    GET /api/v1/customers/:customerId/profile
      ✓ should return customer profile for authenticated customer (1397 ms)
      ✓ should return customer profile for affiliate (1143 ms)
      ✓ should fail for unauthorized customer (1125 ms)
      ✓ should return limited data without authentication (1097 ms)
    PUT /api/v1/customers/:customerId/profile
      ✓ should update customer profile (1389 ms)
      ✓ should not update protected fields (1140 ms)
    GET /api/v1/customers/:customerId/orders
      ✓ should return customer orders with pagination (1227 ms)
      ✓ should filter orders by status (1309 ms)
    PUT /api/v1/customers/:customerId/password
      ✓ should update customer password (1664 ms)
      ✓ should fail with incorrect current password (1192 ms)
      ✓ should fail with weak new password (1162 ms)
    GET /api/v1/customers/:customerId/dashboard
      ✓ should return customer dashboard statistics (1306 ms)
      ✓ should return monthly statistics (1232 ms)
      ✓ should allow affiliate to view customer dashboard (1206 ms)
    DELETE /api/v1/customers/:customerId/delete-all-data
      ✓ should delete all customer data in development environment (1549 ms)
      ✓ should reject deletion in production environment (1122 ms)
      ✓ should reject unauthorized deletion (1237 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:52.198Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:54.145Z"}
  console.log
    CSRF token generation: {
      sessionID: '87e85f93b61984e1e254fa4deee18067',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WzDa3r9X-vfqGL6KtMQt6X_25rsPdZUSPOgo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 87e85f93b61984e1e254fa4deee18067

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: agqKm_anRn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.675 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:54.270Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 274.439 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:54.721Z"}
[0mGET /api/v1/administrators [32m200[0m 168.118 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:55.987Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b34d730d909f723ce1f042064ba5aae4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0122LIXy-dpUQGQ8LViB3R0urkP0wSE8rPAQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b34d730d909f723ce1f042064ba5aae4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Ldc_0VQEIx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.429 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:56.092Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.842 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:56.334Z"}
[0mGET /api/v1/administrators?active=true [32m200[0m 108.829 ms - 376[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:57.309Z"}
  console.log
    CSRF token generation: {
      sessionID: '481b66eb6fed56f68664b8b85107710f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: K2k2fGwe-l0hjpPv3TXB5Xal3AD8RHZwWXyk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 481b66eb6fed56f68664b8b85107710f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: H-A4PGBg6q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.914 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:57.412Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 183.168 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:39:58.567Z"}
[0mGET /api/v1/administrators?page=2&limit=5 [32m200[0m 137.478 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:00.316Z"}
  console.log
    CSRF token generation: {
      sessionID: '4c3484c70fbae4fea2aeeaf3438b2f4c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ppJVhQHZ-AbplAj_v-IH_0kzjcbuVgAx-YVI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4c3484c70fbae4fea2aeeaf3438b2f4c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: wGnvCNtgU5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.643 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:00.429Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.073 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:00.579Z"}
[0mGET /api/v1/administrators [33m401[0m 1.109 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:01.553Z"}
  console.log
    CSRF token generation: {
      sessionID: '523c9c9a8586a5e63ad8a59663b8e0d2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Tg2F5P9u-eC8pHiBo03NSCjLaMLLN_KSJXxE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 523c9c9a8586a5e63ad8a59663b8e0d2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -o4P2Usjq7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 19.560 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:01.678Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.773 ms - 615[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:01.938Z"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.499 ms - 555[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:02.097Z"}
[0mGET /api/v1/administrators [33m403[0m 33.962 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:03.577Z"}
  console.log
    CSRF token generation: {
      sessionID: '3298ba2736602e3f0af9e99a4b1b20e5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WzgpRG4w-oWAReaq7BYm64XBAEuX54x8UvRs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3298ba2736602e3f0af9e99a4b1b20e5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Pxve3iQt90...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.056 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:03.678Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 241.438 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686c5ad3878900594e815689 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:04.095Z"}
[0mGET /api/v1/administrators/686c5ad3878900594e815689 [32m200[0m 110.194 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:05.550Z"}
  console.log
    CSRF token generation: {
      sessionID: '2bef28bd758a9e3b3bf7a2ca8a259d1f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8Hzu9j7i-jg9bP-MpOBwj99w7QHDTIKW0dg0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2bef28bd758a9e3b3bf7a2ca8a259d1f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Q1A5H1-v8N...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.233 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:05.644Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.295 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686c5ad5878900594e8156b4 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:05.795Z"}
[0mGET /api/v1/administrators/686c5ad5878900594e8156b4 [33m404[0m 86.772 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:06.749Z"}
  console.log
    CSRF token generation: {
      sessionID: '318f72ebab57e2a31476bc4cdfbed844',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XsumtA45-klOeTlHb4Lm49w8LjLvgfgknWts

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 318f72ebab57e2a31476bc4cdfbed844

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lA7hImgOLs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.644 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:06.873Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.874 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/invalid-id {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:07.037Z"}
[0mGET /api/v1/administrators/invalid-id [33m400[0m 57.209 ms - 54[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:07.987Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fc2843e02fb40de2d625b7777098fab6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1UC62qM0-o57_M8hEBkMMhQQGtsuFX1ovLYo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fc2843e02fb40de2d625b7777098fab6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yaQ31WVYBN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.524 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:08.082Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.042 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:08.236Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'fc2843e02fb40de2d625b7777098fab6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afc2843e02fb40de2d625b7777098fab6.K7KPLnXKlC5xUMKVjmIDBkBtv9VO7WJ0eJp16S%2FTg6c',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [32m201[0m 203.578 ms - 329[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:08.444Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.692 ms - 677[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:09.717Z"}
  console.log
    CSRF token generation: {
      sessionID: '13c76ddf4403f09a2a2cc9b3ee56871d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4Wggg27W-45MkQlg2-05R6KTum5CGYwlGGLQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 13c76ddf4403f09a2a2cc9b3ee56871d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: SYmVRjYUys...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.112 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:09.821Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.545 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:09.986Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '13c76ddf4403f09a2a2cc9b3ee56871d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A13c76ddf4403f09a2a2cc9b3ee56871d.ZR%2BIJpkRjPHkNP6I7%2BBhGB4YFksL1YGfEsk%2Bwbn4chQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 66.573 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:10.994Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ce6a2edbff4be50031fecbf20e5468fd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WnJ4jGjF-DUIYwhkmTMIG33vT1uv8Ogj7Z3c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ce6a2edbff4be50031fecbf20e5468fd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: a1ajnVfBaQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.036 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:11.091Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.225 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:11.266Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'ce6a2edbff4be50031fecbf20e5468fd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ace6a2edbff4be50031fecbf20e5468fd.jOB%2ByOADqXYluIAvlQnQLCccXidkj1RxRqXEpfQlsqs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 56.932 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:12.232Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ce589b72de05518ad1fbe096ae9cd9a1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kJtLWvs5--HFW8DfuKeseQ6gfgFiQNaPIhSw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ce589b72de05518ad1fbe096ae9cd9a1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EKGy9TCW8C...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.583 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:12.329Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.805 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:12.484Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'ce589b72de05518ad1fbe096ae9cd9a1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ace589b72de05518ad1fbe096ae9cd9a1.T61WbO3JKtCtqqggAq5AL1PTbPtybArQJZGZUfLKoBo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 56.908 ms - 204[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:13.395Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f627300bacdfa3461d4f871178707335',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Rw1vKCjk-8naJcTsU_nTYyDsEycmxMf3NnDk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f627300bacdfa3461d4f871178707335

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7YtloUlZVG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.574 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:13.502Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.222 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:13.661Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'f627300bacdfa3461d4f871178707335',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af627300bacdfa3461d4f871178707335.Nq%2BLswc%2FKmER0SJwrxE5DWB%2BPHe8fSJLZ0FuE9Oqe1Q',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m409[0m 109.134 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:14.810Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c49de8ca0a896f30cd9c2a72c0707a77',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LO7hLKka-r6pPBrBCDEp_kINnFnlkhZaATwU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c49de8ca0a896f30cd9c2a72c0707a77

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7w5GxLiTPY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.695 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:14.906Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.121 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:15.163Z"}
  console.log
    CSRF token generation: {
      sessionID: '011c0d6130bd68ffb72dda28745cb7f2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4dpeAhvK-5Oy76vxIMFjfAP5dBIV1SjDxL78

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 011c0d6130bd68ffb72dda28745cb7f2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7Gn3CGkurx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.558 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:15.172Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.936 ms - 649[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:15.343Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '011c0d6130bd68ffb72dda28745cb7f2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A011c0d6130bd68ffb72dda28745cb7f2.Z5ksYHgGGMe7VcRfNMvvdv3X%2F30xCSYdIxvYU7WitXo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m403[0m 63.477 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:16.317Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e037a6a59e3178ed7694f0f1943bb5d1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UbH3Z1zf-7Uzy6VuNwTmOY_SNRVm0jDheBoE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e037a6a59e3178ed7694f0f1943bb5d1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kZ2XktmIMA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.269 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:16.419Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.091 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae0878900594e815805 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:16.704Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae0878900594e815805 {
      sessionID: 'e037a6a59e3178ed7694f0f1943bb5d1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae037a6a59e3178ed7694f0f1943bb5d1.9ypReUWLaXxmGPGmVaXkVjKxD%2FHdEeb2YuBW20oV%2Baw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae0878900594e815805 [32m200[0m 95.850 ms - 337[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:17.724Z"}
  console.log
    CSRF token generation: {
      sessionID: '5e646ea04e85853b971b634e1872d454',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cKPD4GLk-LYNC6kmgjjTrxo-VJWNE2JcOj7A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5e646ea04e85853b971b634e1872d454

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: K-Hpwv0FUQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.214 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:17.832Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 261.651 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae2878900594e815830 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:18.224Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae2878900594e815830 {
      sessionID: '5e646ea04e85853b971b634e1872d454',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5e646ea04e85853b971b634e1872d454.bPUs%2BtNi0COWTT%2FB%2FzE69Je1eQsWcmyz23opPSOr1Po',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae2878900594e815830 [32m200[0m 131.257 ms - 318[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:19.290Z"}
  console.log
    CSRF token generation: {
      sessionID: '86c5fed598213bf946366abe0b1a7342',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EgP4sW9p-NK_8RggGA36xIKvfjx8GvKsM_Ds

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 86c5fed598213bf946366abe0b1a7342

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JwcLP4lcJs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.762 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:19.423Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.370 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae3878900594e81585c {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:19.681Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae3878900594e81585c {
      sessionID: '86c5fed598213bf946366abe0b1a7342',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A86c5fed598213bf946366abe0b1a7342.%2B3hV2UaO8hY1G7I9BnBkFLwpU0Up4rfPu%2Fk0dgE6iRQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae3878900594e81585c [32m200[0m 157.208 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:19.845Z"}
  console.log
    CSRF token generation: {
      sessionID: '720dc39c1468f089b40978cb6c031da4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: daTxUwcc-eBzwaeTiMx-fCnXdE9VqQwdQOvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 720dc39c1468f089b40978cb6c031da4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BYiXhve_pa...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.120 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:19.855Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.580 ms - 645[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:20.934Z"}
  console.log
    CSRF token generation: {
      sessionID: '59d77efb3da93ba176c0443ec3933131',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rDtwJ5c2-gnmYwylNGvZRUodVwCJ4zL0_p30

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 59d77efb3da93ba176c0443ec3933131

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1e_WL9waGs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.872 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:21.045Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.261 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae5878900594e81588b {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:21.298Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae5878900594e81588b {
      sessionID: '59d77efb3da93ba176c0443ec3933131',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A59d77efb3da93ba176c0443ec3933131.mbUMbxLwFFtvzNEplLd9jjJZ4x%2BogWWziTESzum6P7k',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae5878900594e81588b [32m200[0m 93.496 ms - 317[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:21.395Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 27.978 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:22.306Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eba8413b8478ab49661952dc5a6c74cd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: a82uWYHY-w0A7n55Z9qWs4k4KK2HjzRQApSI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: eba8413b8478ab49661952dc5a6c74cd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: m9oKa7Ou5t...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.580 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:22.408Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 176.642 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae6878900594e8158b7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:22.675Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae6878900594e8158b7 {
      sessionID: 'eba8413b8478ab49661952dc5a6c74cd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aeba8413b8478ab49661952dc5a6c74cd.L3T1xa5%2B3xHDFuiWI3cW7znwv3%2FF1mF1eXmFt%2FRZYD0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae6878900594e8158b7 [32m200[0m 114.838 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:23.677Z"}
  console.log
    CSRF token generation: {
      sessionID: '6b28db96952c4d0064e012fa741e4e93',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: POJbh8aN-7A1VoqLnJPow_1B8HsnR90Zu1Zg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6b28db96952c4d0064e012fa741e4e93

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: qwVbMce7-S...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.916 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:23.833Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.414 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae8878900594e8158e2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:24.088Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae8878900594e8158e2 {
      sessionID: '6b28db96952c4d0064e012fa741e4e93',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6b28db96952c4d0064e012fa741e4e93.Tk9AjKtdDPFcsnFyp%2F3N%2BE5OFvQUCFbNN14tm1XihQs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae8878900594e8158e2 [33m409[0m 90.194 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:25.057Z"}
  console.log
    CSRF token generation: {
      sessionID: '8cd1db9d0aa22a8b0794d1bd6d32fb03',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IwbXIGRg-srEHPIg2LBZh4JWM-WFk4maYwl8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8cd1db9d0aa22a8b0794d1bd6d32fb03

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: slKZgxqdEl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.278 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:25.161Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.234 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5ae9878900594e815907 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:25.417Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5ae9878900594e815907 {
      sessionID: '8cd1db9d0aa22a8b0794d1bd6d32fb03',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8cd1db9d0aa22a8b0794d1bd6d32fb03.WniSLtAemraQJYU7U0v54jyHxmh0TRRm6cuhOeO%2F1Lg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5ae9878900594e815907 [33m400[0m 56.670 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:26.348Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ec2e856a9109d26153385b13d302d873',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YY76WzWE--hr5iTqqyO8mNfvOlBwgquJUK_Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ec2e856a9109d26153385b13d302d873

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vmbByLSS0P...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.656 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:26.452Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 186.774 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:26.874Z"}
  console.log
    CSRF token generation: {
      sessionID: '911b3e7c2040dcd04ebc3220c51c027d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YsPzdgLa-oEIu6PhxWYPnooXyRrzsxawBFMg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 911b3e7c2040dcd04ebc3220c51c027d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tHrjXcPqRB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.968 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:26.886Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 164.138 ms - 650[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c5aea878900594e815937 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:27.053Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5aea878900594e815937 {
      sessionID: '911b3e7c2040dcd04ebc3220c51c027d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A911b3e7c2040dcd04ebc3220c51c027d.S9mWE8tD5plvGlWbP9QwfDJcU6Qqg7pkUGTxLni4Fr8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c5aea878900594e815937 [33m403[0m 61.824 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:28.050Z"}
  console.log
    CSRF token generation: {
      sessionID: '27adec5ff146473243193867405d3956',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: f5awGb2L-WroGDJXho5zcTHvuWTy2ABnscXE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 27adec5ff146473243193867405d3956

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HENprLqTn7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.074 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:28.182Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 183.564 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c5aec878900594e815967 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:28.465Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5aec878900594e815967 {
      sessionID: '27adec5ff146473243193867405d3956',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A27adec5ff146473243193867405d3956.%2BeGpwKpPY8SjsUwb0CA4P9lUlhD9TgQU2T0XwLTie4E',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c5aec878900594e815967 [32m200[0m 128.144 ms - 63[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:29.507Z"}
  console.log
    CSRF token generation: {
      sessionID: '91542acc99955cc98ac06cf0fa124920',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GIHMhC5Z-LH-lU36TH6-KRJyVvOgLCJBeZ5o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 91542acc99955cc98ac06cf0fa124920

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8aNgIMisGf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.307 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:29.610Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.124 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c5aed878900594e81598e {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:29.870Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5aed878900594e81598e {
      sessionID: '91542acc99955cc98ac06cf0fa124920',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A91542acc99955cc98ac06cf0fa124920.sZ4pPexbRnjhANOEaFJSyFnO6THzlSDSw4wwYP2SY5o',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c5aed878900594e81598e [33m400[0m 59.354 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:30.838Z"}
  console.log
    CSRF token generation: {
      sessionID: '9d4a6d8010ce48268b8c97812366795d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uLY6Cfyu-6cUOyFXAmH8FTRkOJ5jcUHMzqaA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9d4a6d8010ce48268b8c97812366795d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UIv4XQImwJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.828 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:30.943Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.700 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c5aee878900594e8159b8 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:31.228Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5aee878900594e8159b8 {
      sessionID: '9d4a6d8010ce48268b8c97812366795d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9d4a6d8010ce48268b8c97812366795d.TEfVubX4ATEu3%2Bw8UlAg8uJk0w6rnXWpdagaWNR4q1Q',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c5aee878900594e8159b8 [33m400[0m 91.919 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:32.381Z"}
  console.log
    CSRF token generation: {
      sessionID: '466e06c74bc32cf2817769310f816509',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Icy0uExE-mPHjz_WdrxB_MbC9PwXuYo-FnnY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 466e06c74bc32cf2817769310f816509

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3L780ZPeEG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.457 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:32.475Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.486 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:32.845Z"}
  console.log
    CSRF token generation: {
      sessionID: '65bc4e8bda09def9383a5dd64f3b4347',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: u4KRduW6-mh71qipZMYgJBgYCtqUEuQiqSCY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 65bc4e8bda09def9383a5dd64f3b4347

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5em3qtJXxf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.097 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:32.859Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.524 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c5af0878900594e8159e9 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:33.021Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af0878900594e8159e9 {
      sessionID: '65bc4e8bda09def9383a5dd64f3b4347',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A65bc4e8bda09def9383a5dd64f3b4347.IQtiS8oUP%2FQ4bSQPtX4lsHFtXmO%2FOmFKDgdWq41eRDo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c5af0878900594e8159e9 [33m403[0m 57.230 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:34.006Z"}
  console.log
    CSRF token generation: {
      sessionID: '916a595dce12512c42a7a5dc2e04d981',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Oy1owNGl-LVau9Sv36GOJz8wSwqc8rEoMpbU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 916a595dce12512c42a7a5dc2e04d981

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VWFi15k73O...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.272 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:34.109Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 169.172 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c5af2878900594e815a1b {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:34.364Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af2878900594e815a1b {
      sessionID: '916a595dce12512c42a7a5dc2e04d981',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A916a595dce12512c42a7a5dc2e04d981.%2Fv7govYS%2BbIdBkuhnV7kwNfqbyRumN1UCw6TtCaoWUw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c5af2878900594e815a1b [33m404[0m 118.431 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:35.358Z"}
  console.log
    CSRF token generation: {
      sessionID: '24d609470d1afa3373abe5ff3e8a5bee',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pPlWdU7X-utqiHEZu_XmC1q2tbOgiAmYH4Ak

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 24d609470d1afa3373abe5ff3e8a5bee

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -MW8rYP2UQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.537 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:35.467Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.935 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c5af3878900594e815a46/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:35.734Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af3878900594e815a46/reset-password {
      sessionID: '24d609470d1afa3373abe5ff3e8a5bee',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A24d609470d1afa3373abe5ff3e8a5bee.iqit51CxiCc17GSTZxVp%2By%2BEYvBbnJ5V1MgtI%2F%2BroyA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c5af3878900594e815a46/reset-password [32m200[0m 212.477 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:35.953Z"}
  console.log
    CSRF token generation: {
      sessionID: '0281451516bf951ab9ca39ec4d07ad0f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LA42blvu-T87V1hCxH7JKRfO1xtumBOI5QeE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0281451516bf951ab9ca39ec4d07ad0f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4RSbEg1Qkp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.226 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:35.962Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 248.540 ms - 644[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:36.213Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd9126b1cbd29796137ac86382c364f45',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uWICHNwG-wmtVcoPLN1GZnIJA68RD-8CI2jU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d9126b1cbd29796137ac86382c364f45

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hXjxB6d_jk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.772 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:36.223Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 164.823 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:37.804Z"}
  console.log
    CSRF token generation: {
      sessionID: '389f96664d1fa6c975eb3be62c4a3e62',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bPNv086r-6Na0cgZuYSe4_hx9o-viLN-mm4E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 389f96664d1fa6c975eb3be62c4a3e62

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cbLJXjRNp4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.498 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:37.901Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.666 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c5af6878900594e815a78/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:38.214Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af6878900594e815a78/reset-password {
      sessionID: '389f96664d1fa6c975eb3be62c4a3e62',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A389f96664d1fa6c975eb3be62c4a3e62.xtG46Yl%2FmhngvgSm3nypZkJQ2Qha9rz%2BZZJEPF9Fp88',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c5af6878900594e815a78/reset-password [32m200[0m 186.676 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:39.333Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f75c69fc925d0f231c432cc602a6d2a5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gSai1yGt-h0R0VH-KLMLaCsHBTF2a29k0Qvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f75c69fc925d0f231c432cc602a6d2a5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JPdsnsGQ38...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.504 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:39.454Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.088 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c5af7878900594e815aa6/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:39.698Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af7878900594e815aa6/reset-password {
      sessionID: 'f75c69fc925d0f231c432cc602a6d2a5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af75c69fc925d0f231c432cc602a6d2a5.8RXFmHTtQ%2Fxixay7CmhagWnnjTGho5puA%2BjtedaadpM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c5af7878900594e815aa6/reset-password [33m400[0m 57.403 ms - 313[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:40.631Z"}
  console.log
    CSRF token generation: {
      sessionID: '7098e5c3e2b6a604b788dd50ccc3674d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: j2a4yeJl-RjsIG6utuD9hTEzp7lR7n8aWV5Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7098e5c3e2b6a604b788dd50ccc3674d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1nn8dRtYV9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.822 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:40.732Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.006 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:41.092Z"}
  console.log
    CSRF token generation: {
      sessionID: '1a98eb3f591cef8ce89c3ca122c1b8ce',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iNZqcTh4-xZGyEW0vH1Br8__MyfPi96Q2xE4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1a98eb3f591cef8ce89c3ca122c1b8ce

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Sgv9LbOoXA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.142 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:41.106Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.127 ms - 650[0m
[34mdebug[39m: POST /api/v1/administrators/686c5af8878900594e815ad0/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:41.301Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c5af8878900594e815ad0/reset-password {
      sessionID: '1a98eb3f591cef8ce89c3ca122c1b8ce',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1a98eb3f591cef8ce89c3ca122c1b8ce.QEeZvqYPgcHzAgF6LM%2FyRCx7xgykdjp0YXolhusgfs0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c5af8878900594e815ad0/reset-password [33m403[0m 65.622 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:42.341Z"}
  console.log
    CSRF token generation: {
      sessionID: '6e129080e5241cd833015aeed102ff8d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BMhDeA0U-3V5qs4RjE31MrSWN1Gsx2y1aeCg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6e129080e5241cd833015aeed102ff8d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FFzvzz1ExL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.627 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:42.444Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.372 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:42.601Z"}
[0mGET /api/v1/administrators/permissions [32m200[0m 27.886 ms - 361[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:43.532Z"}
  console.log
    CSRF token generation: {
      sessionID: '24feb29217eae6b3be18d0fe2204ff36',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xGOtoXK7-8f5Np0B9DAGOzUokVlkTFsS2CqY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 24feb29217eae6b3be18d0fe2204ff36

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ldZL7ZiXv8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.006 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:43.636Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.730 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:43.794Z"}
[0mGET /api/v1/administrators/permissions [33m401[0m 3.383 ms - 47[0m
PASS tests/integration/administrator.test.js (53.316 s)
  Administrator Integration Tests
    GET /api/v1/administrators
      ✓ should get all administrators with admin token (3165 ms)
      ✓ should filter by active status (1320 ms)
      ✓ should support pagination (2999 ms)
      ✓ should require admin authentication (1242 ms)
      ✓ should require administrator permissions (1920 ms)
    GET /api/v1/administrators/:id
      ✓ should get administrator by ID (2074 ms)
      ✓ should return 404 for non-existent administrator (1197 ms)
      ✓ should handle invalid ObjectId (1230 ms)
    POST /api/v1/administrators
      ✓ should create new administrator (1707 ms)
      ✓ should validate required fields (1304 ms)
      ✓ should validate email format (1248 ms)
      ✓ should validate password strength (1164 ms)
      ✓ should prevent duplicate emails (1407 ms)
      ✓ should require administrators.create permission (1515 ms)
    PATCH /api/v1/administrators/:id
      ✓ should update administrator details (1404 ms)
      ✓ should update email (1559 ms)
      ✓ should update password (1648 ms)
      ✓ should deactivate administrator (1367 ms)
      ✓ should not allow updating adminId (1374 ms)
      ✓ should validate email uniqueness on update (1376 ms)
      ✓ should prevent self-deactivation (1300 ms)
      ✓ should require administrators.update permission (1655 ms)
    DELETE /api/v1/administrators/:id
      ✓ should delete administrator (1500 ms)
      ✓ should prevent self-deletion (1328 ms)
      ✓ should prevent deleting last administrator with all permissions (1530 ms)
      ✓ should require administrators.delete permission (1638 ms)
      ✓ should handle non-existent administrator (1356 ms)
    POST /api/v1/administrators/:id/reset-password
      ✓ should reset administrator password (2422 ms)
      ✓ should clear login attempts on password reset (1540 ms)
      ✓ should validate password strength (1311 ms)
      ✓ should require administrators.update permission (1709 ms)
    GET /api/v1/administrators/permissions
      ✓ should get available permissions list (1178 ms)
      ✓ should require authentication (1179 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:45.483Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:46.986Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b0d20f907f413211ee430a1ff78c9c69',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IT5VMyWm-LHhV7Gy2dKVyiX6grIs0IXemcrQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b0d20f907f413211ee430a1ff78c9c69

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NddkOw_gLf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.780 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:46.999Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 7.678 ms - 148[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.014Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.885 ms - 241[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: weak, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.027Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.041 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.031Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.250 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.035Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.233 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.037Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.267 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: 12345678, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.041Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.248 ms - 191[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.044Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.261 ms - 284[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: Password1, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.048Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.384 ms - 163[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.051Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.275 ms - 256[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.055Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.195 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.057Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.145 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: ALLUPPERCASE123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.061Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.166 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.064Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.227 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: alllowercase123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.068Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.771 ms - 152[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.071Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.235 ms - 245[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoNumbers!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.075Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.162 ms - 199[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:47.078Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.150 ms - 292[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoSpecialChars123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.140Z"}
  console.log
    CSRF token generation: {
      sessionID: '9500a7bf2bba60ad01b3095351e3808b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JAXHAON0-Y2pHgkkrvknqXkHmIQTFtwvfkNI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9500a7bf2bba60ad01b3095351e3808b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fnGlZLy6HL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.033 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.151Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-ef7c9b23-56d6-407a-91f3-7a45f89e18c5</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-ef7c9b23-56d6-407a-91f3-7a45f89e18c5">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-ef7c9b23-56d6-407a-91f3-7a45f89e18c5</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-ef7c9b23-56d6-407a-91f3-7a45f89e18c5">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-ef7c9b23-56d6-407a-91f3-7a45f89e18c5</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 136.231 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.290Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-842026e4-2e83-4c79-9111-0861c959c3a0</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-842026e4-2e83-4c79-9111-0861c959c3a0">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-842026e4-2e83-4c79-9111-0861c959c3a0</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-842026e4-2e83-4c79-9111-0861c959c3a0">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-842026e4-2e83-4c79-9111-0861c959c3a0</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 174.020 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.468Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-df4eb867-2cf1-4292-8413-618f02432009</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-df4eb867-2cf1-4292-8413-618f02432009">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-df4eb867-2cf1-4292-8413-618f02432009</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-df4eb867-2cf1-4292-8413-618f02432009">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-df4eb867-2cf1-4292-8413-618f02432009</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 124.109 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.595Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test3@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-3df81762-cb5e-42c8-b4bf-d214e30431bd</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-3df81762-cb5e-42c8-b4bf-d214e30431bd">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-3df81762-cb5e-42c8-b4bf-d214e30431bd</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-3df81762-cb5e-42c8-b4bf-d214e30431bd">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-3df81762-cb5e-42c8-b4bf-d214e30431bd</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 114.573 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:48.712Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test4@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-036e7aaf-7d2a-4461-bc8d-94a7b01ac968</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-036e7aaf-7d2a-4461-bc8d-94a7b01ac968">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-036e7aaf-7d2a-4461-bc8d-94a7b01ac968</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-036e7aaf-7d2a-4461-bc8d-94a7b01ac968">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-036e7aaf-7d2a-4461-bc8d-94a7b01ac968</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 116.857 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:49.707Z"}
  console.log
    CSRF token generation: {
      sessionID: '1fea06b70f9a1805190b64ccb801956a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KPnYob7N-KV4c3nXqG5AsQVzl2OEdC-qkuCE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1fea06b70f9a1805190b64ccb801956a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mOIEHGAwnM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.795 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:49.723Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.638 ms - 166[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:50.983Z"}
  console.log
    CSRF token generation: {
      sessionID: '6a81271951950b6c35e6bfd3c8823f5b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: S0y6apAx-wwbKtDLRhg4ahPuawd156b-RCl4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6a81271951950b6c35e6bfd3c8823f5b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ieb37TYX5Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.063 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:50.992Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.336 ms - 167[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:51.907Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aa854a6498646d371fa962a200b9fdc7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iSQ6OBl0-Oz8L5IDjE2tazQRYy_thGaHAv5E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aa854a6498646d371fa962a200b9fdc7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2hNk9VaioM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.094 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:51.924Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.959 ms - 180[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:51.929Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.472 ms - 181[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:51.935Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.621 ms - 182[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:51.942Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.244 ms - 182[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:52.813Z"}
  console.log
    CSRF token generation: {
      sessionID: '5ef124ed5d8c7b562630d6f6011f5941',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Fj3Q2Wjc-xjEWcpm1ioZ_mGtJEt4XWKH88gA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5ef124ed5d8c7b562630d6f6011f5941

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -Fg0vkSeDN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.790 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:52.977Z"}
[0mPOST /api/v1/customers/register [33m400[0m 1.345 ms - 151[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:53.850Z"}
  console.log
    CSRF token generation: {
      sessionID: '55d532dc9492c24a1707ad6a53e797ae',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zwSF9CfS-RQ-dbBAMg4j6QOz460XFeZbDp8g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 55d532dc9492c24a1707ad6a53e797ae

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: w8bT0KTDsE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.439 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:54.016Z"}
  console.log
    Creating new customer with email: customer2@example.com username: customertest2

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-ca25c87a-ca42-43ef-b3b6-0a32a4df9a6c

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: customer2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Customer,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-ca25c87a-ca42-43ef-b3b6-0a32a4df9a6c</p>
            <p><strong>Your Service Provider:</strong> Test Affiliate</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> Test Affiliate<br>
            <strong>Phone:</strong> +1234567890<br>
            <strong>Email:</strong> testaffiliate2@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: customer2@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: testaffiliate2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-ca25c87a-ca42-43ef-b3b6-0a32a4df9a6c</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Customer Test</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>customer2@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>+1234567890</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>456 Customer St, Customer City, CC 54321</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-ca25c87a-ca42-43ef-b3b6-0a32a4df9a6c" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 208.259 ms - 345[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:56.111Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e5961be90d577cbca8aa0e11ef23833',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dwV8ghLd-R2mAoip22KcvpNBh5zNYwuh-3A4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e5961be90d577cbca8aa0e11ef23833

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RP1tW1Knxu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.635 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:56.244Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:40:56.435Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:40:56.436Z","userId":"686c5b08bc32f785f4c5c98a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 192.906 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:56.440Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '2e5961be90d577cbca8aa0e11ef23833',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2e5961be90d577cbca8aa0e11ef23833.JoZMe%2BUHgV81QtUSjIxD8dPoTwm5OHcXgIfRNjphDYI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 122.736 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:57.508Z"}
  console.log
    CSRF token generation: {
      sessionID: '77bac5483cc582c591c7eac276022e7e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MEFxB4Kw-hiX2M9xwvY59Xj_hEC_a-gRtCFA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 77bac5483cc582c591c7eac276022e7e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kD6WwKhGMG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.217 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:57.615Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:40:57.765Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:40:57.765Z","userId":"686c5b09bc32f785f4c5c9b2","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.159 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:57.768Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '77bac5483cc582c591c7eac276022e7e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A77bac5483cc582c591c7eac276022e7e.TUHfIlcTKbxzAAHTwwmWMfcnRm8E40w217bv85AdccY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"CREATE_ADMINISTRATOR","details":{"adminId":"ADM002","email":"newuser@example.com"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c5b09bc32f785f4c5c9bc","targetType":"administrator","timestamp":"2025-07-07T23:40:57.976Z","userId":"686c5b09bc32f785f4c5c9b2","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/administrators [32m201[0m 209.563 ms - 341[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:58.851Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f83743b6b5ffcc46376ecf70b945c8ef',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AXYApx2i-Z9lvnacQt0DmsU-ldchYueaPHmg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f83743b6b5ffcc46376ecf70b945c8ef

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZG37HIovHG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.041 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:58.955Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:40:59.131Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:40:59.131Z","userId":"686c5b0abc32f785f4c5c9de","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 176.091 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:40:59.135Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'f83743b6b5ffcc46376ecf70b945c8ef',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af83743b6b5ffcc46376ecf70b945c8ef.xWUfxIX6mgiKK%2F5vqtmfBoGKK%2Fjkb%2F1SrLZGygVuCwc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 88.567 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:00.354Z"}
  console.log
    CSRF token generation: {
      sessionID: '5f817bd2d4e886956365f535cd9bef56',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 15uouvWE-7HTdVu2UasPSO6XLI1kStwzEX9k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5f817bd2d4e886956365f535cd9bef56

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FWvCkmPJns...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.380 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:00.458Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:00.607Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:00.608Z","userId":"686c5b0cbc32f785f4c5ca06","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.818 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:00.611Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '5f817bd2d4e886956365f535cd9bef56',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5f817bd2d4e886956365f535cd9bef56.e0%2BCeMLUKenqVMztxNyy%2Bwvs4DZ51m2S48vzdV4LuU4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newoperator@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, Worker!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTQVKXJ8D13AD</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">SecureM@ster7!9K</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newoperator@example.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">Not specified</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newoperator@example.com","operatorId":"OPRMCTQVKXJ8D13AD"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c5b0cbc32f785f4c5ca0f","targetType":"operator","timestamp":"2025-07-07T23:41:00.846Z","userId":"686c5b0cbc32f785f4c5ca06","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 235.951 ms - 416[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:01.752Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e01553b62674ce9b4663ad9ddd22f937',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Oro0MVUp-Gs-fA3wpFsCGszFgCQpuR2JgnfU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e01553b62674ce9b4663ad9ddd22f937

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hfqKNi700T...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.866 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:01.907Z"}
[0mPOST /api/v1/auth/reset-password [33m400[0m 1.629 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:02.823Z"}
  console.log
    CSRF token generation: {
      sessionID: '8e89f7f1540f2cc0fd4d5f62b7548773',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8P5kU66q-LTNG2z3HQfDeiChtDszFRWxSLqQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8e89f7f1540f2cc0fd4d5f62b7548773

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9g_KO6nhxw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 19.060 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:02.977Z"}
[0mPOST /api/v1/auth/reset-password [32m200[0m 114.608 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:03.995Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dc8a2fc2171fa332861ffe0bd0015c87',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UhCy87bo-MaQuqNhoRJUZeGqmwsaPXv0YWxc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dc8a2fc2171fa332861ffe0bd0015c87

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7II6kODadS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.790 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:04.104Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:04.259Z","userType":"affiliate","username":"logintest"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.528 ms - 630[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:05.112Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ccfc5e3f63097d54a29fd56bedf092d6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Gez80t0M-jfhOhKdQNgTb3aHC-7k9gvyVLdw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ccfc5e3f63097d54a29fd56bedf092d6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sLzhyeE1Al...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.545 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:05.123Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.170 ms - 164[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:05.978Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e4c69ea08ac23cdc2ceaa648298dc3cf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: k8Ffw3fU-mB35x0vAyb2zK3EAmFn48C1vNHs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e4c69ea08ac23cdc2ceaa648298dc3cf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cDkBqltpQJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.734 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:05.988Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.886 ms - 185[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:06.850Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c05a97b32faae8d15dfae9b671493770',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yquaguOA-JJVjVdv-XUB11cYb_bUvsvIfMcU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c05a97b32faae8d15dfae9b671493770

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zUNZzsG-Ev...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.212 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:06.859Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: mixed@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Mixed,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-a297b565-d665-4962-b05f-0fe17ce759b4</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a297b565-d665-4962-b05f-0fe17ce759b4">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a297b565-d665-4962-b05f-0fe17ce759b4</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a297b565-d665-4962-b05f-0fe17ce759b4">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a297b565-d665-4962-b05f-0fe17ce759b4</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 117.856 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:07.948Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a8b08611799785acd18a47e7174bc363',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BSlc1VJs-8Psj6I846NZ-42ourG9n39PYMXc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a8b08611799785acd18a47e7174bc363

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YL-StZLpH_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.272 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:07.956Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: unicode@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Unicode,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-a9ed585f-3122-45d1-88a3-b9bed38f5dd7</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a9ed585f-3122-45d1-88a3-b9bed38f5dd7">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a9ed585f-3122-45d1-88a3-b9bed38f5dd7</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a9ed585f-3122-45d1-88a3-b9bed38f5dd7">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a9ed585f-3122-45d1-88a3-b9bed38f5dd7</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 121.640 ms - 120[0m
PASS tests/integration/passwordValidation.test.js (24.255 s)
  Password Validation Integration Tests
    Affiliate Registration Password Validation
      ✓ should reject weak passwords during affiliate registration (2033 ms)
      ✓ should accept strong passwords during affiliate registration (1559 ms)
      ✓ should reject passwords containing username (1283 ms)
      ✓ should reject passwords containing email (923 ms)
      ✓ should reject passwords with sequential characters (906 ms)
    Customer Registration Password Validation
      ✓ should enforce strong passwords for customer registration (1036 ms)
      ✓ should accept strong passwords for customer registration (1878 ms)
    Administrator Password Validation
      ✓ should enforce strong passwords for administrator creation (1780 ms)
      ✓ should accept strong passwords for administrator creation (1343 ms)
    Operator Password Validation
      ✓ should enforce strong passwords for operator creation (1479 ms)
      ✓ should accept strong passwords for operator creation (1417 ms)
    Password Reset Validation
      ✓ should enforce strong passwords during password reset (1073 ms)
      ✓ should accept strong passwords during password reset (1171 ms)
    Login with Updated Passwords
      ✓ should successfully login with strong password (1117 ms)
      ✓ should handle case-insensitive username/email validation during registration (863 ms)
    Password Strength Edge Cases
      ✓ should reject passwords with only special characters at the end (876 ms)
      ✓ should accept passwords with mixed character distribution (1094 ms)
      ✓ should handle Unicode characters in passwords appropriately (1007 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:09.659Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:10.831Z"}
  console.log
    CSRF token generation: {
      sessionID: '7909d12414216702d60c112c886903cf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 809KWuf4-7CzW25aLngoXZZbSIqFuu2apadE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7909d12414216702d60c112c886903cf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WsP1WWX__4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.870 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:10.944Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:11.131Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:11.131Z","userId":"686c5b16468cfdb8117fd267","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 187.250 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:11.135Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c8cf8e0d2d092b0f077497decc3e5db0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HfNe5FFu-hcvI1qoERqKh1oJJS1Uuav8y8ZA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c8cf8e0d2d092b0f077497decc3e5db0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Sgz3_hjBhH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.979 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:11.248Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:11.405Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:11.406Z","userId":"686c5b17468cfdb8117fd279","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 158.656 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:11.409Z"}
  console.log
    CSRF token generation: {
      sessionID: '0926b8dbe23c2ebbb614f127d5efd86a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ViVgAeRk-9eiV7kTLzqPbb29-5Go4X_XU4Nc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0926b8dbe23c2ebbb614f127d5efd86a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vRge3Ro81M...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.972 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:11.571Z"}
[0mGET /api/v1/operators [32m200[0m 171.640 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:12.833Z"}
  console.log
    CSRF token generation: {
      sessionID: '15e78d849e3f53f0059e973e3d0fcf22',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: c4ykPXfp-mD1jwk4_1yOYdPNIys3nNtpCVw4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 15e78d849e3f53f0059e973e3d0fcf22

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Uqa8hBqWDI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.206 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:12.933Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:13.078Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:13.078Z","userId":"686c5b18468cfdb8117fd2b4","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.214 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:13.082Z"}
  console.log
    CSRF token generation: {
      sessionID: '424352ca0cb8fb0346c8566c7563bc97',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KbcGBbA9-dHrhTWpbBo1ENnWKlwN85HKU4Cg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 424352ca0cb8fb0346c8566c7563bc97

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nF0r-7Quhs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.407 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:13.186Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:13.335Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:13.336Z","userId":"686c5b19468cfdb8117fd2ba","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 150.188 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:13.339Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ac7d6fc1748ccb22450713a72cddefe6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Yo8qWKkd-DjzoLRLcPU2kiNBuaZ7Fr2RNMWA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ac7d6fc1748ccb22450713a72cddefe6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: drKDJmlMST...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.408 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:13.433Z"}
[0mGET /api/v1/operators?active=true [32m200[0m 146.654 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:14.443Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd8d603763098ba799d774d2363209df6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JNFwmt7t-XrqHpSYAV45YVgl8V19UIwUxB60

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d8d603763098ba799d774d2363209df6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: On_YTIzWqM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.389 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:14.552Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:14.697Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:14.698Z","userId":"686c5b1a468cfdb8117fd2e6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.521 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:14.702Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a44d0847cfaa29fc91bc07f98d27b76b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KVq4DPp9-O4wG4GrqiWrZrSdodlTXH2er6aI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a44d0847cfaa29fc91bc07f98d27b76b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bWPQij--0U...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.467 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:14.819Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:15.009Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:15.009Z","userId":"686c5b1a468cfdb8117fd2ec","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 190.335 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:15.012Z"}
  console.log
    CSRF token generation: {
      sessionID: '87f28b4e37e8ba5a16d62ce037105c00',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hqCG7MuR-bHXdGOvF6rPiUC106JMu39QFg88

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 87f28b4e37e8ba5a16d62ce037105c00

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XQxTlRofNq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.064 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?onShift=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:15.118Z"}
[0mGET /api/v1/operators?onShift=true [32m200[0m 163.406 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:16.792Z"}
  console.log
    CSRF token generation: {
      sessionID: '482be34d99484659a618d1b9fd8a0559',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Bdl100M7-oatRpZrwcyIU1vzqDq700pUhX_Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 482be34d99484659a618d1b9fd8a0559

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jdX9wlSN37...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.413 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:16.921Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:17.129Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:17.129Z","userId":"686c5b1c468cfdb8117fd317","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 208.299 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:17.133Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd4da681432798b7e3b0419174f071271',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 40cPMENO-HCGbvxICMzREybDTQPOgoRPFyCc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d4da681432798b7e3b0419174f071271

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9nKMhgBTFg...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.425 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:17.245Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:17.401Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:17.401Z","userId":"686c5b1d468cfdb8117fd31d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.138 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:17.404Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd3a5d5d0621789113164627bf2476d31',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3fyhzBWx-CUnU5aSJGvtceX2bZ3nYZI7ySXw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d3a5d5d0621789113164627bf2476d31

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RBRQ6G3yRV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.288 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:18.711Z"}
[0mGET /api/v1/operators?page=2&limit=5 [32m200[0m 219.387 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:19.985Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ead9cef8d762b1dc995818610b71fe07',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HzwMd3th-CiYYjJdufIvjYS-KMM-dQ2wFJ8A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ead9cef8d762b1dc995818610b71fe07

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8XLJjPMVhL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.579 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:20.091Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:20.272Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:20.273Z","userId":"686c5b20468cfdb8117fd366","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 181.608 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:20.276Z"}
  console.log
    CSRF token generation: {
      sessionID: '14544bc2cc12b052f9c8eb0f8941b351',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Nzk16m9x-tqmQHgleahC4FNhQrGsDBSXEh-8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 14544bc2cc12b052f9c8eb0f8941b351

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gGdmUn0cxD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.672 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:20.391Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:20.549Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:20.550Z","userId":"686c5b20468cfdb8117fd36c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 161.851 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:20.557Z"}
  console.log
    CSRF token generation: {
      sessionID: '75ee97b34d72681b923f2937ac102f4e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mfCSdvJL-GisnB5BenJM6EQQGfQaiLIWCB34

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 75ee97b34d72681b923f2937ac102f4e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: avjccMkIbr...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.838 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:20.566Z"}
[0mGET /api/v1/operators [33m401[0m 0.978 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:21.437Z"}
  console.log
    CSRF token generation: {
      sessionID: '17c83aa04956b7d3a7f08aab90a2559f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yXIknGBJ-ixsyglKbk5YnpL-N_hSR2cbvYP0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 17c83aa04956b7d3a7f08aab90a2559f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: C42PngESVc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.649 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:21.538Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:21.724Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:21.725Z","userId":"686c5b21468cfdb8117fd391","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 186.890 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:21.727Z"}
  console.log
    CSRF token generation: {
      sessionID: '8c057569961f9b478d1adbbd81c988e3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fUh1JTZu-D_uDPN4VTUgEDTPvkcNUOKcLThI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8c057569961f9b478d1adbbd81c988e3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: uiJrMYnYjf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.744 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:21.829Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:21.984Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:21.984Z","userId":"686c5b21468cfdb8117fd397","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.691 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:21.988Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b8d7e029626fbfbb0be7bf223aed7bbc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TqWi1rEj-esNSgCqOc9TO3PY8Z6ldX50BbpY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b8d7e029626fbfbb0be7bf223aed7bbc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tn0vkokHc3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.165 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:22.085Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:22.239Z","userType":"administrator","username":"limited@wavemax.com"}
info: undefined {"adminId":"LIMITED001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:22.239Z","userId":"686c5b22468cfdb8117fd39d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.596 ms - 649[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:22.242Z"}
[0mGET /api/v1/operators [33m403[0m 60.681 ms - 79[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.195Z"}
  console.log
    CSRF token generation: {
      sessionID: '967e52e7aaed766c4122a21f5e32839c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PNInGoCC-1eTPDj9FhMKLtOuz5tWMUFLbOKw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 967e52e7aaed766c4122a21f5e32839c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QcUPWYJvso...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.129 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.302Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:23.451Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:23.451Z","userId":"686c5b23468cfdb8117fd3c4","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.774 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.455Z"}
  console.log
    CSRF token generation: {
      sessionID: '04a678c210280f828765f16a76b774bc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: StN3jnfg-IpTNKm1iO35yAG0V9Rksayep1Lc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 04a678c210280f828765f16a76b774bc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZRyXuwb7cH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.061 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.561Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:23.739Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:23.740Z","userId":"686c5b23468cfdb8117fd3ca","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 179.169 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.743Z"}
  console.log
    CSRF token generation: {
      sessionID: '6c8a00ba6fa4c3de4614a3dd0fffb136',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: R0dUeB5M-HKanmUV8Iy0J7Xop3NU3mlh37D4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6c8a00ba6fa4c3de4614a3dd0fffb136

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KXkj5T4EXb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.600 ms - 67[0m
[34mdebug[39m: GET /api/v1/administrators/operators/686c5b23468cfdb8117fd3d0 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:23.850Z"}
[0mGET /api/v1/administrators/operators/686c5b23468cfdb8117fd3d0 [32m200[0m 124.681 ms - 761[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:24.847Z"}
  console.log
    CSRF token generation: {
      sessionID: '3f2e40ff7722c079b47edffba72ee8d7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0JLZxskn-Vyz4QAglnAedu2E95NoKKHid7V8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3f2e40ff7722c079b47edffba72ee8d7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HTM8_1NSF_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.872 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:24.963Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:25.115Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:25.115Z","userId":"686c5b24468cfdb8117fd3f5","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.607 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:25.120Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ce9415cb16cc4aa74ff03e803efa4cdc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AKOvu0Vw-ITqiAChZD-83_6eZQDNj6RFoVbw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ce9415cb16cc4aa74ff03e803efa4cdc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 49u9mlbzXh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.673 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:25.221Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:25.380Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:25.380Z","userId":"686c5b25468cfdb8117fd3fb","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.246 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:25.384Z"}
  console.log
    CSRF token generation: {
      sessionID: '7ebeae89c45039e598da815a475e2757',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pWfte0Td-0Vw0Ii3-z2VfvOArk9svmig7Z-U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7ebeae89c45039e598da815a475e2757

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TWYlQXCptJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.926 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c5b25468cfdb8117fd3fb {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:25.392Z"}
[0mGET /api/v1/operators/686c5b25468cfdb8117fd3fb [32m200[0m 91.485 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:26.355Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e8cf4ca7b4d4709bb5abd8b6e764c3db',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DyZHmxmM-8aEhQXZKTudtOtW9tDGArXdBYCM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e8cf4ca7b4d4709bb5abd8b6e764c3db

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Fiw1yUmkUa...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.674 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:26.473Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:26.619Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:26.619Z","userId":"686c5b26468cfdb8117fd423","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.530 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:26.623Z"}
  console.log
    CSRF token generation: {
      sessionID: '5d73602bcba733a4873d22edfd5f2502',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ggbyUtVZ-akRnpDD2qbjBW3q4ZmUvjqpfY7Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5d73602bcba733a4873d22edfd5f2502

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ca2hLZSRsI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.998 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:26.765Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:26.919Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:26.919Z","userId":"686c5b26468cfdb8117fd429","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.236 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:26.923Z"}
  console.log
    CSRF token generation: {
      sessionID: '0f5badee831f0ad60b11565792c7af35',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dmtirVzO-w5VEacDxegWfKiaZaE7zs8adGGw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0f5badee831f0ad60b11565792c7af35

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UM-R8x0DQW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.400 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c5b26468cfdb8117fd42f {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:27.026Z"}
[0mGET /api/v1/operators/686c5b26468cfdb8117fd42f [33m403[0m 56.360 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.055Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a9a730621040cd4f48ee96d315d44edd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QMUxWcoM-xCg4A7gLUXuDnDK35u8HlwxDxbQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a9a730621040cd4f48ee96d315d44edd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xvJo3wSqko...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.176 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.163Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:28.334Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:28.334Z","userId":"686c5b28468cfdb8117fd452","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.818 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.342Z"}
  console.log
    CSRF token generation: {
      sessionID: '5bc4cd6d813731537dbebd56eb5791a3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kzU1kqwl-DllMQXg2yquwmNZNnROJuDLN_x0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5bc4cd6d813731537dbebd56eb5791a3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TSgsZSrt05...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.752 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.447Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:28.617Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:28.617Z","userId":"686c5b28468cfdb8117fd458","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 171.151 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.633Z"}
  console.log
    CSRF token generation: {
      sessionID: '8a81673c262f13f1649fe44b41eb7140',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XLvTIm1c-r6j9DEiwun0_60iEHCc5vjc-XOA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8a81673c262f13f1649fe44b41eb7140

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cN2kT-zIFI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.484 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c5b28468cfdb8117fd45e {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:28.644Z"}
[0mGET /api/v1/operators/686c5b28468cfdb8117fd45e [33m404[0m 112.933 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:29.666Z"}
  console.log
    CSRF token generation: {
      sessionID: '744adeaae6d63896691982843a568321',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O2cXQTrq-_EU1ZG1MNurFzA384d7_VwUdd_M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 744adeaae6d63896691982843a568321

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6pbE29hNDO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 26.028 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:29.782Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:29.946Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:29.946Z","userId":"686c5b29468cfdb8117fd482","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.469 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:29.949Z"}
  console.log
    CSRF token generation: {
      sessionID: '7654f6cfda3deb4128ec33cb340a0226',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: psaCzGOR-l_cHYVQ_UN4ag17WsbRhyGF-PIM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7654f6cfda3deb4128ec33cb340a0226

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gn-w4orzo-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.249 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:30.055Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:30.231Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:30.232Z","userId":"686c5b29468cfdb8117fd488","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 177.250 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:30.235Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd3c4a51709d636acf76aeb3fe4acf383',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HrBcsi3h-dfdLCZy3XECBdB__aAsPbbVJr4s

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d3c4a51709d636acf76aeb3fe4acf383

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sJOuzZdGCv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.020 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:30.251Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '7654f6cfda3deb4128ec33cb340a0226',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7654f6cfda3deb4128ec33cb340a0226.KLWRCotFYu5PAW5MR78fOq7CnbAgFpmzG0G25eWLrXo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newop@wavemax.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, New!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTQW7SO616161</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">NewPassw0rd!</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newop@wavemax.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">00:00 - 23:59</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newop@wavemax.com","operatorId":"OPRMCTQW7SO616161"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c5b2a468cfdb8117fd491","targetType":"operator","timestamp":"2025-07-07T23:41:30.464Z","userId":"686c5b29468cfdb8117fd482","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 213.095 ms - 449[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:30.469Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:30.625Z","userType":"operator","username":"newop@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPRMCTQW7SO616161","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:30.626Z","userId":"686c5b2a468cfdb8117fd491","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.942 ms - 621[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:31.492Z"}
  console.log
    CSRF token generation: {
      sessionID: '1069329741285c93612c66e8a0b4579c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LTvPiArl-NFOPOsSDVCBjEKgPgCMjgGBiioE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1069329741285c93612c66e8a0b4579c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KOnegBG0WW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.839 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:31.592Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:31.760Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:31.761Z","userId":"686c5b2b468cfdb8117fd4b6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 169.352 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:31.767Z"}
  console.log
    CSRF token generation: {
      sessionID: '581ccce4d3a18a6f190db558200ec44d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: heE7CLKZ-Gz_LHGSQtK82YVlpHrM8SP7gpio

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 581ccce4d3a18a6f190db558200ec44d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4oR5bRZq-v...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.072 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:31.897Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:32.042Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:32.042Z","userId":"686c5b2b468cfdb8117fd4bc","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 145.007 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:32.046Z"}
  console.log
    CSRF token generation: {
      sessionID: '08f566fe234ac3926aa324253cf490ab',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 59XTgZCp-x3lXrRZ4Y-ofTjfs9dCbYQ66TEU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 08f566fe234ac3926aa324253cf490ab

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: u95-plN81E...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.817 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:32.055Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '581ccce4d3a18a6f190db558200ec44d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A581ccce4d3a18a6f190db558200ec44d.gMvcXa1wdBZk0i6HIfHu5LITYWpcpgHIl59%2BfwEZJQc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 58.321 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:32.997Z"}
  console.log
    CSRF token generation: {
      sessionID: '17600076591e865b631c681009c50c12',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PIqzwpAJ-nlp6wyyMkaxLhcvxdx9pmdXBLAg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 17600076591e865b631c681009c50c12

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: liamapwrY-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.211 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:33.091Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:33.246Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:33.247Z","userId":"686c5b2d468cfdb8117fd4e3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.457 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:33.253Z"}
  console.log
    CSRF token generation: {
      sessionID: '8fb633c70280eff28af1e83edc1e775b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1UaMgc1r-CSu43wZYmpIHf92Gl57x7o6Jhuo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8fb633c70280eff28af1e83edc1e775b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3ecR-Qs7Wq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.184 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:33.383Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:33.556Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:33.556Z","userId":"686c5b2d468cfdb8117fd4e9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 173.292 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:33.560Z"}
  console.log
    CSRF token generation: {
      sessionID: '0ac27c5f9f8804d1d0b10919a4e3e2b6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7u5XcHDJ-9-Sp59zAWDhE70iQTnEK7JxkPZg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0ac27c5f9f8804d1d0b10919a4e3e2b6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: K2Zs0Bl4LV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.641 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:33.585Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '8fb633c70280eff28af1e83edc1e775b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8fb633c70280eff28af1e83edc1e775b.B73UAPhGdT0%2FtK7nmG%2FQfZv8CHuut94TiTWjg8ngm6I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 58.360 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:34.522Z"}
  console.log
    CSRF token generation: {
      sessionID: '2626cd3093e2a60c8427806fe49f1bfa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SLfjHlig-qpaQQjPJa25loj3AyrXgTlA8C0M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2626cd3093e2a60c8427806fe49f1bfa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ynNkZhzVkq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.722 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:34.621Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:34.783Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:34.783Z","userId":"686c5b2e468cfdb8117fd510","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.612 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:34.787Z"}
  console.log
    CSRF token generation: {
      sessionID: '64594a4f11702c29f147eb422773f4f7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9Uh8uV4k-NCFj-zXn7XhXS_xrkvln5xIiPj8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 64594a4f11702c29f147eb422773f4f7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QMQRTb4FM3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.263 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:34.886Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:35.059Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:35.060Z","userId":"686c5b2e468cfdb8117fd516","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 173.472 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:35.062Z"}
  console.log
    CSRF token generation: {
      sessionID: '96abefb506816a14921a0c4b8cc30c62',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M7ZNBD92-bMhgUfW_Z1fXo5ZOdX4koLunxa4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 96abefb506816a14921a0c4b8cc30c62

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aiT5vMqO-L...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.945 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:35.073Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '64594a4f11702c29f147eb422773f4f7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A64594a4f11702c29f147eb422773f4f7.NCrrSzx1oqbCMguuQFdkroCtwCdZTWUlSncrAVmJJW0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 61.856 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.002Z"}
  console.log
    CSRF token generation: {
      sessionID: '0bfe49fdbc2470c96f63434caa1221e2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: afXHkzBi-SvgtHa2KlHh9UDtNfzl52mBdRcI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0bfe49fdbc2470c96f63434caa1221e2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GCI7hBtAKn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.230 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.120Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:36.287Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:36.288Z","userId":"686c5b30468cfdb8117fd53d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 167.282 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.291Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ecf928512e666866206a4e49b67fc3ae',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VhD854n1-MaFIztPx29fSUDkhj-kBJCC7bW0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ecf928512e666866206a4e49b67fc3ae

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7wdXjLl8-Z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.110 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.404Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:36.590Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:36.590Z","userId":"686c5b30468cfdb8117fd543","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 186.245 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.594Z"}
  console.log
    CSRF token generation: {
      sessionID: '445126c40cdcaabbd0871dfcc3d4fd7d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0NbwJ0fK-SOioA6kiDWTuvZKkHdumC-wdMmg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 445126c40cdcaabbd0871dfcc3d4fd7d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TRRtT4cY_t...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.223 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:36.603Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'ecf928512e666866206a4e49b67fc3ae',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aecf928512e666866206a4e49b67fc3ae.QFHLmB14XO7cQ0Ek3rwWg2Hk2nefopKKtTHgpydEemY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m409[0m 86.361 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:37.544Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dd1f54157f927bcd51e641db6a858b72',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: klxCFXMj-O_xYyfJDGanTuL5NVcbq1d3iaKA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dd1f54157f927bcd51e641db6a858b72

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: S_txfcVLka...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.969 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:37.643Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:37.795Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:37.795Z","userId":"686c5b31468cfdb8117fd56b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.367 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:37.798Z"}
  console.log
    CSRF token generation: {
      sessionID: '2263f1d374ae00146bd1ba229de7b36a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 081XvwxM-mXWBv3BIMpNsRa8ddDmkyTUJIUw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2263f1d374ae00146bd1ba229de7b36a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3QstxvzcE0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.522 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:37.910Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:38.069Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:38.070Z","userId":"686c5b31468cfdb8117fd571","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.252 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:38.072Z"}
  console.log
    CSRF token generation: {
      sessionID: '6644e40815a302e2de0c1adf2e0b3e02',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cpwbedmL-MG2Ns4VM60iRbOsXIDqONsxATsI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6644e40815a302e2de0c1adf2e0b3e02

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3IMnQ34jFM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.185 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:38.198Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:38.364Z","userType":"administrator","username":"limited2@wavemax.com"}
info: undefined {"adminId":"LIMITED002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:38.364Z","userId":"686c5b32468cfdb8117fd577","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 166.200 ms - 655[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:38.368Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'dd1f54157f927bcd51e641db6a858b72',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Add1f54157f927bcd51e641db6a858b72.LxKJvXcglZVA1NkbDVKw8xF99i55QTDcg4XmtPANMnQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m403[0m 67.191 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:39.361Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dc36cad8fe539c13844defee00e9bb0f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sIft68w5-BC0CVEUeDTiYC6j768tqfE8ad6I

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dc36cad8fe539c13844defee00e9bb0f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zgy9S15waB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.825 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:39.475Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:39.636Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:39.637Z","userId":"686c5b33468cfdb8117fd59e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.972 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:39.641Z"}
  console.log
    CSRF token generation: {
      sessionID: '071bc2aa2231f0d40ad949bbb10188e0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M2oxOZOf-d4eDJKdm7oH6tFmqs-UuHgYSZM8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 071bc2aa2231f0d40ad949bbb10188e0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 20UwK0Z_a0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.796 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:39.764Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:39.948Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:39.948Z","userId":"686c5b33468cfdb8117fd5a4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 184.625 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:39.951Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e08d46b2aeb140cd327941a58e5a64db',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iNpGlMv5-xn0ncOOpZ_N8NGwmIxDdgn19Ijo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e08d46b2aeb140cd327941a58e5a64db

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nPqKPXlN8m...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.417 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b33468cfdb8117fd5aa {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:40.048Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b33468cfdb8117fd5aa {
      sessionID: '071bc2aa2231f0d40ad949bbb10188e0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A071bc2aa2231f0d40ad949bbb10188e0.6NYKTz6Ux8YtUkMP4pDWEApnIC5m8jMsK7RI9W6EAko',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"firstName":"Updated","lastName":"Name","shiftEnd":"18:00","shiftStart":"10:00"}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c5b33468cfdb8117fd5aa","targetId":"686c5b33468cfdb8117fd5aa","targetType":"operator","timestamp":"2025-07-07T23:41:40.206Z","userId":"686c5b33468cfdb8117fd59e","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c5b33468cfdb8117fd5aa [32m200[0m 156.980 ms - 442[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.104Z"}
  console.log
    CSRF token generation: {
      sessionID: '84a21fcc07a81f49645fce6bd44b9fbb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 42YliKNA-HGhfEwiiUcxaCX3-kG_Jn5uzWjk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 84a21fcc07a81f49645fce6bd44b9fbb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VAflw4JAiQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.374 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.249Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:41.408Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:41.408Z","userId":"686c5b35468cfdb8117fd5d0","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.029 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.411Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e9f4ee296855cf56d0cd6a13aff1eccc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OqLLZYrL-QugJadfVcP7bamaqRHlyL8Jiwfs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e9f4ee296855cf56d0cd6a13aff1eccc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WAj8SYH7bE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.512 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.508Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:41.693Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:41.693Z","userId":"686c5b35468cfdb8117fd5d6","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 185.308 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.696Z"}
  console.log
    CSRF token generation: {
      sessionID: '7def1ca211d52b09c5c79659dfff39cb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IJR8f3yE-H29ve454z6h1ZGyLhl26J8wUd1g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7def1ca211d52b09c5c79659dfff39cb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4eJZyivb3m...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.928 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b35468cfdb8117fd5dc {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:41.825Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b35468cfdb8117fd5dc {
      sessionID: 'e9f4ee296855cf56d0cd6a13aff1eccc',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae9f4ee296855cf56d0cd6a13aff1eccc.NT%2FzFJ2AKh1x58Tl3x7fVYuLpP7IwIxVn4ZvL1MO92I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c5b35468cfdb8117fd5dc","targetId":"686c5b35468cfdb8117fd5dc","targetType":"operator","timestamp":"2025-07-07T23:41:42.084Z","userId":"686c5b35468cfdb8117fd5d0","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c5b35468cfdb8117fd5dc [32m200[0m 259.143 ms - 445[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:42.087Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:42.272Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:42.272Z","userId":"686c5b35468cfdb8117fd5dc","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 185.233 ms - 606[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.222Z"}
  console.log
    CSRF token generation: {
      sessionID: '37bf9cd55430a214d284fe52aacea04f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rF4Nlh44-SZf7E9dw4eK0gWqd2IJbhXdGk6Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 37bf9cd55430a214d284fe52aacea04f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Fh1SHN3LIz...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.783 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.330Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:43.499Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:43.499Z","userId":"686c5b37468cfdb8117fd60b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 168.770 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.503Z"}
  console.log
    CSRF token generation: {
      sessionID: '4319b7115e5a8c6522a262445e4a9e85',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SgGK8TWg-2FCEv3M6GpJGiwiLJjSJWmRoUmU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4319b7115e5a8c6522a262445e4a9e85

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: MPlyfVd3-j...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.078 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.635Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:43.790Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:43.790Z","userId":"686c5b37468cfdb8117fd611","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.071 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.794Z"}
  console.log
    CSRF token generation: {
      sessionID: '42718e84991dee34675c281757c78fa7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: E3HpNyAd-iCOiUNORZf-FEBdGNgoL6chLbW8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 42718e84991dee34675c281757c78fa7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7fksz7qgOI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.646 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b37468cfdb8117fd617 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:43.904Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b37468cfdb8117fd617 {
      sessionID: '4319b7115e5a8c6522a262445e4a9e85',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4319b7115e5a8c6522a262445e4a9e85.HIVbigvfbOaE%2FxH%2BZCdgXr1BI1W2zR98f6y945hLz2I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"isActive":false}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c5b37468cfdb8117fd617","targetId":"686c5b37468cfdb8117fd617","targetType":"operator","timestamp":"2025-07-07T23:41:44.058Z","userId":"686c5b37468cfdb8117fd60b","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c5b37468cfdb8117fd617 [32m200[0m 154.365 ms - 446[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:44.063Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T23:41:44.092Z","userType":"operator","username":"target@wavemax.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 29.378 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:44.963Z"}
  console.log
    CSRF token generation: {
      sessionID: '761b9a3acb7d9587ffaf95dddb64a6be',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QLkRv9f6-DeE0FfgS5HNoFrWSZtymYVfVmqQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 761b9a3acb7d9587ffaf95dddb64a6be

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: suCs633nk_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.070 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.057Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:45.218Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:45.219Z","userId":"686c5b39468cfdb8117fd63e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.356 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.222Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd9fafa42f7e018058355151ebfc34899',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MvcmWJ3V-hthA94pbQV8ve0z-B8Vy5gTIio0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d9fafa42f7e018058355151ebfc34899

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vyLgiQLT23...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.616 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.309Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:45.462Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:45.462Z","userId":"686c5b39468cfdb8117fd644","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.206 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.465Z"}
  console.log
    CSRF token generation: {
      sessionID: '15b22c775dcdca966304b14b33551626',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iuevbT2W-GBh-oJg91R6wBi__QlFBxjNzJ94

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 15b22c775dcdca966304b14b33551626

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6JVvFfVi96...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.290 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.569Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:45.731Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:45.732Z","userId":"686c5b39468cfdb8117fd64a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.913 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b39468cfdb8117fd64a {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:45.735Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b39468cfdb8117fd64a {
      sessionID: '761b9a3acb7d9587ffaf95dddb64a6be',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A761b9a3acb7d9587ffaf95dddb64a6be.fc3F6IIVy3Ek7Y2uj4IMxIzV0J19p89eAgon8%2FcNBKQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b39468cfdb8117fd64a [32m200[0m 169.865 ms - 240[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:46.825Z"}
  console.log
    CSRF token generation: {
      sessionID: '799fc964aa4a5b06d74411f85467bfa3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RdEh1Wmm-cOsSODktNqVfFtb4t2GZEvQ2ZVA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 799fc964aa4a5b06d74411f85467bfa3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UK6ar-rIuE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.684 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:46.913Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:47.069Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:47.069Z","userId":"686c5b3a468cfdb8117fd674","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.024 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:47.072Z"}
  console.log
    CSRF token generation: {
      sessionID: '250776ebc1052f7a0afbc2972f3eaac6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XFrzZm8u-qJJpr1dTakhhGBFFjEGIiunX7kc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 250776ebc1052f7a0afbc2972f3eaac6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ttw9EJWGXA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.628 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:47.169Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:47.331Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:47.331Z","userId":"686c5b3b468cfdb8117fd67a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.229 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:47.334Z"}
  console.log
    CSRF token generation: {
      sessionID: '3df38b818c2d199bbc780e110dce04ed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YgzjQAW1-AJWtOIcg5LCRvQhQLaiv9_3x0vQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3df38b818c2d199bbc780e110dce04ed

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QwqubsS0gL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.409 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:47.433Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:47.574Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:47.574Z","userId":"686c5b3b468cfdb8117fd680","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 141.396 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b3b468cfdb8117fd680 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:47.578Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b3b468cfdb8117fd680 {
      sessionID: '799fc964aa4a5b06d74411f85467bfa3',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A799fc964aa4a5b06d74411f85467bfa3.EM5J1nV2BB%2FKnlKydPyJ%2BPqkZN%2BqLx9K4UOyTvIdadw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b3b468cfdb8117fd680 [32m200[0m 130.161 ms - 245[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:48.572Z"}
  console.log
    CSRF token generation: {
      sessionID: '4d1f1d3985e8c4f420eb47e3f41992d9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fUiGVx28-Yrz7jONglU7yk_XVudU4HHmertE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4d1f1d3985e8c4f420eb47e3f41992d9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pGKEqsvGXp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.866 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:48.685Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:48.836Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:48.836Z","userId":"686c5b3c468cfdb8117fd6a9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.756 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:48.840Z"}
  console.log
    CSRF token generation: {
      sessionID: '40a66a9e177d0243389e73d6a9b7917b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: K0qVsp3s-rIueJLEm6zp3W1hUaT1zBYCGpUI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 40a66a9e177d0243389e73d6a9b7917b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: p4QSgO50jl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.746 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:48.929Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:49.080Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:49.081Z","userId":"686c5b3c468cfdb8117fd6af","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.310 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:49.084Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bb79d939b16d18be3dd9fb0db1948e74',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3w3zNnV2-vZ2W9DLByzG0Pj2-OhpZvrBI8EM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bb79d939b16d18be3dd9fb0db1948e74

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0VxA2QOooN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 22.194 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b3d468cfdb8117fd6b5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:49.273Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b3d468cfdb8117fd6b5 {
      sessionID: '40a66a9e177d0243389e73d6a9b7917b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A40a66a9e177d0243389e73d6a9b7917b.%2BntCrnHPZrEDge2zkIcxzoK4kxoKjreFIsebywVCNgU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c5b3d468cfdb8117fd6b5","targetId":"686c5b3d468cfdb8117fd6b5","targetType":"operator","timestamp":"2025-07-07T23:41:49.443Z","userId":"686c5b3c468cfdb8117fd6a9","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c5b3d468cfdb8117fd6b5 [32m200[0m 165.501 ms - 445[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.330Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e14fd791592644bedad7692fa91fb177',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jfI250Ly-etZcbz8pMedXUy1IqmPZ_lfYhJY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e14fd791592644bedad7692fa91fb177

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FK-acdyZVF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.796 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.453Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:50.608Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:50.608Z","userId":"686c5b3e468cfdb8117fd6db","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.001 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.615Z"}
  console.log
    CSRF token generation: {
      sessionID: '9ac50842aab0213702db80202c5b842c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ddvhfydX-VmItxk5PYzDEWBbiGRb5MnFLeMg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9ac50842aab0213702db80202c5b842c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: K2AcqZopoS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.198 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.717Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:50.870Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:50.870Z","userId":"686c5b3e468cfdb8117fd6e1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.559 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.873Z"}
  console.log
    CSRF token generation: {
      sessionID: '3944c3a5f93663617587d2b29b436344',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3hJqwQOt-m71BVucxqB240L1fC1qGDEQ8rEA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3944c3a5f93663617587d2b29b436344

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: c3IOnj3bWE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.083 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b3e468cfdb8117fd6e7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:50.965Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b3e468cfdb8117fd6e7 {
      sessionID: '9ac50842aab0213702db80202c5b842c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9ac50842aab0213702db80202c5b842c.xipyJgc8ucEPfjWqduVx6gI0bam5liZQbZbRWE1ciDY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b3e468cfdb8117fd6e7 [33m409[0m 136.838 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:51.982Z"}
  console.log
    CSRF token generation: {
      sessionID: '81504e2fc3454a311018882ae4832ee5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SewEUfBV-NzrckmoqR3BU0LuZOBh0QZJhDuA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 81504e2fc3454a311018882ae4832ee5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IdKSoY690w...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.085 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:52.094Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:52.250Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:52.251Z","userId":"686c5b40468cfdb8117fd70d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.193 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:52.253Z"}
  console.log
    CSRF token generation: {
      sessionID: '68eb8a3baf1370f9ac77cf1d40d279a6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5ttyhZfW-p4WFsVx4LeIyxKO5WvRsPcTkSuI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 68eb8a3baf1370f9ac77cf1d40d279a6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lRkveYRKYv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.267 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:52.359Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:52.516Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:52.516Z","userId":"686c5b40468cfdb8117fd713","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.817 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:52.520Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aa7fed99f8025c920b2633d55d89f99f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mZVCuFEM-T3yymd76y11eXv0x6asNAr_goxY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aa7fed99f8025c920b2633d55d89f99f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zLIWdhjMW3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.129 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c5b40468cfdb8117fd719 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:52.648Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b40468cfdb8117fd719 {
      sessionID: '68eb8a3baf1370f9ac77cf1d40d279a6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A68eb8a3baf1370f9ac77cf1d40d279a6.tjEqHHdUffsBo%2B6FIaH12Y%2BOOj87Us9T4AmOpCrzP2U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"8","11":"c","12":"f","13":"d","14":"b","15":"8","16":"1","17":"1","18":"7","19":"f","2":"6","20":"d","21":"7","22":"0","23":"d","3":"c","4":"5","5":"b","6":"4","7":"0","8":"4","9":"6","timestamp":"2025-07-07T23:41:52.799Z"}
[0mDELETE /api/v1/operators/686c5b40468cfdb8117fd719 [32m200[0m 152.197 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:53.700Z"}
  console.log
    CSRF token generation: {
      sessionID: '4c4abf48245209724c549d4af9316902',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eIfdTS2z-6RiHhbSZM0gpIpaXjcVkAnqnxAw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4c4abf48245209724c549d4af9316902

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AOzo81tIJw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.853 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:53.797Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:53.953Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:53.954Z","userId":"686c5b41468cfdb8117fd740","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.611 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:53.958Z"}
  console.log
    CSRF token generation: {
      sessionID: '2c63e9da63168c15727e2e9418d44f8e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: W3OYP0u0-4_BebrbjP2Z7CPWYqmjd7mxz3Aw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2c63e9da63168c15727e2e9418d44f8e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EfCn26Wp_j...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.691 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:54.067Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:54.246Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:54.247Z","userId":"686c5b41468cfdb8117fd746","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 179.837 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:54.250Z"}
  console.log
    CSRF token generation: {
      sessionID: '7301bb55ff427bad9b1bb58b382b02bf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: C1bs6Pag-LcT3C5zwyK0-eQUK_JaLPN7P0Ug

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7301bb55ff427bad9b1bb58b382b02bf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zKz1v0Xzvi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.944 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c5b42468cfdb8117fd74c {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:54.427Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b42468cfdb8117fd74c {
      sessionID: '2c63e9da63168c15727e2e9418d44f8e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2c63e9da63168c15727e2e9418d44f8e.Ux0lSjFJ0mHot%2B723vRRdjVtlaWg%2B3iLyUxRL7It%2FDs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c5b42468cfdb8117fd74c [33m400[0m 116.429 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:55.404Z"}
  console.log
    CSRF token generation: {
      sessionID: '7522760c92d91bb8bb5db2b5d931573d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1DDhp78h--8IuXkKFM5TOJ55AwCoRtcIv92g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7522760c92d91bb8bb5db2b5d931573d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Oi2Y8wzjPX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.430 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:55.541Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:55.687Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:55.688Z","userId":"686c5b43468cfdb8117fd772","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.879 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:55.691Z"}
  console.log
    CSRF token generation: {
      sessionID: '270f6002423e7effd818e6e0705c42fd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mzoeXSat-yy5Dgvvop8QU86sVKz8ivLdHWWQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 270f6002423e7effd818e6e0705c42fd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8ObOcW2xyV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.484 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:55.789Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:55.968Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:55.968Z","userId":"686c5b43468cfdb8117fd778","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 178.912 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:55.973Z"}
  console.log
    CSRF token generation: {
      sessionID: '14249dab089105f8db102476f7affc97',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fFyHLb3q-nTDQin6ym1Up3xwOKOeXHuFdK2E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 14249dab089105f8db102476f7affc97

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dxOJlM83VC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.392 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:56.162Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:56.321Z","userType":"administrator","username":"limited3@wavemax.com"}
info: undefined {"adminId":"LIMITED003","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:56.321Z","userId":"686c5b44468cfdb8117fd780","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.763 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/operators/686c5b43468cfdb8117fd77e {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:56.324Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b43468cfdb8117fd77e {
      sessionID: '7522760c92d91bb8bb5db2b5d931573d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7522760c92d91bb8bb5db2b5d931573d.kF1KIxgvkeaMYCEiKFg3rQ0%2BmX2Uv68ja5KZIQuzAWE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c5b43468cfdb8117fd77e [33m403[0m 59.959 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.327Z"}
  console.log
    CSRF token generation: {
      sessionID: '7b2a0e1d87457c29081a14f62154ff9c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: qnsZZ1kS-Zd5RtfXwxug1Vx6WsNQOwRAmZpQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7b2a0e1d87457c29081a14f62154ff9c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ccwAIxaQZb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.807 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.433Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:57.586Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:57.587Z","userId":"686c5b45468cfdb8117fd7a7","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.049 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.590Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bed5002fa9eda6aff8dd7b370891dd52',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sSvZ6mfs-OKBZ3_FbdBktCXzI-AsHvL3NZ8U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bed5002fa9eda6aff8dd7b370891dd52

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: uSdMckT5u-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.030 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.691Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:57.838Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:57.838Z","userId":"686c5b45468cfdb8117fd7ad","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.621 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.843Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ee1a8dfad3f471315c72b55672a79254',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mZ9FPfF8-OFcoK9gq0deZ0hOaSBHV3jzJkJw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ee1a8dfad3f471315c72b55672a79254

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6SMeN1Cz7e...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.837 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c5b45468cfdb8117fd7b5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:57.935Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b45468cfdb8117fd7b5 {
      sessionID: 'bed5002fa9eda6aff8dd7b370891dd52',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Abed5002fa9eda6aff8dd7b370891dd52.tmpJ56e5znlawnfdv1SIMDf3r%2BZMb1htZjZ7wzYJGrw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c5b45468cfdb8117fd7b5 [33m404[0m 83.557 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:58.863Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fc6bc6dbca89f9c9c2a2f1254a37b80f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DTTWHEuG-VK9vPdxh5ltQZ7Jw-TUJ6j_NSi0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fc6bc6dbca89f9c9c2a2f1254a37b80f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VZkMsse4NA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.378 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:58.960Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:59.131Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:41:59.131Z","userId":"686c5b46468cfdb8117fd7d8","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.834 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:59.135Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ad21a8fd448993a8fbaeacd7e69ca96a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TKeUfW28-_--fosaeRAO_Om3-Cud85HKCamw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ad21a8fd448993a8fbaeacd7e69ca96a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E9g4cg0wzj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.502 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:59.245Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:59.404Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:41:59.404Z","userId":"686c5b47468cfdb8117fd7de","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.725 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:59.408Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c8505a5dc1e2182a7b2773bc2a78b1d6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3EXGRClj-vbYSS868zVO84vuSAbZxzTbSSPY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c8505a5dc1e2182a7b2773bc2a78b1d6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zvbBweFU7X...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.990 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686c5b47468cfdb8117fd7e4/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:59.539Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b47468cfdb8117fd7e4/reset-pin {
      sessionID: 'ad21a8fd448993a8fbaeacd7e69ca96a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aad21a8fd448993a8fbaeacd7e69ca96a.5xqTx3g8AszgVIEdsAprBAxVi7w2ddGxdSw%2Fj%2Bt0L18',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"8","11":"c","12":"f","13":"d","14":"b","15":"8","16":"1","17":"1","18":"7","19":"f","2":"6","20":"d","21":"7","22":"d","23":"8","3":"c","4":"5","5":"b","6":"4","7":"6","8":"4","9":"6","timestamp":"2025-07-07T23:41:59.719Z"}
[0mPOST /api/v1/operators/686c5b47468cfdb8117fd7e4/reset-pin [32m200[0m 179.377 ms - 51[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:41:59.728Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:41:59.873Z","userType":"operator","username":"pinreset@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"PIN001","path":"/operator/login","shift":"undefined - undefined","timestamp":"2025-07-07T23:41:59.874Z","userId":"686c5b47468cfdb8117fd7e4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 145.474 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:00.757Z"}
  console.log
    CSRF token generation: {
      sessionID: '8b5e258b48609d51a97f5ce1ad31e3e1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: e4y5xiBG-A727Acpoz6wDUC65mF1oCOF5Kzw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8b5e258b48609d51a97f5ce1ad31e3e1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mwBUXPvDNK...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.844 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:00.869Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:01.024Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:01.025Z","userId":"686c5b48468cfdb8117fd80f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.122 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:01.031Z"}
  console.log
    CSRF token generation: {
      sessionID: '8aa195532cf115ec9cc8bc4fdf266e81',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5AqkbdXI-w2jjGa-WqvpeCsHgCYxpGaURmwY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8aa195532cf115ec9cc8bc4fdf266e81

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: A8tMRTaKRv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.114 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:01.164Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:01.308Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:01.309Z","userId":"686c5b49468cfdb8117fd815","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.364 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:01.311Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dc982d896fd23510029d111278574a06',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wktrF208-uspzfquFsVX-SfxdI8wniO38HwI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dc982d896fd23510029d111278574a06

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DBuoHmKh_b...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.044 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686c5b49468cfdb8117fd81b/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:01.446Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b49468cfdb8117fd81b/reset-pin {
      sessionID: '8aa195532cf115ec9cc8bc4fdf266e81',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8aa195532cf115ec9cc8bc4fdf266e81.BlCFxDxLV7N5dIEN%2BCQqw1WBqVTRvaE0vx0H1iYADM4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"8","11":"c","12":"f","13":"d","14":"b","15":"8","16":"1","17":"1","18":"7","19":"f","2":"6","20":"d","21":"8","22":"0","23":"f","3":"c","4":"5","5":"b","6":"4","7":"8","8":"4","9":"6","timestamp":"2025-07-07T23:42:01.626Z"}
[0mPOST /api/v1/operators/686c5b49468cfdb8117fd81b/reset-pin [32m200[0m 179.929 ms - 51[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:02.519Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dbf6664bc66e8335180f2e32aebb9e9d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MIbLMNR9-k9tCutQIL0sNljGQXOLNLX5d6JA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dbf6664bc66e8335180f2e32aebb9e9d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sHN4V-Z0a3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.907 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:02.634Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:02.801Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:02.801Z","userId":"686c5b4a468cfdb8117fd844","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 168.180 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:02.805Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eea10b138c0b25d80888f538894b07a9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0VBwI5Hf-ChjDpPujk-C-zqmXW1tkxRAabyQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: eea10b138c0b25d80888f538894b07a9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IfSIL1RRcf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.188 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:02.924Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:03.086Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:03.087Z","userId":"686c5b4a468cfdb8117fd84a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.811 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:03.089Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd5295d07225322b2f2fa89f541a0a4c1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xDHnBXOb-XhhOTwsKmP45tMUaH-gjhjBSnqE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d5295d07225322b2f2fa89f541a0a4c1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4NDAKP2Gxv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.566 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:03.400Z"}
[0mGET /api/v1/operators/available [32m200[0m 97.216 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:04.355Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f98ff84c27986630c35c3053dd51471d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EX6WdY38-TqoSQlsijLRLqzC_uoA0Kig0Lrs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f98ff84c27986630c35c3053dd51471d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q6rQONB3nH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.173 ms - 67[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:04.440Z"}
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:04.459Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:04.617Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:04.618Z","userId":"686c5b4c468cfdb8117fd87a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.327 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:04.621Z"}
  console.log
    CSRF token generation: {
      sessionID: '8e13888d80ad1bc67e0a55c4187d44d2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: o4roUAoC-HgWWvRoXKOqrlMFajXD5DgH3LHA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8e13888d80ad1bc67e0a55c4187d44d2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 32rL-79RUp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.334 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:04.726Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:04.882Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:04.883Z","userId":"686c5b4c468cfdb8117fd880","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.791 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:04.885Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a7bb71d140d8b3d42fbf9175a9ec79a5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AZParRBa-VhftLlPBSKnk5AWVk59OzNW48kA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a7bb71d140d8b3d42fbf9175a9ec79a5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pxExthUDju...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.058 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available?limit=2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:05.185Z"}
[0mGET /api/v1/operators/available?limit=2 [32m200[0m 83.960 ms - 536[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.120Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b64295517ec03a63ce3e32943c5d582d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6yNhlV7m-5J8H1DWlpS4fckYlZHdaLoaGiFg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b64295517ec03a63ce3e32943c5d582d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: l3-KkextBb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.155 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.226Z"}
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:06.367Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:06.405Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:06.405Z","userId":"686c5b4e468cfdb8117fd8b0","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 179.170 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.409Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e678ab393c4cdc8580aeda69d90a3a6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TuxkgvWk-9Bfb3LpPasPxGgb3SAJw3i2NXKI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e678ab393c4cdc8580aeda69d90a3a6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GRrRismN5O...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.426 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.533Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:06.679Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:06.679Z","userId":"686c5b4e468cfdb8117fd8b6","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.469 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.683Z"}
  console.log
    CSRF token generation: {
      sessionID: '1a53b822a0b07fba57aeb2b17f90693f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pJt9YMGm-4sFcBzA2UipmMhTVt9blQqYCLWA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1a53b822a0b07fba57aeb2b17f90693f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zbgkX25l84...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.127 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:06.943Z"}
[0mGET /api/v1/operators/available [32m200[0m 80.677 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:07.876Z"}
  console.log
    CSRF token generation: {
      sessionID: '5ab06a9b200fddac8321826e824cb67c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hz2Evw1D-BWdwTLOXOOa7EiPf7fzlyXU8EFA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5ab06a9b200fddac8321826e824cb67c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yTPS2sbQch...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.194 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:07.975Z"}
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runNextTicks (node:internal/process/task_queues:64:3)\n    at processTimers (node:internal/timers:516:9)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:08.091Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:08.157Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:08.158Z","userId":"686c5b4f468cfdb8117fd8e6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 183.402 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:08.161Z"}
  console.log
    CSRF token generation: {
      sessionID: '98291de4c14f4f81fa7f533170f27816',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: oq4hjWjG-9X4WFt9FPw73XAbtCN5xu_9frt4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 98291de4c14f4f81fa7f533170f27816

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fyq8WHvS1F...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.173 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:08.257Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:08.408Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:08.408Z","userId":"686c5b50468cfdb8117fd8ec","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.226 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:08.411Z"}
  console.log
    CSRF token generation: {
      sessionID: '17c3b80a1ce784551f0a61038b3d7aad',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nf2t7OfH-dlJYFhgW3CLJW5ZYRwQH_dJ23LU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 17c3b80a1ce784551f0a61038b3d7aad

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E6qvxIaoZl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.962 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:08.668Z"}
[0mGET /api/v1/operators/available [33m401[0m 1.355 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:09.570Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f0b8952856d04ba980b06a019680a6a8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4J0CrC6A-cvg1knMgEtg-PGPfHeNI7kBIfCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f0b8952856d04ba980b06a019680a6a8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KoU5iPEpd3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.354 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:09.682Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:09.843Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:09.843Z","userId":"686c5b51468cfdb8117fd919","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.690 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:09.849Z"}
  console.log
    CSRF token generation: {
      sessionID: '7767cb08e275ba1f964509d93fa72334',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 09gVUDYd-mKweWAveIuTOZmDpkzkNUfUXdO0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7767cb08e275ba1f964509d93fa72334

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zUYTPLOQmB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.907 ms - 67[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runNextTicks (node:internal/process/task_queues:64:3)\n    at processTimers (node:internal/timers:516:9)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:09.914Z"}
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:09.946Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:10.095Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:10.095Z","userId":"686c5b51468cfdb8117fd91f","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 148.727 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:10.098Z"}
  console.log
    CSRF token generation: {
      sessionID: '74e7a52792ee2749967a08d723a5fc90',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9gu3nkDf-lUL5XIAE4cuoep2AQEZDGLtSuig

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 74e7a52792ee2749967a08d723a5fc90

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NC8b-gcZFA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.497 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b52468cfdb8117fd925/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:10.196Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b52468cfdb8117fd925/stats {
      sessionID: '7767cb08e275ba1f964509d93fa72334',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7767cb08e275ba1f964509d93fa72334.J1J01RToPYISc2gpdAPY1oJtt%2FU%2FovlseQysySnhhIQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b52468cfdb8117fd925/stats [32m200[0m 117.779 ms - 267[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.153Z"}
  console.log
    CSRF token generation: {
      sessionID: '2c00c9f0d1f58b0524977abcdea65bfb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: m0HCUYWa-RpqMkHzFIfHe60-P-y-xlk0U4uo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2c00c9f0d1f58b0524977abcdea65bfb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Zfxt65uZtT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.047 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.240Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:11.382Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:11.382Z","userId":"686c5b53468cfdb8117fd94a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.938 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.385Z"}
  console.log
    CSRF token generation: {
      sessionID: '9de9ab13f7dbf18499f849557538bf2e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: q8RAi0Jr-JUgdl21EWDj1Q9xIjMfEpA4IoTA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9de9ab13f7dbf18499f849557538bf2e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9PxhzNfLQt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.757 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.480Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:11.640Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:11.641Z","userId":"686c5b53468cfdb8117fd950","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.999 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.645Z"}
  console.log
    CSRF token generation: {
      sessionID: '7d7a88e393f98af18c00cc9167f0d632',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LjnfQPqK-MquGxIYjxE68yBNTkHMsd3n7GDw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7d7a88e393f98af18c00cc9167f0d632

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mqnw_x17F_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.871 ms - 67[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:11.747Z"}
[34mdebug[39m: PATCH /api/v1/operators/686c5b53468cfdb8117fd956/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:11.758Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b53468cfdb8117fd956/stats {
      sessionID: '9de9ab13f7dbf18499f849557538bf2e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9de9ab13f7dbf18499f849557538bf2e.A79JlzsQyYfJ8LaTINiGuEQi2NHPIvnMoqmqtBKLH2Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b53468cfdb8117fd956/stats [32m200[0m 117.632 ms - 252[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:12.716Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f048ac4ecc1c223978c9f2ed96dea896',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4BIHKpJ0-mBfSb_P6LSELVsjDsFKXdnGq7bU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f048ac4ecc1c223978c9f2ed96dea896

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gm2uq3tDAJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.015 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:12.812Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:12.965Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:12.965Z","userId":"686c5b54468cfdb8117fd97b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.784 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:12.969Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e78abca48621d3070f43c1a53b1b049c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ssPHHLLc-0ymVM_m94_DJgiu2jtj08BRAwWw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e78abca48621d3070f43c1a53b1b049c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NzMhYSRbv6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.456 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:13.069Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:13.218Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:13.218Z","userId":"686c5b54468cfdb8117fd981","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.029 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:13.222Z"}
  console.log
    CSRF token generation: {
      sessionID: '306616241ea537066f6836261d5bc30b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hNxmaIGe-IH50gTGWbrxzaTO_wXJ2Q2KgnYU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 306616241ea537066f6836261d5bc30b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3r3Ii5uj6z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.059 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b55468cfdb8117fd987/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:13.334Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b55468cfdb8117fd987/stats {
      sessionID: 'e78abca48621d3070f43c1a53b1b049c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae78abca48621d3070f43c1a53b1b049c.681wz0LT0nkbwUAMz60d7pxaAGM32cV%2BujTTRQIV7DE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b55468cfdb8117fd987/stats [32m200[0m 127.086 ms - 268[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:111:18)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:121:26)","timestamp":"2025-07-07T23:42:13.611Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.347Z"}
  console.log
    CSRF token generation: {
      sessionID: '1ef1bde05b959a2c79fc0f5b3d0c8825',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NZDrmnUA-SeGG9n61otmggSv9ePGXTHRSq1U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1ef1bde05b959a2c79fc0f5b3d0c8825

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NfOJsqJ3C_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.594 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.454Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:14.616Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:14.616Z","userId":"686c5b56468cfdb8117fd9ac","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.306 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.619Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cc54316da3127c55f5226ee2235fd52f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NTUqH8xY-pUlyQMIkWtP1U28mxCqfs5ag86Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cc54316da3127c55f5226ee2235fd52f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FyGbSyeLZ3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.606 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.722Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:14.881Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:14.882Z","userId":"686c5b56468cfdb8117fd9b2","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.369 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.884Z"}
  console.log
    CSRF token generation: {
      sessionID: '0080b6270179e8d4cb611ff6534512c4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tEcLC6f0-RvNH4lqdERN1NgaX-en4Z4P8IDY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0080b6270179e8d4cb611ff6534512c4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Epw-4lU08Q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.770 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c5b56468cfdb8117fd9b8/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:14.983Z"}
  console.log
    CSRF check for: /api/v1/operators/686c5b56468cfdb8117fd9b8/stats {
      sessionID: 'cc54316da3127c55f5226ee2235fd52f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Acc54316da3127c55f5226ee2235fd52f.%2BYVvRFrKbXafcCDhYmMqLg97%2FSg8vKoJNp5uQjoL%2Bhw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c5b56468cfdb8117fd9b8/stats [33m400[0m 55.430 ms - 62[0m
PASS tests/integration/operator.test.js (67.066 s)
  Operator Integration Tests
    GET /api/v1/operators
      ✓ should get all operators with admin token (2666 ms)
      ✓ should filter by active status (1612 ms)
      ✓ should filter by on-shift status (2242 ms)
      ✓ should support pagination (3302 ms)
      ✓ should require authentication (1456 ms)
      ✓ should require operator management permissions (1749 ms)
    GET /api/v1/operators/:id
      ✓ should get operator by ID (1661 ms)
      ✓ should allow operators to view their own profile (1501 ms)
      ✓ should prevent operators from viewing other operators (1683 ms)
      ✓ should return 404 for non-existent operator (1617 ms)
    POST /api/v1/operators
      ✓ should create new operator (1840 ms)
      ✓ should validate required fields (1506 ms)
      ✓ should validate email format (1524 ms)
      ✓ should validate shift time format (1477 ms)
      ✓ should prevent duplicate emails (1547 ms)
      ✓ should require operators.manage permission (1815 ms)
    PATCH /api/v1/operators/:id
      ✓ should update operator details (1733 ms)
      ✓ should update password (2127 ms)
      ✓ should deactivate operator (1740 ms)
      ✓ should allow operators to update their own profile (limited fields) (1854 ms)
      ✓ should prevent operators from changing their own work station (1755 ms)
      ✓ should not allow updating operatorId (1732 ms)
      ✓ should validate email uniqueness on update (1680 ms)
    DELETE /api/v1/operators/:id
      ✓ should delete operator (1718 ms)
      ✓ should prevent deleting operator with active orders (1698 ms)
      ✓ should require operators.manage permission (1927 ms)
      ✓ should handle non-existent operator (1536 ms)
    POST /api/v1/operators/:id/reset-pin
      ✓ should reset operator PIN/password (1887 ms)
      ✓ should clear login attempts on PIN reset (1762 ms)
    GET /api/v1/operators/available
      ✓ should get available operators sorted by order count (1843 ms)
      ✓ should respect limit parameter (1767 ms)
      ✓ should only include active operators (1755 ms)
      ✓ should require authentication (1686 ms)
    PATCH /api/v1/operators/:id/stats
      ✓ should update processing statistics (1590 ms)
      ✓ should update quality score (1552 ms)
      ✓ should update both stats in one call (1633 ms)
      ✓ should validate processingTime is positive (1552 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:16.760Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:17.135Z"}
  console.log
    CSRF token generation: {
      sessionID: '156f1c9358b01c8ebc2816c02e8a2ca3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6gakhZQL-DlitIjoRCK94W6KGXuYEBoKjVtU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 156f1c9358b01c8ebc2816c02e8a2ca3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IuDey6jeOh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.505 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:18.103Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:18.285Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 181.413 ms - 544[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:19.309Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ea2dd72a480b26dca2d577d255f93abd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SkVMbZjJ-Kc7Caz9xCIlsKPzGd6ba_VJRkKQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ea2dd72a480b26dca2d577d255f93abd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Pnys3acWAi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.091 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:19.558Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T23:42:19.646Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 87.556 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:20.402Z"}
  console.log
    CSRF token generation: {
      sessionID: '1573752dee9a64950b09f75a70098e2d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: euHLcrcL-weYqWkbH48Xqq7PYpw7WqPuqnAE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1573752dee9a64950b09f75a70098e2d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hKKmsKp5P8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.724 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:20.548Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"User not found","success":false,"timestamp":"2025-07-07T23:42:20.576Z","userType":"affiliate","username":"nonexistent"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 28.283 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:21.314Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e5447cb5bb3441e66fd8e12eabbc80ff',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Il4IHb5O-20dCY9PHG9N6vH2oy0qeWaWb5CA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e5447cb5bb3441e66fd8e12eabbc80ff

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7m0bLlXeq3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.674 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:21.578Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 158.110 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:22.510Z"}
  console.log
    CSRF token generation: {
      sessionID: '148f91487d99ddf0bfb6276dc4a6bce6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ryQ9gaA4-wYkw8IOi-wX_9VcbIv_LiZxWopc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 148f91487d99ddf0bfb6276dc4a6bce6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: m1jdq3C-UZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.049 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:22.805Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 167.512 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:23.733Z"}
  console.log
    CSRF token generation: {
      sessionID: '3ee99c27c72a777a714dfcaa1688ef17',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: biFhG3ay-6wyVgIcSuWm47m_wboyYkfyUvTA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3ee99c27c72a777a714dfcaa1688ef17

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Vs4RY5xAw8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.253 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:24.028Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 210.718 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:25.014Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f23097fd8aefe709a2ae430c9815f644',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QNvwyx56-f6IZIfnW4jeULzc9jFCdTdZkk1A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f23097fd8aefe709a2ae430c9815f644

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Y9jhtZJIE5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.482 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:25.292Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 158.490 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:26.204Z"}
  console.log
    CSRF token generation: {
      sessionID: '681420c49d6721b54f2e278d6aac2280',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: J4rvNpQ5-DypvSaazuhpxyru4qODYSc3P1BQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 681420c49d6721b54f2e278d6aac2280

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EvDNZD7-Rp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.883 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:26.346Z"}
[0mPOST /api/v1/auth/customer/login [33m401[0m 31.901 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:27.270Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aa3b2a3074fdf03b30d52116de42baa5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UwjoDQZI-k3huaPg8dQ_WlPQ_oBMUH665POE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aa3b2a3074fdf03b30d52116de42baa5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: u79uz5N_ir...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.997 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:27.583Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:27.739Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 156.341 ms - 544[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:27.742Z"}
[0mGET /api/v1/auth/verify [32m200[0m 27.963 ms - 129[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:28.519Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a350950ed3b4d83bf1a6ddab617c0a2f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xL5u9Rso-eJ6gzg7bU2LyE_N7IrdZ5b4hiEQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a350950ed3b4d83bf1a6ddab617c0a2f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nOGytQo4jU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.957 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:28.674Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.763 ms - 43[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:29.435Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f5a643437414c235d7cba97674bab680',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PNjbhQjb-ezKwG22g6-J03fKwMEoOQC6K6lc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f5a643437414c235d7cba97674bab680

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WJA79Ipyep...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.693 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:29.572Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.868 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:30.320Z"}
  console.log
    CSRF token generation: {
      sessionID: '609d1cf8a780bc917fa7c1ffab34f3d0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ANb5bJXU-HRIjRaTna4Jwsot2QSqkYm6WR0Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 609d1cf8a780bc917fa7c1ffab34f3d0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: T3UqkF59W2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.868 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:30.568Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:30.714Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.907 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:30.717Z"}
[0mPOST /api/v1/auth/refresh-token [32m200[0m 143.287 ms - 409[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:31.638Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a93457f9b2315d5264f20b021d683070',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8csQDomt-aS-DgqMbqFpav5yD_eMgmmIpkx4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a93457f9b2315d5264f20b021d683070

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: P-UNDd8Ybc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.984 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:31.801Z"}
[0mPOST /api/v1/auth/refresh-token [33m400[0m 1.705 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:32.551Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f11ce2fa0cb92f2e5cb652eb07606663',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: aeLGntW7-XRKOmyWUQfG2lyhy1Lo-_1TS24I

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f11ce2fa0cb92f2e5cb652eb07606663

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZG1IRbx1rK...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.791 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:32.828Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 35.749 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:33.633Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f91e1716a5270f701e8bec70221e5c95',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: a8NmaVWf-qTY4drv3djBKgOmbbfjSyolqmn8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f91e1716a5270f701e8bec70221e5c95

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8zcg1v-_zH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.390 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:33.865Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:34.030Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 163.405 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:34.034Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'f91e1716a5270f701e8bec70221e5c95',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af91e1716a5270f701e8bec70221e5c95.V%2FSghAGdN%2BotBHCBEybBfweNhLVIsbfQd0dNZiGv%2B6o',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 99.073 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:34.138Z"}
[0mGET /api/v1/auth/verify [33m401[0m 32.775 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:34.176Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.410 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:34.955Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd97f5eb96adda9705a5add31a3ca3aa4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Q7hgsRBZ-KTS2lmJMWzxQTAS8MRG-_EfmRS8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d97f5eb96adda9705a5add31a3ca3aa4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ocZRmFy9sA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.775 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.202Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:35.362Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 159.250 ms - 544[0m
  console.log
    Got refresh token: f3900a861ca769e83cb3dfc7200f34cd8949668777808b646a789f613674bfd53f4b84564033a65b

      at Object.log (tests/integration/auth.test.js:805:15)

  console.log
    Starting concurrent requests...

      at Object.log (tests/integration/auth.test.js:819:15)

[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.373Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.376Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.378Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.380Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:35.382Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 34.325 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 32.806 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 37.738 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 37.946 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [32m200[0m 136.299 ms - 409[0m
  console.log
    Responses received: [
      {
        status: 200,
        body: {
          success: true,
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NmM1YjZiNjg1MmViMTMwZDVhNDIyMCIsImFmZmlsaWF0ZUlkIjoiQUZGMTIzIiwicm9sZSI6ImFmZmlsaWF0ZSIsImlhdCI6MTc1MTkzMTc1NSwiZXhwIjoxNzUxOTM1MzU1LCJhdWQiOiJ3YXZlbWF4LWNsaWVudCIsImlzcyI6IndhdmVtYXgtYXBpIn0.aG7LH7KcJNck2dSadpeUY6Qk1b7Fnb7VMX3k_OWfjVs',
          refreshToken: 'aa77bc6b022133a30c24bda180faa0c27bb8a01178fbab614f32874c95ee042587fa9fc8a97546e0'
        }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      }
    ]

      at Object.log (tests/integration/auth.test.js:821:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:36.259Z"}
  console.log
    CSRF token generation: {
      sessionID: '127655df0cc7d0217f4efd5f915b7e04',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: c0qViaQH-VXWL452dVLE0sd28JfDiRpmQMxg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 127655df0cc7d0217f4efd5f915b7e04

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3NvM3syTWL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.208 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:36.507Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:36.654Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.831 ms - 547[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:37.758Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:37.926Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 168.806 ms - 547[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:37.931Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.463 ms - 129[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:37.962Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.143 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:37.996Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: '127655df0cc7d0217f4efd5f915b7e04',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A127655df0cc7d0217f4efd5f915b7e04.huLdNlESSsI2yrBaVOBwp%2FOpa4cHJW4xLEFD0i%2Bz4g4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 108.527 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:38.111Z"}
[0mGET /api/v1/auth/verify [33m401[0m 29.538 ms - 56[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:38.144Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.529 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:38.177Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: '127655df0cc7d0217f4efd5f915b7e04',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A127655df0cc7d0217f4efd5f915b7e04.huLdNlESSsI2yrBaVOBwp%2FOpa4cHJW4xLEFD0i%2Bz4g4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 101.228 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:38.282Z"}
[0mGET /api/v1/auth/verify [33m401[0m 29.375 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:39.074Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e7016e92d8a425691e1ae3886a150e7c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DdW7rKhy-CBKMBlMLQ6EH_LiqB1vO8VUQGSM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e7016e92d8a425691e1ae3886a150e7c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fVn2KoREq7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.535 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:39.312Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:39.476Z","userType":"administrator","username":"admin@example.com"}
info: undefined {"adminId":"ADM001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T23:42:39.476Z","userId":"686c5b6f6852eb130d5a4288","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.902 ms - 684[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:40.315Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aabf1f86c018e3109fc78bafdc7cda90',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xEMX32BX-zBNVXQYN2YfHCJeVlzvrdnGFSMs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aabf1f86c018e3109fc78bafdc7cda90

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E7WdHpnTzM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.322 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:40.558Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T23:42:40.674Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 115.215 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:41.439Z"}
  console.log
    CSRF token generation: {
      sessionID: '407bc9f72cb4c19df20c312502c19451',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QpjnxrWe-5xgYwE9ZWOVoLMTtRiwn39EjODI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 407bc9f72cb4c19df20c312502c19451

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8H52AsynuK...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.836 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:41.682Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T23:42:41.710Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.734 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:42.475Z"}
  console.log
    CSRF token generation: {
      sessionID: '5d8a9e90e419999b6be40eaf4a7ee7c2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: trcVqZ2F-sXZElRzJ8HsnsxmgYbo5zygL8qw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5d8a9e90e419999b6be40eaf4a7ee7c2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: I0aKMzCwEi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.847 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:42.798Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T23:42:42.958Z","userType":"operator","username":"operator@example.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T23:42:42.958Z","userId":"686c5b726852eb130d5a42fa","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.698 ms - 593[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:43.732Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd7376c52870f668b04d24d6cd733fe8b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QAMXgIV3-mB4y0rVE6WDfKkv4ag2ooLZ-TCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d7376c52870f668b04d24d6cd733fe8b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HbV9ju2n_8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.398 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:44.103Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T23:42:44.221Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m401[0m 117.913 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:44.986Z"}
  console.log
    CSRF token generation: {
      sessionID: '30f14dcd4adc26c2dade6d5c4ee9a81f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DZiF9Tax-zD-PsFB_X8yOSXnk8uCtGbzP9QQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 30f14dcd4adc26c2dade6d5c4ee9a81f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: a8_cpihsLk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.631 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:45.304Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T23:42:45.335Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 28.802 ms - 82[0m
PASS tests/integration/auth.test.js (30.165 s)
  Authentication Integration Tests
    POST /api/v1/auth/affiliate/login
      ✓ should login affiliate with valid credentials (2189 ms)
      ✓ should fail with invalid credentials (1093 ms)
      ✓ should fail with non-existent username (911 ms)
    POST /api/v1/auth/customer/login
      ✓ should login customer with valid credentials (1196 ms)
      ✓ should login customer using emailOrUsername field with email (1223 ms)
      ✓ should login customer using emailOrUsername field with username (1281 ms)
      ✓ should prioritize emailOrUsername over username field (1190 ms)
      ✓ should return error with invalid emailOrUsername (1066 ms)
    GET /api/v1/auth/verify
      ✓ should verify valid token (1250 ms)
      ✓ should fail with invalid token (916 ms)
      ✓ should fail with missing token (884 ms)
    POST /api/v1/auth/refresh-token
      ✓ should refresh token successfully (1318 ms)
      ✓ should fail with invalid refresh token (913 ms)
      ✓ should fail with expired refresh token (1081 ms)
    POST /api/v1/auth/logout
      ✓ should logout successfully and blacklist tokens (1321 ms)
    Rate limiting tests
      ○ skipped should rate limit login attempts
      ○ skipped should rate limit refresh token requests
    Concurrent refresh token usage
      ✓ should handle concurrent refresh token requests safely (1304 ms)
    Token blacklisting after logout
      ✓ should blacklist all active tokens on logout (2814 ms)
    POST /api/v1/auth/administrator/login
      ✓ should login administrator with valid credentials (1240 ms)
      ✓ should fail with invalid administrator credentials (1123 ms)
      ✓ should fail when administrator is inactive (1036 ms)
    POST /api/v1/auth/operator/login
      ✓ should login operator with valid credentials (1257 ms)
      ✓ should fail with invalid operator credentials (1253 ms)
      ✓ should fail when operator is inactive (1107 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:46.870Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:47.265Z"}
  console.log
    CSRF token generation: {
      sessionID: '6178c2f89379fba38b0f0276d795399d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: FJtLIpOE-SNpvE3grfzjwlBgA02yTfFjxDLs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6178c2f89379fba38b0f0276d795399d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lwntyzNNVz...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.785 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:48.163Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '6178c2f89379fba38b0f0276d795399d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6178c2f89379fba38b0f0276d795399d.xzsZ4TcLcGjm3jjVZScMGpuy38Q9pmNIOQt6Efk6Txw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD138850
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD138850
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Ring doorbell
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 358.771 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:49.502Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ef36ec64a7bbeeb999030b78f49cf1a7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZEJXQOP6-6CSh7HlNXm7nJlvMFEUA7v6krqk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ef36ec64a7bbeeb999030b78f49cf1a7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8zUhR23EgJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.562 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:49.768Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'ef36ec64a7bbeeb999030b78f49cf1a7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aef36ec64a7bbeeb999030b78f49cf1a7.nMuhcepFTYZuBhfoAV8WTMj%2B8ubPPLw81w4PwuPv8nI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD270823
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $43.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD270823
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 261.581 ms - 125[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:50.816Z"}
  console.log
    CSRF token generation: {
      sessionID: '713f47c8363fd6f976651df4a1ef9707',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jxphcBxS-XlwtnAxvFKfYbw7V-lq2g8alfBw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 713f47c8363fd6f976651df4a1ef9707

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: v7F2zIy8FV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.389 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:51.122Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '713f47c8363fd6f976651df4a1ef9707',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A713f47c8363fd6f976651df4a1ef9707.gvEYE2eCbUhZRFcOBbOM7GiBuAx%2BOGlSRzf%2Fdu5B8Ys',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'INVALID',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at log (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at log (server/controllers/orderController.js:130:15)

[0mPOST /api/v1/orders [33m400[0m 59.190 ms - 49[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:51.955Z"}
  console.log
    CSRF token generation: {
      sessionID: '3685a6b2441bec987f4f06dee415d13e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MUoD9CJf-1b163vOYDsLhCOaSu0pCP0QaGOs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3685a6b2441bec987f4f06dee415d13e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -7VRj5GwL9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.785 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:52.233Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '3685a6b2441bec987f4f06dee415d13e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3685a6b2441bec987f4f06dee415d13e.SVLYHRUHys8dIgDmqs6ej6U6EVLNSTkYgGJ32vaSvE0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'INVALID',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at log (server/controllers/orderController.js:159:15)

[0mPOST /api/v1/orders [33m400[0m 120.764 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:53.089Z"}
  console.log
    CSRF token generation: {
      sessionID: '09b1291befd6ffbb5a2b212cd26ace0b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: q9xISa7Z-i8yI3ZIGXwHyNXftwWTHD-qbzOM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 09b1291befd6ffbb5a2b212cd26ace0b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eaLVnp4qz-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.531 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:53.399Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '09b1291befd6ffbb5a2b212cd26ace0b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A09b1291befd6ffbb5a2b212cd26ace0b.up9CPHKagpgd1u%2Fwa9a9IheMPAvTwzKitWhmeNJb%2FpQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST999',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST999

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Bob Jones

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

[0mPOST /api/v1/orders [33m403[0m 127.582 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:54.292Z"}
  console.log
    CSRF token generation: {
      sessionID: '1f7b59d7aa209d2f5166488c7a689d01',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dLkdgdz7-x3NPdZL19u3-vgDhjBk_Op6n-KU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1f7b59d7aa209d2f5166488c7a689d01

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1rvNm5qHdw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.346 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:54.581Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '1f7b59d7aa209d2f5166488c7a689d01',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1f7b59d7aa209d2f5166488c7a689d01.bsnyMsBrjkz4GV9zeZq%2BONu4mnWu414KMFAQLhHT%2BHY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Validation errors: [
      {
        type: 'field',
        value: undefined,
        msg: 'Valid pickup date is required',
        path: 'pickupDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid pickup time',
        path: 'pickupTime',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Number of bags must be at least 1',
        path: 'numberOfBags',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Estimated weight must be a positive number',
        path: 'estimatedWeight',
        location: 'body'
      }
    ]

      at log (server/controllers/orderController.js:105:15)

[0mPOST /api/v1/orders [33m400[0m 30.695 ms - 444[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:55.387Z"}
  console.log
    CSRF token generation: {
      sessionID: '44184ec82f1c57a1d82613d32a4a1ebd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: u83BamjE-j8PZ8As1ZtCJFSHdpcSKc5l9CZU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 44184ec82f1c57a1d82613d32a4a1ebd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kywBAujQWl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.384 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:55.700Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 107.523 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:56.602Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f43a8ccab81d40c189cb27a30c49b04c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 53ZFgiUm-GShU3KRtk1WDmX0IysSoX63LfCQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f43a8ccab81d40c189cb27a30c49b04c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9pf7EFIVJB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.391 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:56.920Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 112.809 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:58.030Z"}
  console.log
    CSRF token generation: {
      sessionID: '880e5f1c4020af2a411b44d066153a8d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: g2QCPE1K-iquc2dQHZCtRMb8kz6kdSbIaQKM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 880e5f1c4020af2a411b44d066153a8d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FyyplINlun...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.083 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:58.361Z"}
[0mGET /api/v1/orders/ORD123456 [33m403[0m 56.757 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:59.404Z"}
  console.log
    CSRF token generation: {
      sessionID: '84197178bb5754b2d3db63d9420748fa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hOEavR4D-XHZZ33atVmJFRdnt-JpqZ9wIExY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 84197178bb5754b2d3db63d9420748fa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KUyzMAJj08...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.825 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/NONEXISTENT {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:42:59.745Z"}
[0mGET /api/v1/orders/NONEXISTENT [33m404[0m 54.146 ms - 45[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:00.587Z"}
  console.log
    CSRF token generation: {
      sessionID: '8554029a8a63c5feb7102d92a2221172',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2IkcbYaR-vgPtLFs5TnNCbcEGuF7ScxScupc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8554029a8a63c5feb7102d92a2221172

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: G6kL94Ohg2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.180 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:00.939Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '8554029a8a63c5feb7102d92a2221172',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8554029a8a63c5feb7102d92a2221172.kBlEisVG4DvOco4aciihVURUf6s%2FfRpNA1eBP%2FOhqzo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Laundry Processing

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry has been received and is being processed
                    </div>
                    
                    
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 146.927 ms - 131[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:01.884Z"}
  console.log
    CSRF token generation: {
      sessionID: '49491395eaa621f656e4729a1be68b2a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: q901rtVH-i2gd9Ot5Weq9fZWb1y_vJSpDbC0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 49491395eaa621f656e4729a1be68b2a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EmNmLn9SJC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.202 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:02.468Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '49491395eaa621f656e4729a1be68b2a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A49491395eaa621f656e4729a1be68b2a.agHv3MoMRAuYw1o1AUGKKkshpg2Exz2fk0tcLVNqBbM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Ready for Pickup

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry is ready for pickup by the affiliate
                    </div>
                    <div class="detail-row"><span class="detail-label">Weight:</span> 25.5 lbs</div>
                    <div class="detail-row"><span class="detail-label">Final Total:</span> $48.20</div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 147.377 ms - 172[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:03.410Z"}
  console.log
    CSRF token generation: {
      sessionID: '14e33f845bfa4e0e02a101f939762e26',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eaMv1GRW-NZEmlZvvY3QNRyWrJDRqUOGh7H8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 14e33f845bfa4e0e02a101f939762e26

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dFXpG8lizo...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.615 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:03.756Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '14e33f845bfa4e0e02a101f939762e26',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A14e33f845bfa4e0e02a101f939762e26.ZYQ1uSu5gh2K2kHgqETrHdb5Xf6y911SG1i1sDQUyOw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m400[0m 57.570 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:04.571Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eac6d1bf49f0a204018d5e2cc1cce2b6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EN6tcV2g-YQ-TrtKMYyGKMqqcXwUW3CA2EHM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: eac6d1bf49f0a204018d5e2cc1cce2b6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: MbaQhNLxmj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.906 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:04.875Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'eac6d1bf49f0a204018d5e2cc1cce2b6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aeac6d1bf49f0a204018d5e2cc1cce2b6.yH0aDmv6HrGhCZFOmmP54fDLlW%2F43gzAtY0MCmdN%2B98',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 58.341 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:05.699Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c25198cdb14366725a652e910eb3703d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mQJ9sGSA-W1A3B3sdGWDZ5dL4gIQxZXYl7m0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c25198cdb14366725a652e910eb3703d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ytVrEyEBar...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.849 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:06.013Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'c25198cdb14366725a652e910eb3703d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac25198cdb14366725a652e910eb3703d.K6BajWFBoKwjj01gxL8KLtokFMvrPYrCjYuJgCpMw0c',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 57.976 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:06.848Z"}
  console.log
    CSRF token generation: {
      sessionID: '4ebc3db574f11de8d791e560ed295525',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7dDF53To-H04hXCC9RFV6sv1CYP6WoCq5V_M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4ebc3db574f11de8d791e560ed295525

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Zqi8Zv2z7l...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.603 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:07.167Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '4ebc3db574f11de8d791e560ed295525',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4ebc3db574f11de8d791e560ed295525.ct9UpNQMJ%2BjSE32gUbzhM2orBmrVfrb14MHxD%2Bbhtbc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 11:43:07 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 11:43:07 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 158.841 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:08.124Z"}
  console.log
    CSRF token generation: {
      sessionID: '2b4ba71815d435380dacbc82e40437f2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: raUcbPxc-l1jyYmcYP1B1FhZkMzjLQ1uvs_k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2b4ba71815d435380dacbc82e40437f2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZO0AmTU_St...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.533 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:08.455Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '2b4ba71815d435380dacbc82e40437f2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2b4ba71815d435380dacbc82e40437f2.EyomfNTpnKV7AkX6%2FTothCvXVzc2ysd%2FBteVWlAkOyo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 11:43:08 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 11:43:08 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 147.012 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:09.374Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a4ad214119a1e57814b433b77e03ce59',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: efWnYcQ8-1DtH_vvu3g0oFDiqhAP_LDY7Jvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a4ad214119a1e57814b433b77e03ce59

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: e4Nb-oQAjm...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.870 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:09.772Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'a4ad214119a1e57814b433b77e03ce59',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa4ad214119a1e57814b433b77e03ce59.vHBIx4wvIH0%2FmK8j6NsWF1OHcG5ZQIQNg65u9T%2Bl%2BN4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m400[0m 55.630 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:10.624Z"}
  console.log
    CSRF token generation: {
      sessionID: '3c5aec7a5786c61a9ff86e1cf9dba881',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cl9EkZy4-8ErEj0DF1zEfhWStkj0w49aZVqA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3c5aec7a5786c61a9ff86e1cf9dba881

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WkkaIxkumx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.420 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:10.978Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '3c5aec7a5786c61a9ff86e1cf9dba881',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3c5aec7a5786c61a9ff86e1cf9dba881.pf78N%2Fbyj6iKg80lMiyqjTfgEx3MWnyB6bA43WWTHBg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m403[0m 57.041 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:12.044Z"}
  console.log
    CSRF token generation: {
      sessionID: '3ff17bc754ad3e3b26d2e6f536a270f8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ruXN9duM-cfZq0raeFaleEanEG5O11K04PnM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3ff17bc754ad3e3b26d2e6f536a270f8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XhmmhMW3j4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.670 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:12.361Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '3ff17bc754ad3e3b26d2e6f536a270f8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3ff17bc754ad3e3b26d2e6f536a270f8.iGPwFgasPLyjQ1VZBKx0YoVvYszEpyIsFPfNIbFxc2E',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 128.420 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:13.297Z"}
  console.log
    CSRF token generation: {
      sessionID: 'acf5717d7e74c2808ceea35df4969d11',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1JbNDIKk-s35ICTLCp-a8q8QpeYaR4zkda2Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: acf5717d7e74c2808ceea35df4969d11

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YqYMKsh6dB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.353 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:13.642Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: 'acf5717d7e74c2808ceea35df4969d11',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aacf5717d7e74c2808ceea35df4969d11.7aQZBBkRCM0WPXBhrNnyybbnlXP5H7X7AOlBxLX17VY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 132.040 ms - 296[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:14.534Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fa20b5ed525cf0ea7890eb1d4f17836c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XmPOFEim-S0_yAtq2ktpUnt7ec8K8Fsp8wHc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fa20b5ed525cf0ea7890eb1d4f17836c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: SutiuEDXhO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.075 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/bulk/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:14.860Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/cancel {
      sessionID: 'fa20b5ed525cf0ea7890eb1d4f17836c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afa20b5ed525cf0ea7890eb1d4f17836c.S64NYzyuC23rWlzNw7G8E5LFCGdgBTquWPp%2BVVE9p1s',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/bulk/cancel [32m200[0m 186.475 ms - 161[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:15.854Z"}
  console.log
    CSRF token generation: {
      sessionID: '0e9f444740196c762da83e5e16aa0509',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0mVVz3Ms-Bt-tpU9F4UvtOiITMcjM5u82H6A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0e9f444740196c762da83e5e16aa0509

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aMvXuDTS-m...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.252 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:16.226Z"}
[0mGET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 [32m200[0m 88.611 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:17.096Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bb719d04eedc2942a318e57fd5fe8d28',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pTKzKGZo-MROSqSUG8U-iU4vYHYFrm6IgYDI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bb719d04eedc2942a318e57fd5fe8d28

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: PIeppusEEk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.043 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:17.460Z"}
[0mGET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 [32m200[0m 87.889 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:18.325Z"}
  console.log
    CSRF token generation: {
      sessionID: '6ddfcf4c9daf2f0999ec7addd4584242',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jGHFYgv0-SVFkFHI_csKK_taNSF3YIV0YbsM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6ddfcf4c9daf2f0999ec7addd4584242

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kByGDKcEXF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.980 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=excel&customerId=CUST123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:18.659Z"}
[0mGET /api/v1/orders/export?format=excel&customerId=CUST123 [31m501[0m 86.502 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:19.528Z"}
  console.log
    CSRF token generation: {
      sessionID: '13820564d8083367bd36c4b2f4e594be',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Uax4u5cI-8W3KWD2BNdiegK4FsXvvuMSencA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 13820564d8083367bd36c4b2f4e594be

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gtrkRomM62...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.176 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:19.887Z"}
[0mGET /api/v1/orders/export?format=csv [33m403[0m 28.705 ms - 70[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:20.695Z"}
  console.log
    CSRF token generation: {
      sessionID: '82f1de4f224b4ea0cebcf0e2423bc591',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: FFIelWds-ZgGpCUCn9wHSqf9aKwhboQbDOLg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 82f1de4f224b4ea0cebcf0e2423bc591

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mRohkSzZVh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.864 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:21.022Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '82f1de4f224b4ea0cebcf0e2423bc591',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A82f1de4f224b4ea0cebcf0e2423bc591.D7FjutcabivMjeJBh0e3XB5mezJIm2tS%2BUNjNUVCkug',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 95.872 ms - 223[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:21.923Z"}
  console.log
    CSRF token generation: {
      sessionID: '43b1a5d6937cea5066a21d508c2b7803',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bpfOQIh9-0DoYybZv9yZ290FR0cdomuBEpD0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 43b1a5d6937cea5066a21d508c2b7803

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dtn_osaUM4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.096 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:22.237Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '43b1a5d6937cea5066a21d508c2b7803',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A43b1a5d6937cea5066a21d508c2b7803.FPU7IwZwkz9TvsU2pPAX%2BiJFq5r9FfU3M8YvktpiYmo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 93.528 ms - 180[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:23.091Z"}
  console.log
    CSRF token generation: {
      sessionID: '37a6787d8a182a38d9c7bd325d962c5b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 65OetzyW-nRJbmG_nDcreUtYB_M2DuWyS-o0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 37a6787d8a182a38d9c7bd325d962c5b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mqUaUb05L6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.754 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:23.440Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '37a6787d8a182a38d9c7bd325d962c5b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A37a6787d8a182a38d9c7bd325d962c5b.MQQoiaGT3hztHYFER%2BGuMVCNT0e4XvT0KTj4QrEayK8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [33m400[0m 57.139 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:24.254Z"}
  console.log
    CSRF token generation: {
      sessionID: '247618ccb0eae348e30b0e0511e491cd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v0o7Gupe-YXX0OcqC9Hn8_bYv1i_INeixhPc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 247618ccb0eae348e30b0e0511e491cd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: r1LrW0F7oX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.584 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:24.626Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '247618ccb0eae348e30b0e0511e491cd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A247618ccb0eae348e30b0e0511e491cd.rMaDAA%2BksN%2BplWAIlaPC%2Bv7y9LX8YXcXmE3PL3MV81A',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 86.203 ms - 319[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:25.461Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd4eef9300b9b3bf157acf859550eb82b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KyQATNzx-JTQ1QAxwyXhg46NFanBFTB1LvuU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d4eef9300b9b3bf157acf859550eb82b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DflbqCirj4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.248 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/search?search=alice&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:26.136Z"}
[0mGET /api/v1/orders/search?search=alice&affiliateId=AFF123 [32m200[0m 185.837 ms - 552[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:27.156Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ae0b4834a27823759d1eb674481b8b28',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jmFcKBSQ-roNymw3VJLRFaRfacz9t8dDT8aI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ae0b4834a27823759d1eb674481b8b28

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QNfao8xzAG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.413 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=complete&date=month {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:27.542Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=complete&date=month [32m200[0m 114.876 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:28.442Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f4baced3780218d7b50fc5782e94af11',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IUsRFPXl-EzYhmbyLM5cBRJ23tyU_aVg8Wis

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f4baced3780218d7b50fc5782e94af11

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LfRFbcA9u8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.108 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=all {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:28.817Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=all [32m200[0m 116.112 ms - 945[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:29.717Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e2a0cf0344dc66048ff8489b99e5d7d6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ovlv1WTN-Aij3W4u_2XcEgr_yVmVWWL-qtMM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e2a0cf0344dc66048ff8489b99e5d7d6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ibjtJ9Ydug...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.214 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:30.067Z"}
[0mGET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true [32m200[0m 58.047 ms - 239[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:30.931Z"}
  console.log
    CSRF token generation: {
      sessionID: '35ea596221bf436903b1309291fbf307',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YpXptaEE-RAjjbilx5-MEHPe-8OM7Aa8h34g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 35ea596221bf436903b1309291fbf307

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 82cUyMr6Z2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.713 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:31.797Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '35ea596221bf436903b1309291fbf307',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A35ea596221bf436903b1309291fbf307.m98a7z7K1YiAfgcoJIWUoARrhATFb%2FgQs6ND7uvbjW8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD440197
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD440197
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 255.803 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:32.918Z"}
  console.log
    CSRF token generation: {
      sessionID: '3fb80d206e8ef8a61e01e13e66ef70ca',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JmCEahYa-Vz5tAdcwHF6Ev5PJ0PkoGV5gfho

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3fb80d206e8ef8a61e01e13e66ef70ca

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rE49UmV1Us...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.712 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:33.865Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '3fb80d206e8ef8a61e01e13e66ef70ca',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3fb80d206e8ef8a61e01e13e66ef70ca.fPYKH4S4WbbkeQz5P49BTvfVgP3O5sry6qN5bJd9aiw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 50,
      numberOfBags: 3
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD773483
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $125.00
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD773483
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 50 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 3
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 247.168 ms - 123[0m
  console.log
    Order baseRate: 2 Expected: 2.00

      at Object.log (tests/integration/order.test.js:1139:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:35.102Z"}
  console.log
    CSRF token generation: {
      sessionID: '47e3db76a5bb6238cdf581d10bc0f978',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NbjaXM1F-KiT0nNXJYiJn5_TIGBNfq2zIwDY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 47e3db76a5bb6238cdf581d10bc0f978

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XKVHC-2WfR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.713 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:36.052Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '47e3db76a5bb6238cdf581d10bc0f978',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A47e3db76a5bb6238cdf581d10bc0f978.JJiCrgMZUKWY67HW4gyQo1OYHx8718BOjliP2%2FKdPKI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-0',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-0

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test0 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test0,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD280550
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD280550
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test0 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 249.528 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:36.394Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '47e3db76a5bb6238cdf581d10bc0f978',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A47e3db76a5bb6238cdf581d10bc0f978.JJiCrgMZUKWY67HW4gyQo1OYHx8718BOjliP2%2FKdPKI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-1',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-1

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test1 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test1,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD170569
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD170569
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test1 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 253.061 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:36.736Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '47e3db76a5bb6238cdf581d10bc0f978',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A47e3db76a5bb6238cdf581d10bc0f978.JJiCrgMZUKWY67HW4gyQo1OYHx8718BOjliP2%2FKdPKI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-2',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-2

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test2 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test2,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD702183
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD702183
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test2 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 271.728 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:38.037Z"}
  console.log
    CSRF token generation: {
      sessionID: '7a99371b46baf2bac985ad777315ec87',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9bhLtYBS-as-xepzKml0joVi4cVENPFM_0vs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7a99371b46baf2bac985ad777315ec87

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ybNu61kTIa...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.765 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T23:43:38.861Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '7a99371b46baf2bac985ad777315ec87',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7a99371b46baf2bac985ad777315ec87.a2pDdbBZwAHi3RMH%2BhgKxFI0m2fy42dtrnmzv21%2FlX8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD204646
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $68.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD204646
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 244.609 ms - 125[0m
PASS tests/integration/order.test.js (53.898 s)
  Order Integration Tests
    POST /api/v1/orders
      ✓ should create order as customer (2257 ms)
      ✓ should create order as affiliate for their customer (1313 ms)
      ✓ should fail with invalid customer ID (1139 ms)
      ✓ should fail with invalid affiliate ID (1134 ms)
      ✓ should fail when customer tries to create order for another customer (1204 ms)
      ✓ should validate required fields (1094 ms)
    GET /api/v1/orders/:orderId
      ✓ should return order details for customer (1213 ms)
      ✓ should return order details for affiliate (1431 ms)
      ✓ should fail for unauthorized customer (1373 ms)
      ✓ should return 404 for non-existent order (1183 ms)
    PUT /api/v1/orders/:orderId/status
      ✓ should update order status as affiliate (1297 ms)
      ✓ should update weight when processing (1525 ms)
      ✓ should prevent invalid status transitions (1161 ms)
      ✓ should fail for unauthorized affiliate (1128 ms)
      ✓ should fail for customers (1149 ms)
    POST /api/v1/orders/:orderId/cancel
      ✓ should cancel order as customer (1276 ms)
      ✓ should cancel order as affiliate (1250 ms)
      ✓ should prevent cancelling non-cancellable orders (1250 ms)
      ✓ should fail for unauthorized user (1420 ms)
    Bulk order operations
      ✓ should update multiple orders status in bulk (1253 ms)
      ✓ should handle partial bulk update failures (1237 ms)
      ✓ should cancel multiple orders in bulk (1319 ms)
    Order export functionality
      ✓ should export orders as CSV (1241 ms)
      ✓ should export orders as JSON (1230 ms)
      ✓ should export orders as Excel (1201 ms)
      ✓ should respect export permissions (1168 ms)
    Payment status updates
      ✓ should update payment status (1228 ms)
      ✓ should handle payment failure (1167 ms)
      ✓ should prevent payment status update on non-complete orders (1162 ms)
      ✓ should record refund (1207 ms)
    Order filtering and search
      ✓ should search orders by customer name (1694 ms)
      ✓ should filter orders by multiple criteria (1285 ms)
      ✓ should filter by pickup time slots (1274 ms)
      ✓ should provide aggregated statistics with filters (1214 ms)
    Commission Calculation Tests
      ✓ should calculate commission correctly when order is completed (1987 ms)
      ✓ should use dynamic WDF rate from SystemConfig (2184 ms)
      ✓ should calculate commission for multiple orders (2935 ms)
      ✓ should handle high delivery fee scenarios (1938 ms)

Summary of all failing tests
FAIL tests/unit/wdfCredit.test.js (22.035 s)
  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      334 |
      335 |       // Check response
    > 336 |       expect(res.statusCode).toBe(201);
          |                              ^
      337 |       const responseData = JSON.parse(res._getData());
      338 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      339 |

      at Object.toBe (tests/unit/wdfCredit.test.js:336:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      389 |
      390 |       // Check response
    > 391 |       expect(res.statusCode).toBe(201);
          |                              ^
      392 |       
      393 |       // Verify no credit was applied
      394 |       const responseData = JSON.parse(res._getData());

      at Object.toBe (tests/unit/wdfCredit.test.js:391:30)

FAIL tests/integration/wdfCreditIntegration.test.js (13.846 s)
  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      173 |         });
      174 |
    > 175 |       expect(secondOrderRes.status).toBe(201);
          |                                     ^
      176 |       expect(secondOrderRes.body.wdfCreditApplied).toBe(6.25);
      177 |       
      178 |       // Step 5: Verify credit was consumed

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:175:37)

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      246 |         });
      247 |
    > 248 |       expect(secondOrderRes.status).toBe(201);
          |                                     ^
      249 |       expect(secondOrderRes.body.wdfCreditApplied).toBe(-6.25);
      250 |
      251 |       // Verify total includes the debit

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:248:37)

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      299 |         .query({ customerId: testCustomer.customerId });
      300 |
    > 301 |       expect(res.status).toBe(200);
          |                          ^
      302 |       expect(res.body.orders).toHaveLength(1);
      303 |       expect(res.body.orders[0]).toHaveProperty('wdfCreditApplied', 5.00);
      304 |       expect(res.body.orders[0]).toHaveProperty('wdfCreditGenerated', 6.25);

      at Object.toBe (tests/integration/wdfCreditIntegration.test.js:301:26)


Test Suites: 2 failed, 103 passed, 105 total
Tests:       5 failed, 4 skipped, 2110 passed, 2119 total
Snapshots:   0 total
Time:        653.326 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
