
> wavemax-affiliate-program@1.0.0 test:coverage
> jest --coverage --runInBand --forceExit

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/logger.test.js
  Logger Utility
    ✓ should export logger methods (80 ms)
    ✓ should be a winston logger instance (21 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/routingRoutes.test.js
  Routing Routes
    GET /
      ✓ should serve filmwalk index.html (24 ms)
      ✓ should handle root path without trailing slash (4 ms)
      ✓ should return 404 for non-existent paths (4 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentModel.test.js
  Payment Model Methods
    Instance Methods
      ✓ should determine if payment can be captured (116 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryption.test.js
  Encryption Utility
    ✓ should hash password correctly (61 ms)
    ✓ should verify password correctly (207 ms)
    ✓ should encrypt and decrypt data correctly (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixService.test.js
  Paygistix Service
    getConfig
      ✓ should return client config from paygistixConfig (2 ms)
    isConfigured
      ✓ should return true when properly configured (1 ms)
      ✓ should return false when not configured (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paginationMiddleware.test.js
  Pagination Middleware
    ✓ should set default pagination values when no query params provided (3 ms)
    ✓ should parse page and limit from query params (1 ms)
    ✓ should enforce minimum values
    ✓ should enforce maximum limit (1 ms)
    ✓ should handle non-numeric values
    ✓ should calculate skip correctly for different pages (1 ms)
    ✓ should handle floating point numbers
    ✓ should preserve other query parameters (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/helpers.test.js
  Helpers Utility Functions
    formatCurrency
      ✓ should format a number as USD currency by default (28 ms)
      ✓ should handle null and undefined amounts (1 ms)
      ✓ should handle NaN values (1 ms)
      ✓ should parse string amounts
      ✓ should format with different currencies (1 ms)
      ✓ should handle negative amounts (1 ms)
      ✓ should round to 2 decimal places
    formatDate
      ✓ should format date with short format by default (6 ms)
      ✓ should format date with long format (1 ms)
      ✓ should format date with ISO format
      ✓ should handle string dates
      ✓ should handle null and undefined dates (1 ms)
      ✓ should handle invalid dates
      ✓ should handle different format cases (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportGoogleOnly.test.js
  Google OAuth Passport Configuration - Isolated
    ✓ should handle Google OAuth callback correctly (2 ms)
    ✓ should configure Google strategy with correct parameters (1 ms)
    ✓ should support state parameter for context detection

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/quickbooksRoutesSimple.test.js
  QuickBooks Routes - Simple
    GET /api/quickbooks/vendors/export
      ✓ should export vendors (14 ms)
      ✓ should export vendors as CSV (4 ms)
    GET /api/quickbooks/payments/export
      ✓ should export payment summary (4 ms)
    GET /api/quickbooks/commissions/export
      ✓ should export commission detail (4 ms)
    GET /api/quickbooks/exports
      ✓ should get export history (4 ms)
      ✓ should filter export history by type (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateModel.test.js
  Affiliate Model Methods
    Virtual Properties
      ✓ should calculate full name virtual property (176 ms)
    Payment Methods
      ✓ should determine if affiliate can receive payments (166 ms)
    W9 Status Display
      ✓ should return correct W9 status display text (148 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportFacebookOnly.test.js
  Facebook OAuth Passport Configuration - Isolated
    ✓ should handle Facebook OAuth callback correctly (1 ms)
    ✓ should configure Facebook strategy with profile fields (1 ms)
    ✓ should configure Facebook strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportLinkedInOnly.test.js
  LinkedIn OAuth Passport Configuration - Isolated
    ✓ should handle LinkedIn OAuth callback correctly (1 ms)
    ✓ should configure LinkedIn strategy with correct scope
    ✓ should configure LinkedIn strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorAdditional.test.js
  Administrator Model - Additional Coverage
    Permission Methods
      ✓ should check single permission with hasPermission (292 ms)
      ✓ should check all permissions with hasAllPermissions (255 ms)
    Password History
      ✓ should check if password is in history (735 ms)
      ✓ should handle empty password history (208 ms)
    Virtual Properties
      ✓ should calculate isLocked virtual property correctly (159 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /non-existent-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /protected-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /file%20with%20spaces.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /../../../etc/passwd

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /styles.css

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /script.js

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] POST /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] PUT /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] DELETE /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

PASS tests/unit/coverageRoutesAdditional.test.js
  Coverage Routes - Additional Coverage
    Error Handler Function
      ✓ should handle file not found errors (14 ms)
      ✓ should handle permission denied errors (4 ms)
    Static File Serving Edge Cases
      ✓ should handle requests with special characters in filename (4 ms)
      ✓ should handle requests with directory traversal attempts (4 ms)
      ✓ should serve CSS files with proper headers (7 ms)
      ✓ should serve JS files with proper headers (4 ms)
    Environment-specific Behavior
      ✓ should handle staging environment (2 ms)
    Request Method Handling
      ✓ should reject POST requests (4 ms)
      ✓ should reject PUT requests (3 ms)
      ✓ should reject DELETE requests (4 ms)
    Concurrent Request Handling
      ✓ should handle multiple simultaneous requests (36 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutesSimple.test.js
  Order Routes - Simple
    POST /api/orders
      ✓ should create order with valid data (14 ms)
    GET /api/orders/export
      ✓ should export orders (3 ms)
    GET /api/orders/search
      ✓ should search orders (2 ms)
    GET /api/orders/statistics
      ✓ should get order statistics (3 ms)
    PUT /api/orders/bulk/status
      ✓ should bulk update order status (3 ms)
    POST /api/orders/bulk/cancel
      ✓ should bulk cancel orders (2 ms)
    GET /api/orders/:orderId
      ✓ should get order details (3 ms)
    PUT /api/orders/:orderId/status
      ✓ should update order status (3 ms)
    POST /api/orders/:orderId/cancel
      ✓ should cancel order (2 ms)
    PUT /api/orders/:orderId/payment-status
      ✓ should update payment status (8 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModelSimple.test.js
  Order Model - Line Coverage
    SystemConfig Error Handling (Line 110)
      ✓ should use default base rate when SystemConfig.getValue throws error (225 ms)
    Status Timestamp Updates (Lines 132-148)
      ✓ should set processingStartedAt when status changes to processing (242 ms)
      ✓ should set processedAt when status changes to processed (237 ms)
      ✓ should set completedAt when status changes to complete (237 ms)
      ✓ should set cancelledAt when status changes to cancelled (277 ms)
      ✓ should not overwrite existing timestamps (235 ms)
    Actual Weight and Commission Calculations
      ✓ should calculate actualTotal and commission when actualWeight is set (238 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:11.651Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:11.864Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:35:11.897Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:12.106Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:12.273Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:13.041Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:35:13.231Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

PASS tests/unit/docusignToken.test.js
  DocuSignToken Model
    saveToken
      ✓ should save a new token with all fields (197 ms)
      ✓ should update existing token if one exists (253 ms)
      ✓ should calculate expiration time correctly (162 ms)
    getCurrentToken
      ✓ should return the most recent token (185 ms)
      ✓ should return null if no tokens exist (143 ms)
    clearTokens
      ✓ should remove all tokens (285 ms)
    token expiration
      ✓ should identify expired tokens (162 ms)
      ✓ should handle tokens without refresh token (180 ms)
    lastUsed tracking
      ✓ should update lastUsed when token is accessed (276 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/modelsAdditional.test.js
  Models - Additional Coverage
    Administrator Model - Pre-save Hook
      ✓ should add password to history on password change (318 ms)
      ✓ should limit password history to 5 entries (149 ms)
    Payment Model - Helper Methods
      ✓ should have a method to format payment display (134 ms)
      ✓ should validate payment can be refunded (118 ms)
      ✓ should calculate net amount after fees (119 ms)
    Edge Cases and Error Handling
      ✓ should handle missing required fields gracefully (115 ms)
      ✓ should handle invalid enum values (119 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethodModel.test.js
  PaymentMethod Model Methods
    Virtual Properties
      ✓ should calculate displayName for card payment method (90 ms)
      ✓ should calculate displayName for bank account payment method (107 ms)
      ✓ should return unknown for unsupported payment type (111 ms)
      ✓ should check if card is expired (89 ms)
    Static Methods
      ✓ should find default payment method for customer (427 ms)
      ✓ should find active payment methods for customer (253 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutes.isolated.test.js
  Order Routes - Isolated V2
    ✓ POST /api/orders - should create a new order (19 ms)
    ✓ GET /api/orders/export - should export orders (4 ms)
    ✓ GET /api/orders/search - should search orders (3 ms)
    ✓ GET /api/orders/statistics - should get statistics (3 ms)
    ✓ PUT /api/orders/bulk/status - should bulk update (3 ms)
    ✓ POST /api/orders/bulk/cancel - should bulk cancel (3 ms)
    ✓ GET /api/orders/:orderId - should get order details (3 ms)
    ✓ PUT /api/orders/:orderId/status - should update status (2 ms)
    ✓ POST /api/orders/:orderId/cancel - should cancel order (3 ms)
    ✓ PUT /api/orders/:orderId/payment-status - should update payment (2 ms)
    ✓ Error handling - should return 404 for unknown routes (4 ms)
    ✓ Error handling - should handle controller errors (4 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/authRoutesSimple.test.js
  Auth Routes - Simple
    POST /api/auth/login
      ✓ should login with valid credentials (7 ms)
      ✓ should reject invalid credentials (2 ms)
    POST /api/auth/register
      ✓ should register new user (3 ms)
    POST /api/auth/logout
      ✓ should logout with valid token (2 ms)
      ✓ should reject logout without token (2 ms)
    POST /api/auth/forgot-password
      ✓ should send password reset email (2 ms)
    POST /api/auth/reset-password
      ✓ should reset password with valid token (3 ms)
    GET /api/auth/verify-email/:token
      ✓ should verify email with valid token (3 ms)
    POST /api/auth/refresh-token
      ✓ should refresh token (2 ms)
    GET /api/auth/me
      ✓ should get current user with valid token (3 ms)
      ✓ should reject without token (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateLoginInit.test.js
  Affiliate Login Initialization
    Module Loading
      ✓ should initialize when form is found (7 ms)
      ✓ should handle missing form gracefully (1 ms)
    URL Parameter Handling Logic
      ✓ should correctly parse customer parameter from URL (1 ms)
      ✓ should handle URL without customer parameter
      ✓ should construct redirect URL correctly with customer parameter
      ✓ should construct redirect URL correctly without customer parameter (1 ms)
    URL Validation
      ✓ should validate customer ID format
      ✓ should handle URL encoding correctly (1 ms)
    Integration with Email URLs
      ✓ should parse email-generated URLs correctly
      ✓ should handle both login and customer parameters together (1 ms)
    Parameter Preservation Logic
      ✓ should preserve customer parameter through login flow (1 ms)
      ✓ should handle multiple URL parameters correctly

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.isolated.test.js
  Payment Routes - Isolated
    GET /api/v1/payments/config
      ✓ should return payment configuration (6 ms)
    POST /api/v1/payments/log-submission
      ✓ should log payment submission (11 ms)
    POST /api/v1/payments/create-token
      ✓ should create payment token (3 ms)
    GET /api/v1/payments/check-status/:token
      ✓ should check payment status (2 ms)
    POST /api/v1/payments/cancel-token/:token
      ✓ should cancel payment token (3 ms)
    POST /api/v1/payments/update-status/:token
      ✓ should update payment status (3 ms)
    GET /api/v1/payments/pool-stats
      ✓ should return pool statistics (2 ms)
    Error Handling
      ✓ should handle controller errors gracefully (2 ms)
      ✓ should handle missing routes with 404 (2 ms)
    Request Validation
      ✓ should pass through request headers (2 ms)
      ✓ should handle JSON parsing errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Export orders error: Error: Export failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:114:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      827 |     }
      828 |   } catch (error) {
    > 829 |     console.error('Export orders error:', error);
          |             ^
      830 |     res.status(500).json({
      831 |       success: false,
      832 |       message: 'An error occurred while exporting orders'

      at error (server/controllers/orderController.js:829:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:117:7)

  console.error
    Search orders error: Error: Search failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:237:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |     });
      1035 |   } catch (error) {
    > 1036 |     console.error('Search orders error:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'An error occurred while searching orders'

      at error (server/controllers/orderController.js:1036:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:240:7)

PASS tests/unit/orderControllerUncovered.test.js
  Order Controller - Uncovered Functions
    exportOrders
      ✓ should export orders as CSV (292 ms)
      ✓ should export orders as Excel (126 ms)
      ✓ should export orders as JSON by default (107 ms)
      ✓ should handle export errors (149 ms)
    searchOrders
      ✓ should search orders by customer name (107 ms)
      ✓ should search orders without search term (109 ms)
      ✓ should handle search with no results (107 ms)
      ✓ should handle search errors (110 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorEmailService.test.js
  Administrator Email Service Tests
    sendAdministratorWelcomeEmail
      ✓ should call sendAdministratorWelcomeEmail function (1 ms)
      ✓ should handle admin with different permission sets
      ✓ should handle admin with single permission (1 ms)
      ✓ should handle admin with no permissions
    sendAdministratorPasswordResetEmail
      ✓ should call sendAdministratorPasswordResetEmail function
      ✓ should handle different reset URLs (1 ms)
    Email template data processing
      ✓ should replace uppercase placeholders correctly
      ✓ should handle missing placeholders gracefully (1 ms)
      ✓ should include current year in template data
      ✓ should format permissions correctly as comma-separated string
      ✓ should handle empty permissions array (1 ms)
      ✓ should handle single permission
    Email service integration
      ✓ should be available as a module export (1 ms)
      ✓ should not throw error when sending welcome email
      ✓ should not throw error when sending password reset email
    Admin data validation
      ✓ should handle admin with required fields (1 ms)
      ✓ should handle admin with different adminId formats (1 ms)
      ✓ should handle admin with different email formats (8 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminDirectly.test.js
  Create Admin Directly Script Unit Tests
    generateAdminId function
      ✓ should generate ADM001 when no administrators exist (2 ms)
      ✓ should generate next sequential ID when administrators exist (1 ms)
      ✓ should handle double-digit admin IDs correctly
    Permission selection
      ✓ should handle "all" permission selection (1 ms)
      ✓ should handle specific permission selection
      ✓ should filter out invalid permission numbers
    Database operations
      ✓ should connect to MongoDB successfully
      ✓ should create administrator with correct data (1 ms)
      ✓ should handle database save errors
    Email functionality
      ✓ should send welcome email after admin creation (1 ms)
      ✓ should handle email sending errors gracefully
    Input validation
      ✓ should handle empty input fields (1 ms)
      ✓ should handle whitespace in permission input
    Error handling
      ✓ should handle MongoDB connection errors (1 ms)
      ✓ should close database connection in finally block
      ✓ should close readline interface in finally block

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModel.test.js
  Order Model - Additional Coverage
    Pre-save Hook Coverage
      SystemConfig Error Handling
        ✓ should use default base rate when SystemConfig.getValue throws error (913 ms)
      Status Timestamp Updates
        ✓ should set processingStartedAt timestamp when status changes to processing (284 ms)
        ✓ should not overwrite existing processingStartedAt timestamp (295 ms)
      Actual Weight and Commission Calculations
        ✓ should calculate actual total and commission when actual weight is set (253 ms)
        ✓ should set processedAt timestamp when status changes to processed (234 ms)
        ✓ should set completedAt timestamp when status changes to complete (241 ms)
        ✓ should set cancelledAt timestamp when status changes to cancelled (226 ms)
        ✓ should properly calculate commission with different fee structures (185 ms)
        ✓ should not overwrite existing timestamps (219 ms)
      Edge Cases
        ✓ should handle status change to processing (258 ms)
        ✓ should calculate commission for large orders (222 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/wdfCreditModel.test.js (6.244 s)
  WDF Credit Model Tests
    Order Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (301 ms)
      ✓ should calculate estimated total with positive WDF credit (597 ms)
      ✓ should calculate estimated total with negative WDF credit (debit) (275 ms)
      ✓ should calculate actual total with WDF credit when weight is updated (372 ms)
      ✓ should store weight difference and generated credit (260 ms)
    Customer Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (257 ms)
      ✓ should store positive WDF credit (260 ms)
      ✓ should store negative WDF credit (debit) (262 ms)
    WDF Credit Calculation Logic
      ✓ should handle precision correctly (265 ms)
      ✓ should handle zero credit correctly (436 ms)
    Order Total Recalculation
      ✓ should recalculate total when weight changes (1152 ms)
      ✓ should maintain affiliate commission calculation with WDF credit (399 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailService.test.js
  Email Service Mock
    All Email Functions
      ✓ should have all required email functions mocked (3 ms)
      ✓ should return expected mock response for all functions (3 ms)
      ✓ should track function calls correctly
      ✓ should handle errors when mocked to reject (9 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/controllersAdditional.test.js
  Controllers - Additional Function Coverage
    Order Controller - Additional Functions
      searchOrders - Additional Cases
        ✓ should handle search with affiliate filter (62 ms)
        ✓ should handle empty search query (54 ms)
      exportOrders - Edge Cases
        ✓ should handle export with date filters (75 ms)
      getOrderStatistics - Various Scenarios
        ✓ should get order statistics with time range (67 ms)
        ✓ should handle statistics for affiliate user (73 ms)
    Affiliate Controller - Additional Functions
      getAffiliateDashboardStats - Edge Cases
        ✓ should handle empty statistics (53 ms)
        ✓ should handle date range filters (57 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:56:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:62:7)

  console.error
    Error creating administrator: Error: Duplicate key
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:79:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:85:7)

  console.error
    Error deleting administrator: TypeError: Cannot read properties of undefined (reading 'length')
        at length (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:352:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:164:7)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at error (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:164:7)

  console.error
    Error fetching dashboard data: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:225:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1249 |
      1250 |   } catch (error) {
    > 1251 |     console.error('Error fetching dashboard data:', error);
           |             ^
      1252 |     res.status(500).json({
      1253 |       success: false,
      1254 |       message: 'Failed to fetch dashboard data'

      at error (server/controllers/administratorController.js:1251:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:227:7)

PASS tests/unit/administratorControllerAdditional.test.js
  Administrator Controller - Additional Coverage
    createAdministrator - Error Handling
      ✓ should handle validation errors from pre-save hooks (195 ms)
      ✓ should handle duplicate email errors (160 ms)
    updateAdministrator - Edge Cases
      ✓ should prevent self-deactivation (70 ms)
      ✓ should handle administrator not found (53 ms)
    deleteAdministrator - Error Cases
      ✓ should prevent deleting the last administrator with full permissions (56 ms)
      ✓ should handle deletion errors (94 ms)
    getDashboard - Complex Scenarios
      ✓ should handle empty analytics data (54 ms)
      ✓ should handle database errors gracefully (54 ms)
    getOrderAnalytics - Date Range Handling
      ✓ should handle custom date range (58 ms)
      ✓ should handle invalid date format (55 ms)
    Helper Functions
      ✓ should export updateOperatorStats function (52 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixConfig.test.js
  Paygistix Config
    validateEnvironment
      ✓ should warn when required environment variables are missing (1 ms)
      ✓ should not warn when all required variables are present (2 ms)
    getEnvironment
      ✓ should return configured environment
      ✓ should default to production if not configured (1 ms)
    getMerchantId
      ✓ should return merchant ID when configured (1 ms)
      ✓ should throw error when not configured (9 ms)
    getFormId
      ✓ should return form ID when configured (1 ms)
      ✓ should throw error when not configured (1 ms)
    getFormHash
      ✓ should return form hash when configured (1 ms)
      ✓ should throw error when not configured (1 ms)
    getFormActionUrl
      ✓ should return configured form action URL (1 ms)
      ✓ should return default URL when not configured
    getReturnUrl
      ✓ should return configured return URL (1 ms)
      ✓ should return default URL when not configured (1 ms)
    isConfigured
      ✓ should return true when all required config is present (1 ms)
      ✓ should return false and log error when config is incomplete
    getClientConfig
      ✓ should return complete client config when properly configured
      ✓ should throw and log error when config is missing (2 ms)
      ✓ should set testModeEnabled to false when not configured (1 ms)
    getFullConfig
      ✓ should return complete config including hash (1 ms)
      ✓ should throw and log error when config is missing (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateDashboardInit.test.js
  Affiliate Dashboard Customer Filtering
    URL Parameter Detection Logic
      ✓ should detect customer parameter from URL search params (3 ms)
      ✓ should handle URL without customer parameter
      ✓ should parse customer parameter from complex URL
      ✓ should handle regex pattern matching for customer parameter
    Customer Highlighting Logic
      ✓ should identify highlighted customer correctly
      ✓ should generate correct CSS classes for highlighted customer (1 ms)
      ✓ should generate correct HTML content for highlighted customer
      ✓ should not highlight non-matching customers
    Tab Switching Logic
      ✓ should determine correct tab activation based on customer parameter (1 ms)
      ✓ should not switch tabs when no customer parameter
      ✓ should handle empty string customer parameter
    Authentication Check Logic
      ✓ should identify authenticated state correctly
      ✓ should identify unauthenticated state when missing token
      ✓ should identify unauthenticated state when missing affiliate (1 ms)
    Customer Data Processing
      ✓ should handle empty customer list
      ✓ should process customer list without filtering
      ✓ should filter customer list by customer ID
    URL Construction and Validation
      ✓ should construct API URLs correctly
      ✓ should validate customer ID format (1 ms)
    Timing and Delays
      ✓ should calculate correct delay for tab switching
      ✓ should handle immediate execution when no customer parameter

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.test.js
  Payment Routes
    Static Routes
      GET /api/v1/payments/config
        ✓ should return payment configuration (12 ms)
      POST /api/v1/payments/log-submission
        ✓ should log payment submission (10 ms)
      POST /api/v1/payments/create-token
        ✓ should create payment token (4 ms)
      GET /api/v1/payments/check-status/:token
        ✓ should check payment status (2 ms)
      POST /api/v1/payments/cancel-token/:token
        ✓ should cancel payment token (3 ms)
      POST /api/v1/payments/update-status/:token
        ✓ should update payment status (3 ms)
      GET /api/v1/payments/pool-stats
        ✓ should return pool statistics (2 ms)
    Dynamic Callback Routes
      ✓ should handle GET callback routes (3 ms)
      ✓ should handle POST callback routes (2 ms)
      ✓ should handle multiple callback paths (3 ms)
    Error Handling
      ✓ should handle controller errors gracefully (1 ms)
      ✓ should handle missing routes with 404 (3 ms)
      ✓ should handle JSON parsing errors (3 ms)
    Request Validation
      ✓ should pass through request headers (2 ms)
      ✓ should handle empty request bodies (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilterWdfCredit.test.js
  Field Filter WDF Credit Support
    Customer WDF Credit Fields
      ✓ should include WDF credit fields for customer viewing own profile (3 ms)
      ✓ should include WDF credit fields for affiliate viewing customer
      ✓ should include WDF credit fields for admin viewing customer (1 ms)
      ✓ should NOT include WDF credit for public access (2 ms)
      ✓ should NOT include WDF credit for other customers
    Order WDF Credit Fields
      ✓ should include WDF fields for customer viewing own order
      ✓ should include WDF fields for affiliate viewing order (1 ms)
      ✓ should include WDF fields for admin viewing order
    Field Definition Verification
      ✓ should have WDF credit fields defined in customer field definitions
      ✓ should have WDF credit fields defined in order field definitions (1 ms)
    Array Filtering
      ✓ should filter WDF credit fields in customer arrays (1 ms)
      ✓ should filter WDF credit fields in order arrays
    Edge Cases
      ✓ should handle null/undefined WDF credit values (1 ms)
      ✓ should handle zero WDF credit values

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/errorHandler.test.js
  Error Handler Middleware
    errorHandler
      ✓ should handle generic errors with 500 status (12 ms)
      ✓ should handle custom status codes (1 ms)
      ✓ should handle Mongoose validation errors (1 ms)
      ✓ should handle MongoDB duplicate key errors
      ✓ should handle JWT errors
      ✓ should handle JWT token expiration errors (1 ms)
      ✓ should handle rate limiting errors (1 ms)
      ✓ should handle CastError (invalid MongoDB ObjectId)
      ✓ should include user context when available (1 ms)
      ✓ should handle errors with customer context (1 ms)
      ✓ should hide error details in production
      ✓ should show error details in development (1 ms)
      ✓ should use original message for non-500 errors in production (1 ms)
      ✓ should handle errors without message
      ✓ should handle errors with code property (1 ms)
      ✓ should log all console error sections (10 ms)
    AppError
      ✓ should create custom error with status code (1 ms)
      ✓ should have stack trace
      ✓ should work with error handler (1 ms)
    Edge cases
      ✓ should handle null error (3 ms)
      ✓ should handle undefined error
      ✓ should handle non-error objects
      ✓ should handle errors thrown from within error handler (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderWithSystemConfig.test.js (15.678 s)
  Order Model with SystemConfig Integration
    Dynamic WDF Pricing
      ✓ should fetch base rate from SystemConfig on order creation (980 ms)
      ✓ should use default rate when SystemConfig is not available (2238 ms)
      ✓ should calculate estimated total using SystemConfig rate (1721 ms)
      ✓ should calculate actual total using SystemConfig rate (762 ms)
    Commission Calculations
      ✓ should calculate affiliate commission correctly with custom WDF rate (884 ms)
      ✓ should calculate commission for zero delivery fee (923 ms)
      ✓ should handle commission calculation for large orders (855 ms)
    Edge Cases
      ✓ should handle commission when only estimated size is available (1206 ms)
      ✓ should update calculations when base rate changes (1086 ms)
      ✓ should validate minimum and maximum base rates (2012 ms)
    Revenue Calculator Scenarios
      ✓ should match revenue calculator example - 10 customers scenario (1538 ms)
      ✓ should match revenue calculator with different parameters (930 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.full.test.js
  Payment Routes - Full Coverage
    Dynamic Route Loading
      ✓ should load dynamic callback routes when not in test environment (31 ms)
      ✓ should handle GET requests on dynamic callback routes (27 ms)
      ✓ should handle POST requests on dynamic callback routes (44 ms)
      ✓ should handle errors when loading config file (37 ms)
      ✓ should handle invalid JSON in config file (29 ms)
      ✓ should skip dynamic route loading in test environment (62 ms)
    Static Routes
      ✓ should handle GET /config (26 ms)
      ✓ should handle POST /log-submission (27 ms)
      ✓ should handle POST /create-token (40 ms)
      ✓ should handle GET /check-status/:token (36 ms)
      ✓ should handle POST /cancel-token/:token (28 ms)
      ✓ should handle POST /update-status/:token (24 ms)
      ✓ should handle GET /pool-stats (29 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

FAIL tests/unit/customerDashboardWdfCredit.test.js (7.912 s)
  ● Customer Dashboard WDF Credit Display › Dashboard Stats with WDF Credit › should show zero WDF credit for new customers

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      121 |       const responseData = JSON.parse(res._getData());
      122 |       
    > 123 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      124 |         amount: 0,
      125 |         updatedAt: null,
      126 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:123:48)

  ● Customer Dashboard WDF Credit Display › Edge Cases › should handle null WDF credit fields gracefully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      314 |       const responseData = JSON.parse(res._getData());
      315 |       
    > 316 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      317 |         amount: 0,
      318 |         updatedAt: null,
      319 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:316:48)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/tokenBlacklist.test.js
  TokenBlacklist Model
    Schema Validation
      ✓ should create a valid token blacklist entry (167 ms)
      ✓ should use default values for blacklistedAt and reason (146 ms)
      ✓ should require all mandatory fields (78 ms)
      ✓ should enforce unique token constraint (377 ms)
      ✓ should validate userType enum (77 ms)
      ✓ should accept all valid userTypes (229 ms)
    Static Methods
      blacklistToken
        ✓ should successfully blacklist a token (110 ms)
        ✓ should use default reason when not provided (135 ms)
        ✓ should return null when token already blacklisted (268 ms)
        ✓ should handle custom reasons (149 ms)
        ✓ should propagate non-duplicate errors (78 ms)
      isBlacklisted
        ✓ should return true for blacklisted token (153 ms)
        ✓ should return false for non-blacklisted token (104 ms)
        ✓ should handle empty token (117 ms)
        ✓ should handle null token (105 ms)
      cleanupExpired
        ✓ should delete expired tokens (289 ms)
        ✓ should return 0 when no expired tokens (668 ms)
        ✓ should handle empty collection (259 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] Google callback: {
      error: null,
      user: 'exists',
      userObject: { id: '12345', email: 'test@example.com', provider: 'google' },
      isExistingAffiliate: undefined,
      info: null
    }

      at log (server/routes/socialAuthRoutes.js:40:13)

PASS tests/unit/socialAuthRoutes.full.test.js
  Social Auth Routes - Full Coverage
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (54 ms)
      ✓ should return 404 when Google OAuth is not configured (45 ms)
      ✓ should handle Google OAuth callback (57 ms)
      ✓ should pass state parameter through OAuth (84 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (42 ms)
      ✓ should return 404 when Facebook OAuth is not configured (51 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (43 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (42 ms)
      ✓ should redirect customer Google OAuth callback (44 ms)
      ✓ should handle customer Facebook OAuth callback (40 ms)
      ✓ should initiate Facebook OAuth for customers (49 ms)
      ✓ should return 404 when Facebook OAuth is not configured for customers (45 ms)
      ✓ should initiate LinkedIn OAuth for customers (51 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured for customers (59 ms)
      ✓ should handle customer LinkedIn OAuth callback (53 ms)
    Social Registration Completion
      ✓ should complete affiliate social registration (64 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/validators.test.js
  Validators
    isValidEmail
      ✓ should validate correct email addresses (3 ms)
      ✓ should reject invalid email addresses
    isValidPhone
      ✓ should validate correct US phone numbers (1 ms)
      ✓ should reject invalid phone numbers
    isValidUsername
      ✓ should validate correct usernames (2 ms)
      ✓ should reject invalid usernames (1 ms)
    isValidZipCode
      ✓ should validate correct US zip codes (1 ms)
      ✓ should reject invalid zip codes (1 ms)
    isValidTimeFormat
      ✓ should validate correct time formats
      ✓ should reject invalid time formats (1 ms)
    isValidName
      ✓ should validate correct names
      ✓ should reject invalid names (1 ms)
    mongooseValidators
      ✓ should provide email validator
      ✓ should provide phone validator (1 ms)
      ✓ should provide username validator
      ✓ should provide zipCode validator
      ✓ should provide timeFormat validator (1 ms)
      ✓ should provide name validator
    expressValidators
      ✓ should provide email validator function
      ✓ should provide phone validator function (1 ms)
      ✓ should provide username validator function
      ✓ should provide zipCode validator function
      ✓ should provide timeFormat validator function (1 ms)
      ✓ should provide name validator function
    Client-side validation functions
      validateEmail
        ✓ should return validation result for emails (1 ms)
      validatePhone
        ✓ should return validation result for phones
      validateUsername
        ✓ should return validation result for usernames (1 ms)
      validateZipCode
        ✓ should return validation result for zip codes
      validateTimeFormat
        ✓ should return validation result for time formats (1 ms)
      validateName
        ✓ should return validation result for names

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission: invalid_permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:49:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:70:7)

  console.error
    Error creating administrator: Error: E11000 duplicate key error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:88:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:109:7)

PASS tests/unit/administratorControllerUncovered.test.js
  Administrator Controller - Uncovered Functions
    createAdministrator - Additional Error Cases
      ✓ should handle pre-save validation errors (66 ms)
      ✓ should handle duplicate email error (11000) (72 ms)
    deleteAdministrator - Last Admin Check
      ✓ should prevent deleting the last administrator with full permissions (63 ms)
    getDashboard - All Statistics
      ✓ should return dashboard with all statistics (76 ms)
    getOrderAnalytics - With Date Filters
      ✓ should handle date range in analytics (59 ms)
    exportReport - Different Formats
      ✓ should export orders report (53 ms)
      ✓ should handle invalid report type (53 ms)
    getAffiliatesList - With Filters
      ✓ should get filtered affiliates list (62 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /non-existent-page

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /action-plan.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /critical-files.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /missing

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

FAIL tests/unit/coverageRoutes.test.js
  Coverage Routes
    Access Control Middleware
      ✓ should allow access in development environment (23 ms)
      ✓ should allow access in test environment (12 ms)
      ✓ should deny access in production without key (1 ms)
      ✓ should allow access in production with valid key (7 ms)
      ✓ should deny access in production with invalid key (4 ms)
    Embedded Access Prevention
      ✓ should deny access when Sec-Fetch-Dest is iframe (3 ms)
      ✓ should deny access when X-Frame-Options is present (2 ms)
      ✓ should deny access when referer contains /embed (2 ms)
      ✓ should allow access with normal referer (7 ms)
    Route Handlers
      ✕ should serve index.html at root path (6 ms)
      ✕ should serve critical-files page (6 ms)
      ✕ should serve test-templates page (7 ms)
      ✕ should serve action-plan page (11 ms)
      ✓ should return 404 for non-existent pages (4 ms)
    Static File Headers
      ✓ should set no-cache headers for static files (6 ms)
      ✓ should set no-cache headers for HTML files (5 ms)
      ✓ should set no-cache headers for other HTML files (4 ms)
    Environment Variable Handling
      ✓ should handle missing COVERAGE_ACCESS_KEY (2 ms)
      ✓ should handle empty COVERAGE_ACCESS_KEY (5 ms)
    Multiple Middleware Interaction
      ✓ should check embedded access before access control (8 ms)
      ✓ should apply X-Frame-Options even with valid access (10 ms)
    HTML Response Validation
      ✓ should return valid HTML for access denied page (3 ms)
      ✓ should return valid HTML for 404 page (6 ms)
    Query Parameter Handling
      ✓ should ignore extra query parameters (16 ms)
      ✓ should handle URL-encoded keys (10 ms)
    Edge Cases
      ✕ should handle root path without trailing slash (12 ms)
      ✓ should handle specific route handlers (7 ms)

  ● Coverage Routes › Route Handlers › should serve index.html at root path

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      131 |         .expect(200);
      132 |
    > 133 |       expect(response.headers['cache-control']).toContain('no-cache');
          |                                                 ^
      134 |       expect(response.headers['cache-control']).toContain('no-store');
      135 |     });
      136 |

      at Object.toContain (tests/unit/coverageRoutes.test.js:133:49)

  ● Coverage Routes › Route Handlers › should serve critical-files page

    expect(received).toBeDefined()

    Received: undefined

      141 |
      142 |       // Express serves static files with default cache headers
    > 143 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      144 |     });
      145 |
      146 |     test('should serve test-templates page', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:143:49)

  ● Coverage Routes › Route Handlers › should serve test-templates page

    expect(received).toBeDefined()

    Received: undefined

      150 |
      151 |       // Express serves static files with default cache headers
    > 152 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      153 |     });
      154 |
      155 |     test('should serve action-plan page', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:152:49)

  ● Coverage Routes › Route Handlers › should serve action-plan page

    expect(received).toBeDefined()

    Received: undefined

      159 |
      160 |       // Express serves static files with default cache headers
    > 161 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      162 |     });
      163 |
      164 |     test('should return 404 for non-existent pages', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:161:49)

  ● Coverage Routes › Edge Cases › should handle root path without trailing slash

    expected 301 "Moved Permanently", got 200 "OK"

      314 |       const response = await request(app)
      315 |         .get('/coverage')
    > 316 |         .expect(301); // Redirect to /coverage/
          |          ^
      317 |
      318 |       expect(response.headers.location).toBe('/coverage/');
      319 |     });

      at Object.expect (tests/unit/coverageRoutes.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailServiceAdditional.test.js
  Email Service - Additional Coverage
    Affiliate Commission Email
      ✓ should send affiliate commission email successfully (7 ms)
      ✓ should handle email sending error (3 ms)
    Customer Password Reset Email
      ✓ should send customer password reset email (3 ms)
    Administrator Emails
      ✓ should send administrator welcome email with language support (2 ms)
      ✓ should send administrator password reset email (3 ms)
    Operator Emails
      ✓ should send operator PIN reset email (3 ms)
      ✓ should send operator shift reminder email (3 ms)
    System Alerts
      ✓ should send service down alert to multiple admins (4 ms)
      ✓ should handle service alert with minimal details (4 ms)
    Template Loading Errors
      ✓ should handle template file read errors (6 ms)
    Console Email Provider
      ✓ should log emails to console when using console provider (12 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryptionEnhanced.test.js
  Encryption Utility - Enhanced Coverage
    Encryption Error Paths
      ✓ should return null for falsy inputs (1 ms)
      ✓ should throw error with invalid encryption key length (12 ms)
      ✓ should throw error when encryption key is missing (1 ms)
      ✓ should handle crypto errors gracefully (1 ms)
    Decryption Error Paths
      ✓ should return null for falsy inputs (1 ms)
      ✓ should throw error with invalid encrypted object structure (2 ms)
      ✓ should throw error with tampered data (1 ms)
      ✓ should throw error with wrong encryption key (1 ms)
      ✓ should handle corrupted encrypted data (5 ms)
    Password Hashing Error Paths
      ✓ should handle crypto.randomBytes failure (1 ms)
      ✓ should handle crypto.pbkdf2Sync failure (1 ms)
      ✓ should handle empty password (56 ms)
    Password Verification Error Paths
      ✓ should throw error when pbkdf2Sync fails (1 ms)
      ✓ should handle invalid inputs gracefully (161 ms)
      ✓ should return false for invalid salt format (55 ms)
    Token and Barcode Generation
      ✓ should generate tokens of correct length
      ✓ should generate unique tokens (1 ms)
      ✓ should handle token generation errors (1 ms)
      ✓ should generate barcodes with correct format (1 ms)
      ✓ should generate unique barcodes (1 ms)
      ✓ should handle barcode generation errors (1 ms)
    Edge Cases and Security Tests
      ✓ should handle large data encryption/decryption (4 ms)
      ✓ should handle unicode and special characters (1 ms)
      ✓ should produce different IVs for same input (2 ms)
      ✓ should validate encryption output structure (2 ms)
      ✓ should handle password edge cases (1322 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/models.test.js (18.923 s)
  Model Tests
    Affiliate Model
      ✓ should create a valid affiliate (2783 ms)
      ✓ should require required fields (1068 ms)
      ✓ should enforce unique constraints (1430 ms)
      ✓ should handle payment information correctly (656 ms)
    Customer Model
      ✓ should create a valid customer (860 ms)
    Order Model
      ✓ should create a valid order (672 ms)
      ✓ should calculate estimated total correctly (917 ms)
      ✓ should calculate actual total and commission when weight is set (1461 ms)
      ✓ should update timestamps for status changes (2304 ms)
    Transaction Model
      ✓ should create a valid transaction (981 ms)
      ✓ should validate transaction type (1072 ms)
      ✓ should validate transaction status (825 ms)
    RefreshToken Model
      ✓ should create a valid refresh token (873 ms)
      ✓ should validate user type (589 ms)
      ✓ should check if token is expired (1235 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching public configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:88:55)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      21 |     res.json(formattedConfigs);
      22 |   } catch (error) {
    > 23 |     console.error('Error fetching public configs:', error);
         |             ^
      24 |     res.status(500).json({ error: 'Failed to fetch public configurations' });
      25 |   }
      26 | });

      at error (server/routes/systemConfigRoutes.js:23:13)

  console.error
    Error fetching config: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:141:46)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      47 |     });
      48 |   } catch (error) {
    > 49 |     console.error('Error fetching config:', error);
         |             ^
      50 |     res.status(500).json({ error: 'Failed to fetch configuration' });
      51 |   }
      52 | });

      at error (server/routes/systemConfigRoutes.js:49:13)

  console.error
    Error fetching configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:190:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      70 |     res.json(configs);
      71 |   } catch (error) {
    > 72 |     console.error('Error fetching configs:', error);
         |             ^
      73 |     res.status(500).json({ error: 'Failed to fetch configurations' });
      74 |   }
      75 | });

      at error (server/routes/systemConfigRoutes.js:72:13)

  console.error
    Error updating config: Error: Invalid value
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:333:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

  console.error
    Error initializing configs: Error: Init failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:359:57)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      103 |     res.json({ message: 'Default configurations initialized' });
      104 |   } catch (error) {
    > 105 |     console.error('Error initializing configs:', error);
          |             ^
      106 |     res.status(500).json({ error: 'Failed to initialize configurations' });
      107 |   }
      108 | });

      at error (server/routes/systemConfigRoutes.js:105:13)

PASS tests/unit/systemConfigRoutes.test.js
  System Config Routes
    GET /api/system-config/public
      ✓ should return public configurations (19 ms)
      ✓ should handle errors when fetching public configs (8 ms)
    GET /api/system-config/public/:key
      ✓ should return specific public configuration (3 ms)
      ✓ should return 404 for non-existent public config (2 ms)
      ✓ should handle errors when fetching specific config (4 ms)
    GET /api/system-config (authenticated)
      ✓ should return all configurations for admin (4 ms)
      ✓ should filter configurations by category (3 ms)
      ✓ should handle errors when fetching all configs (3 ms)
      ✓ should require authentication (3 ms)
      ✓ should require administrator role (90 ms)
    PUT /api/system-config/:key
      ✓ should update configuration value (11 ms)
      ✓ should require system_config permission (77 ms)
      ✓ should handle validation errors (4 ms)
    POST /api/system-config/initialize
      ✓ should initialize default configurations (3 ms)
      ✓ should handle errors during initialization (3 ms)
      ✓ should require authentication and admin role (4 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:79:7)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:98:7)

  console.warn
    Email template placeholder [content] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:351:7)

PASS tests/unit/emailServiceUncovered.test.js
  Email Service - Uncovered Functions
    sendOperatorShiftReminderEmail
      ✓ should send shift reminder email successfully (43 ms)
      ✓ should handle email sending error (5 ms)
    sendOperatorPasswordResetEmail
      ✓ should log error since operators use PINs (4 ms)
      ✓ should still log error even with missing reset URL (3 ms)
    sendServiceDownAlert
      ✓ should send service down alert to all admin emails (3 ms)
      ✓ should handle empty admin emails (4 ms)
      ○ skipped should handle email sending errors gracefully
    sendOrderReadyNotification
      ✓ should send order ready notification successfully (3 ms)
      ✓ should handle missing data fields (3 ms)
    sendOrderPickedUpNotification
      ✓ should send order picked up notification successfully (4 ms)
      ○ skipped should handle email error and log it
    Console Email Provider
      ✓ should log emails when using console provider (14 ms)
    Template Loading Errors
      ✓ should handle template file not found (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/adminIdGeneration.test.js (5.119 s)
  Admin ID Generation Logic Tests
    generateAdminId function logic
      ✓ should generate ADM001 when no administrators exist (172 ms)
      ✓ should generate ADM002 when ADM001 exists (380 ms)
      ✓ should generate ADM003 when ADM001 and ADM002 exist (388 ms)
      ✓ should handle non-sequential admin IDs correctly (964 ms)
      ✓ should handle double-digit admin IDs (295 ms)
      ✓ should handle triple-digit admin IDs (247 ms)
      ✓ should handle large admin ID numbers (268 ms)
    Admin ID format validation
      ✓ should maintain three-digit padding for numbers below 100 (103 ms)
      ✓ should handle numbers above 999 without padding issues (106 ms)
    Admin ID parsing logic
      ✓ should correctly parse admin ID numbers (133 ms)
      ✓ should handle edge cases in admin ID parsing (109 ms)
    Admin ID generation with mixed data
      ✓ should work correctly with inactive administrators (304 ms)
      ✓ should work correctly with different creation dates (283 ms)
      ✓ should work correctly with different permissions (295 ms)
    Performance and reliability
      ✓ should handle database query efficiently (224 ms)
      ✓ should handle concurrent admin creation scenario (253 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/csrfConfig.test.js
  CSRF Configuration
    CSRF_CONFIG
      ✓ should define all endpoint categories (1 ms)
      ✓ should have valid endpoint patterns (5 ms)
      ✓ should not have duplicate endpoints across categories (1 ms)
      ✓ should include critical security endpoints
      ✓ should exclude authentication endpoints from CSRF
      ✓ should exclude registration endpoints from CSRF (1 ms)
    shouldEnforceCsrf
      HTTP method checks
        ✓ should not enforce CSRF for GET requests (6 ms)
        ✓ should not enforce CSRF for HEAD requests
        ✓ should not enforce CSRF for OPTIONS requests
        ✓ should consider CSRF for POST requests (1 ms)
        ✓ should consider CSRF for PUT requests
        ✓ should consider CSRF for DELETE requests
        ✓ should consider CSRF for PATCH requests
      Public endpoints
        ✓ should not enforce CSRF for public endpoints (1 ms)
        ✓ should not enforce CSRF for health check endpoints
      Authentication endpoints
        ✓ should not enforce CSRF for login endpoints
        ✓ should not enforce CSRF for forgot password
        ✓ should not enforce CSRF for refresh token
      Registration endpoints
        ✓ should not enforce CSRF for affiliate registration
        ✓ should not enforce CSRF for customer registration
      Critical endpoints
        ✓ should enforce CSRF for logout
        ✓ should enforce CSRF for order creation
        ✓ should enforce CSRF for order cancellation (1 ms)
        ✓ should enforce CSRF for password changes
        ✓ should enforce CSRF for data deletion
        ✓ should enforce CSRF for admin operations (1 ms)
        ✓ should enforce CSRF for operator shift changes
        ✓ should enforce CSRF for order status updates
      High priority endpoints
        ✓ should not enforce CSRF for high priority endpoints when CSRF_PHASE < 2 (1 ms)
        ✓ should enforce CSRF for high priority endpoints when CSRF_PHASE >= 2
        ✓ should handle bag management endpoints based on phase (1 ms)
        ✓ should handle payment updates based on phase
      Read-only endpoints
        ✓ should not enforce CSRF for dashboard endpoints
        ✓ should enforce CSRF for search endpoints with state-changing methods (1 ms)
        ✓ should enforce CSRF for export endpoints with state-changing methods
      Pattern matching
        ✓ should match parameterized routes
        ✓ should match nested parameterized routes
        ✓ should not match partial paths (1 ms)
        ✓ should handle complex IDs in paths
      Default behavior
        ✓ should enforce CSRF for unknown state-changing endpoints
        ✓ should enforce CSRF for unmatched PUT requests
        ✓ should not enforce CSRF for unknown GET endpoints (1 ms)
      Edge cases
        ✓ should handle missing CSRF_PHASE environment variable
        ✓ should handle non-numeric CSRF_PHASE
        ✓ should handle paths with query parameters
        ✓ should handle paths with trailing slashes (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilter.test.js
  Field Filter Utility
    filterFields
      ✓ should filter object to include only allowed fields (1 ms)
      ✓ should handle empty allowed fields array (1 ms)
      ✓ should handle null or undefined objects
      ✓ should handle non-object inputs
      ✓ should handle missing fields gracefully (1 ms)
      ✓ should not include inherited properties
      ✓ should handle nested objects without deep filtering
    filterArray
      ✓ should filter array of objects
      ✓ should handle empty array
      ✓ should handle non-array inputs (1 ms)
      ✓ should handle arrays with mixed types
    fieldDefinitions
      ✓ should have definitions for all data types (1 ms)
      ✓ should have different field sets for different roles
      ✓ should not expose sensitive fields in public view (1 ms)
      ✓ should include appropriate fields for each role
    getFilteredData
      ✓ should filter data based on admin role
      ✓ should filter data based on public role (1 ms)
      ✓ should handle self context for customers
      ✓ should handle arrays of data (1 ms)
      ✓ should return data as-is for unknown data types
      ✓ should handle null or undefined data
      ✓ should use fallback field definitions (1 ms)
    responseFilter middleware
      ✓ should create filtered json method (3 ms)
      ✓ should filter response data when _filterType is provided (1 ms)
      ✓ should not filter when _filterType is not provided
      ✓ should handle public role when user is not authenticated (1 ms)
      ✓ should extract user ID from different user types
      ✓ should preserve other response properties (1 ms)
      ✓ should handle responses without data property
      ✓ should maintain this context in json method

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/storeIPs.test.js
  storeIPs configuration
    IP whitelist configuration
      ✓ should load single store IP from environment (5 ms)
      ✓ should handle empty store IP (1 ms)
      ✓ should load additional IPs from environment (1 ms)
      ✓ should trim whitespace from IPs
      ✓ should filter out empty IP entries (1 ms)
      ✓ should load IP ranges from environment (1 ms)
      ✓ should handle empty IP ranges
    Session renewal configuration
      ✓ should use default session renewal settings
      ✓ should load custom session renewal settings from environment (1 ms)
      ✓ should handle invalid numeric values (1 ms)
    isWhitelisted function
      ✓ should return true for directly whitelisted IPs (1 ms)
      ✓ should return false for non-whitelisted IPs (1 ms)
      ✓ should check IP ranges (1 ms)
      ✓ should return false for IPs outside ranges (1 ms)
    isInRange function
      ✓ should correctly check IPs in /24 subnet (1 ms)
      ✓ should correctly check IPs in /16 subnet (1 ms)
      ✓ should correctly check IPs in /8 subnet (1 ms)
      ✓ should correctly check IPs in /32 subnet (single host)
      ✓ should correctly check IPs in /0 subnet (all IPs) (1 ms)
      ✓ should handle invalid CIDR notation (1 ms)
      ✓ should handle invalid mask bits (1 ms)
      ✓ should handle invalid IP addresses (6 ms)
      ✓ should handle IP parts out of range (1 ms)
      ✓ should handle edge cases with console error (1 ms)
      ✓ should correctly handle boundary cases (1 ms)
      ✓ should handle various subnet sizes correctly (1 ms)
    Configuration export structure
      ✓ should export all required properties and functions (1 ms)
      ✓ should have correct session renewal properties (1 ms)
    Integration scenarios
      ✓ should handle complex whitelist configuration (1 ms)
      ✓ should work with no configuration (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPoolManager.test.js
  CallbackPoolManager
    constructor
      ✓ should initialize with correct configuration (1 ms)
    initializePool
      ✓ should create or update callback entries for all paths (1 ms)
      ✓ should start cleanup job after initialization
    acquireCallback
      ✓ should acquire callback successfully
      ✓ should return null when no callbacks available (1 ms)
    releaseCallback
      ✓ should release callback successfully
      ✓ should handle null callback gracefully (1 ms)
    getPoolStatus
      ✓ should return pool status with all handler details (3 ms)
      ✓ should handle empty pool
    startCleanupJob
      ✓ should start cleanup interval (2 ms)
      ✓ should run cleanup task every 5 minutes (2 ms)
      ✓ should handle cleanup errors gracefully (1 ms)
      ✓ should not log when no locks are released (1 ms)
    stopCleanupJob
      ✓ should stop cleanup interval when running
      ✓ should handle stopping when no interval exists (9 ms)
    integration scenarios
      ✓ should handle complete payment flow
      ✓ should handle concurrent acquire attempts (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidator.test.js
  Password Validator Utility
    validatePasswordStrength
      Basic Requirements
        ✓ should validate minimum length requirement (2 ms)
        ✓ should require uppercase letters (1 ms)
        ✓ should require lowercase letters
        ✓ should require numbers
        ✓ should require special characters
      Security Validations
        ✓ should reject common passwords (2 ms)
        ✓ should reject passwords containing username
        ✓ should reject passwords containing email
        ✓ should reject sequential characters (1 ms)
        ✓ should reject repeated characters (1 ms)
      Valid Passwords
        ✓ should accept strong valid passwords
      Edge Cases
        ✓ should handle empty password (1 ms)
        ✓ should handle null/undefined password (5 ms)
        ✓ should handle case-insensitive username/email checks (1 ms)
    customPasswordValidator
      ✓ should work as express-validator custom validator (13 ms)
      ✓ should include validation errors in thrown message (1 ms)
    passwordValidationMiddleware
      ✓ should create middleware function
      ✓ should validate password and call next on success
      ✓ should return error response on validation failure (2 ms)
    isPasswordInHistory
      ✓ should return false for empty history
      ✓ should return false for password not in history (57 ms)
      ✓ should handle null/undefined history
    getPasswordStrength
      ✓ should return higher scores for stronger passwords (1 ms)
      ✓ should score length appropriately
      ✓ should score character variety (1 ms)
      ✓ should penalize common patterns
    commonPasswords array
      ✓ should contain common passwords
      ✓ should contain domain-specific passwords

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPool.test.js (9.9 s)
  CallbackPool Model
    Schema and Indexes
      ✓ should have required fields (172 ms)
      ✓ should have default values (160 ms)
      ✓ should have unique constraint on callbackPath (173 ms)
      ✓ should create document with defaults (199 ms)
    Instance Methods
      lock()
        ✓ should lock callback with payment token (221 ms)
        ✓ should increment usage count on each lock (300 ms)
        ✓ should update lastUsedAt timestamp (222 ms)
      release()
        ✓ should release locked callback (288 ms)
        ✓ should handle releasing already unlocked callback (208 ms)
    Static Methods
      acquireCallback()
        ✓ should acquire available unlocked callback (493 ms)
        ✓ should use least recently used callback (654 ms)
        ✓ should acquire expired locked callback (345 ms)
        ✓ should return null when no callbacks available (300 ms)
        ✓ should increment usage count atomically (245 ms)
      releaseCallback()
        ✓ should release callback by payment token (231 ms)
        ✓ should return null if no callback found with token (189 ms)
        ✓ should only release callback locked by specific token (282 ms)
      releaseExpiredLocks()
        ✓ should release callbacks locked longer than timeout (314 ms)
        ✓ should not release recently locked callbacks (292 ms)
        ✓ should handle custom timeout values (1045 ms)
        ✓ should return 0 when no expired locks (557 ms)
        ✓ should handle empty collection (1153 ms)
    Edge Cases and Error Handling
      ✓ should handle concurrent lock attempts (230 ms)
      ✓ should maintain data integrity with rapid lock/release cycles (955 ms)
      ✓ should handle invalid ObjectId gracefully (192 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/sanitization.test.js
  Sanitization Middleware
    sanitizeInput
      ✓ should sanitize string input (2 ms)
      ✓ should sanitize arrays recursively (1 ms)
      ✓ should sanitize objects recursively
      ✓ should handle null values
      ✓ should handle undefined values
      ✓ should handle numbers
      ✓ should handle booleans
      ✓ should handle deeply nested objects
      ✓ should handle arrays of objects
      ✓ should not modify prototype properties
    sanitizeRequest
      ✓ should sanitize request body
      ✓ should sanitize query parameters
      ✓ should sanitize URL parameters (1 ms)
      ✓ should handle missing request properties
      ✓ should handle all properties in one request (1 ms)
    sanitizeEmail
      ✓ should sanitize and validate email (1 ms)
      ✓ should remove HTML from email
      ✓ should return empty string for invalid email
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should handle empty string
      ✓ should validate complex email formats (1 ms)
    sanitizePhone
      ✓ should keep only allowed characters
      ✓ should remove invalid characters
      ✓ should handle international format (1 ms)
      ✓ should remove HTML and special characters
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should trim whitespace (1 ms)
      ✓ should handle empty string
    sanitizeId
      ✓ should keep alphanumeric characters and hyphens
      ✓ should remove special characters
      ✓ should remove spaces (1 ms)
      ✓ should handle script injection attempts
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (1 ms)
      ✓ should trim whitespace
      ✓ should handle empty string
      ✓ should handle MongoDB ObjectId format
    sanitizePath
      ✓ should allow valid file paths (1 ms)
      ✓ should remove directory traversal attempts
      ✓ should remove multiple directory traversal attempts
      ✓ should allow valid characters in paths
      ✓ should remove invalid characters
      ✓ should handle Windows-style paths (1 ms)
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should handle empty string
      ✓ should handle complex path traversal attempts (1 ms)
      ✓ should preserve forward slashes
    Integration tests
      ✓ should work with express middleware chain (3 ms)
      ✓ should handle complex nested structures

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error checking active orders: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerAdditional.test.js:99:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      86 |     });
      87 |   } catch (error) {
    > 88 |     console.error('Error checking active orders:', error);
         |             ^
      89 |     res.status(500).json({
      90 |       success: false,
      91 |       message: 'Failed to check active orders'

      at Object.error [as checkActiveOrders] (server/controllers/orderController.js:88:13)
      at Object.<anonymous> (tests/unit/orderControllerAdditional.test.js:102:7)

  console.log
    Creating order with data: {
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 20
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

PASS tests/unit/orderControllerAdditional.test.js
  Order Controller - Additional Coverage
    checkActiveOrders
      ✓ should check active orders for authenticated customer (54 ms)
      ✓ should return no active orders when none exist (101 ms)
      ✓ should handle missing customer ID (74 ms)
      ✓ should handle database errors (78 ms)
    createOrder error handling
      ✓ should handle general errors during order creation (110 ms)
    exportOrders
      ✓ should export orders as CSV (61 ms)
      ✓ should export orders as JSON when format=json (67 ms)
      ✓ should handle export errors (53 ms)
      ✓ should handle unauthorized access (52 ms)
    updateOrderStatus edge cases
      ✓ should handle invalid status transitions (52 ms)
    cancelOrder method
      ✓ should handle order not found (97 ms)
      ✓ should handle cancellation of non-cancellable order (70 ms)
    updatePaymentStatus
      ✓ should handle order not found (88 ms)
      ✓ should prevent payment updates on non-complete orders (59 ms)
      ✓ should allow refund on complete orders regardless of payment status (63 ms)
    bulkUpdateOrderStatus
      ✓ should handle invalid order IDs format (70 ms)
      ✓ should handle empty order IDs array (67 ms)
      ✓ should handle unauthorized access (86 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.error
    Failed to send notification emails: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderController.test.js:109:73)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      231 |       await emailService.sendAffiliateNewOrderEmail(affiliate, customer, newOrder);
      232 |     } catch (emailError) {
    > 233 |       console.error('Failed to send notification emails:', emailError);
          |               ^
      234 |       // Continue with the response even if emails fail
      235 |     }
      236 |

      at Object.error [as createOrder] (server/controllers/orderController.js:233:15)
      at Object.<anonymous> (tests/unit/orderController.test.js:112:7)

  console.log
    Creating order with data: { customerId: 'INVALID', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:130:15)

  console.log
    Creating order with data: { customerId: 'CUST123', affiliateId: 'INVALID' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: { customerId: 'CUST456', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST456

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

PASS tests/unit/orderController.test.js
  Order Controller
    createOrder
      ✓ should successfully create a new order (163 ms)
      ✓ should handle email sending failures gracefully (134 ms)
      ✓ should return error for invalid customer (74 ms)
      ✓ should return error for invalid affiliate (63 ms)
      ✓ should enforce authorization (76 ms)
    getOrderDetails
      ✓ should return order details for authorized user (53 ms)
      ✓ should return 404 for non-existent order (52 ms)
      ✓ should enforce authorization for customers (52 ms)
    updateOrderStatus
      ✓ should successfully update order status (53 ms)
      ✓ should update actual weight when processing (52 ms)
      ✓ should validate status transitions (53 ms)
      ✓ should send commission email when complete (53 ms)
    cancelOrder
      ✓ should successfully cancel an order (62 ms)
      ✓ should prevent cancelling non-cancellable orders (60 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-002', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-002' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    completePickup called with: { bagIds: [ 'bag-001' ], orderId: 'ORD-123456', operatorId: 'op123' }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-wrong' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

FAIL tests/unit/bagTracking.test.js
  Bag Tracking System
    scanBag
      ✓ should parse new QR format correctly (1 ms)
      ✓ should handle legacy QR format
    weighBags
      ✕ should add bags to order and update status (4 ms)
      ✕ should prevent duplicate bag IDs (1 ms)
    scanProcessed
      ✕ should update bag status to processed (14 ms)
      ✕ should show warning for already processed bag (1 ms)
      ✕ should trigger completion actions when all bags processed (1 ms)
    completePickup
      ✕ should complete order when all bags scanned (2 ms)
      ✕ should reject if bag count mismatch (1 ms)
      ✕ should reject if wrong bag scanned (1 ms)

  ● Bag Tracking System › weighBags › should add bags to order and update status

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Bags weighed successfully",
    -   "order": ObjectContaining {
    -     "actualWeight": 10,
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "bagNumber": 1,
    -         "status": "processing",
    -         "weight": 5.5,
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "bagNumber": 2,
    -         "status": "processing",
    -         "weight": 4.5,
    -       },
    -     ],
    -     "orderId": "ORD-123456",
    -     "status": "processing",
    -   },
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 0,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      146 |       await operatorController.weighBags(req, res);
      147 |
    > 148 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      149 |         success: true,
      150 |         order: expect.objectContaining({
      151 |           orderId: 'ORD-123456',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:148:24)

  ● Bag Tracking System › weighBags › should prevent duplicate bag IDs

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      211 |       await operatorController.weighBags(req, res);
      212 |
    > 213 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      214 |       expect(res.json).toHaveBeenCalledWith({
      215 |         success: false,
      216 |         error: 'Duplicate bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:213:26)

  ● Bag Tracking System › scanProcessed › should update bag status to processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -     "weight": 5,
    -   },
    -   "message": "Bag 1 marked as processed",
    -   "order": Any<Object>,
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 1,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      258 |       await operatorController.scanProcessed(req, res);
      259 |
    > 260 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      261 |         success: true,
      262 |         order: expect.any(Object),
      263 |         bag: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:260:24)

  ● Bag Tracking System › scanProcessed › should show warning for already processed bag

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -   },
    -   "message": "This bag has already been processed. 1 bags still need processing.",
    -   "remainingCount": 1,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
        "success": false,
    -   "warning": "duplicate_scan",
      },

    Number of calls: 1

      317 |       await operatorController.scanProcessed(req, res);
      318 |
    > 319 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      320 |         success: false,
      321 |         warning: 'duplicate_scan',
      322 |         message: 'This bag has already been processed. 1 bags still need processing.',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:319:24)

  ● Bag Tracking System › scanProcessed › should trigger completion actions when all bags processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "action": "show_pickup_modal",
    -   "allBagsProcessed": true,
    -   "message": "All bags processed - ready for pickup",
    -   "order": ObjectContaining {
    -     "status": "processed",
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      380 |       await operatorController.scanProcessed(req, res);
      381 |
    > 382 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      383 |         success: true,
      384 |         action: 'show_pickup_modal',
      385 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:382:24)

  ● Bag Tracking System › completePickup › should complete order when all bags scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Order pickup completed successfully",
    -   "order": ObjectContaining {
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "status": "completed",
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "status": "completed",
    -       },
    -     ],
    -     "status": "complete",
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      440 |       await operatorController.completePickup(req, res);
      441 |
    > 442 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      443 |         success: true,
      444 |         message: 'Order pickup completed successfully',
      445 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:442:24)

  ● Bag Tracking System › completePickup › should reject if bag count mismatch

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      497 |       await operatorController.completePickup(req, res);
      498 |
    > 499 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      500 |       expect(res.json).toHaveBeenCalledWith({
      501 |         success: false,
      502 |         error: 'Bag count mismatch',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:499:26)

  ● Bag Tracking System › completePickup › should reject if wrong bag scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      543 |       await operatorController.completePickup(req, res);
      544 |
    > 545 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      546 |       expect(res.json).toHaveBeenCalledWith({
      547 |         success: false,
      548 |         error: 'Invalid bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:545:26)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/auditLogger.test.js
  Audit Logger
    AuditEvents
      ✓ should define all audit event types (2 ms)
      ✓ should have unique event names
    logAuditEvent
      ✓ should log basic audit event (1 ms)
      ✓ should add request context when provided (1 ms)
      ✓ should handle customer context
      ✓ should use error level for critical events (1 ms)
      ✓ should use info level for non-critical events
      ✓ should handle missing user context (1 ms)
      ✓ should handle connection.remoteAddress fallback
    auditMiddleware
      ✓ should create middleware that logs on response finish (1 ms)
      ✓ should log successful responses
      ✓ should not log failed responses (1 ms)
      ✓ should include request context in logs
    logLoginAttempt
      ✓ should log successful login (1 ms)
      ✓ should log failed login with reason
      ✓ should handle null reason (1 ms)
    logSensitiveDataAccess
      ✓ should log sensitive data access
      ✓ should handle different data types and actions (1 ms)
    logPaymentActivity
      ✓ should log payment info access
      ✓ should log payment info update (1 ms)
      ✓ should handle additional details
    logSuspiciousActivity
      ✓ should log suspicious activity with error level (1 ms)
      ✓ should include request context
      ✓ should merge all details (12 ms)
    Logger configuration
      ✓ should export audit logger with required methods
      ✓ should not add console transport in production (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686bf7af66ca10e8c73251d3","orderId":"ORD-TEST-001","path":"","timestamp":"2025-07-07T16:37:03.462Z","totalWeight":25,"userId":"686bf7af66ca10e8c73251d3"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686bf7b066ca10e8c73251fe","orderId":"ORD-TEST-002","path":"","timestamp":"2025-07-07T16:37:04.651Z","totalWeight":25,"userId":"686bf7b066ca10e8c73251fe"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686bf7b166ca10e8c7325222","orderId":"ORD-TEST-003","path":"","timestamp":"2025-07-07T16:37:05.510Z","totalWeight":20,"userId":"686bf7b166ca10e8c7325222"}
  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T16:37:06.231Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test instructions'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T16:37:06.992Z',
      pickupTime: 'morning',
      estimatedWeight: 20,
      numberOfBags: 1,
      specialPickupInstructions: 'Test instructions'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T16:37:07.648Z',
      pickupTime: 'morning',
      estimatedWeight: 20,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686bf7b566ca10e8c73252ba","orderId":"ORD-TEST-004","path":"","timestamp":"2025-07-07T16:37:09.830Z","totalWeight":24.3,"userId":"686bf7b566ca10e8c73252ba"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686bf7b666ca10e8c73252d8","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T16:37:10.546Z","totalWeight":25,"userId":"686bf7b666ca10e8c73252d8"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686bf7b666ca10e8c73252d8","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T16:37:10.569Z","totalWeight":20,"userId":"686bf7b666ca10e8c73252d8"}
FAIL tests/unit/wdfCredit.test.js (8.91 s)
  ● WDF Credit System › WDF Credit Application › should apply positive WDF credit to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      224 |
      225 |       // Check response
    > 226 |       expect(res.statusCode).toBe(201);
          |                              ^
      227 |       const responseData = JSON.parse(res._getData());
      228 |       expect(responseData.success).toBe(true);
      229 |       expect(responseData.wdfCreditApplied).toBe(10.00);

      at Object.toBe (tests/unit/wdfCredit.test.js:226:30)

  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      266 |
      267 |       // Check response
    > 268 |       expect(res.statusCode).toBe(201);
          |                              ^
      269 |       const responseData = JSON.parse(res._getData());
      270 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      271 |

      at Object.toBe (tests/unit/wdfCredit.test.js:268:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      305 |       // Verify no credit was applied
      306 |       const responseData = JSON.parse(res._getData());
    > 307 |       expect(responseData.wdfCreditApplied).toBe(0);
          |                                             ^
      308 |
      309 |       const newOrder = await Order.findOne({ orderId: responseData.orderId });
      310 |       expect(newOrder.wdfCreditApplied).toBe(0);

      at Object.toBe (tests/unit/wdfCredit.test.js:307:45)

  ● WDF Credit System › Edge Cases › should handle concurrent bag weighing correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      436 |       // Verify final state
      437 |       const updatedOrder = await Order.findOne({ orderId: order.orderId });
    > 438 |       expect(updatedOrder.bagsWeighed).toBe(2);
          |                                        ^
      439 |       expect(updatedOrder.actualWeight).toBe(45);
      440 |       expect(updatedOrder.wdfCreditGenerated).toBe(6.25); // (45-40) * 1.25
      441 |     });

      at Object.toBe (tests/unit/wdfCredit.test.js:438:40)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminScript.test.js (13.755 s)
  Create Admin Script Tests
    Script File Structure
      ✓ should exist and be readable (499 ms)
      ✓ should contain required functionality markers (451 ms)
    Admin ID Generation Logic
      ✓ should generate sequential admin IDs starting from ADM001 (715 ms)
      ✓ should calculate next admin ID correctly (1153 ms)
    Password Security Requirements
      ✓ should enforce strong password requirements for admins (526 ms)
      ✓ should accept strong passwords for admins (880 ms)
    Permission System Validation
      ✓ should validate all permission types (627 ms)
      ✓ should handle partial permission sets (561 ms)
    Unique Constraint Validation
      ✓ should prevent duplicate administrator IDs (721 ms)
      ✓ should prevent duplicate emails (679 ms)
    Email Integration
      ✓ should handle admin creation with welcome email sending (877 ms)
    Data Validation and Sanitization
      ✓ should handle special characters in names correctly (619 ms)
      ✓ should normalize email addresses (631 ms)
      ✓ should validate email format (844 ms)
    Administrator Model Integration
      ✓ should integrate with existing administrator model schema (568 ms)
      ✓ should work with password hashing middleware (675 ms)
    Script Error Handling
      ✓ should handle database connection errors gracefully (486 ms)
      ✓ should handle invalid input gracefully (423 ms)
    Security Considerations
      ✓ should not log or expose passwords (460 ms)
      ✓ should generate secure random passwords when needed (812 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed for path: /api/test - User role: undefined Allowed roles: [ 'admin' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed - No user object on request for path: /api/test

      at log (server/middleware/auth.js:219:15)

  console.log
    Token renewed for operator OP123 from store IP 127.0.0.1

      at log (server/middleware/auth.js:136:17)

  console.error
    Authentication error: Error: Generic error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:446:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as verify] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at verify (/var/www/wavemax/wavemax-affiliate-program/server/middleware/auth.js:99:21)
        at Object.authenticate (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:449:13)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      198 |     }
      199 |
    > 200 |     console.error('Authentication error:', error);
          |             ^
      201 |
      202 |     res.status(500).json({
      203 |       success: false,

      at error (server/middleware/auth.js:200:13)
      at Object.authenticate (tests/unit/authMiddleware.test.js:449:13)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

PASS tests/unit/authMiddleware.test.js (7.635 s)
  Auth Middleware
    authenticate
      ✓ should authenticate valid Bearer token (362 ms)
      ✓ should authenticate valid x-auth-token header (290 ms)
      ✓ should reject request with no token (244 ms)
      ✓ should reject request with invalid token (241 ms)
      ✓ should reject request with expired token (233 ms)
      ✓ should handle malformed Authorization header (223 ms)
      ✓ should reject blacklisted token (206 ms)
    authorize
      ✓ should authorize user with correct role (211 ms)
      ✓ should authorize user with one of multiple roles (208 ms)
      ✓ should reject user with incorrect role (241 ms)
      ✓ should reject user with no role (221 ms)
      ✓ should reject when user is not set (211 ms)
    authLimiter
      ✓ should be a function (210 ms)
      ✓ should have rate limit configuration (205 ms)
      ✓ should skip rate limiting in test environment (303 ms)
    validateRequest
      ✓ should pass valid request (730 ms)
      ✓ should reject invalid request (343 ms)
      ✓ should reject request with missing required fields (224 ms)
      ✓ should handle complex validation schemas (220 ms)
    authenticate - additional edge cases
      ✓ should handle requirePasswordChange flag (252 ms)
      ✓ should allow password change endpoint when requirePasswordChange is true (237 ms)
      ✓ should handle operator token renewal from store IP (221 ms)
      ✓ should handle generic authentication errors (233 ms)
      ✓ should handle W9 endpoint logging (207 ms)
    authorize - array syntax
      ✓ should accept array of roles (226 ms)
      ✓ should reject user not in array of roles (238 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/oAuthSession.test.js (8.742 s)
  OAuthSession Model
    Schema Validation
      ✓ should create a valid OAuth session with all required fields (276 ms)
      ✓ should require sessionId field (287 ms)
      ✓ should require result field (258 ms)
      ✓ should automatically set createdAt (413 ms)
      ✓ should automatically set expiresAt to 5 minutes from now (418 ms)
      ✓ should enforce unique sessionId (334 ms)
      ✓ should allow complex result objects (299 ms)
    Static Methods
      createSession
        ✓ should create and save a new OAuth session (346 ms)
        ✓ should throw error for duplicate session IDs (318 ms)
        ✓ should handle database errors (255 ms)
      getSession
        ✓ should retrieve existing session result by sessionId (358 ms)
        ✓ should return null for non-existent session (263 ms)
      consumeSession
        ✓ should retrieve and delete session in one operation (395 ms)
        ✓ should return null when consuming non-existent session (301 ms)
        ✓ should handle race conditions safely (335 ms)
      cleanupExpired
        ✓ should manually delete expired sessions (546 ms)
        ✓ should return zero deletions when no expired sessions exist (496 ms)
    TTL Behavior
      ✓ should have TTL index configured on expiresAt field (454 ms)
      ✓ should respect custom expiresAt when provided (395 ms)
    Data Integrity
      ✓ should preserve all data types in result field (327 ms)
      ✓ should handle empty and minimal result objects (497 ms)
    Error Handling
      ✓ should handle MongoDB connection errors gracefully (262 ms)
      ✓ should handle very large result objects (405 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethod.test.js
  PaymentMethod Model Unit Tests
    Schema Validation
      ✓ should create a valid payment method (54 ms)
      ✓ should require customerId (67 ms)
      ✓ should require paygistixId (65 ms)
      ✓ should validate type enum (67 ms)
      ✓ should reject invalid type (61 ms)
      ✓ should default type to card (69 ms)
    Card Validation
      ✓ should require card details when type is card (68 ms)
      ✓ should validate card last4 length (69 ms)
      ✓ should validate card brand enum (71 ms)
      ✓ should reject invalid card brand (52 ms)
      ✓ should validate expiry month range (68 ms)
      ✓ should validate expiry year is not in the past (56 ms)
      ✓ should require card fingerprint (52 ms)
    Bank Account Validation
      ✓ should create valid bank account payment method (54 ms)
      ✓ should require bank account details when type is bank_account (55 ms)
      ✓ should validate bank account last4 length (54 ms)
      ✓ should validate account type enum (64 ms)
      ✓ should reject invalid account type (59 ms)
    Wallet Validation
      ✓ should create valid wallet payment method (79 ms)
      ✓ should require wallet type when type is wallet (83 ms)
      ✓ should validate wallet type enum (68 ms)
    Default Values
      ✓ should default isDefault to false (79 ms)
      ✓ should default isActive to true (52 ms)
      ✓ should default isVerified to false (60 ms)
    Virtual Properties
      displayName
        ✓ should format card display name (68 ms)
        ✓ should format bank account display name (83 ms)
        ✓ should format wallet display name (89 ms)
        ✓ should handle google_pay formatting (62 ms)
        ✓ should return default for unknown type (52 ms)
      isExpired
        ✓ should return false for non-card types (54 ms)
        ✓ should return false for future expiry (59 ms)
        ✓ should return true for past year (68 ms)
        ✓ should return true for current year past month (84 ms)
        ✓ should return false for current year future month (73 ms)
    Instance Methods
      canUse()
        ✓ should allow use of active non-expired card (77 ms)
        ✓ should not allow use of inactive payment method (69 ms)
        ✓ should not allow use of expired card (57 ms)
        ✓ should not allow use of unverified bank account (69 ms)
        ✓ should allow use of verified bank account (66 ms)
      markAsUsed()
        ✓ should update lastUsedAt (52 ms)
    Static Methods
      findDefault()
        ✓ should find default payment method for customer (57 ms)
      findActiveByCustomer()
        ✓ should find active payment methods sorted by default and date (52 ms)
      checkDuplicate()
        ✓ should check for duplicate card fingerprint (51 ms)
        ✓ should return null if no duplicate found (64 ms)
    Middleware
      Pre-save middleware existence
        ✓ should have pre-save middleware defined (86 ms)
    Metadata Field
      ✓ should store metadata as Map (56 ms)
    JSON Transformation
      ✓ should include virtuals and exclude sensitive fields (54 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/payment.test.js
  Payment Model Unit Tests
    Schema Validation
      ✓ should create a valid payment (56 ms)
      ✓ should require orderId (77 ms)
      ✓ should require customerId (68 ms)
      ✓ should require paymentMethodId (64 ms)
      ✓ should require paygistixId (54 ms)
      ✓ should require amount (63 ms)
      ✓ should validate amount is non-negative (78 ms)
      ✓ should default currency to USD (72 ms)
      ✓ should validate currency enum (65 ms)
      ✓ should reject invalid currency (82 ms)
      ✓ should validate status enum (60 ms)
      ✓ should reject invalid status (53 ms)
      ✓ should default status to pending (61 ms)
    Default Values
      ✓ should default capturedAmount to 0 (52 ms)
      ✓ should default refundedAmount to 0 (56 ms)
      ✓ should default hasDispute to false (54 ms)
      ✓ should have empty refunds array (58 ms)
    Virtual Properties
      ✓ should calculate netAmount correctly (54 ms)
      ✓ should handle zero amounts (54 ms)
      ✓ should handle full refund (55 ms)
    Instance Methods
      canRefund()
        ✓ should allow refund when status is captured (53 ms)
        ✓ should allow refund when status is partially_refunded (63 ms)
        ✓ should not allow refund when status is pending (61 ms)
        ✓ should not allow refund when fully refunded (53 ms)
        ✓ should validate refund amount (55 ms)
        ✓ should handle null amount parameter (53 ms)
      canCapture()
        ✓ should allow capture when status is authorized (53 ms)
        ✓ should not allow capture when status is captured (54 ms)
        ✓ should not allow capture when status is pending (61 ms)
      addRefund()
        ✓ should add refund to refunds array (56 ms)
        ✓ should update refundedAmount (61 ms)
        ✓ should update lastRefundAt (53 ms)
        ✓ should set status to partially_refunded for partial refund (54 ms)
        ✓ should set status to refunded for full refund (53 ms)
        ✓ should handle multiple refunds (64 ms)
        ✓ should handle refund that exceeds captured amount (53 ms)
    Static Methods
      findByOrder()
        ✓ should find payments by orderId (53 ms)
      findSuccessfulByCustomer()
        ✓ should find successful payments by customer with default limit (54 ms)
        ✓ should accept custom limit (54 ms)
      calculateRevenue()
        ✓ should calculate revenue for a period (55 ms)
    Middleware
      ✓ should have pre-save middleware defined (65 ms)
    Refund Schema
      ✓ should validate refund subdocument (54 ms)
      ✓ should require refundId in refund (55 ms)
      ✓ should require amount in refund (54 ms)
      ✓ should validate refund amount is non-negative (70 ms)
      ✓ should set default createdAt for refund (87 ms)
    Dispute Tracking
      ✓ should validate dispute status enum (65 ms)
      ✓ should allow dispute fields when hasDispute is true (91 ms)
      ✓ should validate dispute amount is non-negative (80 ms)
    Metadata and Response Fields
      ✓ should store metadata as Map (63 ms)
      ✓ should store response as mixed type (69 ms)
    JSON Transformation
      ✓ should remove __v and response fields from JSON (73 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/socialAuthRoutes.test.js
  Social Auth Routes - Simple Tests
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (11 ms)
      ✓ should return 404 when Google OAuth is not configured (4 ms)
      ✓ should handle Google OAuth callback (5 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (3 ms)
      ✓ should return 404 when Facebook OAuth is not configured (3 ms)
      ✓ should handle Facebook OAuth callback (2 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (3 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured (1 ms)
      ✓ should handle LinkedIn OAuth callback (3 ms)
    Social Registration Route
      ✓ should handle social registration with valid data (8 ms)
      ✓ should validate required fields for social registration (3 ms)
      ✓ should validate service radius range (3 ms)
      ✓ should validate payment method (2 ms)
    Social Account Linking Route
      ✓ should handle social account linking (2 ms)
      ✓ should validate provider for account linking (2 ms)
      ✓ should require social token for account linking (2 ms)
    Social Login Callback Route
      ✓ should handle social login callback (3 ms)
      ✓ should validate social login data (3 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (2 ms)
      ✓ should handle customer Google OAuth callback redirect (2 ms)
      ✓ should handle customer Facebook callback (3 ms)
      ✓ should handle customer LinkedIn callback (2 ms)
    Customer Social Registration Route
      ✓ should handle customer social registration (3 ms)
      ✓ should validate customer registration fields (2 ms)
      ✓ should validate service frequency (1 ms)
    Error Handling
      ✓ should handle errors gracefully (19 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentController.test.js
  Payment Controller
    getConfig
      ✓ should return payment configuration when properly configured (58 ms)
      ✓ should return error when Paygistix is not configured (79 ms)
      ✓ should handle errors gracefully (74 ms)
    logSubmission
      ✓ should log payment submission successfully (73 ms)
      ✓ should handle logging errors (52 ms)
    createPaymentToken
      ✓ should create payment token successfully (55 ms)
      ✓ should handle no available callbacks (51 ms)
      ✓ should handle token creation errors (63 ms)
    checkPaymentStatus
      ✓ should return payment status successfully (57 ms)
      ✓ should handle token not found (52 ms)
      ✓ should handle database errors (64 ms)
    cancelPaymentToken
      ✓ should cancel pending payment token (52 ms)
      ✓ should not cancel non-pending tokens (53 ms)
      ✓ should handle token not found (53 ms)
    updatePaymentStatus
      ✓ should update payment status to success (52 ms)
      ✓ should update payment status to failed (53 ms)
    handleFormCallback
      ✓ should process callback successfully (62 ms)
      ✓ should handle no pending payment for callback (68 ms)
      ✓ should handle callback processing errors (52 ms)
    processCallbackResult
      ✓ should process successful payment from query params (55 ms)
      ✓ should process failed payment (58 ms)
      ✓ should handle body parameters (51 ms)
      ✓ should redirect with all parameters (57 ms)
    getPoolStats
      ✓ should return pool statistics (52 ms)
      ✓ should handle stats retrieval errors (51 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentCallbackRoute.test.js
  Payment Callback Route
    GET /payment_callback
      Successful payment
        ✓ should handle approved payment successfully (8 ms)
        ✓ should handle success status as well as approved (2 ms)
        ✓ should update existing payment if found (2 ms)
        ✓ should handle customer not found gracefully (4 ms)
        ✓ should handle email send failure gracefully (3 ms)
        ✓ should not update customer if already active (2 ms)
      Failed payment
        ✓ should handle declined payment (2 ms)
        ✓ should handle failed status (2 ms)
        ✓ should increment payment attempts on failure (1 ms)
        ✓ should use default error message when none provided (2 ms)
      Error handling
        ✓ should handle order not found (1 ms)
        ✓ should handle unknown payment status (2 ms)
        ✓ should handle database errors gracefully (2 ms)
        ✓ should handle payment save error (2 ms)
      Edge cases
        ✓ should handle missing amount parameter (6 ms)
        ✓ should handle malformed maskedCard (3 ms)
        ✓ should log callback parameters (2 ms)
    POST /payment_callback
      ✓ should handle POST callback and return JSON response (5 ms)
      ✓ should handle POST callback errors (2 ms)
      ✓ should handle empty POST body (1 ms)
      ✓ should handle POST with form-urlencoded data (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:102:13)

  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:94:15)

PASS tests/unit/quickbooksController.test.js
  QuickBooks Controller
    exportVendors
      ✓ should export vendors as JSON (9 ms)
      ✓ should export vendors as CSV (2 ms)
      ✓ should return 404 when no verified vendors found
      ✓ should handle errors gracefully (1 ms)
    exportPaymentSummary
      ✓ should export payment summary as JSON (1 ms)
      ✓ should export payment summary as CSV (1 ms)
      ✓ should return 400 when dates are missing
      ✓ should return 404 when no payable commissions found (1 ms)
      ✓ should filter out orders without verified W-9 (2 ms)
    exportCommissionDetail
      ✓ should export commission detail as JSON
      ✓ should return 400 when required parameters are missing
      ✓ should return 404 when affiliate not found
      ✓ should return 400 when affiliate has no verified W-9 (1 ms)
    getExportHistory
      ✓ should get export history
      ✓ should filter by type (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidatorEnhanced.test.js
  Enhanced Password Validator
    validatePasswordStrength
      Length Requirements
        ✓ should reject passwords shorter than 8 characters (3 ms)
        ✓ should accept passwords with 8 or more characters
      Character Type Requirements
        ✓ should require at least one uppercase letter (1 ms)
        ✓ should require at least one lowercase letter
        ✓ should require at least one number (2 ms)
        ✓ should require at least one special character
        ✓ should accept passwords with all required character types (1 ms)
      Common Password Detection
        ✓ should reject common passwords (1 ms)
        ✓ should accept non-common passwords
      Sequential Character Detection
        ✓ should reject passwords with sequential numbers (1 ms)
        ✓ should reject passwords with sequential letters (10 ms)
        ✓ should accept passwords without sequential characters (1 ms)
      Repeated Character Detection
        ✓ should reject passwords with too many repeated characters (1 ms)
        ✓ should accept passwords with acceptable repeated characters
      Username/Email Inclusion Check
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email
        ✓ should accept passwords not containing username or email (1 ms)
      Password History Check
        ✓ should reject passwords in history
        ✓ should accept passwords not in history
      Complete Valid Passwords
        ✓ should accept completely valid passwords (1 ms)
    getPasswordStrength
      ✓ should return correct strength scores (1 ms)
      ✓ should return correct strength labels
    isPasswordInHistory
      ✓ should return true for passwords in history
      ✓ should return false for passwords not in history (1 ms)
      ✓ should handle empty history
    customPasswordValidator
      ✓ should return custom validator function
      ✓ should validate passwords correctly in express-validator context (1 ms)
      ✓ should throw for invalid passwords in express-validator context (13 ms)
      ✓ should include admin-specific validation when userType is admin (1 ms)
      ✓ should include admin-specific validation when userType is operator (1 ms)
    passwordValidationMiddleware
      ✓ should call next() for valid passwords
      ✓ should return 400 error for invalid passwords (1 ms)
      ✓ should skip validation if no password in request (1 ms)
      ✓ should include strength assessment in response for invalid passwords
    Edge Cases and Security
      ✓ should handle null and undefined inputs gracefully (1 ms)
      ✓ should handle very long passwords
      ✓ should handle special Unicode characters (1 ms)
      ✓ should be case-sensitive for username/email checks

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administrator.test.js (8.953 s)
  Administrator Model
    Schema Validation
      ✓ should create a valid administrator (229 ms)
      ✓ should require all mandatory fields (96 ms)
      ✓ should enforce email format validation (190 ms)
      ✓ should enforce unique email constraint (583 ms)
      ✓ should enforce unique adminId constraint (624 ms)
      ✓ should validate permission enum values (137 ms)
      ✓ should accept valid permissions (188 ms)
      ✓ should trim whitespace from string fields (187 ms)
      ✓ should convert email to lowercase (185 ms)
      ✓ should not allow role to be changed after creation (285 ms)
    Password Handling
      ✓ should store password as hash and salt (313 ms)
      ✓ should verify correct password (357 ms)
      ✓ should reject incorrect password (267 ms)
      ✓ should not expose password in JSON output (208 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (298 ms)
      ✓ should lock account after 5 failed attempts (254 ms)
      ✓ should reset login attempts on successful login (280 ms)
      ✓ should reset attempts if lock has expired (297 ms)
      ✓ should correctly identify locked accounts (184 ms)
    Password Reset
      ✓ should generate password reset token (185 ms)
      ✓ should set password reset expiry to 30 minutes (183 ms)
    Permissions
      ✓ should check single permission correctly (228 ms)
      ✓ should check multiple permissions with AND operation (248 ms)
      ✓ should check multiple permissions with OR operation (195 ms)
      ✓ should set default permissions if none provided (184 ms)
    Static Methods
      ✓ should find active administrators (331 ms)
      ✓ should find administrator by email with password (209 ms)
      ✓ should handle case-insensitive email search (233 ms)
      ✓ should return null for non-existent email (107 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (220 ms)
      ✓ should update updatedAt on modification (342 ms)
    Admin ID Generation
      ✓ should auto-generate unique admin ID (287 ms)
      ✓ should not override provided admin ID (182 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/generalPaymentCallback.test.js
  General Payment Callback Routes
    GET /
      Registration Payment
        ✓ should redirect to success page on approved registration payment (6 ms)
        ✓ should redirect to success page on success status (2 ms)
        ✓ should redirect to register page with error on failed registration payment (2 ms)
        ✓ should handle missing response message on failure (1 ms)
        ✓ should handle registration payment callback errors (1 ms)
      Order Payment
        ✓ should handle approved order payment successfully (4 ms)
        ✓ should handle success status for order payment (2 ms)
        ✓ should update existing payment record (2 ms)
        ✓ should handle declined order payment (2 ms)
        ✓ should handle failed order payment (1 ms)
        ✓ should handle unknown payment status (2 ms)
        ✓ should handle order not found (2 ms)
        ✓ should handle missing orderId in query (2 ms)
        ✓ should handle email service failure gracefully (2 ms)
        ✓ should skip customer update if customer not found (2 ms)
        ✓ should not update already active customer (2 ms)
        ✓ should handle payment callback errors (2 ms)
        ✓ should use order amount if payment amount not provided (6 ms)
        ✓ should handle partial masked card (4 ms)
        ✓ should handle missing masked card (2 ms)
      General error handling
        ✓ should handle general callback errors (1 ms)
    POST /
      Registration Payment
        ✓ should create customer on approved registration payment with session (9 ms)
        ✓ should handle success status for registration (3 ms)
        ✓ should handle customer creation error (3 ms)
        ✓ should handle no pending registration (2 ms)
        ✓ should handle declined registration payment (2 ms)
        ✓ should handle failed registration payment without message (1 ms)
      Order Payment POST
        ✓ should acknowledge order payment callback (2 ms)
        ✓ should handle order payment with explicit type (1 ms)
      General POST error handling
        ✓ should handle POST callback errors (18 ms)
        ✓ should log POST callback data (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/rbac.test.js
  RBAC Middleware
    Role Hierarchy
      ✓ should define correct role hierarchy (1 ms)
      ✓ should define allowed roles
    checkRole Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should reject when user has no role
      ✓ should reject when user has invalid role
      ✓ should accept when user has exact required role (1 ms)
      ✓ should accept when user has higher role in hierarchy
      ✓ should reject when user has lower role in hierarchy (1 ms)
      ✓ should handle array of required roles
      ✓ should accept administrator accessing operator resources
      ✓ should reject operator accessing administrator resources (2 ms)
    checkAllRoles Middleware
      ✓ should reject when no user is present
      ✓ should accept when user has access to all required roles
      ✓ should reject when user lacks access to any required role (1 ms)
      ✓ should accept admin for any combination of roles
    checkResourceOwnership Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should allow admin access to any resource
      ✓ should allow administrator access to any resource
      ✓ should allow affiliate access to own resource via params (1 ms)
      ✓ should allow customer access to own resource via body
      ✓ should allow operator access to own resource
      ✓ should reject affiliate access to another affiliate resource
      ✓ should prefer params over body for resource ID
    checkAdminPermission Middleware
      ✓ should reject when user is not administrator
      ✓ should reject when administrator not found (1 ms)
      ✓ should reject when administrator is not active
      ✓ should accept when administrator has required permission (1 ms)
      ✓ should handle array of required permissions
      ✓ should reject when administrator lacks any required permission
      ✓ should handle database errors (1 ms)
    checkOperatorStatus Middleware
      ✓ should skip check for non-operators
      ✓ should reject when operator not found (1 ms)
      ✓ should reject when operator is not active
      ✓ should reject when operator is not on shift
      ✓ should accept active operator on shift (1 ms)
      ✓ should handle database errors
    filterResponseFields Middleware
      ✓ should pass through data when no user present (1 ms)
      ✓ should pass through data when user has no role
      ✓ should pass through all fields when role has wildcard permission
      ✓ should filter fields based on role permissions (1 ms)
      ✓ should handle nested field permissions
      ✓ should handle array data (1 ms)
      ✓ should handle standard response format with data property
      ✓ should use default permissions when role not specified
      ✓ should handle deeply nested fields (1 ms)
      ✓ should handle non-object data gracefully
      ✓ should handle empty allowed fields (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[31merror[39m: Failed to retrieve PKCE verifier: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json' {"code":"ENOENT","errno":-2,"path":"/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json","service":"wavemax-affiliate","stack":"Error: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json'\n    at open (node:internal/fs/promises:639:25)\n    at Object.readFile (node:internal/fs/promises:1246:14)\n    at DocuSignService.getPkceVerifier (/var/www/wavemax/wavemax-affiliate-program/server/services/docusignService.js:85:23)\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/docusignService.test.js:113:31)","syscall":"open","timestamp":"2025-07-07T16:38:10.095Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.457Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":13}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:38:10.458Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: Token saved to database {"expiresAt":"2025-07-07T17:38:10.458Z","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.502Z","tokenId":"default"}
[32minfo[39m: Token exchange successful {"expiresIn":3600,"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.503Z"}
[31merror[39m: PKCE verifier not found for state: {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.625Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.827Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":8}
[31merror[39m: Failed to exchange code for token: {"error":"Network error","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:10.830Z"}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:38:11.064Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:38:11.371Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T17:38:12.597Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: DocuSign envelope created: {"affiliateId":"123456789","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:13.124Z"}
[31merror[39m: Failed to create W9 envelope: {"affiliateEmail":"test@example.com","data":{"message":"Invalid template ID"},"service":"wavemax-affiliate","status":400,"templateId":"test_template_id","timestamp":"2025-07-07T16:38:13.208Z"}
[32minfo[39m: DocuSign in test mode - returning mock envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:13.288Z"}
[32minfo[39m: Embedded signing URL generated: {"affiliateId":"123456","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:13.418Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-completed","service":"wavemax-affiliate","status":"completed","timestamp":"2025-07-07T16:38:13.676Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-declined","service":"wavemax-affiliate","status":"declined","timestamp":"2025-07-07T16:38:13.758Z"}
[32minfo[39m: Downloaded completed W9: {"envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:13.919Z"}
[32minfo[39m: Voided envelope: {"envelopeId":"test_envelope_id","reason":"Cancelled by user","service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:14.004Z"}
[31merror[39m: Authentication required: {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:38:14.772Z"}
PASS tests/unit/docusignService.test.js (6.04 s)
  DocuSign Service
    PKCE Generation
      ✓ should generate valid PKCE challenge and verifier (87 ms)
    PKCE Storage
      ✓ should store and retrieve PKCE verifier (129 ms)
      ✓ should delete verifier after retrieval (132 ms)
      ✓ should clean up old PKCE files (87 ms)
    Authorization URL
      ✓ should generate correct authorization URL (105 ms)
      ✓ should use provided state if given (78 ms)
    Token Exchange
      ✓ should exchange authorization code for tokens (168 ms)
      ✓ should throw error if PKCE verifier not found (180 ms)
      ✓ should handle token exchange errors (157 ms)
    Token Refresh
      ✓ should refresh access token using refresh token (1399 ms)
      ✓ should throw error if no refresh token available (200 ms)
    Access Token Management
      ✓ should return valid access token if not expired (324 ms)
      ✓ should refresh token if expired (130 ms)
      ✓ should throw error if no valid token and no refresh token (105 ms)
    Envelope Creation
      ✓ should create W9 envelope for affiliate (84 ms)
      ✓ should handle envelope creation errors (81 ms)
      ✓ should return mock envelope in test mode (97 ms)
    Embedded Signing URL
      ✓ should generate embedded signing URL (117 ms)
    Webhook Signature Verification
      ✓ should verify valid webhook signature (90 ms)
      ✓ should reject invalid webhook signature (79 ms)
    Webhook Event Processing
      ✓ should process completed envelope event (87 ms)
      ✓ should handle declined envelope (79 ms)
    Envelope Status
      ✓ should get envelope status (82 ms)
    Document Download
      ✓ should download completed W9 document (81 ms)
    Envelope Voiding
      ✓ should void an envelope (88 ms)
    hasValidToken
      ✓ should return true when a valid token exists (181 ms)
      ✓ should return false when no valid token exists (131 ms)
      ✓ should return false when token is expired (150 ms)
    authenticate
      ✓ should return access token when authentication succeeds (195 ms)
      ✓ should throw error when authentication fails (105 ms)
    extractTaxInfoFromTabs
      ✓ should extract SSN tax info from tabs (79 ms)
      ✓ should extract EIN tax info from tabs (80 ms)
      ✓ should extract business name from tabs (78 ms)
      ✓ should return empty object when no tax info found (78 ms)
      ✓ should handle empty tabs (79 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'customer_test-session-id', popup: 'true' },
      headers: {},
      state: 'customer_test-session-id',
      stateStartsWithCustomer: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'customer_test-session-id',
      isCustomerRequest: true,
      willDelegate: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    [OAuth] Delegating to handleCustomerSocialCallback

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:986:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: {},
      headers: {},
      state: undefined,
      stateStartsWithCustomer: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: undefined,
      isCustomerRequest: undefined,
      willDelegate: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: { state: undefined, sessionId: null, allParams: {} }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-07-07T16:38:19.984Z","userType":"affiliate","username":"johndoe"}
  console.error
    Error storing OAuth session: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:128:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1087 |             await OAuthSession.createSession(sessionId, message);
      1088 |           } catch (dbError) {
    > 1089 |             console.error('Error storing OAuth session:', dbError);
           |                     ^
      1090 |           }
      1091 |         }
      1092 |

      at Object.error [as handleSocialCallback] (server/controllers/authController.js:1089:21)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:131:7)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'customer@example.com',
        firstName: 'Customer',
        lastName: 'User',
        isNewUser: true
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:240:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T16:38:20.619Z","userType":"affiliate"}
  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:330:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T16:38:21.282Z","userType":"affiliate"}
  console.error
    Missing customer or affiliate data for welcome email

      883 |     // Validate inputs
      884 |     if (!customer || !affiliate) {
    > 885 |       console.error('Missing customer or affiliate data for welcome email');
          |               ^
      886 |       return;
      887 |     }
      888 |

      at Object.error [as sendCustomerWelcomeEmail] (server/utils/emailService.js:885:15)
      at Object.sendCustomerWelcomeEmail [as completeSocialCustomerRegistration] (server/controllers/authController.js:2253:26)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:388:7)

info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T16:38:21.674Z","userType":"customer"}
  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'not found',
      resultData: null
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:583:65)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:585:7)

PASS tests/unit/authControllerEnhanced.test.js (8.788 s)
  Enhanced Auth Controller - OAuth Methods
    handleSocialCallback
      ✓ should create OAuth session and redirect for affiliate context (994 ms)
      ✓ should handle customer context from state parameter (206 ms)
      ✓ should handle missing user data gracefully (200 ms)
      ✓ should handle OAuth session creation errors (222 ms)
      ✓ should extract profile data correctly for different providers (184 ms)
    handleCustomerSocialCallback
      ✓ should create customer OAuth session (204 ms)
    completeSocialRegistration
      ✓ should complete social registration successfully (188 ms)
      ✓ should sanitize social data and reject if fields become empty (159 ms)
      ✓ should check for existing email and username (173 ms)
      ✓ should check for existing social account (163 ms)
      ✓ should generate unique username from social data (182 ms)
      ✓ should handle JWT verification errors (165 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration successfully (214 ms)
      ✓ should validate affiliate existence (160 ms)
      ✓ should sanitize customer social data (159 ms)
    pollOAuthSession
      ✓ should return complete session data when available (161 ms)
      ✓ should return social-auth-login session data (229 ms)
      ✓ should return social-auth-error session data (222 ms)
      ✓ should return social-auth-account-conflict session data for affiliate conflict (188 ms)
      ✓ should return social-auth-account-conflict session data for customer conflict (177 ms)
      ✓ should return pending status when session not ready (161 ms)
      ✓ should handle database errors gracefully (165 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed JWT tokens (185 ms)
      ✓ should handle database connection errors (165 ms)
      ✓ should handle missing required fields in social data (159 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.error
    Token verification error: Error: User data not found in request
        at Object.<anonymous>.exports.verifyToken (/var/www/wavemax/wavemax-affiliate-program/server/controllers/authController.js:860:13)
        at Object.verifyToken (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authController.test.js:370:28)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      881 |     });
      882 |   } catch (error) {
    > 883 |     console.error('Token verification error:', error);
          |             ^
      884 |     res.status(500).json({
      885 |       success: false,
      886 |       message: 'An error occurred during token verification'

      at Object.error [as verifyToken] (server/controllers/authController.js:883:13)
      at Object.verifyToken (tests/unit/authController.test.js:370:28)

PASS tests/unit/authController.test.js
  Auth Controller
    affiliateLogin
      ✓ should successfully login an affiliate with valid credentials (3 ms)
      ✓ should return 401 for non-existent affiliate
      ✓ should return 401 for incorrect password (1 ms)
    customerLogin
      ✓ should successfully login a customer with valid credentials (6 ms)
      ✓ should return 401 for non-existent customer
      ✓ should login customer using emailOrUsername field (6 ms)
      ✓ should prioritize emailOrUsername over username field (2 ms)
      ✓ should return error when neither username nor emailOrUsername provided
    verifyToken
      ✓ should verify a valid JWT token (2 ms)
      ✓ should handle missing user data (41 ms)
      ✓ should return customer user data
    refreshToken
      ✓ should refresh token successfully (2 ms)
      ✓ should return error for invalid refresh token
      ✓ should return error for expired refresh token (1 ms)
    administratorLogin
      ✓ should successfully login administrator (11 ms)
      ✓ should handle locked account
      ✓ should handle inactive administrator (1 ms)
    operatorLogin
      ✓ should successfully login operator with PIN (1 ms)
      ✓ should increment login attempts on failure
    logout
      ✓ should logout user and blacklist token (1 ms)
    forgotPassword
      ✓ should send password reset email for affiliate (1 ms)
      ✓ should handle non-existent email gracefully
    resetPassword
      ✓ should reset password with valid token (1 ms)
      ✓ should reject expired token (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportConfig.test.js
  Passport Configuration Tests
    Strategy Configuration
      ✓ should configure Google strategy when credentials are present (5 ms)
      ✓ should not configure Google strategy without credentials (1 ms)
      ✓ should configure Facebook strategy when credentials are present (1 ms)
      ✓ should not configure Facebook strategy without credentials (1 ms)
      ✓ should configure LinkedIn strategy when credentials are present (1 ms)
    Google OAuth Strategy
      ✓ should handle database errors (2 ms)
      Customer Context
        ✓ should handle existing customer with Google account (2 ms)
        ✓ should link Google account to existing customer (1 ms)
        ✓ should handle existing affiliate conflict (2 ms)
        ✓ should return new user data (1 ms)
      Affiliate Context
        ✓ should handle existing affiliate with Google account (2 ms)
        ✓ should handle customer conflict (1 ms)
        ✓ should link Google account to existing affiliate with email (2 ms)
        ✓ should return new affiliate user data (7 ms)
    Facebook OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should return new user data for registration (1 ms)
      ✓ should link Facebook account to existing affiliate (1 ms)
      ✓ should handle Facebook error (1 ms)
    LinkedIn OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should link LinkedIn account to existing affiliate (1 ms)
      ✓ should return new LinkedIn user data (2 ms)
      ✓ should handle LinkedIn error (1 ms)
    Serialization
      ✓ should serialize user with _id (1 ms)
      ✓ should serialize user with socialId
      ✓ should deserialize user (1 ms)
      ✓ should handle deserialization errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentExport.test.js (9.872 s)
  PaymentExport Model Unit Tests
    Schema Validation
      ✓ should create a valid PaymentExport (57 ms)
      ✓ should generate exportId automatically (68 ms)
      ✓ should require type field (62 ms)
      ✓ should validate type enum values (63 ms)
      ✓ should reject invalid type values (66 ms)
      ✓ should require generatedBy field (72 ms)
    Period Fields
      ✓ should store period dates for payment summary (77 ms)
      ✓ should store period dates for commission detail (68 ms)
    Export Data
      ✓ should store vendor export data (59 ms)
      ✓ should store payment summary data (80 ms)
      ✓ should store commission detail data (96 ms)
    Affiliate IDs
      ✓ should store multiple affiliate IDs for vendor export (63 ms)
      ✓ should store single affiliate ID for commission detail (92 ms)
      ✓ should allow empty affiliate IDs array (117 ms)
    Timestamps
      ✓ should have createdAt and updatedAt timestamps (102 ms)
    Indexes
      ✓ should have required indexes defined (76 ms)
    Different Export Types
      ✓ should handle vendor export type correctly (127 ms)
      ✓ should handle payment summary export type correctly (91 ms)
      ✓ should handle commission detail export type correctly (87 ms)
    Export ID Generation
      ✓ should generate unique export IDs (72 ms)
    Reference Validation
      ✓ should validate generatedBy as ObjectId reference (71 ms)
      ✓ should accept valid ObjectId for generatedBy (71 ms)
    Instance Methods
      markDownloaded()
        ✓ should mark export as downloaded (203 ms)
        ✓ should increment download count on multiple downloads (258 ms)
        ✓ should not change status if already downloaded (204 ms)
        ✓ should update downloadedAt timestamp (213 ms)
      updateImportStatus()
        ✓ should update import status to success (318 ms)
        ✓ should update import status to failed (251 ms)
        ✓ should handle partial import status (203 ms)
    Static Methods
      findByPeriod()
        ✓ should find exports within period (163 ms)
        ✓ should filter by type when specified (430 ms)
        ✓ should return empty array when no matches (1216 ms)
        ✓ should sort by generatedAt descending (1066 ms)
      existsForPeriod()
        ✓ should find existing export for period (621 ms)
        ✓ should not find export for different period (244 ms)
        ✓ should exclude failed exports (749 ms)
        ✓ should find export with non-failed status (695 ms)
    Virtual Properties
      ageInDays
        ✓ should calculate age in days correctly (102 ms)
        ✓ should return 1 for exports created today (332 ms)
        ✓ should handle exports created in the past correctly (55 ms)
        ✓ should update as time passes (294 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/systemConfig.test.js (10.82 s)
  SystemConfig Model
    Schema Validation
      ✓ should create a valid system config (209 ms)
      ✓ should require mandatory fields (201 ms)
      ✓ should enforce unique key constraint (386 ms)
      ✓ should validate category enum (78 ms)
      ✓ should validate dataType enum (611 ms)
      ✓ should accept all valid categories (566 ms)
      ✓ should accept all valid data types (389 ms)
      ✓ should trim string fields (166 ms)
    Value Validation
      Number validation
        ✓ should reject non-number values for number dataType (303 ms)
        ✓ should enforce minimum value validation (148 ms)
        ✓ should enforce maximum value validation (79 ms)
        ✓ should accept valid number within range (123 ms)
      Boolean validation
        ✓ should reject non-boolean values for boolean dataType (80 ms)
        ✓ should accept boolean values (139 ms)
      String validation
        ✓ should reject non-string values for string dataType (88 ms)
        ✓ should enforce regex validation (81 ms)
        ✓ should accept valid string matching regex (132 ms)
      Array validation
        ✓ should reject non-array values for array dataType (82 ms)
        ✓ should accept array values (121 ms)
      Object validation
        ✓ should reject non-object values for object dataType (84 ms)
        ✓ should reject arrays for object dataType (84 ms)
        ✓ should accept object values (122 ms)
      Allowed values validation
        ✓ should enforce allowed values (77 ms)
        ✓ should accept allowed values (129 ms)
    Static Methods
      getValue
        ✓ should return config value (171 ms)
        ✓ should return defaultValue when value is undefined (158 ms)
        ✓ should return provided default when config not found (113 ms)
        ✓ should return null when config not found and no default provided (105 ms)
      setValue
        ✓ should update config value (191 ms)
        ✓ should throw error for non-existent config (104 ms)
        ✓ should throw error for non-editable config (151 ms)
        ✓ should update updatedBy when provided (201 ms)
        ✓ should validate new value according to dataType (158 ms)
      getByCategory
        ✓ should return all configs for a category (178 ms)
        ✓ should return only public configs when specified (177 ms)
        ✓ should return empty array for non-existent category (236 ms)
        ✓ should sort by key (240 ms)
      getPublicConfigs
        ✓ should return only public configs (188 ms)
        ✓ should sort by category then key (193 ms)
      initializeDefaults
        ✓ should create default configurations (660 ms)
        ✓ should not overwrite existing configurations (592 ms)
        ✓ should add missing configurations (578 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (132 ms)
      ✓ should update updatedAt on modification (260 ms)
    toJSON transformation
      ✓ should include currentValue in JSON output (126 ms)
      ✓ should use defaultValue when value is undefined (123 ms)
    Edge Cases
      ✓ should handle mixed types for value and defaultValue (119 ms)
      ✓ should handle empty validation object (159 ms)
      ✓ should skip validation when value is not modified (167 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Checking email availability for: new@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'new@example.com',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: existing@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'existing@example.com',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: customer@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'customer@example.com',
      affiliateFound: false,
      customerFound: true,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: test@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.error
    Check email error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:130:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2408 |
      2409 |   } catch (error) {
    > 2410 |     console.error('Check email error:', error);
           |             ^
      2411 |     res.status(500).json({
      2412 |       success: false,
      2413 |       message: 'Error checking email availability'

      at Object.error [as checkEmail] (server/controllers/authController.js:2410:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:132:7)

  console.log
    Checking username availability for: newuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'newuser',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: existinguser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'existinguser',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: testuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.error
    Check username error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:186:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2355 |
      2356 |   } catch (error) {
    > 2357 |     console.error('Check username error:', error);
           |             ^
      2358 |     res.status(500).json({
      2359 |       success: false,
      2360 |       message: 'Error checking username availability'

      at Object.error [as checkUsername] (server/controllers/authController.js:2357:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:188:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login attempt from IP: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login denied - IP not whitelisted: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:390:15)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.error
    Default operator not found: OP001

      400 |     
      401 |     if (!operator) {
    > 402 |       console.error('Default operator not found:', defaultOperatorId);
          |               ^
      403 |       return res.status(404).json({
      404 |         success: false,
      405 |         message: 'Default operator not configured'

      at Object.error [as operatorAutoLogin] (server/controllers/authController.js:402:15)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:282:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'existing-customer',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'jane@example.com',
        firstName: 'Jane',
        lastName: 'Doe',
        isNewUser: true,
        displayName: 'Jane Doe'
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: invalid

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: { sessionId: 'invalid', sessionResult: 'not found', resultData: null }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:812:53)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:814:7)

PASS tests/unit/authControllerAdditional.test.js
  Auth Controller - Additional Coverage
    checkEmail
      ✓ should return available when email does not exist (7 ms)
      ✓ should return not available when email exists in Affiliate (2 ms)
      ✓ should return not available when email exists in Customer (1 ms)
      ✓ should handle errors (18 ms)
      ✓ should return error for missing email (1 ms)
    checkUsername
      ✓ should return available when username does not exist (2 ms)
      ✓ should return not available when username exists (1 ms)
      ✓ should handle errors (2 ms)
      ✓ should return error for missing username
    operatorAutoLogin
      ✓ should auto-login operator from store IP (5 ms)
      ✓ should fail from invalid IP (3 ms)
      ✓ should handle missing default operator (3 ms)
      ✓ should handle inactive operator (8 ms)
    handleSocialCallback
      ✓ should handle successful social auth callback for affiliate (4 ms)
      ✓ should redirect new user to registration (4 ms)
      ✓ should handle errors (5 ms)
    handleCustomerSocialCallback
      ✓ should handle customer social auth callback (3 ms)
      ✓ should handle new customer registration (6 ms)
    completeSocialRegistration
      ✓ should complete affiliate social registration (27 ms)
      ✓ should handle existing email (1 ms)
      ✓ should handle invalid token (1 ms)
      ✓ should handle missing social data
    completeSocialCustomerRegistration
      ✓ should complete customer social registration (2 ms)
      ✓ should handle invalid affiliate code
    pollOAuthSession
      ✓ should return completed session data (3 ms)
      ✓ should return session data for pending session (7 ms)
      ✓ should handle session not found (2 ms)
      ✓ should handle errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/operator.test.js (12.455 s)
  Operator Model
    Schema Validation
      ✓ should create a valid operator (221 ms)
      ✓ should require all mandatory fields (93 ms)
      ✓ should enforce email format validation (129 ms)
      ✓ should enforce unique email constraint (778 ms)
      ✓ should enforce unique username constraint (784 ms)
      ✓ should validate username format (80 ms)
      ✓ should validate shift time format (78 ms)
      ✓ should accept valid shift times (184 ms)
      ✓ should enforce quality score range (77 ms)
      ✓ should trim whitespace from string fields (176 ms)
      ✓ should convert email and username to lowercase (172 ms)
      ✓ should not allow role to be changed after creation (265 ms)
    Password Handling
      ✓ should hash password on save (291 ms)
      ✓ should verify correct password (293 ms)
      ✓ should reject incorrect password (270 ms)
      ✓ should not expose password in JSON output (200 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (300 ms)
      ✓ should lock account after 5 failed attempts (524 ms)
      ✓ should lock for 30 minutes (536 ms)
      ✓ should reset login attempts on successful login (307 ms)
      ✓ should reset attempts if lock has expired (278 ms)
      ✓ should correctly identify locked accounts (200 ms)
    Password Reset
      ✓ should generate password reset token (79 ms)
      ✓ should set password reset expiry to 30 minutes (82 ms)
    Shift Management
      isOnShift virtual
        ✓ should return true when no shift times are set (89 ms)
        ✓ should correctly identify operator on shift during normal hours (78 ms)
        ✓ should correctly identify operator off shift (78 ms)
        ✓ should handle overnight shifts correctly (85 ms)
    Processing Statistics
      ✓ should update processing stats correctly (231 ms)
      ✓ should handle first order processing (293 ms)
      ✓ should update quality score with passing result (224 ms)
      ✓ should update quality score with failing result (219 ms)
    Static Methods
      findActive
        ✓ should find only active operators (339 ms)
      findOnShift
        ✓ should find only operators on shift (369 ms)
      findByEmailWithPassword
        ✓ should find operator by email with password (210 ms)
        ✓ should handle case-insensitive email search (207 ms)
        ✓ should return null for non-existent email (106 ms)
      findAvailableOperators
        ✓ should find operators with low order count (327 ms)
        ✓ should sort by current order count (339 ms)
        ✓ should respect limit parameter (1160 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (222 ms)
      ✓ should update updatedAt on modification (322 ms)
    Operator ID Generation
      ✓ should auto-generate unique operator ID (324 ms)
      ✓ should not override provided operator ID (179 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Failed to initiate W9 signing: Error: Template not found
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/w9ControllerDocuSign.test.js:250:58)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

  console.log
    Envelope mismatch: { expected: 'test_envelope_id', received: 'wrong_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

  console.log
    Envelope mismatch: { expected: undefined, received: 'test_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

PASS tests/unit/w9ControllerDocuSign.test.js (9.258 s)
  W9 Controller DocuSign Methods
    Check DocuSign Auth
      ✓ should return authorized true if valid token exists (183 ms)
      ✓ should return authorization URL if no valid token (275 ms)
      ✓ should handle service errors (257 ms)
    OAuth Callback
      ✓ should handle successful OAuth callback (232 ms)
      ✓ should handle missing authorization code (164 ms)
      ✓ should handle missing state parameter (129 ms)
      ✓ should display error page on token exchange failure (136 ms)
    Initiate W9 Signing
      ✓ should create new envelope and return signing URL (223 ms)
      ✓ should return existing envelope if one is in progress (355 ms)
      ✓ should require DocuSign authorization if no valid token (158 ms)
      ✓ should handle affiliate not found (196 ms)
      ✓ should handle envelope creation errors (185 ms)
    Get Envelope Status
      ✓ should return envelope status from DocuSign (770 ms)
      ✓ should handle mismatched envelope ID (205 ms)
      ✓ should handle affiliate with no W9 information (254 ms)
      ✓ should return local status if DocuSign API fails (210 ms)
      ✓ should clear envelope ID if declined (265 ms)
    DocuSign Webhook
      ✓ should process completed envelope webhook (267 ms)
      ✓ should reject webhook with invalid signature (129 ms)
      ✓ should handle affiliate not found (163 ms)
      ✓ should process completed W9 without downloading document (272 ms)
    Check Authorization Status
      ✓ should return authorized true if valid token exists (211 ms)
      ✓ should return authorized false if no valid token (146 ms)
      ✓ should handle service errors (149 ms)
    Get W9 Signing Status
      ✓ should return W9 status for affiliate (141 ms)
      ✓ should include tax info for verified W9 (120 ms)
      ✓ should check DocuSign status for in-progress envelopes (121 ms)
      ✓ should handle affiliate not found (141 ms)
      ✓ should handle errors gracefully (115 ms)
    Cancel W9 Signing
      ✓ should cancel W9 signing successfully (229 ms)
      ✓ should handle no W9 signing in progress (183 ms)
      ✓ should handle affiliate not found (132 ms)
      ✓ should handle void envelope errors (168 ms)
    Resend W9 Request
      ✓ should resend W9 request successfully (176 ms)
      ✓ should handle affiliate not found (126 ms)
      ✓ should continue if voiding existing envelope fails (197 ms)
      ✓ should handle envelope creation errors (126 ms)
    Send W9 To Affiliate
      ✓ should send W9 to affiliate successfully (162 ms)
      ✓ should handle affiliate not found (142 ms)
      ✓ should prevent sending to affiliate with verified W9 (134 ms)
      ✓ should prevent sending to affiliate with submitted W9 (142 ms)
      ✓ should handle authorization errors (126 ms)
      ✓ should handle template configuration errors (129 ms)
      ✓ should handle general errors (137 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Welcome email could not be sent: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:159:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      101 |       // Email sent successfully - no need to check result
      102 |     } catch (emailError) {
    > 103 |       console.warn('Welcome email could not be sent:', emailError);
          |               ^
      104 |       // Continue with registration process even if email fails
      105 |     }
      106 |

      at Object.warn [as registerAffiliate] (server/controllers/affiliateController.js:103:15)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:161:7)

  console.error
    Affiliate registration error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:176:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      111 |     });
      112 |   } catch (error) {
    > 113 |     console.error('Affiliate registration error:', error);
          |             ^
      114 |     res.status(500).json({
      115 |       success: false,
      116 |       message: 'An error occurred during registration'

      at Object.error [as registerAffiliate] (server/controllers/affiliateController.js:113:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:178:7)

  console.error
    Error decrypting PayPal email: Error: Decryption failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:273:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as decrypt] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at Object.decrypt [as getAffiliateProfile] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:175:28)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:276:7)

      176 |           : affiliate.paypalEmail;
      177 |       } catch (error) {
    > 178 |         console.error('Error decrypting PayPal email:', error);
          |                 ^
      179 |         // Don't include if decryption fails
      180 |       }
      181 |     }

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:178:17)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:276:7)

  console.error
    Get affiliate orders error: TypeError: Cannot read properties of undefined (reading 'forEach')
        at Object.forEach [as getAffiliateOrders] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:599:15)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:695:7)

      647 |     });
      648 |   } catch (error) {
    > 649 |     console.error('Get affiliate orders error:', error);
          |             ^
      650 |     res.status(500).json({
      651 |       success: false,
      652 |       message: 'An error occurred while retrieving orders'

      at Object.error [as getAffiliateOrders] (server/controllers/affiliateController.js:649:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:695:7)

  console.error
    Get affiliate profile error: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:942:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      187 |     });
      188 |   } catch (error) {
    > 189 |     console.error('Get affiliate profile error:', error);
          |             ^
      190 |     res.status(500).json({
      191 |       success: false,
      192 |       message: 'An error occurred while retrieving affiliate profile'

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:189:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:944:7)

  console.error
    Delete affiliate data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:1031:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error('Delete affiliate data error:', error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteAffiliateData] (server/controllers/affiliateController.js:901:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:1033:7)

PASS tests/unit/affiliateController.test.js
  Affiliate Controller
    registerAffiliate
      ✓ should successfully register a new affiliate (3 ms)
      ✓ should return validation errors
      ✓ should handle duplicate email or username (1 ms)
      ✓ should handle email service failure gracefully (48 ms)
      ✓ should handle database errors (2 ms)
    getAffiliateProfile
      ✓ should return affiliate profile for authorized user (1 ms)
      ✓ should return 404 for non-existent affiliate
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should handle decryption errors gracefully (12 ms)
    updateAffiliateProfile
      ✓ should successfully update affiliate profile (4 ms)
      ✓ should handle password change (1 ms)
      ✓ should reject incorrect current password
      ✓ should update payment method (1 ms)
    getAffiliateEarnings
      ✓ should return earnings for specified period (1 ms)
      ✓ should handle different time periods (1 ms)
      ✓ should handle missing customers gracefully
    getAffiliateCustomers
      ✓ should return paginated customers with search (1 ms)
      ✓ should handle different sort options
    getAffiliateOrders
      ✓ should return filtered orders (1 ms)
      ✓ should handle date filters correctly (3 ms)
    getAffiliateTransactions
      ✓ should return paginated transactions (1 ms)
    getAffiliateDashboardStats
      ✓ should return comprehensive dashboard statistics (1 ms)
      ✓ should handle empty data gracefully (1 ms)
    getPublicAffiliateInfo
      ✓ should return only public affiliate information (1 ms)
      ✓ should return 404 for non-existent affiliate
    Error handling
      ✓ should handle database connection errors (2 ms)
    deleteAffiliateData
      ✓ should delete all affiliate data in development environment (1 ms)
      ✓ should reject deletion in production environment (1 ms)
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: TypeError: Administrator.find(...).select is not a function
        at select (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:54:8)
        at Object.getAdministrators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:161:15)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.getAdministrators (tests/unit/administratorControllerEnhanced.test.js:161:15)

  console.error
    Error updating operator profile: TypeError: updatedOperator.toObject is not a function
        at toObject (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2255:70)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1078:9)

      2261 |     });
      2262 |   } catch (error) {
    > 2263 |     console.error('Error updating operator profile:', error);
           |             ^
      2264 |     res.status(500).json({
      2265 |       success: false,
      2266 |       message: 'An error occurred while updating the profile'

      at error (server/controllers/administratorController.js:2263:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1078:9)

  console.error
    Error fetching administrators: Error: Connection timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1093:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1096:7)

PASS tests/unit/administratorControllerEnhanced.test.js
  Administrator Controller - Enhanced Coverage
    Administrator Management
      getAdministrators
        ✓ should get all administrators with pagination (2 ms)
        ✓ should filter administrators by search query (1 ms)
        ✓ should handle database errors (49 ms)
      getAdministratorById
        ✓ should get administrator by ID (1 ms)
        ✓ should return 404 for non-existent administrator (1 ms)
        ✓ should return 400 for invalid ObjectId
      createAdministrator
        ✓ should create new administrator with valid data (60 ms)
        ✓ should return validation errors (1 ms)
        ✓ should handle duplicate email error
      updateAdministrator
        ✓ should update administrator successfully (1 ms)
        ✓ should not allow self-demotion of last super admin (1 ms)
      deleteAdministrator
        ✓ should delete administrator successfully (1 ms)
        ✓ should prevent self-deletion
        ✓ should prevent deletion of last administrator
      resetAdministratorPassword
        ✓ should reset administrator password (54 ms)
        ✓ should handle email sending failure (66 ms)
      getPermissions
        ✓ should return all available permissions
    Operator Management Extensions
      deactivateOperator
        ✓ should deactivate operator
        ✓ should handle non-existent operator (1 ms)
      resetOperatorPassword
        ✓ should reset operator password and send email (1 ms)
      resetOperatorPin
        ✓ should reset operator PIN (1 ms)
        ✓ should validate PIN format
      deleteOperator
        ✓ should delete operator permanently
      getAvailableOperators
        ✓ should get available operators for assignment (1 ms)
      updateOperatorStats
        ✓ should update operator statistics (1 ms)
    Analytics Extensions
      getOperatorAnalytics
        ✓ should get operator analytics with date range (1 ms)
        ✓ should handle missing date range (1 ms)
      getAffiliateAnalytics
        ✓ should get affiliate analytics
      exportReport
        ✓ should export report as CSV
        ✓ should export report as JSON (1 ms)
        ✓ should reject invalid report type (1 ms)
    Operator Self-Management
      getOperatorSelf
        ✓ should get current operator profile
        ✓ should handle non-operator users (1 ms)
      updateOperatorSelf
        ✓ should allow operator to update own profile (1 ms)
        ✓ should prevent changing restricted fields (2 ms)
    Error Handling
      ✓ should handle database connection errors (2 ms)
      ✓ should handle validation errors

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating new customer with email: jane@example.com username: janesmith

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST123456

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

  console.error
    Delete customer data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:460:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      615 |     });
      616 |   } catch (error) {
    > 617 |     console.error('Delete customer data error:', error);
          |             ^
      618 |     res.status(500).json({
      619 |       success: false,
      620 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteCustomerData] (server/controllers/customerController.js:617:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:462:7)

  console.error
    Get customer dashboard stats error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:735:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      503 |     });
      504 |   } catch (error) {
    > 505 |     console.error('Get customer dashboard stats error:', error);
          |             ^
      506 |     res.status(500).json({
      507 |       success: false,
      508 |       message: 'An error occurred while retrieving dashboard statistics'

      at Object.error [as getCustomerDashboardStats] (server/controllers/customerController.js:505:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:737:7)

  console.error
    Update payment info error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:839:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      557 |     });
      558 |   } catch (error) {
    > 559 |     console.error('Update payment info error:', error);
          |             ^
      560 |     res.status(500).json({
      561 |       success: false,
      562 |       message: 'An error occurred while updating payment information'

      at Object.error [as updatePaymentInfo] (server/controllers/customerController.js:559:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:841:7)

  console.error
    Update customer password error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1004:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      687 |     });
      688 |   } catch (error) {
    > 689 |     console.error('Update customer password error:', error);
          |             ^
      690 |     res.status(500).json({
      691 |       success: false,
      692 |       message: 'An error occurred while updating password'

      at Object.error [as updateCustomerPassword] (server/controllers/customerController.js:689:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1006:7)

  console.error
    Get customers for admin error: TypeError: Cannot read properties of undefined (reading 'search')
        at Object.search [as getCustomersForAdmin] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/customerController.js:707:19)
        at Object.getCustomersForAdmin (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1239:32)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      784 |     });
      785 |   } catch (error) {
    > 786 |     console.error('Get customers for admin error:', error);
          |             ^
      787 |     res.status(500).json({
      788 |       success: false,
      789 |       message: 'Failed to retrieve customers'

      at Object.error [as getCustomersForAdmin] (server/controllers/customerController.js:786:13)
      at Object.getCustomersForAdmin (tests/unit/customerController.test.js:1239:32)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.error
    Customer registration error: Error: Database save failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1306:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      152 |     });
      153 |   } catch (error) {
    > 154 |     console.error('Customer registration error:', error);
          |             ^
      155 |     res.status(500).json({
      156 |       success: false,
      157 |       message: 'An error occurred during registration'

      at Object.error [as registerCustomer] (server/controllers/customerController.js:154:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1325:7)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST999

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

PASS tests/unit/customerController.test.js
  Customer Controller
    registerCustomer
      ✓ should successfully register a new customer (15 ms)
      ✓ should return error for invalid affiliate (1 ms)
      ✓ should return error for duplicate email
    getCustomerProfile
      ✓ should return customer profile for authorized customer (1 ms)
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should return 404 for non-existent customer
    updateCustomerProfile
      ✓ should successfully update customer profile (1 ms)
      ✓ should prevent updating protected fields (1 ms)
    getCustomerOrders
      ✓ should return customer orders with pagination (1 ms)
    deleteCustomerData
      ✓ should delete all customer data in development environment
      ✓ should reject deletion in production environment (1 ms)
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (24 ms)
      ✓ should return 404 for non-existent customer (1 ms)
    getCustomerDashboardStats
      ✓ should return dashboard stats for authorized customer (1 ms)
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should allow affiliate access to their customer dashboard (4 ms)
      ✓ should handle database errors gracefully (2 ms)
    updatePaymentInfo
      ✓ should successfully update payment information (1 ms)
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should allow admin to update customer payment info
      ✓ should handle database errors (2 ms)
    updateCustomerPassword
      ✓ should successfully update password (1 ms)
      ✓ should reject incorrect current password (1 ms)
      ✓ should validate new password length
      ✓ should return 404 for non-existent customer (1 ms)
      ✓ should return 403 for unauthorized access
      ✓ should handle missing new password
      ✓ should handle database errors (4 ms)
    getCustomersForAdmin
      ✓ should return all customers for admin (1 ms)
      ✓ should filter customers by search query
      ✓ should filter customers by affiliate (1 ms)
      ✓ should filter customers by active status
      ✓ should filter customers by inactive status
      ✓ should filter new customers with no orders (1 ms)
      ✓ should handle combined filters
      ✓ should handle database errors (10 ms)
      ✓ should ignore "all" filter values (1 ms)
    validation errors
      ✓ should return validation errors for registerCustomer (1 ms)
    error handling for registration
      ✓ should handle database save errors during registration (2 ms)
      ✓ should handle missing payment info gracefully (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: 'CUST123' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: 'INVALID' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1068:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1606:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)
      at Object.<anonymous> (tests/unit/operatorController.test.js:1608:7)

FAIL tests/unit/operatorController.test.js (5.32 s)
  Operator Controller
    getOrderQueue
      ✓ should return available orders for operator workstation (2 ms)
    claimOrder
      ✓ should allow operator to claim an order (1 ms)
      ✓ should fail if order is already claimed
      ✓ should fail if order not found
      ✓ should handle database error during claim (1 ms)
    updateOrderStatus
      ✓ should update order status (1 ms)
      ✓ should handle invalid status transition
      ✓ should handle order not found
      ✓ should handle unauthorized operator
      ✓ should update workstation when washing status with new workstation
      ✓ should set processingCompleted when status is ready
      ✓ should handle database error
    performQualityCheck
      ✓ should record quality check results (1 ms)
      ✓ should handle order not found
      ✓ should handle order not ready for quality check
      ✓ should handle database error during quality check (1 ms)
    getMyOrders
      ✓ should return orders assigned to operator
    updateShiftStatus
      ✓ should update operator shift status (1 ms)
      ✓ should handle operator not found
      ✓ should end shift successfully (1 ms)
      ✓ should handle database error
    getPerformanceStats
      ✓ should return operator performance statistics (1 ms)
    getCustomerDetails
      ✓ should return customer details for an order (1 ms)
    addCustomerNote
      ✓ should add a note to an order
      ✓ should handle customer not found (1 ms)
      ✓ should handle errors during note addition
    Error handling in existing functions
      ✓ should handle error in getOrderQueue (1 ms)
      ✓ should handle different filters in getOrderQueue
      ✓ should handle operator at max capacity in claimOrder (1 ms)
      ✓ should handle quality check failure in performQualityCheck
      ✓ should handle workstation conflict in updateShiftStatus (10 ms)
      ✓ should handle incomplete orders when ending shift (1 ms)
      ✓ should handle invalid action in updateShiftStatus
      ✓ should handle missing workstation when starting shift (1 ms)
      ✓ should handle different time periods in getPerformanceStats
      ✓ should handle operator not found in getPerformanceStats (1 ms)
      ✓ should handle customer not found in getCustomerDetails
      ✓ should handle filters in getMyOrders (1 ms)
    scanCustomer
      ✕ should scan customer and return current order (12 ms)
      ✓ should handle customer not found (1 ms)
    scanBag
      ✓ should redirect to scanCustomer (1 ms)
      ✓ should handle error in scanBag (2 ms)
    receiveOrder
      ✓ should receive order and update status (1 ms)
      ✓ should handle order not found (1 ms)
    markBagProcessed
      ✓ should mark bag as processed
      ✓ should update order status when all bags processed (229 ms)
    confirmPickup
      ✓ should confirm pickup and complete order (8 ms)
      ✓ should handle partial pickup
    getTodayStats
      ✓ should return today's operator statistics (1 ms)
      ✓ should handle no orders for today
    getWorkstationStatus
      ✓ should return workstation status for all workstations (1 ms)
      ✓ should handle database error (1 ms)
    Additional coverage tests
      ✓ should handle error in getMyOrders
      ✓ should handle different performance stat periods (1 ms)
      ✓ should handle error in getPerformanceStats
      ✓ should handle error in getCustomerDetails (1 ms)
      ✓ should handle no active order in scanCustomer (3 ms)
      ✓ should handle different scan actions in scanCustomer (6 ms)
      ✓ should handle affiliate lookup in scanCustomer (1 ms)
      ✓ should handle error in scanCustomer (3 ms)
      ✓ should handle error in receiveOrder (4 ms)
      ✓ should handle order not found in markBagProcessed
      ✓ should handle error in markBagProcessed (1 ms)
      ✓ should handle order not found in confirmPickup
      ✓ should handle error in confirmPickup
      ✓ should handle error in getTodayStats (1 ms)
      ✓ should handle markOrderReady (deprecated function) (1 ms)
      ✓ should handle markOrderReady with affiliate notification
      ✓ should handle errors in markOrderReady (1 ms)

  ● Operator Controller › scanCustomer › should scan customer and return current order

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    @@ -2,10 +2,11 @@
        "action": "weight_input",
        "currentOrder": true,
        "order": Object {
          "actualWeight": undefined,
          "affiliateName": "N/A",
    +     "bags": Array [],
          "bagsPickedUp": 0,
          "bagsProcessed": 0,
          "bagsWeighed": 0,
          "customerName": "John Doe",
          "estimatedWeight": 30,,

    Number of calls: 1

       997 |
       998 |       expect(Customer.findOne).toHaveBeenCalledWith({ customerId: 'CUST123' });
    >  999 |       expect(res.json).toHaveBeenCalledWith({
           |                        ^
      1000 |         success: true,
      1001 |         currentOrder: true,
      1002 |         action: 'weight_input',

      at Object.toHaveBeenCalledWith (tests/unit/operatorController.test.js:999:24)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:380:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at Object.error [as getAdministrators] (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:383:7)

  console.error
    Error fetching administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:814:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      109 |
      110 |   } catch (error) {
    > 111 |     console.error('Error fetching administrator:', error);
          |             ^
      112 |     res.status(500).json({
      113 |       success: false,
      114 |       message: 'Failed to fetch administrator'

      at Object.error [as getAdministratorById] (server/controllers/administratorController.js:111:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:817:7)

  console.error
    Error changing administrator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:929:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      544 |
      545 |   } catch (error) {
    > 546 |     console.error('Error changing administrator password:', error);
          |             ^
      547 |     res.status(500).json({
      548 |       success: false,
      549 |       message: 'Failed to change password'

      at Object.error [as changeAdministratorPassword] (server/controllers/administratorController.js:546:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:932:7)

  console.error
    Error fetching operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:996:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      849 |
      850 |   } catch (error) {
    > 851 |     console.error('Error fetching operator:', error);
          |             ^
      852 |     res.status(500).json({
      853 |       success: false,
      854 |       message: 'Failed to fetch operator details'

      at Object.error [as getOperatorById] (server/controllers/administratorController.js:851:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:999:7)

  console.error
    Error resetting operator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1062:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |
      1035 |   } catch (error) {
    > 1036 |     console.error('Error resetting operator password:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'Failed to reset operator password'

      at Object.error [as resetOperatorPassword] (server/controllers/administratorController.js:1036:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1064:7)

  console.error
    Error fetching operator analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1117:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1510 |
      1511 |   } catch (error) {
    > 1512 |     console.error('Error fetching operator analytics:', error);
           |             ^
      1513 |     res.status(500).json({
      1514 |       success: false,
      1515 |       message: 'Failed to fetch operator analytics'

      at Object.error [as getOperatorAnalytics] (server/controllers/administratorController.js:1512:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1119:7)

  console.error
    Error fetching affiliate analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1171:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1612 |
      1613 |   } catch (error) {
    > 1614 |     console.error('Error fetching affiliate analytics:', error);
           |             ^
      1615 |     res.status(500).json({
      1616 |       success: false,
      1617 |       message: 'Failed to fetch affiliate analytics'

      at Object.error [as getAffiliateAnalytics] (server/controllers/administratorController.js:1614:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1173:7)

  console.error
    Error exporting report: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1293:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1677 |
      1678 |   } catch (error) {
    > 1679 |     console.error('Error exporting report:', error);
           |             ^
      1680 |     res.status(500).json({
      1681 |       success: false,
      1682 |       message: 'Failed to export report'

      at Object.error [as exportReport] (server/controllers/administratorController.js:1679:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1296:7)

  console.error
    Error fetching affiliates list: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1339:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1730 |     });
      1731 |   } catch (error) {
    > 1732 |     console.error('Error fetching affiliates list:', error);
           |             ^
      1733 |     res.status(500).json({
      1734 |       success: false,
      1735 |       message: 'Failed to fetch affiliates list',

      at Object.error [as getAffiliatesList] (server/controllers/administratorController.js:1732:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1342:7)

  console.error
    Error updating operator stats: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1520:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2080 |     });
      2081 |   } catch (error) {
    > 2082 |     console.error('Error updating operator stats:', error);
           |             ^
      2083 |     res.status(500).json({
      2084 |       success: false,
      2085 |       message: 'An error occurred while updating operator statistics'

      at Object.error [as updateOperatorStats] (server/controllers/administratorController.js:2082:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1522:7)

  console.error
    Error getting available operators: TypeError: Operator.find(...).sort(...).limit is not a function
        at Object.limit [as getAvailableOperators] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2103:8)
        at Object.getAvailableOperators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1570:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2109 |     });
      2110 |   } catch (error) {
    > 2111 |     console.error('Error getting available operators:', error);
           |             ^
      2112 |     res.status(500).json({
      2113 |       success: false,
      2114 |       message: 'An error occurred while fetching available operators'

      at Object.error [as getAvailableOperators] (server/controllers/administratorController.js:2111:13)
      at Object.getAvailableOperators (tests/unit/administratorController.test.js:1570:37)

  console.error
    Error deleting operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1624:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2159 |     });
      2160 |   } catch (error) {
    > 2161 |     console.error('Error deleting operator:', error);
           |             ^
      2162 |     res.status(500).json({
      2163 |       success: false,
      2164 |       message: 'An error occurred while deleting the operator'

      at Object.error [as deleteOperator] (server/controllers/administratorController.js:2161:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1626:7)

  console.error
    Error resetting operator PIN: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1684:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2207 |     });
      2208 |   } catch (error) {
    > 2209 |     console.error('Error resetting operator PIN:', error);
           |             ^
      2210 |     res.status(500).json({
      2211 |       success: false,
      2212 |       message: 'An error occurred while resetting the PIN'

      at Object.error [as resetOperatorPin] (server/controllers/administratorController.js:2209:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1686:7)

  console.error
    Error fetching environment variables: TypeError: Cannot read properties of undefined (reading 'DEFAULT_ADMIN_EMAIL')
        at Object.DEFAULT_ADMIN_EMAIL [as getEnvironmentVariables] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2402:56)
        at Object.getEnvironmentVariables (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1732:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2443 |
      2444 |   } catch (error) {
    > 2445 |     console.error('Error fetching environment variables:', error);
           |             ^
      2446 |     res.status(500).json({
      2447 |       success: false,
      2448 |       message: 'Failed to fetch environment variables'

      at Object.error [as getEnvironmentVariables] (server/controllers/administratorController.js:2445:13)
      at Object.getEnvironmentVariables (tests/unit/administratorController.test.js:1732:37)

  console.error
    Error updating administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1852:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      313 |
      314 |   } catch (error) {
    > 315 |     console.error('Error updating administrator:', error);
          |             ^
      316 |     res.status(500).json({
      317 |       success: false,
      318 |       message: 'Failed to update administrator'

      at Object.error [as updateAdministrator] (server/controllers/administratorController.js:315:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1855:7)

  console.error
    Error deleting administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1889:44)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at Object.error [as deleteAdministrator] (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1891:7)

PASS tests/unit/administratorController.test.js
  Administrator Controller
    getAdministrators
      ✓ should get administrators with pagination (3 ms)
      ✓ should handle errors (30 ms)
    createAdministrator
      ✓ should create administrator (1 ms)
      ✓ should handle validation errors
    updateAdministrator
      ✓ should update administrator (1 ms)
      ✓ should prevent self-deactivation
    deleteAdministrator
      ✓ should delete administrator (1 ms)
      ✓ should prevent self-deletion
    resetAdministratorPassword
      ✓ should reset password (1 ms)
    Operator Management
      ✓ createOperator should create new operator
      ✓ getOperators should return operators list
      ✓ updateOperator should update operator details (1 ms)
      ✓ deactivateOperator should deactivate operator
    Analytics Functions
      ✓ getDashboard should return dashboard data (1 ms)
      ✓ getOrderAnalytics should return order analytics (1 ms)
    System Configuration
      ✓ getSystemConfig should return configurations
      ✓ updateSystemConfig should update configuration (1 ms)
    getPermissions
      ✓ should return available permissions
    getAdministratorById
      ✓ should get administrator by id (1 ms)
      ✓ should handle not found (11 ms)
      ✓ should handle errors (3 ms)
    changeAdministratorPassword
      ✓ should change password successfully (1 ms)
      ✓ should reject incorrect current password
      ✓ should validate new password strength
      ✓ should handle errors (2 ms)
    getOperatorById
      ✓ should get operator by id
      ✓ should handle operator not found (1 ms)
      ✓ should handle errors (2 ms)
    resetOperatorPassword
      ✓ should reset operator password (1 ms)
      ✓ should handle operator not found
      ✓ should handle errors (2 ms)
    getOperatorAnalytics
      ✓ should get operator analytics (1 ms)
      ✓ should handle errors (2 ms)
    getAffiliateAnalytics
      ✓ should get affiliate analytics (1 ms)
      ✓ should handle errors (2 ms)
    exportReport
      ✓ should export orders report
      ✓ should export operators report (1 ms)
      ✓ should handle invalid report type (1 ms)
      ✓ should handle errors (1 ms)
    getAffiliatesList
      ✓ should get affiliates list
      ✓ should handle errors (2 ms)
    getSystemHealth
      ✓ should get system health status (1 ms)
      ✓ should handle database connection issues (1 ms)
      ✓ should handle errors (2 ms)
    updateOperatorStats
      ✓ should update operator stats with processing time (1 ms)
      ✓ should handle operator not found
      ✓ should validate processing time
      ✓ should handle errors (2 ms)
    getAvailableOperators
      ✓ should get available operators
      ✓ should handle errors (34 ms)
    deleteOperator
      ✓ should delete operator
      ✓ should prevent deletion with active orders (1 ms)
      ✓ should handle errors (2 ms)
    resetOperatorPin
      ✓ should reset operator PIN
      ✓ should handle operator not found
      ✓ should handle errors (2 ms)
    getEnvironmentVariables
      ✓ should get environment variables (1 ms)
      ✓ should handle errors (2 ms)
    Additional coverage for getAdministrators
      ✓ should handle search with active filter (1 ms)
    Additional coverage for createAdministrator
      ✓ should handle duplicate email
      ✓ should handle password validation failure (1 ms)
    Additional coverage for updateAdministrator
      ✓ should handle administrator not found
      ✓ should handle database errors (2 ms)
    Additional coverage for deleteAdministrator
      ✓ should prevent deleting last super admin
      ✓ should handle database errors (2 ms)
    Additional coverage for resetAdministratorPassword
      ✓ should handle admin not found (1 ms)
      ✓ should handle weak password

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:22.610Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/customers/CUST-API-001/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:23.880Z"}
[0mGET /api/v1/customers/CUST-API-001/dashboard [32m200[0m 431.259 ms - 457[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:25.744Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-API-001',
      affiliateId: 'AFF-API-001',
      pickupDate: '2025-07-07T16:39:25.742Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test order with credit'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-API-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: API Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-API-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: API Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Applying WDF credit of $15.5 to order for customer CUST-API-001

      at log (server/controllers/orderController.js:188:15)

  console.log
    Reset WDF credit for customer CUST-API-001 after applying to order ORD704020

      at log (server/controllers/orderController.js:218:15)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.customer@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD704020
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $40.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> API Affiliate
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> api.affiliate@test.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.affiliate@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD704020
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> API Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 API Ave, API City, AP 12345
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 25 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Test order with credit
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 333.918 ms - 128[0m
[34mdebug[39m: GET /api/v1/orders/ORD-API-001 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:27.881Z"}
[0mGET /api/v1/orders/ORD-API-001 [32m200[0m 110.340 ms - 827[0m
PASS tests/integration/wdfCreditSimple.test.js (8.408 s)
  WDF Credit Integration Test
    WDF Credit API Endpoints
      ✓ should include WDF credit in customer dashboard (2541 ms)
      ✓ should apply WDF credit when creating new order (2099 ms)
      ✓ should show WDF credit in order details (1140 ms)
    WDF Credit Calculation
      ✓ should generate correct credit for weight differences (926 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:30.651Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:31.093Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e252033b0d22410d9e0ba70fc39b7c2f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: m0UDnZrq-1rDKNfD2T24LkTYGaGqvQIxLYSs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e252033b0d22410d9e0ba70fc39b7c2f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: w6TEzHOZqZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.073 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:32.306Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:32.883Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:32.886Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:33.029Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-f93af140-ac38-42e1-a341-08cb9d77dde2",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 187.094 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:33.290Z"}
[32minfo[39m: Payment config accessed {"hasHash":true,"hostname":"127.0.0.1","ip":"::ffff:127.0.0.1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:33.294Z"}
[0mGET /api/v1/payments/config [32m200[0m 3.043 ms - 310[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:34.246Z"}
  console.log
    CSRF token generation: {
      sessionID: '79027605bc9f9d3c0d6ea5248d0842c7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PKInE4RA-gcH9gtlnpxyUEQ7QMtNtZBiCSws

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 79027605bc9f9d3c0d6ea5248d0842c7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _a6XpR0r3f...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.584 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:34.418Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:34.761Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:34.762Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:34.847Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-2fd2f2fa-0b99-4511-87ce-f8d375b1c6db",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 152.677 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:35.073Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtmed-9dlhl6s: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:35.114Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:35.209Z","token":"mctbtmed-9dlhl6s"}
[0mPOST /api/v1/payments/create-token [32m200[0m 134.790 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:37.179Z"}
  console.log
    CSRF token generation: {
      sessionID: '4b276b93f9202649571b75ffb94fde9f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jMoGJy2S-b38qpnbUD_f_cC4o0G4aca-PMaA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4b276b93f9202649571b75ffb94fde9f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: wmCmgtAEHB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.143 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:37.326Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:37.683Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:37.683Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:37.779Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-af6da7a1-0e44-4b81-8223-3310861b499e",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 164.965 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:38.006Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtont-ftk9nor: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:38.041Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:38.077Z","token":"mctbtont-ftk9nor"}
[0mPOST /api/v1/payments/create-token [32m200[0m 71.104 ms - 283[0m
[34mdebug[39m: GET /api/v1/payments/check-status/mctbtont-ftk9nor {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:38.081Z"}
[0mGET /api/v1/payments/check-status/mctbtont-ftk9nor [32m200[0m 28.999 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:38.916Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a5666196ef8799603d1264840ad0168f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: CKfXx4Gy-sBlKKew2a7bZmPDEVtEtU_kkDyM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a5666196ef8799603d1264840ad0168f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hbEZG8rZyJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.533 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.058Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.426Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.427Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.523Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-781fbedc-fa26-424e-b09b-d7e616221c89",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 152.539 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.744Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtq04-juwg3vc: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.784Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.839Z","token":"mctbtq04-juwg3vc"}
[0mPOST /api/v1/payments/create-token [32m200[0m 94.165 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctbtq04-juwg3vc {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.843Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctbtq04-juwg3vc {
      sessionID: 'a5666196ef8799603d1264840ad0168f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa5666196ef8799603d1264840ad0168f.7WJ2m%2B0tS7F47MDKJL5J7G%2BszEm676TlNVPTEuDJVXA',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctbtq04-juwg3vc: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.958Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:39.958Z","token":"mctbtq04-juwg3vc"}
[0mPOST /api/v1/payments/cancel-token/mctbtq04-juwg3vc [32m200[0m 115.616 ms - 73[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:41.283Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c7e9fad5863c34ff73d9d5130bf6981c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bpObCjYL-uBxf3FLaz5U9KLHO6G8-q1Q68_8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c7e9fad5863c34ff73d9d5130bf6981c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FOjSJGWAyv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.231 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:41.485Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:41.870Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:41.870Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:41.988Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-1002fe1f-1e30-46bc-af94-cd9e3c38cf3c",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 154.715 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.217Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.221Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.223Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.225Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.227Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.230Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.231Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.233Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.236Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.238Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrwq-rkptn7u: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.258Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrxb-48ioucj: {"callbackPath":"/api/v1/payments/callback/handler-8","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-8","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.293Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrx2-2grwrkb: {"callbackPath":"/api/v1/payments/callback/handler-6","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-6","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.296Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrx4-ispt15a: {"callbackPath":"/api/v1/payments/callback/handler-7","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-7","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.302Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrww-6s4r2ho: {"callbackPath":"/api/v1/payments/callback/handler-5","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-5","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.304Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrwy-rf10cxw: {"callbackPath":"/api/v1/payments/callback/handler-4","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-4","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.307Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrwz-tokaetg: {"callbackPath":"/api/v1/payments/callback/handler-3","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-3","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.308Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrwu-wfy4tup: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.314Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrx9-w59b7v3: {"callbackPath":"/api/v1/payments/callback/handler-9","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-9","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.322Z"}
[32minfo[39m: Acquired callback handler for payment token mctbtrx7-hcrcm6c: {"callbackPath":"/api/v1/payments/callback/handler-10","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-10","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.326Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"customer0@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.346Z","token":"mctbtrwq-rkptn7u"}
[0mPOST /api/v1/payments/create-token [32m200[0m 129.817 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-8","customerEmail":"customer9@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.365Z","token":"mctbtrxb-48ioucj"}
[0mPOST /api/v1/payments/create-token [32m200[0m 127.629 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-3","customerEmail":"customer4@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.375Z","token":"mctbtrwz-tokaetg"}
[0mPOST /api/v1/payments/create-token [32m200[0m 148.384 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-7","customerEmail":"customer6@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.386Z","token":"mctbtrx4-ispt15a"}
[0mPOST /api/v1/payments/create-token [32m200[0m 156.745 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-6","customerEmail":"customer5@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.391Z","token":"mctbtrx2-2grwrkb"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-4","customerEmail":"customer3@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.392Z","token":"mctbtrwy-rf10cxw"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-5","customerEmail":"customer2@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.393Z","token":"mctbtrww-6s4r2ho"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-10","customerEmail":"customer7@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.394Z","token":"mctbtrx7-hcrcm6c"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"customer1@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.395Z","token":"mctbtrwu-wfy4tup"}
[0mPOST /api/v1/payments/create-token [32m200[0m 161.431 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 167.361 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 170.088 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 159.388 ms - 285[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 174.395 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-9","customerEmail":"customer8@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.398Z","token":"mctbtrx9-w59b7v3"}
[0mPOST /api/v1/payments/create-token [32m200[0m 161.922 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.408Z"}
[33mwarn[39m: No callback handlers available. All handlers are currently in use. {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:42.438Z"}
[0mPOST /api/v1/payments/create-token [31m503[0m 29.128 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:43.272Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ff6dcbffe06f3c22deaf9ac4f18d746b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wXnbvJ2a-z2dU1arW1NOo5hQuhxgkuDTonFE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ff6dcbffe06f3c22deaf9ac4f18d746b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: h1fYEC7WPE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.810 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:43.417Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:43.781Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:43.781Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:43.871Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-4ac28e68-9aae-4f9a-a4ee-bedc93953d42",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 190.038 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.132Z"}
[32minfo[39m: Acquired callback handler for payment token mctbttdy-d57ofm7: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.170Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"cancel@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.217Z","token":"mctbttdy-d57ofm7"}
[0mPOST /api/v1/payments/create-token [32m200[0m 85.926 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctbttdy-d57ofm7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.222Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctbttdy-d57ofm7 {
      sessionID: 'ff6dcbffe06f3c22deaf9ac4f18d746b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aff6dcbffe06f3c22deaf9ac4f18d746b.GQdFDyJj6%2Bm396tRrGgdO7SBe7cjlHcklq6FzO9ieKo',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctbttdy-d57ofm7: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.321Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.322Z","token":"mctbttdy-d57ofm7"}
[0mPOST /api/v1/payments/cancel-token/mctbttdy-d57ofm7 [32m200[0m 99.359 ms - 73[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.325Z"}
[32minfo[39m: Acquired callback handler for payment token mctbttjb-oggo2m3: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.361Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"new@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:44.418Z","token":"mctbttjb-oggo2m3"}
[0mPOST /api/v1/payments/create-token [32m200[0m 94.184 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:45.216Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ef0cd141c98d577741c8a55ef455b6c1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JrtyjJMc-ByOEw62T2jb55zNmE2AF8Ca8LnI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ef0cd141c98d577741c8a55ef455b6c1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EG4Z3BUe4G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.371 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:45.393Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:45.800Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:45.801Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:45.897Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-b99815b0-5725-4788-9116-9d8ca02e4a44",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 152.031 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/pool-stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:46.124Z"}
[0mGET /api/v1/payments/pool-stats [32m200[0m 31.107 ms - -[0m
[32minfo[39m: Callback pool cleanup job stopped {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:47.073Z"}
PASS tests/integration/payment.test.js (17.235 s)
  Payment Integration Tests
    Payment Configuration Tests
      ✓ should get payment configuration (3162 ms)
    Payment Token Tests
      ✓ should create payment token (2931 ms)
      ✓ should check payment status (1738 ms)
      ✓ should cancel payment token (2367 ms)
    Payment Callback Tests
      ✓ should return 503 when all callback handlers are locked (1988 ms)
      ✓ should release callback handler when payment is cancelled (1944 ms)
    Pool Statistics Tests
      ✓ should get pool statistics (1858 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:48.615Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:54.444Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:39:55.147Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 704.181 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:56.752Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:39:57.170Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 418.739 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-a1e16ee5-f7a5-4217-bf9b-4d29d966af2d/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:57.191Z"}
[0mGET /api/v1/affiliates/AFF-a1e16ee5-f7a5-4217-bf9b-4d29d966af2d/customers [32m200[0m 229.138 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:58.568Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:39:58.724Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.831 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-d80eb448-71b5-423d-9bd1-c1ed3defa8b8/customers?customerId=CUST-f35acdaa-d959-4ce2-9d73-5f7d397e255e {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:39:58.826Z"}
[0mGET /api/v1/affiliates/AFF-d80eb448-71b5-423d-9bd1-c1ed3defa8b8/customers?customerId=CUST-f35acdaa-d959-4ce2-9d73-5f7d397e255e [32m200[0m 152.366 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:00.007Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:00.219Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 212.465 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-30431d40-862b-4981-b4f6-d64a707483d8/customers?customerId=NONEXISTENT123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:00.223Z"}
[0mGET /api/v1/affiliates/AFF-30431d40-862b-4981-b4f6-d64a707483d8/customers?customerId=NONEXISTENT123 [32m200[0m 122.060 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:01.540Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:01.793Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 251.987 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-7e4ad3f7-618f-4331-92e4-3c10326bef69/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:01.800Z"}
[0mGET /api/v1/affiliates/AFF-7e4ad3f7-618f-4331-92e4-3c10326bef69/customers [33m401[0m 1.022 ms - 47[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:02.971Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:03.152Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 181.215 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:03.157Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:03.326Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 169.550 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-9932ff7c-5a46-416c-8805-1f59d5fdeeeb/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:03.331Z"}
[0mGET /api/v1/affiliates/AFF-9932ff7c-5a46-416c-8805-1f59d5fdeeeb/customers [32m200[0m 109.296 ms - 437[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-9932ff7c-5a46-416c-8805-1f59d5fdeeeb/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:03.449Z"}
[0mGET /api/v1/affiliates/AFF-9932ff7c-5a46-416c-8805-1f59d5fdeeeb/dashboard [32m200[0m 144.847 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:04.623Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:04.786Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 162.877 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:05.753Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:05.910Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.545 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-5dd88abf-1d07-42af-9786-196c37861cca {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:05.914Z"}
[0mGET /api/v1/affiliates/AFF-5dd88abf-1d07-42af-9786-196c37861cca [32m200[0m 61.271 ms - 573[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:09.244Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:09.453Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 206.433 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-fc606c0c-1053-496c-b714-a9ca7f4a6a30/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:09.458Z"}
[0mGET /api/v1/affiliates/AFF-fc606c0c-1053-496c-b714-a9ca7f4a6a30/dashboard [32m200[0m 143.375 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:10.595Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:10.744Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 148.789 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-a0a3038f-ee18-4331-a793-14d334d82889/customers?customerId=INVALID_ID {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:10.748Z"}
[0mGET /api/v1/affiliates/AFF-a0a3038f-ee18-4331-a793-14d334d82889/customers?customerId=INVALID_ID [32m200[0m 115.285 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:12.261Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:12.633Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 373.367 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/INVALID_AFFILIATE/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:12.638Z"}
[0mGET /api/v1/affiliates/INVALID_AFFILIATE/customers [33m403[0m 234.285 ms - 42[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:14.162Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:14.334Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 172.364 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-3135ce75-d60a-4932-9138-a0d6e9106426/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:14.337Z"}
[0mGET /api/v1/affiliates/AFF-3135ce75-d60a-4932-9138-a0d6e9106426/customers [32m200[0m 112.013 ms - 437[0m
PASS tests/integration/affiliateCustomerFiltering.test.js (28.277 s)
  Affiliate Customer Filtering Integration Tests
    Email URL Generation for Customer Filtering
      ✓ should generate correct dashboard URL with customer parameter (2526 ms)
    Affiliate Dashboard Customer Filtering API
      ✓ should return customers for authenticated affiliate (1888 ms)
      ✓ should filter customers by customerId when provided (1432 ms)
      ✓ should return empty array when filtering by non-existent customerId (1487 ms)
      ✓ should require authentication to access customer list (1456 ms)
    Complete Email-to-Dashboard Flow Simulation
      ✓ should handle complete flow from email generation to dashboard access (1662 ms)
      ✓ should handle URL parameters correctly throughout the flow (1143 ms)
    Dashboard Data Loading for Customer Highlighting
      ✓ should load affiliate profile data correctly (3456 ms)
      ✓ should load dashboard statistics correctly (1385 ms)
    Error Handling in Customer Filtering Flow
      ✓ should handle invalid customer ID gracefully (1605 ms)
      ✓ should handle invalid affiliate ID (1920 ms)
      ✓ should handle database connection issues gracefully (1567 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:16.486Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:17.039Z"}
  console.log
    CSRF token generation: {
      sessionID: '69612e89797030d00c7bef4b5be91c80',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mvvesVWL-GLniDXqmmex0878LIpM4IL160w4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 69612e89797030d00c7bef4b5be91c80

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hYxkFg7_Ox...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.064 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:17.328Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: new@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi New,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-59454a53-ae33-4bb4-8d07-d67f1d2a81e5</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-59454a53-ae33-4bb4-8d07-d67f1d2a81e5">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-59454a53-ae33-4bb4-8d07-d67f1d2a81e5</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-59454a53-ae33-4bb4-8d07-d67f1d2a81e5">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-59454a53-ae33-4bb4-8d07-d67f1d2a81e5</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 580.311 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:19.418Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd61e048546a8eda55e7dc2730c13042b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yk4E1w5v-qbNpMfPNdX93-_0qqJM7UGq8_TI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d61e048546a8eda55e7dc2730c13042b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6106GVp0_a...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.354 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-ebda6773-c7a1-42cf-b8b6-ffebc5da5dbc {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:19.677Z"}
[0mGET /api/v1/affiliates/AFF-ebda6773-c7a1-42cf-b8b6-ffebc5da5dbc [32m200[0m 301.529 ms - 495[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:20.836Z"}
  console.log
    CSRF token generation: {
      sessionID: '3e50b44040c05e4dca7a97ce728483f1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: s5cwjNy8--8PUIzVklqjrKyxwubqX-EHACIE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3e50b44040c05e4dca7a97ce728483f1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: T9PxtbtmlB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 17.297 ms - 67[0m
[34mdebug[39m: PUT /api/v1/affiliates/AFF-0990a020-e643-4697-b275-92f162d028cb {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:20.892Z"}
[0mPUT /api/v1/affiliates/AFF-0990a020-e643-4697-b275-92f162d028cb [32m200[0m 89.122 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:21.893Z"}
  console.log
    CSRF token generation: {
      sessionID: '52b46599e21181994d98ff31fad03f89',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: N1F0jpbY-F9c4_PW4epO8zScXJvXH7yOgx0Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 52b46599e21181994d98ff31fad03f89

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: o1HlWCr0mW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.771 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:22.036Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:40:22.236Z","userType":"affiliate","username":"testaffiliate"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 200.035 ms - 629[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:23.016Z"}
  console.log
    CSRF token generation: {
      sessionID: '92b1a8c1561b7a5d72efc6745514873f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KjdWxJ3K-LXPZM2tez9NIJMkBuJt-zQjRyJs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 92b1a8c1561b7a5d72efc6745514873f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: z9HB-0oOsi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.116 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-17c99203-cd89-44a9-b9a9-d431302aee40/customers?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:23.116Z"}
[0mGET /api/v1/affiliates/AFF-17c99203-cd89-44a9-b9a9-d431302aee40/customers?page=1&limit=10 [32m200[0m 111.143 ms - 689[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:24.008Z"}
  console.log
    CSRF token generation: {
      sessionID: '2c675d8f78f45a0801f820c330f14672',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OOxD93v0-E_Xh7oHffNTMVJEqYWHX5Za6Jhs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2c675d8f78f45a0801f820c330f14672

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3bhbDFEz5a...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.466 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-70b36eea-1e03-4924-b147-e138e715c07d/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:24.148Z"}
[0mGET /api/v1/affiliates/AFF-70b36eea-1e03-4924-b147-e138e715c07d/orders?page=1&limit=10 [32m200[0m 111.146 ms - 576[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:25.024Z"}
  console.log
    CSRF token generation: {
      sessionID: '3db27424f35dc05c317a6e9cbcd76da7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Od5cs7EO-GORH1q8pfKfPgvr-azwfKuzBzFA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3db27424f35dc05c317a6e9cbcd76da7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YXWqsAGiQo...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.116 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-03fde02b-224d-414b-a005-5ca30e36e6ba/transactions?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:25.121Z"}
[0mGET /api/v1/affiliates/AFF-03fde02b-224d-414b-a005-5ca30e36e6ba/transactions?page=1&limit=10 [32m200[0m 111.923 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:26.070Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c126ebe1cd7bba42045b85323cf61b3d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KhBKktM0-QHYbeVteeeRuGqiwJiFjm4gv66I

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c126ebe1cd7bba42045b85323cf61b3d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7iN5ngGi-P...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.386 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-d09473fd-6f1d-4823-b4b0-902b5ac086d4/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:26.220Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-d09473fd-6f1d-4823-b4b0-902b5ac086d4/delete-all-data {
      sessionID: 'c126ebe1cd7bba42045b85323cf61b3d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac126ebe1cd7bba42045b85323cf61b3d.92deSa055bEw%2FkN31BNxv%2BbvSPb6NqjhomTS3Occ1Dk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-d09473fd-6f1d-4823-b4b0-902b5ac086d4/delete-all-data [32m200[0m 225.302 ms - 191[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:27.347Z"}
  console.log
    CSRF token generation: {
      sessionID: '1c0741d659c1d2d1ba98aba4a6aa9d16',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OLyNqvxW-DG_X18r7XgyI7Q2nLrsE7lj0QQw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1c0741d659c1d2d1ba98aba4a6aa9d16

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oaZrDG-msk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.575 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-f2a86872-9497-402e-bee5-c945232c376b/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:27.401Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-f2a86872-9497-402e-bee5-c945232c376b/delete-all-data {
      sessionID: '1c0741d659c1d2d1ba98aba4a6aa9d16',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1c0741d659c1d2d1ba98aba4a6aa9d16.8bjZ6mOuPP1lJ6mGKRTXj%2FSBM1TFE0YC1XwkGe9shXM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-f2a86872-9497-402e-bee5-c945232c376b/delete-all-data [33m403[0m 32.176 ms - 59[0m
PASS tests/integration/affiliate.test.js (12.567 s)
  Affiliate API
    ✓ should register a new affiliate (2391 ms)
    ✓ should get affiliate profile (1417 ms)
    ✓ should update affiliate profile (1058 ms)
    ✓ should login affiliate (1123 ms)
    ✓ should get affiliate's customers list (993 ms)
    ✓ should get affiliate's orders (1014 ms)
    ✓ should get affiliate's earnings/transactions (1046 ms)
    ✓ Delete all affiliate data (development only) (1277 ms)
    ✓ Reject delete in production environment (863 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.log
    Missing template: order-confirmation.html

      at Object.log (tests/integration/emailService.integration.test.js:226:19)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: 
            <!DOCTYPE html>
            <html>
            <head><title>Test Email</title></head>
            <body>
              <h1>Test Email Template</h1>
              <p></p>
              <p>Reset Link: </p>
              <p>User: </p>
              <p>Email: </p>
            </body>
            </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

PASS tests/integration/emailService.integration.test.js
  Email Service Integration
    Email Service Configuration
      ✓ should load and configure the email service correctly (9 ms)
      ✓ should have all required email functions (12 ms)
    Console Email Provider
      ✓ should log affiliate welcome emails to console (23 ms)
      ✓ should log customer welcome emails to console (12 ms)
      ✓ should log password reset emails to console (15 ms)
    Email Template Verification
      ✓ should verify email templates directory exists (7 ms)
      ✓ should verify essential email templates exist (2 ms)
    Mailcow SMTP Configuration
      ✓ should handle Mailcow SMTP configuration (13 ms)
      ✓ should handle secure Mailcow SMTP on port 465 (13 ms)
    Error Handling
      ✓ should handle missing required fields gracefully (68 ms)
      ✓ should handle invalid email addresses (64 ms)
    Bulk Email Operations
      ✓ should handle multiple email sends efficiently (24 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:30.234Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/w9/check-auth {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.197Z"}
[0mGET /api/v1/w9/check-auth [32m200[0m 171.620 ms - 115[0m
[34mdebug[39m: GET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.374Z"}
[32minfo[39m: OAuth callback - token exchange completed {"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.377Z"}
[0mGET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 [32m200[0m 3.687 ms - -[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.502Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"env_123456","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686bf87f9265deab8125adf7","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T16:40:32.631Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 132.752 ms - 139[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/env_123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.673Z"}
[0mGET /api/v1/w9/envelope-status/env_123456 [32m200[0m 98.796 ms - 48[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:32.777Z"}
[32minfo[39m: W9 status updated for affiliate AFF000001: {"details":{"envelopeId":"env_123456","event":"envelope-completed","status":"completed","success":true},"docusignStatus":"completed","envelopeId":"env_123456","performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"system@docusign","userName":"DocuSign System","userType":"system"},"service":"wavemax-affiliate","status":"verified","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T16:40:32.882Z"}
[0mPOST /api/v1/w9/docusign-webhook [32m200[0m 105.535 ms - 70[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:33.955Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[0mPOST /api/v1/w9/initiate-signing [32m200[0m 58.037 ms - 156[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/declined_env {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:35.016Z"}
[0mGET /api/v1/w9/envelope-status/declined_env [32m200[0m 97.096 ms - 49[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:36.289Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"new_env_after_refresh","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686bf8849265deab8125ae8d","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T16:40:36.386Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 94.204 ms - 143[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:37.371Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Invalid template ID
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Invalid template ID {"service":"wavemax-affiliate","stack":"Error: Invalid template ID\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T16:40:37.435Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 63.126 ms - 79[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:38.286Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Network timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Network timeout {"service":"wavemax-affiliate","stack":"Error: Network timeout\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T16:40:38.343Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 56.975 ms - 75[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:39.251Z"}
[33mwarn[39m: Invalid DocuSign webhook signature {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:39.253Z"}
[0mPOST /api/v1/w9/docusign-webhook [33m401[0m 2.253 ms - 29[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/other_envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:40.619Z"}
  console.log
    Envelope mismatch: { expected: undefined, received: 'other_envelope' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

[0mGET /api/v1/w9/envelope-status/other_envelope [33m403[0m 61.743 ms - 24[0m
[34mdebug[39m: GET /api/v1/w9/authorization-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:41.544Z"}
[0mGET /api/v1/w9/authorization-status [32m200[0m 28.445 ms - 65[0m
PASS tests/integration/docusignW9.test.js (13.104 s)
  DocuSign W9 Integration Tests
    Complete W9 Signing Flow
      ✓ should complete full W9 signing flow from authorization to completion (3081 ms)
    Resume Existing Signing Session
      ✓ should resume existing envelope instead of creating new one (1047 ms)
    Handle Declined Envelope
      ✓ should reset W9 status when envelope is declined (1271 ms)
    Token Refresh Flow
      ✓ should handle expired token and refresh automatically (1122 ms)
    Error Handling
      ✓ should handle DocuSign service errors gracefully (920 ms)
      ✓ should handle network errors during envelope creation (929 ms)
    Security Tests
      ✓ should reject webhook with invalid signature (1291 ms)
      ✓ should prevent accessing another affiliates envelope status (1035 ms)
    Authorization Status Check
      ✓ should verify authorization after OAuth callback (900 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/integration/adminCreation.test.js (5.541 s)
  Admin Creation Integration Tests
    Direct Database Admin Creation
      ✓ should create admin with sequential ID when no admins exist (233 ms)
      ✓ should create admin with next sequential ID when admins exist (431 ms)
      ✓ should handle admin creation with all permissions (365 ms)
      ✓ should handle admin creation with partial permissions (207 ms)
    Admin Model Validation
      ✓ should require email field (163 ms)
      ✓ should save admins with different adminIds successfully (373 ms)
      ✓ should save admins with different emails successfully (336 ms)
    Password Handling
      ✓ should hash password before saving (209 ms)
      ✓ should validate password with verifyPassword method (340 ms)
    Admin Query Operations
      ✓ should find admin by adminId (358 ms)
      ✓ should find admin by email (353 ms)
      ✓ should find active admins only (378 ms)
      ✓ should find admins with specific permissions (379 ms)
      ✓ should get last admin for ID generation (363 ms)
    Email Integration
      ✓ should call email service after admin creation (251 ms)
      ✓ should handle email service failures gracefully (261 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:40:49.243Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

FAIL tests/integration/wdfCreditIntegration.test.js (13.767 s)
  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit fields in customer profile

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should handle order not found error when weighing bags

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should prevent duplicate bag weighing

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Concurrent Operations › should handle concurrent credit updates correctly

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:02.847Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:05.668Z"}
[0mGET /api/v1/system/config/public [32m200[0m 33.314 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:07.129Z"}
[0mGET /api/v1/system/config/public [32m200[0m 33.819 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:08.721Z"}
[0mGET /api/v1/system/config/public/wdf_base_rate_per_pound [32m200[0m 42.156 ms - 172[0m
[34mdebug[39m: GET /api/v1/system/config/public/non_existent_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:09.976Z"}
[0mGET /api/v1/system/config/public/non_existent_key [33m404[0m 32.746 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config/public/private_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:12.352Z"}
[0mGET /api/v1/system/config/public/private_key [33m404[0m 29.396 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:13.670Z"}
[0mGET /api/v1/system/config [32m200[0m 61.732 ms - -[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:14.922Z"}
[0mGET /api/v1/system/config [33m401[0m 1.772 ms - 47[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:16.615Z"}
[0mGET /api/v1/system/config [33m403[0m 29.796 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:21.900Z"}
  console.log
    CSRF token generation: {
      sessionID: '3a32825511e94e77d3ff7e560e904c53',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5fIZgIpL-_oNbuLacLHjG2i2dyFgpwgXJrv4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3a32825511e94e77d3ff7e560e904c53

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: G2DsugYSZ-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.174 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:22.033Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '3a32825511e94e77d3ff7e560e904c53',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3a32825511e94e77d3ff7e560e904c53.8WhXA9s2J6RVCmzlQHAPs9h5qIsyhtBiVA3qsvLhhB4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [32m200[0m 160.649 ms - 149[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:23.488Z"}
  console.log
    CSRF token generation: {
      sessionID: '57e927b2caaa677969297e3f781f5737',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: l0KPJrmp-VBFthe-7L5koHbDTH-R03AzvKhc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 57e927b2caaa677969297e3f781f5737

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q6pnjr_fyH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.510 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:23.620Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '57e927b2caaa677969297e3f781f5737',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A57e927b2caaa677969297e3f781f5737.I8OCZUxqIa0kv6rcZIngrdaHHXqUvOKd5i%2FPNMSrdfE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be a number for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:67:21)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 95.453 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:25.610Z"}
  console.log
    CSRF token generation: {
      sessionID: '108fe2bd8daffe3da7386ef3548d7421',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EN7in9Pm-ElUwV5XHoYh5yZu_f_aKH9uf5OA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 108fe2bd8daffe3da7386ef3548d7421

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: N8UKZsy0GU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.021 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:25.758Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '108fe2bd8daffe3da7386ef3548d7421',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A108fe2bd8daffe3da7386ef3548d7421.Po%2F0fT2Ls5DX3zJkfgLPnfpwF43wkcMrGl3M3ZKTALo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be at least 0.5 for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:72:23)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 99.472 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:27.156Z"}
  console.log
    CSRF token generation: {
      sessionID: '956be0a14f5faa0cc494ba871c0d6252',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: X2i9m4GG-t17TqAuKpEviHa2OG9S_1kIXOAQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 956be0a14f5faa0cc494ba871c0d6252

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -o3p__wF2n...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.564 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/non_editable_config {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:27.338Z"}
  console.log
    CSRF check for: /api/v1/system/config/non_editable_config {
      sessionID: '956be0a14f5faa0cc494ba871c0d6252',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A956be0a14f5faa0cc494ba871c0d6252.c8qkeEG8yYZR%2FRalJqgknr9yv0%2FsaFEgfRI7buunFJw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Configuration is not editable: non_editable_config
        at Function.Object.<anonymous>.systemConfigSchema.statics.setValue (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:140:11)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /var/www/wavemax/wavemax-affiliate-program/server/routes/systemConfigRoutes.js:83:20

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/non_editable_config [33m400[0m 135.458 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:29.149Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b520823e13c7c089141509c1457f83d3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RFifgwWG-U729M_73gE0_ASb4mQ_bYEIwgRs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b520823e13c7c089141509c1457f83d3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RdE9CbpM8w...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.754 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:29.393Z"}
  console.log
    CSRF token generation: {
      sessionID: '0e8756f293635feda08e1b7bd3a0a665',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0uzzynHm-9_mJ96iSq6drCfx4UZb21q6kRD8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0e8756f293635feda08e1b7bd3a0a665

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XgMP7c5Pa0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.621 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:29.408Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '0e8756f293635feda08e1b7bd3a0a665',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0e8756f293635feda08e1b7bd3a0a665.gmWjwbq3pXM9MPt5r381LED04dcfbkTZlhHd0uOruRk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m403[0m 66.821 ms - 78[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:30.773Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ed242a4671ed7dbdb66f38604c4b0677',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uLFTouqe-k7jewKVvYpi1Qwv1sfzmNGhooEM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ed242a4671ed7dbdb66f38604c4b0677

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rCnfScREZf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.778 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:30.837Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'ed242a4671ed7dbdb66f38604c4b0677',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aed242a4671ed7dbdb66f38604c4b0677.x2IfEE7%2FgSiHh0uRT0oDQFszoeKWBh6APSaNNO6PYUE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 355.699 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:32.496Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ef4a704fee447f9053f5ff444fc3dfb8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Dw5oRKj7-B4h5V1C6HvwENHkBwui-9WkiqLU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ef4a704fee447f9053f5ff444fc3dfb8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ef-lz_seSf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.796 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:32.571Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'ef4a704fee447f9053f5ff444fc3dfb8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aef4a704fee447f9053f5ff444fc3dfb8.RRB8SngMi9tAzuMq17yYKw%2BzrqvrdiuurkbgWBtGQY4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 349.582 ms - 48[0m
PASS tests/integration/systemConfig.test.js (33.293 s)
  System Config API Tests
    Public Endpoints
      GET /api/v1/system/config/public
        ✓ should return all public configurations (2317 ms)
        ✓ should not return private configurations (1506 ms)
      GET /api/v1/system/config/public/:key
        ✓ should return a specific public configuration (1350 ms)
        ✓ should return 404 for non-existent config (1828 ms)
        ✓ should return 404 for private config accessed via public endpoint (1857 ms)
    Admin Endpoints
      GET /api/v1/system/config
        ✓ should return all configurations for admin (1275 ms)
        ✓ should return 401 without authentication (1367 ms)
        ✓ should return 403 for non-admin users (5583 ms)
      PUT /api/v1/system/config/:key
        ✓ should update a configuration value (1637 ms)
        ✓ should validate value based on data type (1463 ms)
        ✓ should validate value against min/max constraints (2216 ms)
        ✓ should not allow updating non-editable configs (1970 ms)
        ✓ should require system_config permission (1586 ms)
      POST /api/v1/system/config/initialize
        ✓ should initialize default configurations (1738 ms)
        ✓ should not overwrite existing configurations (1730 ms)
    Integration with Order Model
      ✓ should use SystemConfig WDF rate in new orders (1400 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:36.323Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:38.152Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-6318abe5-78fc-4e05-9df1-5caf77d68c19

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 107.385 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:39.967Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-2fddde50-eea2-465f-bca7-a8b376e953ff

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 96.596 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:41.679Z"}
[0mGET /api/v1/quickbooks/vendors [33m404[0m 67.924 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:43.192Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 127.745 ms - 316[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:44.818Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json [32m200[0m 120.827 ms - 961[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:46.440Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m400[0m 37.498 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:47.993Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 [33m404[0m 81.794 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:49.506Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 166.622 ms - 169[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:51.298Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 [33m400[0m 28.845 ms - 81[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:52.829Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 [33m400[0m 65.867 ms - 76[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:54.356Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 [33m404[0m 56.285 ms - 49[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:55.877Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-73f4338a-d481-4623-88d1-f75d0b0c824e

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 96.218 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:55.976Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 80.891 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:56.061Z"}
[0mGET /api/v1/quickbooks/history [32m200[0m 102.411 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:57.703Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-f3e80e45-bd72-4fb5-84f9-70e57e4ac409

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 110.722 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:57.818Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 91.983 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?type=vendor {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:57.914Z"}
[0mGET /api/v1/quickbooks/history?type=vendor [32m200[0m 94.863 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:59.526Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-dbef3c3d-d928-475a-8994-a8a83f4bb317

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 101.880 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:59.632Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 97.715 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:59.734Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-d23012ec-3887-4c44-a9ec-52f8c3b11828

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 94.148 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:59.831Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-9bcb72e6-8175-4699-89f4-1c944d2abf61

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 100.526 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:41:59.934Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-6a8bf4fc-1267-4e32-8b18-d6de6b54f48e

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 94.683 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:00.032Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-0e233cc0-0d8f-477e-bbb8-01420a7aba0f

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 100.552 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:00.137Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-ba62e164-4ba3-47a6-bc97-79ecb7b5c564

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 86.391 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?limit=3 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:00.226Z"}
[0mGET /api/v1/quickbooks/history?limit=3 [32m200[0m 82.915 ms - -[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:01.794Z"}
[0mGET /api/v1/quickbooks/vendors [33m401[0m 2.766 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:01.801Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m401[0m 1.814 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:01.806Z"}
[0mGET /api/v1/quickbooks/commission-detail [33m401[0m 0.951 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:01.810Z"}
[0mGET /api/v1/quickbooks/history [33m401[0m 3.526 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:03.405Z"}
  console.log
    Authorization failed for path: /vendors - User role: affiliate Allowed roles: [ 'administrator' ]

      at log (server/middleware/auth.js:227:15)

[0mGET /api/v1/quickbooks/vendors [33m403[0m 36.497 ms - 54[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:04.959Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-93aed85d-db8b-47cf-9aca-6dbc7b12a412

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 133.122 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:06.540Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 127.425 ms - 316[0m
PASS tests/integration/quickbooks.test.js (32.115 s)
  QuickBooks Export Integration Tests
    Vendor Export
      ✓ should export verified vendors as CSV (2608 ms)
      ✓ should export vendors as JSON (1632 ms)
      ✓ should handle no verified vendors gracefully (1621 ms)
    Payment Summary Export
      ✓ should export payment summary for date range as CSV (1603 ms)
      ✓ should export payment summary as JSON with correct aggregations (1647 ms)
      ✓ should require date parameters (1476 ms)
      ✓ should handle empty date range (1572 ms)
    Commission Detail Export
      ✓ should export commission details for specific affiliate (1685 ms)
      ✓ should require all parameters (1569 ms)
      ✓ should reject unverified affiliate export (1576 ms)
      ✓ should handle non-existent affiliate (1533 ms)
    Export History
      ✓ should retrieve export history (1873 ms)
      ✓ should filter export history by type (1726 ms)
      ✓ should limit export history results (2321 ms)
    Security and Permissions
      ✓ should require admin authentication for all QuickBooks endpoints (1630 ms)
      ✓ should not allow affiliate access to QuickBooks exports (1532 ms)
    CSV Format Validation
      ✓ should generate QuickBooks-compatible vendor CSV (1584 ms)
      ✓ should generate QuickBooks-compatible payment CSV (1624 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:08.486Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:08.851Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd6de50e5dec397dcb5c63e60d5358670',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 72KAFsnm-a64lYDfyQ9TQJTf3tBmLWEAu4Rg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d6de50e5dec397dcb5c63e60d5358670

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EN-wwt1Qaj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.490 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:10.147Z"}
  console.log
    Creating new customer with email: bob@example.com username: bobjohnson

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-e0712685-02a7-4ff8-bd29-371b7b064b09

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: bob@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Bob,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-e0712685-02a7-4ff8-bd29-371b7b064b09</p>
            <p><strong>Your Service Provider:</strong> John Doe</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> John Doe<br>
            <strong>Phone:</strong> 555-123-4567<br>
            <strong>Email:</strong> john@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: bob@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-e0712685-02a7-4ff8-bd29-371b7b064b09</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Bob Johnson</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>bob@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>555-555-5555</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>789 Pine St, Austin, TX 78703</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-e0712685-02a7-4ff8-bd29-371b7b064b09" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 463.453 ms - 297[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:11.768Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ed4dfbd146666b6c6ffd2995481754ba',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: D4yj2VmN-sHotPZkg1aTzqcnYQ1XzG3khWwc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ed4dfbd146666b6c6ffd2995481754ba

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HZJW48awIE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.809 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:12.055Z"}
[0mPOST /api/v1/customers/register [33m400[0m 30.996 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:12.887Z"}
  console.log
    CSRF token generation: {
      sessionID: '7ae4eee1a407a670a97d8fd1bcc55264',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uI2WcEHG-VIxMHwg_odsWdDC3i1F-WdpoTks

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7ae4eee1a407a670a97d8fd1bcc55264

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YFRguQJPnx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.827 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:13.225Z"}
[0mPOST /api/v1/customers/register [33m400[0m 59.177 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:14.088Z"}
  console.log
    CSRF token generation: {
      sessionID: '48921316511e626ece31846de76c1095',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZlTt4tZV-cECoQF92cjueglZES0HHdG75hhw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 48921316511e626ece31846de76c1095

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3meXLLdyxZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.424 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:14.499Z"}
[0mPOST /api/v1/customers/register [33m400[0m 179.491 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:15.670Z"}
  console.log
    CSRF token generation: {
      sessionID: '391ceeafedcdbf105d35592ea44a349d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UobWXCbc--vTd9o40b2p3XwuA0EEs1ASfJ4E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 391ceeafedcdbf105d35592ea44a349d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yfyqlk3ZMU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.835 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:15.968Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 87.297 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:16.847Z"}
  console.log
    CSRF token generation: {
      sessionID: '80fbb3c7643964807afda4f4e5130943',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0arOx2xm-RV0dTj4i8vHJ3VjCWF8UcjA_X-w

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 80fbb3c7643964807afda4f4e5130943

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tqhUUf55tW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.426 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:17.258Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 88.892 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:18.405Z"}
  console.log
    CSRF token generation: {
      sessionID: '0c83da98152a8569c6c9fe6d49339ba2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HFUpZkPL-psBRJmi262pxxUxM2eIJ9fMhziE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0c83da98152a8569c6c9fe6d49339ba2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WiupC_Tk4D...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.971 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:18.701Z"}
[0mGET /api/v1/customers/CUST123/profile [33m403[0m 67.610 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:19.571Z"}
  console.log
    CSRF token generation: {
      sessionID: '104fa1fdf99b85787c6d91b2896897d6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3JSREdT5-6R2nvDRMEaJb0EBi3EXNtYCKiTY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 104fa1fdf99b85787c6d91b2896897d6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TMqcOqlZ80...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.886 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:19.862Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 60.477 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:20.730Z"}
  console.log
    CSRF token generation: {
      sessionID: '3eaa15c92dcc8dd22bd34649d0083e45',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yP0fCMF9-dnS341nCoUFySi9WNcIaXYXwlsE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3eaa15c92dcc8dd22bd34649d0083e45

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: h0jNwUF63q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.647 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:20.997Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 91.328 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:22.280Z"}
  console.log
    CSRF token generation: {
      sessionID: '60945965819005684888b0ede55fcbaa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BZDcmLCu-Sw2sIiY6hMqvlLJWV3fysB6Y0FE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 60945965819005684888b0ede55fcbaa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CDkudtCY7s...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.822 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:22.590Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 112.963 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:23.516Z"}
  console.log
    CSRF token generation: {
      sessionID: '43c5ce3b585efafe7e53ec0eeb7619a5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: f7LIcBX8-qwAC29vuV1uRFIHIq7wwyRwwogs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 43c5ce3b585efafe7e53ec0eeb7619a5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ciBDcY0nxT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.828 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:23.861Z"}
[0mGET /api/v1/customers/CUST123/orders?page=1&limit=10 [32m200[0m 116.035 ms - 603[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:25.222Z"}
  console.log
    CSRF token generation: {
      sessionID: '38b787c17d05e12f6d77b78747aeafa1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TndlV4kW-9wWymh-UgOJDDFtnQgkLDFRAj0k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 38b787c17d05e12f6d77b78747aeafa1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LaEx1p6QF9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 16.898 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?status=complete {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:25.572Z"}
[0mGET /api/v1/customers/CUST123/orders?status=complete [32m200[0m 160.404 ms - 365[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:26.543Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd01f7d6c5e28ee2e8d4ec5205761f198',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mpthBbio-oWv82Bemoz08_wRnDO3BhLD7tTE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d01f7d6c5e28ee2e8d4ec5205761f198

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: G_-9MENWaS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 16.566 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:26.907Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'd01f7d6c5e28ee2e8d4ec5205761f198',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad01f7d6c5e28ee2e8d4ec5205761f198.dAr0B3Gq1hmvLjBqYyIGVsTbLjS5VEJHC%2FaLORn1IeE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [32m200[0m 211.918 ms - 58[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:27.123Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 154.602 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:28.096Z"}
  console.log
    CSRF token generation: {
      sessionID: '29b88c059b250305308afff4ee845765',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dKGQz1T5-GgEjvrCCb7wVH82McqwyzWre7_0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 29b88c059b250305308afff4ee845765

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E_f2e1mhxt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.504 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:28.381Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '29b88c059b250305308afff4ee845765',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A29b88c059b250305308afff4ee845765.A03kt1s6q%2B%2Bu8e5sZqcB%2Fug1ABGpitKlCSelgBpjLII',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m401[0m 111.357 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:29.274Z"}
  console.log
    CSRF token generation: {
      sessionID: '8b8c8d559adad5ba72c0e7d0a8fe0761',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uE8d1f3x-NifolBRfhJtvpI5SS-Ozt8DULDg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8b8c8d559adad5ba72c0e7d0a8fe0761

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JtjfSmVtpt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.599 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:29.555Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '8b8c8d559adad5ba72c0e7d0a8fe0761',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8b8c8d559adad5ba72c0e7d0a8fe0761.o7wDjGZVO7cQq4O9gsw1fIJQwyduZQJVa8g3Jpf5%2FCI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m400[0m 113.849 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:30.490Z"}
  console.log
    CSRF token generation: {
      sessionID: '96d20da4511e08357ae9734314a7357f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6d0RfStW-TTfOfEcPxD7PKqF0zEpBVjl-fpo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 96d20da4511e08357ae9734314a7357f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QIG9DfHbVs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.966 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:30.816Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 149.195 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:31.752Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f63520ec9916607e3d4f4de8bd809816',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iUdj5BuA-30h233vTJImfr08apaPyiwreUq4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f63520ec9916607e3d4f4de8bd809816

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZVQ99I9os7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.860 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:32.073Z"}
[0mGET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true [32m200[0m 138.876 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:33.056Z"}
  console.log
    CSRF token generation: {
      sessionID: 'da9fdd1f467bb9d94a5201ae88af2605',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ibW8aEac-WDCJd-syh9vLhI6Dxgwl6qI4HIk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: da9fdd1f467bb9d94a5201ae88af2605

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0H5KZIQfkd...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.909 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:33.371Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 148.128 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:34.308Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fa20fdb7337bc6db498df5af21529bbd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EJRSdacW-xA0E3iulmZiWvd3RyM8O4eGlnH0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fa20fdb7337bc6db498df5af21529bbd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: u-4GSNF2Cl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.909 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:34.663Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'fa20fdb7337bc6db498df5af21529bbd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afa20fdb7337bc6db498df5af21529bbd.IYZ05sb6RGzMEdOBsn3W8fDMmmxi%2FO9mWraBfDtSJZ0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [32m200[0m 129.349 ms - 107[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:35.637Z"}
  console.log
    CSRF token generation: {
      sessionID: '461ad1fffcd24bf0702e3098b51203c9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hdvFIPn1-fIWg8nUQS7aFtQSCM60_UW-wHac

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 461ad1fffcd24bf0702e3098b51203c9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Fj7USibLtc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.891 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:35.916Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: '461ad1fffcd24bf0702e3098b51203c9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A461ad1fffcd24bf0702e3098b51203c9.H2qjivxJoG%2Bp682zlkhNQiocwmima8kO4BN8hClFpqI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 32.474 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:36.827Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e5482db7e3f254595af30324a24ec3fa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DktLylQq-geKdU4PxzIVLImwfI_52JSdpIYI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e5482db7e3f254595af30324a24ec3fa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9A64r_GD3x...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.642 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:37.209Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'e5482db7e3f254595af30324a24ec3fa',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae5482db7e3f254595af30324a24ec3fa.wMv%2FaB7%2BD2DYVFJCfgG3pf2Fm0SAVd5N0iNzjT0jw8g',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 30.137 ms - 63[0m
PASS tests/integration/customer.test.js (30.502 s)
  Customer Integration Tests
    POST /api/v1/customers/register
      ✓ should register a new customer (2933 ms)
      ✓ should fail with invalid affiliate ID (1118 ms)
      ✓ should fail with duplicate email (1201 ms)
      ✓ should fail with duplicate username (1581 ms)
    GET /api/v1/customers/:customerId/profile
      ✓ should return customer profile for authenticated customer (1171 ms)
      ✓ should return customer profile for affiliate (1563 ms)
      ✓ should fail for unauthorized customer (1166 ms)
      ✓ should return limited data without authentication (1159 ms)
    PUT /api/v1/customers/:customerId/profile
      ✓ should update customer profile (1549 ms)
      ✓ should not update protected fields (1236 ms)
    GET /api/v1/customers/:customerId/orders
      ✓ should return customer orders with pagination (1704 ms)
      ✓ should filter orders by status (1318 ms)
    PUT /api/v1/customers/:customerId/password
      ✓ should update customer password (1556 ms)
      ✓ should fail with incorrect current password (1177 ms)
      ✓ should fail with weak new password (1216 ms)
    GET /api/v1/customers/:customerId/dashboard
      ✓ should return customer dashboard statistics (1262 ms)
      ✓ should return monthly statistics (1303 ms)
      ✓ should allow affiliate to view customer dashboard (1251 ms)
    DELETE /api/v1/customers/:customerId/delete-all-data
      ✓ should delete all customer data in development environment (1327 ms)
      ✓ should reject deletion in production environment (1192 ms)
      ✓ should reject unauthorized deletion (1279 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:39.257Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:40.432Z"}
  console.log
    CSRF token generation: {
      sessionID: '6a8268884368bf1280e035b52932f137',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nTl5OzbK--EHy9fD7wSiTF6YaOA5hcLONgtk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6a8268884368bf1280e035b52932f137

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Wj_KUJu43V...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.774 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:40.541Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 186.226 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:40.894Z"}
[0mGET /api/v1/administrators [32m200[0m 136.808 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:42.142Z"}
  console.log
    CSRF token generation: {
      sessionID: '691d4eb6cf0ac06d73091733c459debc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ErYAZ7HK-FI4V9NlmYZO1Gkesx2qC-dsMJq8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 691d4eb6cf0ac06d73091733c459debc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jxDvhRm76O...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.032 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:42.242Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.173 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:42.496Z"}
[0mGET /api/v1/administrators?active=true [32m200[0m 126.246 ms - 376[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:43.570Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b4ed5f5e3b7daddbf1bf13d501742c64',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nL5vGWhV-ptsJ2U6ADlsQ7ys5LpLtbEGn0lg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b4ed5f5e3b7daddbf1bf13d501742c64

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WKTSXqTe__...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 17.789 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:43.685Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 167.629 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:45.090Z"}
[0mGET /api/v1/administrators?page=2&limit=5 [32m200[0m 114.410 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:47.168Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c37d189fa41ae1e6e33fd695b637080f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: aIysTVG3-S7E_cihVclSsMq_vAEcE34ykTZQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c37d189fa41ae1e6e33fd695b637080f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JF7N6djsg5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.367 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:47.284Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.517 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:47.458Z"}
[0mGET /api/v1/administrators [33m401[0m 1.168 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:49.816Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e32c9632ef3d7e18ab524ea63d7f1e71',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rBugSPDE-pQ0bzdzLpYRBWXkgLx_1OOrYmfY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e32c9632ef3d7e18ab524ea63d7f1e71

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: joODluFGnX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.168 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:50.188Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 431.358 ms - 615[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:50.729Z"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 166.169 ms - 555[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:50.899Z"}
[0mGET /api/v1/administrators [33m403[0m 30.367 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:53.777Z"}
  console.log
    CSRF token generation: {
      sessionID: '5fd8f2cf14026d3078353206e50b873a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5nxricOa-7u8AFUhXPQwy2YcTw9JHP1DNK7s

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5fd8f2cf14026d3078353206e50b873a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xGDCQkD_eQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.568 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:53.877Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.243 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686bf90e15b7fef6209057f4 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:54.134Z"}
[0mGET /api/v1/administrators/686bf90e15b7fef6209057f4 [32m200[0m 121.002 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:56.609Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f40b09c5c7714513d91fc85757e95176',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3pvvnxEL-8E_2G1-xn0iP3tLNPUGbUev2uno

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f40b09c5c7714513d91fc85757e95176

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Ifr2r22Xa8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.148 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:56.715Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 418.929 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686bf91115b7fef62090581f {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:57.138Z"}
[0mGET /api/v1/administrators/686bf91115b7fef62090581f [33m404[0m 82.565 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:42:59.906Z"}
  console.log
    CSRF token generation: {
      sessionID: '929428a4babf3a1e7a7f638abbf330e0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BCwUpJDA-hHdIFxp15ZGfK8JelVZw73xc-2Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 929428a4babf3a1e7a7f638abbf330e0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GNaeKn8fEY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.339 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:00.031Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 662.689 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/invalid-id {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:00.698Z"}
[0mGET /api/v1/administrators/invalid-id [33m400[0m 59.098 ms - 54[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:03.640Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fcab414ab70b3a113a69938228ceae9f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 74U5KWn3-Ln6eKiR3cuc-bCYUK4YUNOFu2Mk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fcab414ab70b3a113a69938228ceae9f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Bd48xzux3x...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.335 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:03.780Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 674.595 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:04.459Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'fcab414ab70b3a113a69938228ceae9f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afcab414ab70b3a113a69938228ceae9f.mfIbYKkdjgMsk%2FUWThAO4tcjSiJhYo%2F2JpRtKr7j794',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [32m201[0m 231.177 ms - 329[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:04.700Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 434.753 ms - 677[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:06.768Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f94151fb5768949deab28b1d68ed969b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xTELlp3t-j3SCtndzrPQWaHYWdaoFt1hxKuw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f94151fb5768949deab28b1d68ed969b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CfGXaBpXTN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.184 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:07.126Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 167.720 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:07.297Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'f94151fb5768949deab28b1d68ed969b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af94151fb5768949deab28b1d68ed969b.GMCSAyLx%2B8Y2pjF37Ie8NWQ0BgXClt2sZwiZ4zyXm3Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 69.958 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:09.752Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cb06ea49a3adf89dda3edc687db2889d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nBsQVZrD-4KxN0IcMBfsHMlqsvr2jAlXd9pk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cb06ea49a3adf89dda3edc687db2889d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _rFyHv5Pr3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 20.503 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:09.866Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 177.139 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:10.047Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'cb06ea49a3adf89dda3edc687db2889d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Acb06ea49a3adf89dda3edc687db2889d.HLn3grpPEECRlJM1lchiTlNADaYHwheA%2F1HpjmuF1V4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 316.281 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:12.716Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bd5f9bf24b638038616bf55e9952b267',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Vgnemerj-_q0YXJMBNdhbAdLsA2iHhp3dqIk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bd5f9bf24b638038616bf55e9952b267

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oVu_VJJWTl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.114 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:12.829Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 416.708 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:13.250Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'bd5f9bf24b638038616bf55e9952b267',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Abd5f9bf24b638038616bf55e9952b267.kgsJ8c0W1Fao%2B7hjIDD%2BR0SJBBNaDX%2FikKCfEGzvCpk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 324.325 ms - 204[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:15.731Z"}
  console.log
    CSRF token generation: {
      sessionID: '1e3c6fc8f577f20359bda76b839a1c7c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gMLIgUyY-AIj656Qnb2pV9XM5roRThzwojf4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1e3c6fc8f577f20359bda76b839a1c7c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9oPeE_bVXt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.030 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:15.840Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.982 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:16.027Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '1e3c6fc8f577f20359bda76b839a1c7c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1e3c6fc8f577f20359bda76b839a1c7c.FCJya90Uhz%2BGOpbf9WXql6xkljNYcn%2BKgVz1wHjVEd0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m409[0m 85.153 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:18.241Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a11173b4aa6b45c155b102c46687fcfa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QtSYzgle-yUf-3z_phcyfPPiIidApu_Jkhn0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a11173b4aa6b45c155b102c46687fcfa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aZ8537eKqp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.825 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:18.342Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.901 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:18.603Z"}
  console.log
    CSRF token generation: {
      sessionID: '504625a0ce3c61156ede75e65ecd8933',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HmVsK0NB-3XAlXd7HRAybLGwW4HG8Ji05U2Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 504625a0ce3c61156ede75e65ecd8933

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cSvvN0Fo7q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.667 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:18.614Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 205.597 ms - 649[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:18.823Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '504625a0ce3c61156ede75e65ecd8933',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A504625a0ce3c61156ede75e65ecd8933.naalbph4J%2FkKl2p3x8R4Ps0iMtQZye7QEBk8UPzFsnY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m403[0m 57.689 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:21.736Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a04390788acb1ed2116b752f987131b4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UG731ypq-wDpBah9TWmBxBPRYs1UR-qErR4Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a04390788acb1ed2116b752f987131b4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -IyP5QDq3s...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.722 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:21.860Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 421.661 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf92a15b7fef620905970 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:22.372Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf92a15b7fef620905970 {
      sessionID: 'a04390788acb1ed2116b752f987131b4',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa04390788acb1ed2116b752f987131b4.b16cFysTQLAeM97Omw9%2FNL5z5NTQFm4cFNuieXFUtgM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf92a15b7fef620905970 [32m200[0m 346.374 ms - 337[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:25.664Z"}
  console.log
    CSRF token generation: {
      sessionID: '8eaa2c593d63219545dc5ca65e1be7a8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EidaWa2n-4iAqKkhz0fCn2CQxdWksfGVuLRw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8eaa2c593d63219545dc5ca65e1be7a8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6VTc7-TYwO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.156 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:25.765Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.400 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf92d15b7fef62090599b {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:26.031Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf92d15b7fef62090599b {
      sessionID: '8eaa2c593d63219545dc5ca65e1be7a8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8eaa2c593d63219545dc5ca65e1be7a8.JKgOP4cjf6K4pRaU%2Bfsq0AC9gy1nP8w8yCaCIMuRedY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf92d15b7fef62090599b [32m200[0m 623.765 ms - 318[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:30.166Z"}
  console.log
    CSRF token generation: {
      sessionID: '35bf7737f1ee5fd2727a54e96aa3462c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dDTqxkuM-AP-BM1eArOK2N_d8jPZaHusKb9k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 35bf7737f1ee5fd2727a54e96aa3462c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yuU_aqJ7JG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.839 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:30.279Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 401.642 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf93215b7fef6209059c7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:30.778Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf93215b7fef6209059c7 {
      sessionID: '35bf7737f1ee5fd2727a54e96aa3462c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A35bf7737f1ee5fd2727a54e96aa3462c.h0%2F7CnUp9ekrl8sYua5EE0JAr0RYT9wtPkAoD9AygNk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf93215b7fef6209059c7 [32m200[0m 417.585 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:31.201Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ee3a0c94157297f283e258a409c7497e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uwNFlXTO-IVaCuPh836c4NKiusT-TSvF7OzE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ee3a0c94157297f283e258a409c7497e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: O7JxPDEPBB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 20.682 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:31.233Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 201.116 ms - 645[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:33.836Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ea6ad53864cb7559453763c7d573fff9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cbYLxEd0-knzM2gEjHd5R4bnqSs7nxzh_SbE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ea6ad53864cb7559453763c7d573fff9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6p0HmepLlI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.050 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:33.934Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.002 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf93615b7fef6209059f6 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:34.194Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf93615b7fef6209059f6 {
      sessionID: 'ea6ad53864cb7559453763c7d573fff9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aea6ad53864cb7559453763c7d573fff9.AXkkZHR%2F7I78ApC7KoYo2t%2BXan1ic59WVS0h497EggQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf93615b7fef6209059f6 [32m200[0m 99.777 ms - 317[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:34.299Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 37.094 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:37.656Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ce8b7cd211ca4e574804236ab8685f8b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PFmIrynU-d99J3yD-CRueXuZq2qzjAFEmnus

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ce8b7cd211ca4e574804236ab8685f8b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -5VkEjkwNO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.577 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:37.771Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.292 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf93915b7fef620905a22 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:38.005Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf93915b7fef620905a22 {
      sessionID: 'ce8b7cd211ca4e574804236ab8685f8b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ace8b7cd211ca4e574804236ab8685f8b.kI8w%2BPvabhvQPwvAQJsCDB178l4rnOs9lpgyAax6k40',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf93915b7fef620905a22 [32m200[0m 97.438 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:40.276Z"}
  console.log
    CSRF token generation: {
      sessionID: '7aa37b606203dbb90faa9c92cdf3c148',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: frtFgqas-ui6u2PovwipPlJ1BZWQunkHsIyE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7aa37b606203dbb90faa9c92cdf3c148

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tYLLRb8Jne...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.554 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:40.385Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.688 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf93c15b7fef620905a4d {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:40.885Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf93c15b7fef620905a4d {
      sessionID: '7aa37b606203dbb90faa9c92cdf3c148',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7aa37b606203dbb90faa9c92cdf3c148.ihCnZRBkUpYixaN9pQJ5%2FMdgbAkqQOu4sxIUNk50iVI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf93c15b7fef620905a4d [33m409[0m 90.763 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:43.098Z"}
  console.log
    CSRF token generation: {
      sessionID: '3deb8d4b27d9312d984b2661327a04b1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: OOm8ACGN-RYEVo32hzWRYiFvemxh9j08kFds

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3deb8d4b27d9312d984b2661327a04b1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ibsXbWDtwv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.163 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:43.192Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.987 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf93f15b7fef620905a72 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:43.686Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf93f15b7fef620905a72 {
      sessionID: '3deb8d4b27d9312d984b2661327a04b1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3deb8d4b27d9312d984b2661327a04b1.q9u%2BeHKStYfsU5Wxt4DLxk7zTiJs58yWZn0m4u55v%2Bw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf93f15b7fef620905a72 [33m400[0m 60.775 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:46.566Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ac8774c646debc12e17fefe4d852a6bd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1MvsKrM4--ONsN1ph-6OYDEfXRhk8IiKgttM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ac8774c646debc12e17fefe4d852a6bd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: F0vuWUizBq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.040 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:46.668Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.488 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:47.011Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fd8c390376b075f7a3cf8f5a82097e30',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LkJUE4lq-hp1_jJPQST2oRnA1uchBVg6rtzQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fd8c390376b075f7a3cf8f5a82097e30

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _h37Ip4dYw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.847 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:47.026Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 436.676 ms - 650[0m
[34mdebug[39m: PATCH /api/v1/administrators/686bf94215b7fef620905aa2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:47.470Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf94215b7fef620905aa2 {
      sessionID: 'fd8c390376b075f7a3cf8f5a82097e30',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afd8c390376b075f7a3cf8f5a82097e30.Nmzd8avyxCtN68zgq5gmkeOhHQ%2BpjRmtCrZWiPo963A',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686bf94215b7fef620905aa2 [33m403[0m 57.013 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:50.398Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aeba861bf19d461c50cbfbff04066610',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rm6qPzVP-MOgj0BFKAzWVeGDW7iMlOx5CxL8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aeba861bf19d461c50cbfbff04066610

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7ZlvH--FC-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.530 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:50.500Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 408.256 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686bf94615b7fef620905ad2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:51.021Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf94615b7fef620905ad2 {
      sessionID: 'aeba861bf19d461c50cbfbff04066610',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aaeba861bf19d461c50cbfbff04066610.osi%2FFoxWtWV9qdZ6z1ZLsyhpa%2BbTHA8YwJSLcF0ylqA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686bf94615b7fef620905ad2 [32m200[0m 372.855 ms - 63[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:54.986Z"}
  console.log
    CSRF token generation: {
      sessionID: '2f85f4c922693f496924d65f157e61a8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3Dd4Pp9o-mSeUXTPK5qGEWc29U_yOCOITfRA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2f85f4c922693f496924d65f157e61a8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XL0ydZIvID...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.243 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:55.139Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 391.885 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686bf94b15b7fef620905af9 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:55.630Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf94b15b7fef620905af9 {
      sessionID: '2f85f4c922693f496924d65f157e61a8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2f85f4c922693f496924d65f157e61a8.3YeFASNWkeD3OKIGCqa8Idn7X%2B7X13gTfHisgO7dF3U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686bf94b15b7fef620905af9 [33m400[0m 319.529 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:58.561Z"}
  console.log
    CSRF token generation: {
      sessionID: 'df399e7bd6c34514a95e297fec329597',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: b4du88kF-v0tGyI_-RstGy2FwF3uG4UzTm8M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: df399e7bd6c34514a95e297fec329597

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AkjL-tnotX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.515 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:58.667Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.378 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686bf94e15b7fef620905b23 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:43:59.207Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf94e15b7fef620905b23 {
      sessionID: 'df399e7bd6c34514a95e297fec329597',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adf399e7bd6c34514a95e297fec329597.nmaErd5yRkzfk7CwyOGiV%2Bk%2FK2E1SQHA9UqkApDAJd0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686bf94e15b7fef620905b23 [33m400[0m 297.494 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:01.418Z"}
  console.log
    CSRF token generation: {
      sessionID: '3a28e6c0d365e66f70b577de348fd589',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6L1sOvhK-aT2sglJhgIZt2LvNWT22SR57luU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3a28e6c0d365e66f70b577de348fd589

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: x-lN4lY1vb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.782 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:01.515Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 427.535 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:02.131Z"}
  console.log
    CSRF token generation: {
      sessionID: '97c6561cb6cd18c22e636fbd9f41abd1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kfThXV7S-qdbexVikZobKQhJTaxrbpTy1dk4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 97c6561cb6cd18c22e636fbd9f41abd1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 44PfEsex0B...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.155 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:02.140Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 220.077 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/administrators/686bf95215b7fef620905b54 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:02.363Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf95215b7fef620905b54 {
      sessionID: '97c6561cb6cd18c22e636fbd9f41abd1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A97c6561cb6cd18c22e636fbd9f41abd1.dMOUnCM3SuPJlMawcRkPWWeeVtpUySEJEjFqmyQGnWI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686bf95215b7fef620905b54 [33m403[0m 56.165 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:04.786Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd173abf066c18ade798e060b69e1f60d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AbNqWU18-0U3EPAhb8jh0uZ-ruRW-Dj5R6eE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d173abf066c18ade798e060b69e1f60d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: G_8XxTPqr7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.045 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:04.899Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 417.063 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686bf95515b7fef620905b86 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:05.408Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf95515b7fef620905b86 {
      sessionID: 'd173abf066c18ade798e060b69e1f60d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad173abf066c18ade798e060b69e1f60d.VGFKzUnO6HCkmT2v6FxJCpooPFgS12ESbU0qpR4WvoQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686bf95515b7fef620905b86 [33m404[0m 136.850 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:07.616Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fb5227c4a03521e065b2438f64bbb5af',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: I5KUlpTg-_l9m6TcH1M2ro3v_Bfa0SdXQ17Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fb5227c4a03521e065b2438f64bbb5af

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pfKCLQpepF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.420 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:07.713Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.501 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686bf95715b7fef620905bb1/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:07.960Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf95715b7fef620905bb1/reset-password {
      sessionID: 'fb5227c4a03521e065b2438f64bbb5af',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afb5227c4a03521e065b2438f64bbb5af.%2FS0%2BEoRW%2Fmu%2F3tBPqw9enHSEADyQRb4KKfT2UtWCBy8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686bf95715b7fef620905bb1/reset-password [32m200[0m 177.321 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:08.141Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e78eedbfd5f71c1f9903b505f26df999',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: d659fKIU-yz0nrjhfTXAtvSu5SHD1vUw5tK0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e78eedbfd5f71c1f9903b505f26df999

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: v8RXAGjglf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.113 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:08.149Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 412.222 ms - 644[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:08.565Z"}
  console.log
    CSRF token generation: {
      sessionID: '6efbc4d9e8a580c96598727fd42ff326',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Oe6CNGap-WAjqiARsnzmH5YnZ189QMzujeXE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6efbc4d9e8a580c96598727fd42ff326

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rd_Uni0sSA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.893 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:08.577Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 133.433 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:10.602Z"}
  console.log
    CSRF token generation: {
      sessionID: '75e114c6e1d3af7be405f23b15ddef7f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: f7XOCNtf-f6KtT3IQdDh1MPZQCdJwtXiO-vU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 75e114c6e1d3af7be405f23b15ddef7f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WguYZPWbwk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.958 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:11.237Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 173.801 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686bf95b15b7fef620905be3/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:12.046Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf95b15b7fef620905be3/reset-password {
      sessionID: '75e114c6e1d3af7be405f23b15ddef7f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A75e114c6e1d3af7be405f23b15ddef7f.EYc365BZgh4rYGc6MAbqvyxFrDlS6rS1jRhIILjByt8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686bf95b15b7fef620905be3/reset-password [32m200[0m 1004.968 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:14.973Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bff32185df0c2fb0c4b72ef66af124d1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KPauJpnA-lWeXo53bjV_04A5CaG6da5PncHw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bff32185df0c2fb0c4b72ef66af124d1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kFmlUvAKJb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.743 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:15.118Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 183.379 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686bf95f15b7fef620905c11/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:15.406Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf95f15b7fef620905c11/reset-password {
      sessionID: 'bff32185df0c2fb0c4b72ef66af124d1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Abff32185df0c2fb0c4b72ef66af124d1.519ZU0VfuZSfQcmeGUb1L6NnZpiAxLz1iaU4vzhBk7k',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686bf95f15b7fef620905c11/reset-password [33m400[0m 61.112 ms - 313[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:17.368Z"}
  console.log
    CSRF token generation: {
      sessionID: '1f0e9c7fdde905b2e3f23d6b3041d52e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 63WdZMe8-smkfx_tKGzYz1qx8N1C7Eh6x-Q8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1f0e9c7fdde905b2e3f23d6b3041d52e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OUJ-0EI2M8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.378 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:17.480Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 402.233 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:18.068Z"}
  console.log
    CSRF token generation: {
      sessionID: '1c9e9f40cf8666d71400e774408e5cce',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fWbIJif7-y30HYyYBhKDtnwTQ2GpYu4ah8wI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1c9e9f40cf8666d71400e774408e5cce

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CiAeRiXBfh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 20.484 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:18.091Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 443.891 ms - 650[0m
[34mdebug[39m: POST /api/v1/administrators/686bf96115b7fef620905c3b/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:18.538Z"}
  console.log
    CSRF check for: /api/v1/administrators/686bf96115b7fef620905c3b/reset-password {
      sessionID: '1c9e9f40cf8666d71400e774408e5cce',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1c9e9f40cf8666d71400e774408e5cce.VpfGonqCZIsjZ%2FI4YFH3DgtvSdhtOdglRZ6r5xkSAg8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686bf96115b7fef620905c3b/reset-password [33m403[0m 69.466 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:21.448Z"}
  console.log
    CSRF token generation: {
      sessionID: '5145f8ce8cd101a4cdcf8cb5481cbbd0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HoJ9s9pf-ZFKkh08Wieu75e62XRcTka7aqMw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5145f8ce8cd101a4cdcf8cb5481cbbd0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: x8eWgqkLj6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 16.848 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:21.578Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 395.857 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:21.977Z"}
[0mGET /api/v1/administrators/permissions [32m200[0m 287.191 ms - 361[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:24.637Z"}
  console.log
    CSRF token generation: {
      sessionID: '337bd68031d248dfa97a04447abdc514',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HfB1mRAv-jj7wiF0WSeaBTi5GSs8sOblOBlA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 337bd68031d248dfa97a04447abdc514

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: b56f6KUAr6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.129 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:24.739Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 425.307 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:25.171Z"}
[0mGET /api/v1/administrators/permissions [33m401[0m 1.386 ms - 47[0m
PASS tests/integration/administrator.test.js (109.186 s)
  Administrator Integration Tests
    GET /api/v1/administrators
      ✓ should get all administrators with admin token (2463 ms)
      ✓ should filter by active status (1429 ms)
      ✓ should support pagination (3578 ms)
      ✓ should require admin authentication (2662 ms)
      ✓ should require administrator permissions (3969 ms)
    GET /api/v1/administrators/:id
      ✓ should get administrator by ID (2575 ms)
      ✓ should return 404 for non-existent administrator (3063 ms)
      ✓ should handle invalid ObjectId (3978 ms)
    POST /api/v1/administrators
      ✓ should create new administrator (3137 ms)
      ✓ should validate required fields (3212 ms)
      ✓ should validate email format (2719 ms)
      ✓ should validate password strength (3023 ms)
      ✓ should prevent duplicate emails (2507 ms)
      ✓ should require administrators.create permission (3496 ms)
    PATCH /api/v1/administrators/:id
      ✓ should update administrator details (3932 ms)
      ✓ should update email (4241 ms)
      ✓ should update password (3932 ms)
      ✓ should deactivate administrator (3829 ms)
      ✓ should not allow updating adminId (2599 ms)
      ✓ should validate email uniqueness on update (2837 ms)
      ✓ should prevent self-deactivation (3232 ms)
      ✓ should require administrators.update permission (4045 ms)
    DELETE /api/v1/administrators/:id
      ✓ should delete administrator (4606 ms)
      ✓ should prevent self-deletion (3568 ms)
      ✓ should prevent deleting last administrator with all permissions (3091 ms)
      ✓ should require administrators.delete permission (3377 ms)
      ✓ should handle non-existent administrator (2596 ms)
    POST /api/v1/administrators/:id/reset-password
      ✓ should reset administrator password (3208 ms)
      ✓ should clear login attempts on password reset (4370 ms)
      ✓ should validate password strength (2403 ms)
      ✓ should require administrators.update permission (4081 ms)
    GET /api/v1/administrators/permissions
      ✓ should get available permissions list (2951 ms)
      ✓ should require authentication (2666 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:28.938Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.254Z"}
  console.log
    CSRF token generation: {
      sessionID: '559da5e0869ab0d457b664e9f8430299',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3V9QasNc-S8K5TvnQaUqf2DGTLDMQkNcY7jk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 559da5e0869ab0d457b664e9f8430299

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IMWixyl3nW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 23.721 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.310Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 17.611 ms - 148[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.366Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 3.882 ms - 241[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: weak, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.406Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 5.010 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.422Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 11.438 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.440Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.328 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.449Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 7.262 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: 12345678, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.473Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 7.028 ms - 191[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.487Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 6.384 ms - 284[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: Password1, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.498Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 6.350 ms - 163[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.514Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 10.049 ms - 256[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.538Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 4.006 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.546Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 8.769 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: ALLUPPERCASE123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.570Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.647 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.582Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.811 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: alllowercase123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.596Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.762 ms - 152[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.606Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.872 ms - 245[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoNumbers!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.638Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 9.924 ms - 199[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:30.659Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 4.918 ms - 292[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoSpecialChars123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:31.752Z"}
  console.log
    CSRF token generation: {
      sessionID: '008580a418ec67c0e80c5645d713c36d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: deZBSvIV-QaNWPXclwNPk1js8wHH73hrk2MI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 008580a418ec67c0e80c5645d713c36d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: euhEnsgdQ8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.277 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:31.766Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-82e5c56e-cdb9-4ed3-b92b-0c369a123ee0</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-82e5c56e-cdb9-4ed3-b92b-0c369a123ee0">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-82e5c56e-cdb9-4ed3-b92b-0c369a123ee0</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-82e5c56e-cdb9-4ed3-b92b-0c369a123ee0">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-82e5c56e-cdb9-4ed3-b92b-0c369a123ee0</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 145.289 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:31.914Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-a534a872-db90-4992-ba98-f396f15c03de</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a534a872-db90-4992-ba98-f396f15c03de">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-a534a872-db90-4992-ba98-f396f15c03de</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a534a872-db90-4992-ba98-f396f15c03de">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-a534a872-db90-4992-ba98-f396f15c03de</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 122.967 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:32.040Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-f7d2b5c6-746b-4b1e-b4dd-c0f271cadc8c</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-f7d2b5c6-746b-4b1e-b4dd-c0f271cadc8c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-f7d2b5c6-746b-4b1e-b4dd-c0f271cadc8c</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-f7d2b5c6-746b-4b1e-b4dd-c0f271cadc8c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-f7d2b5c6-746b-4b1e-b4dd-c0f271cadc8c</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 124.881 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:32.168Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test3@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-cd397d60-b501-4b45-862e-5d4e625fe07e</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-cd397d60-b501-4b45-862e-5d4e625fe07e">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-cd397d60-b501-4b45-862e-5d4e625fe07e</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-cd397d60-b501-4b45-862e-5d4e625fe07e">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-cd397d60-b501-4b45-862e-5d4e625fe07e</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 134.202 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:32.305Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test4@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-07cbf04e-4cb0-4759-b133-3ad60ca3050c</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-07cbf04e-4cb0-4759-b133-3ad60ca3050c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-07cbf04e-4cb0-4759-b133-3ad60ca3050c</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-07cbf04e-4cb0-4759-b133-3ad60ca3050c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-07cbf04e-4cb0-4759-b133-3ad60ca3050c</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 122.354 ms - 120[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:32.896Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:33.329Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a15dfa2f6a30f7c75c5246167ebd5cca',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: btyA5L0t-IlVZyMGP0SZrrFETIlX4HkK1ek0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a15dfa2f6a30f7c75c5246167ebd5cca

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xv1n2FwICf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.342 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:33.342Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 4.490 ms - 166[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:34.225Z"}
  console.log
    CSRF token generation: {
      sessionID: '1ea98c98d8db3e175736a2b8caa0c6e9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UHYDqrhm-2iQNRE88dAy1-iVpoXyAEgbSlvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1ea98c98d8db3e175736a2b8caa0c6e9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: qqWP4g6P2l...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.064 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:34.236Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.505 ms - 167[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:34.764Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.115Z"}
  console.log
    CSRF token generation: {
      sessionID: '289fa84f42d4cb60588d5c4c019ac116',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TUxrYlmP-eirF3c4nRZixWkND8prBKC7ah9E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 289fa84f42d4cb60588d5c4c019ac116

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: I7tw21kg-Z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.389 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.130Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.472 ms - 180[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.141Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.621 ms - 181[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.146Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.394 ms - 182[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.149Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.313 ms - 182[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:35.998Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b2fac4e6ef8c94de6958ec04f38905c7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wyHLhuqH--LDSo-LsgjdyYGvbDsFs1zUg13U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b2fac4e6ef8c94de6958ec04f38905c7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cAZe0gLRFF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.512 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:36.166Z"}
[0mPOST /api/v1/customers/register [33m400[0m 1.418 ms - 151[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:37.034Z"}
  console.log
    CSRF token generation: {
      sessionID: '1e0745ae1eb4aede987b296a2b48410a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9YxuFkYi-DmFx2hsqQ2DLC1zk6WdpB8hkU2o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1e0745ae1eb4aede987b296a2b48410a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YcMymY_ufJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.292 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:37.187Z"}
  console.log
    Creating new customer with email: customer2@example.com username: customertest2

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-6743fb6e-ca16-46a2-95b6-707e4958e92b

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: customer2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Customer,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-6743fb6e-ca16-46a2-95b6-707e4958e92b</p>
            <p><strong>Your Service Provider:</strong> Test Affiliate</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> Test Affiliate<br>
            <strong>Phone:</strong> +1234567890<br>
            <strong>Email:</strong> testaffiliate2@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: customer2@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: testaffiliate2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-6743fb6e-ca16-46a2-95b6-707e4958e92b</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Customer Test</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>customer2@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>+1234567890</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>456 Customer St, Customer City, CC 54321</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-6743fb6e-ca16-46a2-95b6-707e4958e92b" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 183.800 ms - 345[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:37.685Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:38.253Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a035af0cc830db0b67533d9fb29375f3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: p8NiNfb9-97_BI0xTeXiIely8rwfsULPRpdg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a035af0cc830db0b67533d9fb29375f3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vEw0x0ZWHb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.728 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:38.357Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:38.531Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:38.532Z","userId":"686bf976b31e4f527b01b935","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 175.396 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:38.536Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'a035af0cc830db0b67533d9fb29375f3',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa035af0cc830db0b67533d9fb29375f3.qv28rs4zjn%2FFkPhboh85GhEEBnIFOTQkLD8ekTPQv8Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 60.435 ms - 207[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:39.429Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:39.476Z"}
  console.log
    CSRF token generation: {
      sessionID: '01711fd77d2a12f99b8e601e734a55e9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Pn4EYe6S-NfPWISw93XK1Vb6Mt0IBCU04ubM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 01711fd77d2a12f99b8e601e734a55e9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8_ZuK1dUIS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.798 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:39.586Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:39.763Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:39.764Z","userId":"686bf977b31e4f527b01b95d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 178.022 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:39.769Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '01711fd77d2a12f99b8e601e734a55e9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A01711fd77d2a12f99b8e601e734a55e9.gvo54NL5efnS9Y1KkT%2FkUXzxg7flusgbSbsYyxC1SJM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"CREATE_ADMINISTRATOR","details":{"adminId":"ADM002","email":"newuser@example.com"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686bf977b31e4f527b01b967","targetType":"administrator","timestamp":"2025-07-07T16:44:39.980Z","userId":"686bf977b31e4f527b01b95d","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/administrators [32m201[0m 213.617 ms - 341[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:40.854Z"}
  console.log
    CSRF token generation: {
      sessionID: '54656d3af8895f5d9434d2f9e9f57081',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mbl8SkpV-ja4VkxtI4T8aCB8zR5MOZDO0fIA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 54656d3af8895f5d9434d2f9e9f57081

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Y5oT3pBFqy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.540 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:40.965Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:41.117Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:41.117Z","userId":"686bf978b31e4f527b01b989","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.224 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:41.121Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '54656d3af8895f5d9434d2f9e9f57081',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A54656d3af8895f5d9434d2f9e9f57081.q74zyagZRMkRpDteIl1VMT7tOzks33ZfkmV0Bh6ISag',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 57.099 ms - 207[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:41.871Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:42.043Z"}
  console.log
    CSRF token generation: {
      sessionID: '47c679dc4f66441df3e9286fe3292d73',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RKz3meXN-mrWF_4-W4HHsr4ftzQbQYubDAio

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 47c679dc4f66441df3e9286fe3292d73

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AeLBv6lv8G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.138 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:42.144Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:42.298Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:42.298Z","userId":"686bf97ab31e4f527b01b9b1","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.356 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:42.301Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '47c679dc4f66441df3e9286fe3292d73',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A47c679dc4f66441df3e9286fe3292d73.XJWkliDXJ8mBAG1xZKFTV7SLd7uqIg43GHWaparV6Xk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newoperator@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, Worker!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTC07IP3F1711</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">SecureM@ster7!9K</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newoperator@example.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">Not specified</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newoperator@example.com","operatorId":"OPRMCTC07IP3F1711"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686bf97ab31e4f527b01b9ba","targetType":"operator","timestamp":"2025-07-07T16:44:42.479Z","userId":"686bf97ab31e4f527b01b9b1","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 178.816 ms - 416[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:43.369Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c762fa83363ca2d0396f8ce05995d81b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eZDUIvC3-kJFlauH1ruWkQPZCphKYeSC5Tnk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c762fa83363ca2d0396f8ce05995d81b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mXglcDLkaO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.447 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:43.503Z"}
[0mPOST /api/v1/auth/reset-password [33m400[0m 1.643 ms - 104[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T16:44:43.783Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:44.373Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b031c0801a3a57eaadfe3db534d48aaf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5MEvlFpw-M5sugsqMYkDwJ4UuhnaCv4XpNuA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b031c0801a3a57eaadfe3db534d48aaf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lR2kHem9oD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.049 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:44.506Z"}
[0mPOST /api/v1/auth/reset-password [32m200[0m 129.451 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:45.518Z"}
  console.log
    CSRF token generation: {
      sessionID: '2287b5e526cd500e958db9bd1ef7a325',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v7aqIN09-jPZT2BTECisIyv-iKE1fRmX_A30

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2287b5e526cd500e958db9bd1ef7a325

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vB1usiCmym...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.371 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:45.625Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:45.782Z","userType":"affiliate","username":"logintest"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.790 ms - 630[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:46.698Z"}
  console.log
    CSRF token generation: {
      sessionID: '62ccb0be9830ec56365997d905f3daed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XscjPsyr-ZkCHFy7D8xNX1PEIXUpmAsmGlI8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 62ccb0be9830ec56365997d905f3daed

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GnKyPmP2ib...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.999 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:46.709Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.731 ms - 164[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:47.547Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a2e07a44bd289eab3c368ee5df431f12',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fDispU9M-zOD_Ge4T4DmqL9EqHUIQH8U0HZI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a2e07a44bd289eab3c368ee5df431f12

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _yxe0SI188...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.659 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:47.557Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.799 ms - 185[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:48.427Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c935abcc2277590496f3a276f5baac6a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wIcNQt3A-mA1wmZu571GXA2X8Wjq_SKnV10k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c935abcc2277590496f3a276f5baac6a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bpnd7VkPFp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.321 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:48.439Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: mixed@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Mixed,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-6be3b6fa-1388-4a4a-a537-e4ea66782ad4</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-6be3b6fa-1388-4a4a-a537-e4ea66782ad4">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-6be3b6fa-1388-4a4a-a537-e4ea66782ad4</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-6be3b6fa-1388-4a4a-a537-e4ea66782ad4">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-6be3b6fa-1388-4a4a-a537-e4ea66782ad4</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 116.088 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:49.437Z"}
  console.log
    CSRF token generation: {
      sessionID: '15ef1cd58d6005cbf01ef9b70934b8ec',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: qotbi2cr-ltjVr-lV-MQeEjAlTKOApy10PJI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 15ef1cd58d6005cbf01ef9b70934b8ec

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eVpV5QEJuM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.171 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:49.447Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: unicode@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Unicode,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-060b9e8b-6254-483d-a4c9-76cc3b2ff82a</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-060b9e8b-6254-483d-a4c9-76cc3b2ff82a">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-060b9e8b-6254-483d-a4c9-76cc3b2ff82a</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-060b9e8b-6254-483d-a4c9-76cc3b2ff82a">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-060b9e8b-6254-483d-a4c9-76cc3b2ff82a</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 121.629 ms - 120[0m
PASS tests/integration/passwordValidation.test.js (22.674 s)
  Password Validation Integration Tests
    Affiliate Registration Password Validation
      ✓ should reject weak passwords during affiliate registration (2347 ms)
      ✓ should accept strong passwords during affiliate registration (1585 ms)
      ✓ should reject passwords containing username (898 ms)
      ✓ should reject passwords containing email (869 ms)
      ✓ should reject passwords with sequential characters (889 ms)
    Customer Registration Password Validation
      ✓ should enforce strong passwords for customer registration (1053 ms)
      ✓ should accept strong passwords for customer registration (1216 ms)
    Administrator Password Validation
      ✓ should enforce strong passwords for administrator creation (1222 ms)
      ✓ should accept strong passwords for administrator creation (1373 ms)
    Operator Password Validation
      ✓ should enforce strong passwords for operator creation (1190 ms)
      ✓ should accept strong passwords for operator creation (1328 ms)
    Password Reset Validation
      ✓ should enforce strong passwords during password reset (1006 ms)
      ✓ should accept strong passwords during password reset (1145 ms)
    Login with Updated Passwords
      ✓ should successfully login with strong password (1169 ms)
      ✓ should handle case-insensitive username/email validation during registration (859 ms)
    Password Strength Edge Cases
      ✓ should reject passwords with only special characters at the end (880 ms)
      ✓ should accept passwords with mixed character distribution (1000 ms)
      ✓ should handle Unicode characters in passwords appropriately (997 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:51.713Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:53.385Z"}
  console.log
    CSRF token generation: {
      sessionID: '1ae81b9afb6808e044b1eb44b113961e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uwTfpGtS-oB0DL75P2ZbkzDMHmwr_sep9y-M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1ae81b9afb6808e044b1eb44b113961e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: s55gpB8kf6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.539 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:53.523Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:53.840Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:53.841Z","userId":"686bf985164196a943380792","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 318.810 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:53.847Z"}
  console.log
    CSRF token generation: {
      sessionID: '0fec159355fa778563b2969538a1c0d7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: f7NLR9gD-KF5W0ZxmAnpvRFY-3U2BcC2-x2c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0fec159355fa778563b2969538a1c0d7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pEIp7gllqW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.527 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:53.964Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:54.134Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:44:54.140Z","userId":"686bf985164196a9433807a4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 176.112 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:54.143Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e161b09d6198a20cd95428f323568fd0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TJWDtvW9-zZe2H792AsDQhr3hwLehQJ-wKkw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e161b09d6198a20cd95428f323568fd0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TLTlkAh7Ry...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.615 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:54.309Z"}
[0mGET /api/v1/operators [32m200[0m 189.816 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:55.618Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f62899060badf5a8d7f0419b1617c1c8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gbab9bYi-Da8qU4OdFQQ2ngz9Qh_lDtXk54o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f62899060badf5a8d7f0419b1617c1c8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KDkuFCtRpy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.939 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:55.720Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:55.892Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:55.892Z","userId":"686bf987164196a9433807e0","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 173.273 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:55.896Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f560b8bd247da4adb1a99df5c8931075',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NJa6CMUN-mLHERmYMRd3qIvPgO4kJqHTC28Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f560b8bd247da4adb1a99df5c8931075

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KG0Mnh_qw_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.113 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:55.994Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:56.174Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:44:56.175Z","userId":"686bf987164196a9433807e6","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 181.035 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:56.180Z"}
  console.log
    CSRF token generation: {
      sessionID: '1b56736eb9f34118381800b55a37aa82',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: K9L8CqwN-Y9sB0NcN-YOEwX5HdqlV6t4EitI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1b56736eb9f34118381800b55a37aa82

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: t_g20_hYy7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.276 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:56.287Z"}
[0mGET /api/v1/operators?active=true [32m200[0m 142.943 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:57.368Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ab235bace1d2c1852b2f9bea9804f486',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NzN0ptW8-lflml3oT-0lDQPp1KoCHOfif1p4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ab235bace1d2c1852b2f9bea9804f486

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GkemY2_bc6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.842 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:57.486Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:57.742Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:57.743Z","userId":"686bf989164196a943380812","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 257.532 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:57.748Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c41d6770e1535ec07b15f9b083f56edb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fCYNC2kh-VsnvE7oEYi1Rj3_7ejZhKfOKsFI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c41d6770e1535ec07b15f9b083f56edb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AuxwjHiS70...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.932 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:57.844Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:58.128Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:44:58.128Z","userId":"686bf989164196a943380818","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 284.018 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:58.133Z"}
  console.log
    CSRF token generation: {
      sessionID: '3c23d6c3223d159d33145a5ab045a1ff',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: j4jKsTN2-bk7cRwhJrlbpC2ejt2_tgiUqnmU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3c23d6c3223d159d33145a5ab045a1ff

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fYT5Qg74Af...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.738 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?onShift=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:58.235Z"}
[0mGET /api/v1/operators?onShift=true [32m200[0m 109.501 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:59.244Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c862726a0ad668b063d6ff3d73e8f116',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rUGQMb3a-e3m3TgQwwDDyeECZY-lG_v6EuZo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c862726a0ad668b063d6ff3d73e8f116

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: b9xlMWdUCE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.075 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:59.345Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:59.500Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:44:59.501Z","userId":"686bf98b164196a943380843","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.837 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:59.504Z"}
  console.log
    CSRF token generation: {
      sessionID: '662832a46295d0e683f034c9185df132',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1QMmyT5k-NwUjWP5OETymq-IQE2jj6toHc5k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 662832a46295d0e683f034c9185df132

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ooyYcQR92q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.530 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:59.646Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:44:59.813Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:44:59.813Z","userId":"686bf98b164196a943380849","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 167.547 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:44:59.817Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ec2f0875df5d110f8b70d99478a96b1c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ObQkT07D-LeMjaYcGTpYVVrZa3UJvjm11JXE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ec2f0875df5d110f8b70d99478a96b1c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3OgoRRPX8Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.446 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:01.184Z"}
[0mGET /api/v1/operators?page=2&limit=5 [32m200[0m 569.460 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:02.778Z"}
  console.log
    CSRF token generation: {
      sessionID: '150607e3dff1b9fae662d679d13fe2bd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EjaJtAKK-ignT6kHMws63LK08rxyxv3m5y9A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 150607e3dff1b9fae662d679d13fe2bd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jCcYcKAr8o...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.029 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:02.875Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:03.046Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:03.047Z","userId":"686bf98e164196a943380892","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.615 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:03.051Z"}
  console.log
    CSRF token generation: {
      sessionID: '4d8d0032f1eed09f995c9ad13f63d329',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kMkvxTyP-tHSt8sNLX3AzgElQE2vAnQSccV0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4d8d0032f1eed09f995c9ad13f63d329

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BNvQ2RnbDH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.197 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:03.160Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:03.311Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:03.311Z","userId":"686bf98f164196a943380898","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.051 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:03.315Z"}
  console.log
    CSRF token generation: {
      sessionID: '6596c124a6a61ca76481fed29ed7e73e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Etitta1j-KGdOw7kPimPTncR84yboEUd0Q1c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6596c124a6a61ca76481fed29ed7e73e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gi1JZJrIoK...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.080 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:03.328Z"}
[0mGET /api/v1/operators [33m401[0m 1.263 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:04.631Z"}
  console.log
    CSRF token generation: {
      sessionID: '1e13ea1538917fcb2660d73f57f128b8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KxmIG8lP-OE7_LyNpemzCtdRZ2UlYwggB6pk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1e13ea1538917fcb2660d73f57f128b8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: W-2w6k3WyL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.477 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:04.733Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:04.895Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:04.896Z","userId":"686bf990164196a9433808bd","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.831 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:04.899Z"}
  console.log
    CSRF token generation: {
      sessionID: '896ab3ad9ec2d78b6ca403f11cdad264',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bqO1TWRL-ckuYxLU3HQiuQRSe3DFoX8IrMEU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 896ab3ad9ec2d78b6ca403f11cdad264

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: A5TtsNbR1Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.784 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:05.011Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:05.172Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:05.172Z","userId":"686bf990164196a9433808c3","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 161.027 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:05.176Z"}
  console.log
    CSRF token generation: {
      sessionID: '9730a5ea20445f383d38f98c4e8df3df',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YdDzLOO3-wfmqc2PV7vwZ4qvSPIA77ys9LEs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9730a5ea20445f383d38f98c4e8df3df

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: p9dln95P6w...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.325 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:05.284Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:05.436Z","userType":"administrator","username":"limited@wavemax.com"}
info: undefined {"adminId":"LIMITED001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:05.437Z","userId":"686bf991164196a9433808c9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.622 ms - 649[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:05.439Z"}
[0mGET /api/v1/operators [33m403[0m 56.216 ms - 79[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:06.356Z"}
  console.log
    CSRF token generation: {
      sessionID: '035ed6e72bcde344893ef82fa4d04fdb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WyHjNfbK-Dbq-xtVgn3JFX24i2zsSOwCCia8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 035ed6e72bcde344893ef82fa4d04fdb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sLkXmPLp-Q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.992 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:06.493Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:06.654Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:06.655Z","userId":"686bf992164196a9433808f0","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.734 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:06.658Z"}
  console.log
    CSRF token generation: {
      sessionID: '57285f069c3c0a86c1d86f68c2338f14',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9q0BfI4D-P2Uosiqpmiv38PIw_f9EmnKitDA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 57285f069c3c0a86c1d86f68c2338f14

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: peo7CZ3Jcs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.636 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:06.761Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:06.921Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:06.921Z","userId":"686bf992164196a9433808f6","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.984 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:06.924Z"}
  console.log
    CSRF token generation: {
      sessionID: '0f8f7e8dfe966fb6a316e6191d87fd20',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: g1ZqHPhu-tRajmheJ9zHDBLeWUBAsm8f1eTA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0f8f7e8dfe966fb6a316e6191d87fd20

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3556cYe_JM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.909 ms - 67[0m
[34mdebug[39m: GET /api/v1/administrators/operators/686bf992164196a9433808fc {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:07.025Z"}
[0mGET /api/v1/administrators/operators/686bf992164196a9433808fc [32m200[0m 121.685 ms - 761[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.014Z"}
  console.log
    CSRF token generation: {
      sessionID: '6369eb2022fc7b9543f2af75a3e4afd3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3aw25ady--J1acfTnG7SHK8zoTbQLhgJbXOs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6369eb2022fc7b9543f2af75a3e4afd3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LM7h4FXTDx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.033 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.115Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:08.301Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:08.302Z","userId":"686bf994164196a943380921","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 187.017 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.304Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a110d042eefb6e654e480e65a08da7fc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: umis5snj-FChFzURymdN4hq6Rn0CFULeKzmU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a110d042eefb6e654e480e65a08da7fc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: P832sSDZOL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.528 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.404Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:08.564Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:08.565Z","userId":"686bf994164196a943380927","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.148 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.570Z"}
  console.log
    CSRF token generation: {
      sessionID: 'def12406aeb667c08de4cd0218cae228',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lWeJiBqj-XKgzoM-pJzZ94EskWLV2Yvvi8ys

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: def12406aeb667c08de4cd0218cae228

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BIGxkBVdlf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.155 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686bf994164196a943380927 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:08.588Z"}
[0mGET /api/v1/operators/686bf994164196a943380927 [32m200[0m 96.485 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:09.553Z"}
  console.log
    CSRF token generation: {
      sessionID: '2392b87b2d14404a31dc2233c461fef6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: E5oi9rLd-2DqfEok9wFPcvF6zmXyGKhD1d0E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2392b87b2d14404a31dc2233c461fef6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: To5kyyTGAR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.010 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:09.666Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:09.824Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:09.824Z","userId":"686bf995164196a94338094f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.487 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:09.828Z"}
  console.log
    CSRF token generation: {
      sessionID: '173c7d8c55eae763e8f74a6399be44a8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fB2HYRpV-q9UEZ5UXzJkM3uQgciOlZTpX8Q8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 173c7d8c55eae763e8f74a6399be44a8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5Acq2wEsej...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.364 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:09.941Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:10.095Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:10.095Z","userId":"686bf995164196a943380955","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.224 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:10.100Z"}
  console.log
    CSRF token generation: {
      sessionID: '559508b93d9dbe864806b9c75cb4e7d8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: la6CQAVc-Lh9IyvgquGJw-kiynlrHmT5f7TI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 559508b93d9dbe864806b9c75cb4e7d8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gE2crwlKqu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.631 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686bf996164196a94338095b {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:10.202Z"}
[0mGET /api/v1/operators/686bf996164196a94338095b [33m403[0m 54.670 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.123Z"}
  console.log
    CSRF token generation: {
      sessionID: 'db0e408fad3193a06997da0169ba1004',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dzyzcdrQ-udkJ9kEinZiA8xNAprYImAQoyjo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: db0e408fad3193a06997da0169ba1004

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: S4VCF9dU6w...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.580 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.231Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:11.391Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:11.394Z","userId":"686bf997164196a94338097e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 164.387 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.399Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aa01a9a52c7cbf1f4eddedacf7ce838d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iySSEoCG-nTVFpGiof6PYkLuarJQCR4c4COo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aa01a9a52c7cbf1f4eddedacf7ce838d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1yzgv1l2n3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.406 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.502Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:11.647Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:11.648Z","userId":"686bf997164196a943380984","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.313 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.651Z"}
  console.log
    CSRF token generation: {
      sessionID: '825b5c441cddec7f8c1b6c0b864fdeb6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LLbTK89j-wZc2LALeALz4_Z-cYY36G3IRnEI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 825b5c441cddec7f8c1b6c0b864fdeb6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YmYQfjCSyM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.256 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686bf997164196a94338098a {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:11.660Z"}
[0mGET /api/v1/operators/686bf997164196a94338098a [33m404[0m 108.114 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:12.680Z"}
  console.log
    CSRF token generation: {
      sessionID: '4f7059780c5b6fb50bf3697d201bf660',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O5MOssev-C8offXJZNXpKmMPpDEbqguuS3PQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4f7059780c5b6fb50bf3697d201bf660

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -XZBkmukBq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.349 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:12.785Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:12.949Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:12.949Z","userId":"686bf998164196a9433809ae","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 164.958 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:12.954Z"}
  console.log
    CSRF token generation: {
      sessionID: '3e43bdd4d583371879a6201e0dfa403a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: J5ii5Vlv-mjLJ0nmpbM20hBCQ8CFOOD_RhhE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3e43bdd4d583371879a6201e0dfa403a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Xpvw7r0Enl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.135 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:13.066Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:13.223Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:13.224Z","userId":"686bf998164196a9433809b4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.555 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:13.227Z"}
  console.log
    CSRF token generation: {
      sessionID: '0fac76a88e751d2753a6f25a114ef8bb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BHuTI7Cr-J0RbiJ2l0hDE_hqvuHZbHb18Zss

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0fac76a88e751d2753a6f25a114ef8bb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: akFABpuTD9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.509 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:13.236Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '3e43bdd4d583371879a6201e0dfa403a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3e43bdd4d583371879a6201e0dfa403a.qVbHjp6tXCPrd3A8yFFZOc8IiWapfsLaGE%2F14pi64Kw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newop@wavemax.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, New!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTC0VEG616161</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">NewPassw0rd!</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newop@wavemax.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">00:00 - 23:59</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newop@wavemax.com","operatorId":"OPRMCTC0VEG616161"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686bf999164196a9433809bd","targetType":"operator","timestamp":"2025-07-07T16:45:13.480Z","userId":"686bf998164196a9433809ae","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 244.098 ms - 449[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:13.483Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:13.652Z","userType":"operator","username":"newop@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPRMCTC0VEG616161","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:13.652Z","userId":"686bf999164196a9433809bd","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 169.939 ms - 621[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:14.517Z"}
  console.log
    CSRF token generation: {
      sessionID: '3bfd58fa60ed67080e160b9cd1f6dbeb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 52UT2QIW-whkcSIojU9bvsDfEk6JTBZK0y_8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3bfd58fa60ed67080e160b9cd1f6dbeb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Q9_lAsY53G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.803 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:14.621Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:14.790Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:14.791Z","userId":"686bf99a164196a9433809e2","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.511 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:14.795Z"}
  console.log
    CSRF token generation: {
      sessionID: '7e0326ace607b648b10bdd1b6dee6b82',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HjTcUg3O-rMky3u_8QnPdhrNAww8XCB9rNFw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7e0326ace607b648b10bdd1b6dee6b82

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2EOJoPIdrU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.812 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:14.890Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:15.052Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:15.053Z","userId":"686bf99a164196a9433809e8","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.376 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:15.056Z"}
  console.log
    CSRF token generation: {
      sessionID: '6dd9278071c81ecfb96de42f34ee19d1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xtdGrfWe-YVmF83uut3DbwaWS4xEt65BogSk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6dd9278071c81ecfb96de42f34ee19d1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DabQ1Ee-34...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.291 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:15.064Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '7e0326ace607b648b10bdd1b6dee6b82',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7e0326ace607b648b10bdd1b6dee6b82.UrFIoEVdxKrcWF8ByQ9agHlbNLLtXbSmkT52bIZKbSc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 58.914 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:15.977Z"}
  console.log
    CSRF token generation: {
      sessionID: '0561dcb2cc82ac40864a03761ed105ed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gEJOnw3H-KRTyygoCvsIzTmZgm_h7vVhvROs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0561dcb2cc82ac40864a03761ed105ed

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mqAoqifw4K...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.385 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:16.073Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:16.230Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:16.231Z","userId":"686bf99c164196a943380a0f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.558 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:16.234Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b6d1edf80fd7e73eee750f0e9c3e6758',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kivqiudZ-eVM9fTYaw_nlP5tddZVR1Kr-1Dk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b6d1edf80fd7e73eee750f0e9c3e6758

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1I4ldcBedx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.581 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:16.371Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:16.521Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:16.522Z","userId":"686bf99c164196a943380a15","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.071 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:16.525Z"}
  console.log
    CSRF token generation: {
      sessionID: '558d1b30c0fb62d36e03dbb6f080abd0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: x4E318Ce-RGLoUIsF7XdU7bJvgPjuDx4nisk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 558d1b30c0fb62d36e03dbb6f080abd0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ToZllUH_s0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.664 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:16.535Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'b6d1edf80fd7e73eee750f0e9c3e6758',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ab6d1edf80fd7e73eee750f0e9c3e6758.VfXs8oLMEYL%2BXBb4%2Fhdjxl%2F85hh83ZVO7odUZsxRdIE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 59.373 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:17.485Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ef622f7780a4d7f882a9352feda46823',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: skzVIdxx-meYpNCR6gynuNMji1XpxoTPSpoA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ef622f7780a4d7f882a9352feda46823

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5vaZV3rEiH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.149 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:17.592Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:17.745Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:17.746Z","userId":"686bf99d164196a943380a3c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.773 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:17.750Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c131b28af97785658e5a414431492923',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gN3rI8fw-FruKhdmV0GE0d7BSinnqQQG_K7U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c131b28af97785658e5a414431492923

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZovYI6Z_nt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.041 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:17.855Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:18.023Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:18.023Z","userId":"686bf99d164196a943380a42","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 168.069 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:18.027Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eccb709162b7ae0474634f433a0f7b9d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DMGz8KFG-l1b6xGDa66YFBCdBIA3OkbkC5tc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: eccb709162b7ae0474634f433a0f7b9d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TWq6ZAHnYZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.500 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:18.035Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'c131b28af97785658e5a414431492923',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac131b28af97785658e5a414431492923.Z1RYoN93I%2BR8FDbRyQdfw946Ium67lrEXnp2UuAUkIw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 60.776 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:18.964Z"}
  console.log
    CSRF token generation: {
      sessionID: '75f43f1a8cbee50668e1145e347babfa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZrHmlw95-L3T5q3oFf28abJwBYwtt3H11RPE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 75f43f1a8cbee50668e1145e347babfa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RAKWksQqtc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.582 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:19.065Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:19.226Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:19.226Z","userId":"686bf99f164196a943380a69","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.551 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:19.230Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e902bf072761e020af7dff2a21e6495f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RwJpkwgW-cWbyLJsD5xuKP0dtFGU0hWHA37I

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e902bf072761e020af7dff2a21e6495f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Bjl4jFC_HQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.319 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:19.337Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:19.520Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:19.520Z","userId":"686bf99f164196a943380a6f","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 183.010 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:19.523Z"}
  console.log
    CSRF token generation: {
      sessionID: '3a180601c6457e3e27c8686ab399d086',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ezS3KG5U-Sgd4QOj4Gus4GiJHmXujZnqsNig

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3a180601c6457e3e27c8686ab399d086

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AxRLD0TDIB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.017 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:19.534Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'e902bf072761e020af7dff2a21e6495f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae902bf072761e020af7dff2a21e6495f.nla%2Bd9FwXYigqeBE8Tc%2F6nFPuWIWEv%2Fm%2BCElYEUo%2Fp0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m409[0m 86.277 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:20.501Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a4437be6cd702ce7b4cd75157832189f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 26H4bG0m---7Ovj8Hd16go8gXnf8XtlPA9wc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a4437be6cd702ce7b4cd75157832189f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iX6A3GlD1Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.414 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:20.616Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:20.775Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:20.775Z","userId":"686bf9a0164196a943380a97","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.865 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:20.778Z"}
  console.log
    CSRF token generation: {
      sessionID: '88701074da56f812e0c9455f071c449c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: STxaB81Z-DoKjyjw-mmfZAr8tr773Pf2Vc6k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 88701074da56f812e0c9455f071c449c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sT-4yKTxHJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.500 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:20.885Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:21.044Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:21.045Z","userId":"686bf9a0164196a943380a9d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.936 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:21.048Z"}
  console.log
    CSRF token generation: {
      sessionID: '95e1f1e9efce8c6ca85734fe130c9f02',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XzfsU1IF-Gt5p_yfCriuYlfoW8LTPL4LPIY4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 95e1f1e9efce8c6ca85734fe130c9f02

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2EKECVvwzM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.126 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:21.150Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:21.312Z","userType":"administrator","username":"limited2@wavemax.com"}
info: undefined {"adminId":"LIMITED002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:21.312Z","userId":"686bf9a1164196a943380aa3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.516 ms - 655[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:21.317Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'a4437be6cd702ce7b4cd75157832189f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa4437be6cd702ce7b4cd75157832189f.iQM1llJ1m2lElRscy0UI9nv5E%2FavZPlCEEsUSwQ58iE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m403[0m 57.254 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.243Z"}
  console.log
    CSRF token generation: {
      sessionID: '7a9b90c0d0d1798542af47f9cfbb9728',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WJjV2Cbw-oSFzK_S6rciZukt85jhOtsDM2JE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7a9b90c0d0d1798542af47f9cfbb9728

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Y1sgXJsIok...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.013 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.353Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:22.518Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:22.519Z","userId":"686bf9a2164196a943380aca","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.837 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.522Z"}
  console.log
    CSRF token generation: {
      sessionID: '5b8546b771436dd197ad264429ecb396',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0H2MAUcy-9fUupkoY5v0Ldg6wV0lvhwpbdFo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5b8546b771436dd197ad264429ecb396

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Xmh-PIFKY2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.315 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.633Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:22.792Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:22.792Z","userId":"686bf9a2164196a943380ad0","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.605 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.797Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c71cca2e4a65d6f57f7f4ac2ec32a991',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZBsnY6qW-zVQgQt8E9CQLxWSOyaOe3R7UBRs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c71cca2e4a65d6f57f7f4ac2ec32a991

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Dlewp2tqgZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.658 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9a2164196a943380ad6 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:22.894Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9a2164196a943380ad6 {
      sessionID: '5b8546b771436dd197ad264429ecb396',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5b8546b771436dd197ad264429ecb396.SSr0917RxOQZLZs%2BRi61jFJKirb4I6EO3f5dFs5yRss',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"firstName":"Updated","lastName":"Name","shiftEnd":"18:00","shiftStart":"10:00"}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686bf9a2164196a943380ad6","targetId":"686bf9a2164196a943380ad6","targetType":"operator","timestamp":"2025-07-07T16:45:23.040Z","userId":"686bf9a2164196a943380aca","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686bf9a2164196a943380ad6 [32m200[0m 148.087 ms - 442[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:23.949Z"}
  console.log
    CSRF token generation: {
      sessionID: 'be737ba8dcf56c39f7db3caf8d5e5c03',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UsojMDAq-FHkuCf_N-V5gxDLJQVKY1gb3UjI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: be737ba8dcf56c39f7db3caf8d5e5c03

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: wAu1YR-p5u...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.248 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.062Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:24.218Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:24.218Z","userId":"686bf9a4164196a943380afc","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.719 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.221Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cf1362512c52366ff1a696492fb45ea6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DOFcd5mO-idC0zqkvSR8loq0K3E4aa_JOO9A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cf1362512c52366ff1a696492fb45ea6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3dUurjGtoM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.533 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.320Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:24.482Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:24.482Z","userId":"686bf9a4164196a943380b02","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 161.892 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.485Z"}
  console.log
    CSRF token generation: {
      sessionID: '00248e12e8f91d6ebbc4b57bf1677c2a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tA7OVnPp-IdYKlbmbFinX3aZSewoxfqe-aKg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 00248e12e8f91d6ebbc4b57bf1677c2a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QSLo3NiSy2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.061 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9a4164196a943380b08 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.582Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9a4164196a943380b08 {
      sessionID: 'cf1362512c52366ff1a696492fb45ea6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Acf1362512c52366ff1a696492fb45ea6.VAKpgyMIWLs%2FLOX6I666sqrIArnhYI%2BRPalSZY9cCrs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686bf9a4164196a943380b08","targetId":"686bf9a4164196a943380b08","targetType":"operator","timestamp":"2025-07-07T16:45:24.845Z","userId":"686bf9a4164196a943380afc","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686bf9a4164196a943380b08 [32m200[0m 263.025 ms - 445[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:24.849Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:25.007Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:25.008Z","userId":"686bf9a4164196a943380b08","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.222 ms - 606[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:25.862Z"}
  console.log
    CSRF token generation: {
      sessionID: '7a9d4be62a64ce9f5f2297ee5cbdcaf9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Tz1l4Y5x-ynyhtda-KYOiZPkC427vQRAwzn4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7a9d4be62a64ce9f5f2297ee5cbdcaf9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ktHIQjI8UP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.256 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:25.968Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:26.127Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:26.128Z","userId":"686bf9a5164196a943380b37","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.379 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:26.131Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a8e6bd93d0b2e49010e8baadc7b5fccf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: V6xNxyVW-pdfK9J40AKHOPLOu99FeyTv8tno

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a8e6bd93d0b2e49010e8baadc7b5fccf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: i4Y-W7uCJR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.227 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:26.224Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:26.387Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:26.387Z","userId":"686bf9a6164196a943380b3d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 163.267 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:26.390Z"}
  console.log
    CSRF token generation: {
      sessionID: '5d25b09f26ba629818f9bba74d11d840',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: j8xSD6QA-sPRcJ_hM8L7QBAH3GoWz3FnjK0k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5d25b09f26ba629818f9bba74d11d840

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q4Z-0TaofV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.767 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9a6164196a943380b43 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:26.497Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9a6164196a943380b43 {
      sessionID: 'a8e6bd93d0b2e49010e8baadc7b5fccf',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa8e6bd93d0b2e49010e8baadc7b5fccf.sEcooQrm9ODfT1I0tCDkKRwvgNkApz85PW89HrSrO8g',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"isActive":false}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686bf9a6164196a943380b43","targetId":"686bf9a6164196a943380b43","targetType":"operator","timestamp":"2025-07-07T16:45:26.644Z","userId":"686bf9a5164196a943380b37","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686bf9a6164196a943380b43 [32m200[0m 148.099 ms - 446[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:26.648Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T16:45:26.681Z","userType":"operator","username":"target@wavemax.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 32.863 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:27.532Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c141e23f7d1d9b5c8df49fb30a1fc440',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: oM0WplhJ-io1h4T4DPG0oXuUQcLCT1SA-mOI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c141e23f7d1d9b5c8df49fb30a1fc440

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E85RHHcgrO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.733 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:27.639Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:27.790Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:27.791Z","userId":"686bf9a7164196a943380b6a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.307 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:27.794Z"}
  console.log
    CSRF token generation: {
      sessionID: '764ec9c4416ac097d5b757058e039cdc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fm8IfUsF-pn4DUIhnvXM2BYatcimEDdBoMiw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 764ec9c4416ac097d5b757058e039cdc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mDg5oLW5vw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.430 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:27.890Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:28.037Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:28.037Z","userId":"686bf9a7164196a943380b70","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.874 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:28.041Z"}
  console.log
    CSRF token generation: {
      sessionID: '32a0e1de9e62ad0345183e4125cc15df',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TrGk6JYW-q7jDSsgJHFFl9hxA96KA1OJC-mM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 32a0e1de9e62ad0345183e4125cc15df

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: f3XxqcbyXl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.247 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:28.147Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:28.303Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:28.303Z","userId":"686bf9a8164196a943380b76","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.316 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9a8164196a943380b76 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:28.306Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9a8164196a943380b76 {
      sessionID: 'c141e23f7d1d9b5c8df49fb30a1fc440',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac141e23f7d1d9b5c8df49fb30a1fc440.MqjHgHueGKUDCFDW1D36gPlxGolZ43WRo9EMumDRInw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9a8164196a943380b76 [32m200[0m 172.371 ms - 240[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.308Z"}
  console.log
    CSRF token generation: {
      sessionID: '9917a506249a46237c2f875e79d82c94',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VAzDdcOK-ewC6WLVE7Eq5tuVpYJlVFznHmjw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9917a506249a46237c2f875e79d82c94

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tZqrui-_y5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.486 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.425Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:29.584Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:29.585Z","userId":"686bf9a9164196a943380ba0","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.568 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.588Z"}
  console.log
    CSRF token generation: {
      sessionID: '622ec98d19558c5a10b429af3cc1ac34',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VTWXBp2D-w1DwUgeifDs_T5hzxQP12SpzYhk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 622ec98d19558c5a10b429af3cc1ac34

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UhRIj5xQsY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.149 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.697Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:29.847Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:29.848Z","userId":"686bf9a9164196a943380ba6","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.073 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.851Z"}
  console.log
    CSRF token generation: {
      sessionID: '874156fe7c3ff8c6b477c2d9a9665ca9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BVPIdfMh-cvWpQIzOk6ytKd99w26p8LZOXFs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 874156fe7c3ff8c6b477c2d9a9665ca9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: u-_up0G0j4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.441 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:29.949Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:30.104Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:30.104Z","userId":"686bf9a9164196a943380bac","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.031 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9a9164196a943380bac {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:30.108Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9a9164196a943380bac {
      sessionID: '9917a506249a46237c2f875e79d82c94',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9917a506249a46237c2f875e79d82c94.Zp8LMkA9ZUEX48Z3wx5BbFtj7c8nR2Au2enFQcte3p4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9a9164196a943380bac [32m200[0m 135.912 ms - 245[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.124Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e46e25790af78e7851d1edc9b34e4ef7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LQmuYl5A-ui-piqdDX6c6oT7ZmhzEOmuS0ig

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e46e25790af78e7851d1edc9b34e4ef7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2LmU6gajRY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 35.258 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.296Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:31.498Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:31.499Z","userId":"686bf9ab164196a943380bd5","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 202.310 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.502Z"}
  console.log
    CSRF token generation: {
      sessionID: '1bc4abf13f105c80b00e7f230bf312c9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XobWm7vI-qVKCZ7fHL0hEpVALN-8E5QRcYWk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1bc4abf13f105c80b00e7f230bf312c9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NaJO0JwPn_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.872 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.635Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:31.857Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:31.864Z","userId":"686bf9ab164196a943380bdb","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 228.279 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.868Z"}
  console.log
    CSRF token generation: {
      sessionID: 'adb42c11b152fcf139057db9b5df36e2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JmH2FyKE-YAtFYxvfoPq3w3gbbq__LE3HyJ4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: adb42c11b152fcf139057db9b5df36e2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gp_GIejALI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.762 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9ab164196a943380be1 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:31.983Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9ab164196a943380be1 {
      sessionID: '1bc4abf13f105c80b00e7f230bf312c9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1bc4abf13f105c80b00e7f230bf312c9.QyfZDy7ZzfWy0EQU0h9OARsyHmaJCdJUSsBLHLxAXBo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686bf9ab164196a943380be1","targetId":"686bf9ab164196a943380be1","targetType":"operator","timestamp":"2025-07-07T16:45:32.134Z","userId":"686bf9ab164196a943380bd5","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686bf9ab164196a943380be1 [32m200[0m 152.691 ms - 445[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:32.999Z"}
  console.log
    CSRF token generation: {
      sessionID: '865b152222ea592ff70cbc0f9a97f0d2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YGWNhbl9-SmLGUb2G6d4EFXWC2W9-S1k7tYM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 865b152222ea592ff70cbc0f9a97f0d2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aE_tlVoFDN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.620 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:33.105Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:33.266Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:33.266Z","userId":"686bf9ad164196a943380c07","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.954 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:33.269Z"}
  console.log
    CSRF token generation: {
      sessionID: '456554e8d19d1ea9321bc7978ba1a66b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zay48qfg-OJnxc_BQy-86shvPrtqoIrSNFZI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 456554e8d19d1ea9321bc7978ba1a66b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: MIZwaa_JLx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.369 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:33.382Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:33.557Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:33.558Z","userId":"686bf9ad164196a943380c0d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 175.592 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:33.561Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a68a4f22de64789f27520b5b8e59c600',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2E1L2vvR-8wIE_TW0wrfAOS7u-eC0Th2oreY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a68a4f22de64789f27520b5b8e59c600

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pTd9kAz2_z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.526 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9ad164196a943380c13 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:33.695Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9ad164196a943380c13 {
      sessionID: '456554e8d19d1ea9321bc7978ba1a66b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A456554e8d19d1ea9321bc7978ba1a66b.XhWT2hyUfPYtVT%2FPksTmbO4%2BJ8A79TOBxoZoCYp0wL0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9ad164196a943380c13 [33m409[0m 139.194 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:34.693Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd7b2d71315dc35468f3169950ca0a137',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sA2UJgAX-iCvBqfuzKFEnC1x1YN_tOF8V5xM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d7b2d71315dc35468f3169950ca0a137

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sLxRrySENC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.007 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:34.793Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:34.946Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:34.946Z","userId":"686bf9ae164196a943380c39","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.482 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:34.949Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd65d9efe1d376a94410744689a9b9222',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6VRL9ONi-DgqhXmuOCap5x5jzJSk7d5aYyDE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d65d9efe1d376a94410744689a9b9222

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: l_xWqwbRLZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.184 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:35.053Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:35.222Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:35.223Z","userId":"686bf9ae164196a943380c3f","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 170.249 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:35.227Z"}
  console.log
    CSRF token generation: {
      sessionID: '364a4ed5b458439bd746071ba92dee8c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: guusNV5q-yaqKloOAzn1Wky8s3g5gOmKCzP8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 364a4ed5b458439bd746071ba92dee8c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YQNcxhTlfQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.361 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686bf9af164196a943380c45 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:35.328Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9af164196a943380c45 {
      sessionID: 'd65d9efe1d376a94410744689a9b9222',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad65d9efe1d376a94410744689a9b9222.lU7I4NzcY%2BbEtMWM016iDD5KG82XZKgwO9oR0l4%2BsE0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"4","11":"1","12":"9","13":"6","14":"a","15":"9","16":"4","17":"3","18":"3","19":"8","2":"6","20":"0","21":"c","22":"3","23":"9","3":"b","4":"f","5":"9","6":"a","7":"e","8":"1","9":"6","timestamp":"2025-07-07T16:45:35.491Z"}
[0mDELETE /api/v1/operators/686bf9af164196a943380c45 [32m200[0m 164.060 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:36.388Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bd640d662e48229df8f82bc503cefb8a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: X4H2OS9j-ma0pKe-dwOqTUzEuJ-w9DLPIsjA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bd640d662e48229df8f82bc503cefb8a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5T0iBsUZJn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.460 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:36.476Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:36.637Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:36.637Z","userId":"686bf9b0164196a943380c6c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.028 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:36.647Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a17b99f1a0e540909dc8afad6a182bf9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lSEcqKZW-LX_rB1UZ1u1oLwUrDXaeNvufwkI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a17b99f1a0e540909dc8afad6a182bf9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CeemXxnWxN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.502 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:36.741Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:36.910Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:36.911Z","userId":"686bf9b0164196a943380c72","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 169.991 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:36.914Z"}
  console.log
    CSRF token generation: {
      sessionID: '273d7181af0c3f0872d2133b703056ec',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZJ01JjjG-EImQxUU5qYCsfM04AMRkQe7Xt4g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 273d7181af0c3f0872d2133b703056ec

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pto0Khpq1I...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.750 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686bf9b0164196a943380c78 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:37.052Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9b0164196a943380c78 {
      sessionID: 'a17b99f1a0e540909dc8afad6a182bf9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa17b99f1a0e540909dc8afad6a182bf9.MTi6cGbHlpebiH49DXfmGd5ETt6%2Fp6IR7MTJz8IZRek',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686bf9b0164196a943380c78 [33m400[0m 108.843 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.051Z"}
  console.log
    CSRF token generation: {
      sessionID: '00b543cac7bcaee434f277c7ffa8bb20',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XvvYyK4B-HNwbDRk6kPbbrxXhQmoFMm-ul1M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 00b543cac7bcaee434f277c7ffa8bb20

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FPWtTIyrr7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.980 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.152Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:38.355Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:38.356Z","userId":"686bf9b2164196a943380c9e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 203.171 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.359Z"}
  console.log
    CSRF token generation: {
      sessionID: '3e4ca63aab75db7aab0fa33915a8f527',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TH6Gw4yq-HPLrfo25-0DTfVarqCiQh9Cz8jw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3e4ca63aab75db7aab0fa33915a8f527

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: csAvO92vzY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.415 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.474Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:38.625Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:38.626Z","userId":"686bf9b2164196a943380ca4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.856 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.629Z"}
  console.log
    CSRF token generation: {
      sessionID: '2b6a6116a29cf9872e80d4a5883faa32',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UoylrFTg-xixrLX7ep_q-H527Z71cubd2Fdg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2b6a6116a29cf9872e80d4a5883faa32

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sPMYxsV4Q9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.176 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:38.816Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:39.025Z","userType":"administrator","username":"limited3@wavemax.com"}
info: undefined {"adminId":"LIMITED003","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:39.025Z","userId":"686bf9b2164196a943380cac","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 209.501 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/operators/686bf9b2164196a943380caa {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:39.030Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9b2164196a943380caa {
      sessionID: '00b543cac7bcaee434f277c7ffa8bb20',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A00b543cac7bcaee434f277c7ffa8bb20.tMyVYBoSAYxLtWiezfCVpSwA2OVBNfErBb5mV9xt%2Fcc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686bf9b2164196a943380caa [33m403[0m 57.338 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:39.993Z"}
  console.log
    CSRF token generation: {
      sessionID: '37cc013054c0d2700db727c6d7b16057',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BhVsDILJ-2Y1S-5B9Bn1ck_QIF77wJtxHoAE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 37cc013054c0d2700db727c6d7b16057

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vuWLsYD2XQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.044 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:40.106Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:40.274Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:40.274Z","userId":"686bf9b4164196a943380cd3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 168.248 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:40.277Z"}
  console.log
    CSRF token generation: {
      sessionID: '4e607069dbd4dfa2329dbe92e0f435b0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2B6VB3MU-r2LZnQFCvAFcb67sD74tpTvS-AA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4e607069dbd4dfa2329dbe92e0f435b0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Tx9jVZQgER...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.168 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:40.378Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:40.546Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:40.547Z","userId":"686bf9b4164196a943380cd9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 169.712 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:40.550Z"}
  console.log
    CSRF token generation: {
      sessionID: '813e36254b4ce55de3637d612828de0d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xTCkP895-MIbQ6eC3hHGjGMKZ4VRiHQ5lmYk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 813e36254b4ce55de3637d612828de0d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HZuHJlvGVO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.320 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686bf9b4164196a943380ce1 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:40.653Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9b4164196a943380ce1 {
      sessionID: '4e607069dbd4dfa2329dbe92e0f435b0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4e607069dbd4dfa2329dbe92e0f435b0.rewaHUlLJPx6UBKdd4F7DErjCIDMly9UN7ht6z6FiJs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686bf9b4164196a943380ce1 [33m404[0m 88.792 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:41.613Z"}
  console.log
    CSRF token generation: {
      sessionID: '9a0918b57e067186a51206eb9ee71b94',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lZIva5OZ-4yrGKV8-DnOJYbzHQ99SgqMQRX8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9a0918b57e067186a51206eb9ee71b94

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: qK9mk39Ahk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.552 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:41.715Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:41.875Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:41.875Z","userId":"686bf9b5164196a943380d04","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 159.808 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:41.878Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e70d3ca647aaf1586040f3701238858',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: n8EQIQ92-BJWOuBWODFhBhQV5TuFYVdD54Tg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e70d3ca647aaf1586040f3701238858

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FDQY3wCBra...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.759 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:41.978Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:42.139Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:42.140Z","userId":"686bf9b5164196a943380d0a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 161.887 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:42.143Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dedffcfdb75006a312a3d4d6d25f30d0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lsx3DuYD-M6njN_NVfDXu5LO4aKLt9Y919VM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dedffcfdb75006a312a3d4d6d25f30d0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0PwZcvwq5l...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.597 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686bf9b6164196a943380d10/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:42.255Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9b6164196a943380d10/reset-pin {
      sessionID: '2e70d3ca647aaf1586040f3701238858',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2e70d3ca647aaf1586040f3701238858.NUQQ%2F2%2BYf7c%2F8vFROC5dubTH8nIu0QqsI09IixDel6Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"4","11":"1","12":"9","13":"6","14":"a","15":"9","16":"4","17":"3","18":"3","19":"8","2":"6","20":"0","21":"d","22":"0","23":"4","3":"b","4":"f","5":"9","6":"b","7":"5","8":"1","9":"6","timestamp":"2025-07-07T16:45:42.438Z"}
[0mPOST /api/v1/operators/686bf9b6164196a943380d10/reset-pin [32m200[0m 183.171 ms - 51[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:42.442Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:42.596Z","userType":"operator","username":"pinreset@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"PIN001","path":"/operator/login","shift":"undefined - undefined","timestamp":"2025-07-07T16:45:42.596Z","userId":"686bf9b6164196a943380d10","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 154.112 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:43.455Z"}
  console.log
    CSRF token generation: {
      sessionID: '353849462f5fff994fb9e1b2803d6261',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Dz1z3PqL-js1VTZaFUsoWQalw6Fxux2Jp4kI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 353849462f5fff994fb9e1b2803d6261

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iGmZqerr6r...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.853 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:43.556Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:43.714Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:43.715Z","userId":"686bf9b7164196a943380d3b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.700 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:43.719Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd0f334d9e1ad090c18d102b93d95e578',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: qj4USS7i-fimDIrjPVqmI2d_I_MTTigosQg4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d0f334d9e1ad090c18d102b93d95e578

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0rAJHJ8khq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.039 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:43.821Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:43.981Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:43.982Z","userId":"686bf9b7164196a943380d41","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 161.056 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:43.984Z"}
  console.log
    CSRF token generation: {
      sessionID: '5460f9d6a3f86ddaa9548c1c8c5fbdf8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hq4kyx7t-0UXLAYZHVHujfJWd7vwzAF23y-U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5460f9d6a3f86ddaa9548c1c8c5fbdf8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BchLjO-OFz...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.879 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686bf9b7164196a943380d47/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:44.112Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9b7164196a943380d47/reset-pin {
      sessionID: 'd0f334d9e1ad090c18d102b93d95e578',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad0f334d9e1ad090c18d102b93d95e578.XiPLoYpy1ak%2Fy8lHiO13VgaAY8g9vbaRndUeu%2FGqlV8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"4","11":"1","12":"9","13":"6","14":"a","15":"9","16":"4","17":"3","18":"3","19":"8","2":"6","20":"0","21":"d","22":"3","23":"b","3":"b","4":"f","5":"9","6":"b","7":"7","8":"1","9":"6","timestamp":"2025-07-07T16:45:44.280Z"}
[0mPOST /api/v1/operators/686bf9b7164196a943380d47/reset-pin [32m200[0m 169.025 ms - 51[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:45.190Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f91a3a2a0c864c9501ab88f2748ab1aa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: g1LSmg4Z-OVXAcWKkDP3FX5CANFod6_GB-dU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f91a3a2a0c864c9501ab88f2748ab1aa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _UWJTlBvzG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.080 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:45.300Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:45.479Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:45.479Z","userId":"686bf9b9164196a943380d70","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 179.776 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:45.483Z"}
  console.log
    CSRF token generation: {
      sessionID: '32d7ff2f85ce96dd6c62cfc567c6e52b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 20acyOzy-UFEPy8Z6lTVosyuPYXoUwRrdYHQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 32d7ff2f85ce96dd6c62cfc567c6e52b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Ykf1M5tqVt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.209 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:45.609Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:45.992Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:45.992Z","userId":"686bf9b9164196a943380d76","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 383.995 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:45.998Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bfd7b872136376ea0dbe71f63717b54b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kD7USw8v-DDPE3dhsJKHK3C0eVIxK7p6oGoQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bfd7b872136376ea0dbe71f63717b54b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: L-IDyW2lCf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.472 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:46.326Z"}
[0mGET /api/v1/operators/available [32m200[0m 239.909 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:47.547Z"}
  console.log
    CSRF token generation: {
      sessionID: '924412afb5c1c65e9e6f2680a363f0ea',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Xu6vwpeh-PYPZ9VXuTNXHWt80-iQmtz0aeDk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 924412afb5c1c65e9e6f2680a363f0ea

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iGbYDxvLz0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.808 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:47.664Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:47.842Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:47.842Z","userId":"686bf9bb164196a943380da6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 177.792 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:47.845Z"}
  console.log
    CSRF token generation: {
      sessionID: '2b6659ad9b7eb4122b7c2ac776ce5f8f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lTp8tZ1u-swMo2gS-dVhqngme_My5D9IwDeU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2b6659ad9b7eb4122b7c2ac776ce5f8f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4A4vgnVaqh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.689 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:47.963Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:48.131Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:48.131Z","userId":"686bf9bb164196a943380dac","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 168.622 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:48.134Z"}
  console.log
    CSRF token generation: {
      sessionID: '57f38509f69d0256de9d1d3370eadfb8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XCMKzqS9-pOz8_Ckd4-ruDsRxw_whIIPmUBE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 57f38509f69d0256de9d1d3370eadfb8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8rvPfEAtn4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.824 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available?limit=2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:48.406Z"}
[0mGET /api/v1/operators/available?limit=2 [32m200[0m 143.128 ms - 536[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:49.402Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dcda36b4003e57241664353d7452a4f2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KqWW2O8S-qhI6it_qxoZjz2N4YExEJqQtfww

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dcda36b4003e57241664353d7452a4f2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: uZ00v-Z1Wy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.053 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:49.497Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:49.653Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:49.654Z","userId":"686bf9bd164196a943380ddc","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.796 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:49.657Z"}
  console.log
    CSRF token generation: {
      sessionID: '82127bbd4085f8cda3191ef648992862',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: h3d4ub48-zgbdWuOgsebycflMeNQf8JJjR58

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 82127bbd4085f8cda3191ef648992862

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RuOphviyzT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.360 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:49.745Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:49.908Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:49.908Z","userId":"686bf9bd164196a943380de2","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 166.424 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:49.915Z"}
  console.log
    CSRF token generation: {
      sessionID: '0156c1bb5f4649361a0c4b6ef005ae64',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JVqqlIuB-8eNOW2b4p6-HsHRP3F_9ixgdMXA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0156c1bb5f4649361a0c4b6ef005ae64

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kiej20VsDQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.304 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:50.202Z"}
[0mGET /api/v1/operators/available [32m200[0m 90.830 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:51.458Z"}
  console.log
    CSRF token generation: {
      sessionID: '9ef1daf020478c603807b6a4f41bed68',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6s0DTw0C-wZ9d84A4UOa2b4C6Nvatg6SePBI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9ef1daf020478c603807b6a4f41bed68

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fpviZX1GUs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.952 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:51.574Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:51.735Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:51.736Z","userId":"686bf9bf164196a943380e12","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.175 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:51.740Z"}
  console.log
    CSRF token generation: {
      sessionID: '636c4284f37805dc72077c3e013f63f1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Aa6ADcNe-MU_5BRBcDnBFLTSmPg40AFKhSWI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 636c4284f37805dc72077c3e013f63f1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DttqS8_mcV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.886 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:51.831Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:51.983Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:51.983Z","userId":"686bf9bf164196a943380e18","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.137 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:51.986Z"}
  console.log
    CSRF token generation: {
      sessionID: '270dc85c55bd1f0822a01ba1a6470843',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SvuTuntz-F6wF_Mo9nma63W7WfLvj-jW86W0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 270dc85c55bd1f0822a01ba1a6470843

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kv_QDgF2w2...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.092 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:52.304Z"}
[0mGET /api/v1/operators/available [33m401[0m 2.511 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:53.164Z"}
  console.log
    CSRF token generation: {
      sessionID: '7d56c666379877e3468a51adf4eaf991',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O2Ole3Zf-0Oc3k-YtJ_lmvU9ysL4Ept2EV7Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7d56c666379877e3468a51adf4eaf991

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: w7Iz8QZCcb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.349 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:53.282Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:53.464Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:53.464Z","userId":"686bf9c1164196a943380e45","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 182.006 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:53.468Z"}
  console.log
    CSRF token generation: {
      sessionID: '48246a4d9bcb10ee11abf1d2476e7e94',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Zh2joagI-6JGLEgB9AFdprEQzvKqUQBuLKeE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 48246a4d9bcb10ee11abf1d2476e7e94

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XaYsQwPHUT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.557 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:53.588Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:54.062Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:54.062Z","userId":"686bf9c1164196a943380e4b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 475.191 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:54.066Z"}
  console.log
    CSRF token generation: {
      sessionID: '9eeccc47e1b153f5a6d7530539f7d2b4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nqMkr6GE-lhtoZSgGnEWlGXJQrGtU1wyAPv4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9eeccc47e1b153f5a6d7530539f7d2b4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QKIdkKj2Cy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.017 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9c2164196a943380e51/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:54.238Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9c2164196a943380e51/stats {
      sessionID: '48246a4d9bcb10ee11abf1d2476e7e94',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A48246a4d9bcb10ee11abf1d2476e7e94.0Vjd49n3Fe8gnGu4SnwQD6ePYwpNA7%2FNjUdSGmDGp9A',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9c2164196a943380e51/stats [32m200[0m 247.648 ms - 267[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:55.565Z"}
  console.log
    CSRF token generation: {
      sessionID: '38dff5652423163bb34b5fbadc97e1a4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 1VSkl0yZ-EeUdqTpdEnggmzN1V60EhQ-7jS8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 38dff5652423163bb34b5fbadc97e1a4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Y2uoczeCHM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.567 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:55.674Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:55.826Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:55.827Z","userId":"686bf9c3164196a943380e76","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.154 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:55.830Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd2f673702fc282e16e4a3ee749c4d97f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jRAqwy3d-lpTDSleLuZn41Pkk4GSn0iNPScA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d2f673702fc282e16e4a3ee749c4d97f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eQqz9gBN1K...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.021 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:55.945Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:56.102Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:56.102Z","userId":"686bf9c3164196a943380e7c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.625 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:56.105Z"}
  console.log
    CSRF token generation: {
      sessionID: '4c9f3a6ba547edfded7c365676b580b5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DHospXpn-YwgRPy2z6C-tA9Ubg6lmtEUNpF4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4c9f3a6ba547edfded7c365676b580b5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7mOPLDVckJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.991 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9c4164196a943380e82/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:56.211Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9c4164196a943380e82/stats {
      sessionID: 'd2f673702fc282e16e4a3ee749c4d97f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad2f673702fc282e16e4a3ee749c4d97f.r%2BK6znIEoBrVYXisu9HW1EDCxGv80wFQjy%2BOLSHtO%2FM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9c4164196a943380e82/stats [32m200[0m 119.323 ms - 252[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.224Z"}
  console.log
    CSRF token generation: {
      sessionID: '0ec9e5355103ed9e154b902fe55ed022',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: V13aV40H-ziZ7k7SS7XgjywTa0v-SFcVkKN8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0ec9e5355103ed9e154b902fe55ed022

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3xpz_uc79_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.868 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.355Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:57.517Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:57.517Z","userId":"686bf9c5164196a943380ea7","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.459 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.519Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ddfae300ad57ab9536c5a846916eeefa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sdM2qvv3-wzg58KT2ciLOTcSOeTBxiSWUVKc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ddfae300ad57ab9536c5a846916eeefa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GM1PH_vhWL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.834 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.614Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:57.766Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:57.767Z","userId":"686bf9c5164196a943380ead","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.598 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.771Z"}
  console.log
    CSRF token generation: {
      sessionID: '94068a75b7e79a37c6715ca5e198e703',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yb4NFhwb-k5bRC_qTm7ArE6mftqKPR_5Rhio

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 94068a75b7e79a37c6715ca5e198e703

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2zddziW2HA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.362 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9c5164196a943380eb3/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:57.878Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9c5164196a943380eb3/stats {
      sessionID: 'ddfae300ad57ab9536c5a846916eeefa',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Addfae300ad57ab9536c5a846916eeefa.2oOulrookiSVLwRqtlmmtdLGWq%2BAt4g7Fr5ptg%2BdFe4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9c5164196a943380eb3/stats [32m200[0m 148.362 ms - 268[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:58.876Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e0f5789d015640b23726c48ac3ed589a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: aQRSOrkw-cjtDQhR8oBEygP_kRmZCZ8f2yEQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e0f5789d015640b23726c48ac3ed589a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: diODncjVuJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.959 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:58.970Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:59.126Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:45:59.126Z","userId":"686bf9c6164196a943380ed8","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.878 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:59.128Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a552dee207f3ef7fb762f2684cc86f17',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 857VX842-jxYJko8byE1e-Wkew7vVSBNB4bE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a552dee207f3ef7fb762f2684cc86f17

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3VAtYWLfF3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.783 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:59.232Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:45:59.385Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:45:59.385Z","userId":"686bf9c7164196a943380ede","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.530 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:59.389Z"}
  console.log
    CSRF token generation: {
      sessionID: '3b978d139130fbe9af53c2fc81544481',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bAkcpqXZ-NVa8FxUTd9KJM3xFzIWJIMyjMb4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3b978d139130fbe9af53c2fc81544481

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0PjtGKJaDU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.261 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686bf9c7164196a943380ee4/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:45:59.510Z"}
  console.log
    CSRF check for: /api/v1/operators/686bf9c7164196a943380ee4/stats {
      sessionID: 'a552dee207f3ef7fb762f2684cc86f17',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa552dee207f3ef7fb762f2684cc86f17.sAp6RYkAOZqDy59505750El10k59V3rh%2F7XAQXOxgpA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686bf9c7164196a943380ee4/stats [33m400[0m 56.316 ms - 62[0m
PASS tests/integration/operator.test.js (70.001 s)
  Operator Integration Tests
    GET /api/v1/operators
      ✓ should get all operators with admin token (3166 ms)
      ✓ should filter by active status (1745 ms)
      ✓ should filter by on-shift status (1879 ms)
      ✓ should support pagination (3535 ms)
      ✓ should require authentication (1847 ms)
      ✓ should require operator management permissions (1714 ms)
    GET /api/v1/operators/:id
      ✓ should get operator by ID (1666 ms)
      ✓ should allow operators to view their own profile (1551 ms)
      ✓ should prevent operators from viewing other operators (1554 ms)
      ✓ should return 404 for non-existent operator (1572 ms)
    POST /api/v1/operators
      ✓ should create new operator (1830 ms)
      ✓ should validate required fields (1463 ms)
      ✓ should validate email format (1496 ms)
      ✓ should validate shift time format (1492 ms)
      ✓ should prevent duplicate emails (1523 ms)
      ✓ should require operators.manage permission (1739 ms)
    PATCH /api/v1/operators/:id
      ✓ should update operator details (1696 ms)
      ✓ should update password (1938 ms)
      ✓ should deactivate operator (1670 ms)
      ✓ should allow operators to update their own profile (limited fields) (1767 ms)
      ✓ should prevent operators from changing their own work station (1826 ms)
      ✓ should not allow updating operatorId (1874 ms)
      ✓ should validate email uniqueness on update (1689 ms)
    DELETE /api/v1/operators/:id
      ✓ should delete operator (1686 ms)
      ✓ should prevent deleting operator with active orders (1668 ms)
      ✓ should require operators.manage permission (1932 ms)
      ✓ should handle non-existent operator (1632 ms)
    POST /api/v1/operators/:id/reset-pin
      ✓ should reset operator PIN/password (1846 ms)
      ✓ should clear login attempts on PIN reset (1734 ms)
    GET /api/v1/operators/available
      ✓ should get available operators sorted by order count (2349 ms)
      ✓ should respect limit parameter (1859 ms)
      ✓ should only include active operators (2047 ms)
      ✓ should require authentication (1717 ms)
    PATCH /api/v1/operators/:id/stats
      ✓ should update processing statistics (2401 ms)
      ✓ should update quality score (1657 ms)
      ✓ should update both stats in one call (1649 ms)
      ✓ should validate processingTime is positive (1535 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:01.706Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:02.180Z"}
  console.log
    CSRF token generation: {
      sessionID: '4b80ba4b451e265bb7734b259d0cf923',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TtBQoojz-us9wM9WqO-ZAYWctxiFPwAyOVuQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4b80ba4b451e265bb7734b259d0cf923

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JP6cl0UH--...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.458 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:03.143Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:03.354Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 211.517 ms - 544[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:04.320Z"}
  console.log
    CSRF token generation: {
      sessionID: '4ef3307743db0a9ab6d48082f93efbe6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PQzlSEVC-gfhjhT_C38l82Jov2aXiUSHeZlQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4ef3307743db0a9ab6d48082f93efbe6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bXKb88hDuJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.635 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:04.579Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T16:46:04.663Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 84.520 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:05.437Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cc32daa62ad4a873753530fc58b15612',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7gKukN1h-pyLZqiE58YTr6ryms-MQ88_npSY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cc32daa62ad4a873753530fc58b15612

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 86heBQHZ55...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.321 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:05.586Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"User not found","success":false,"timestamp":"2025-07-07T16:46:05.651Z","userType":"affiliate","username":"nonexistent"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 65.053 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:06.434Z"}
  console.log
    CSRF token generation: {
      sessionID: '2188a322244472620e95468d87b13405',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UceUp7m4-JVRYCz6pgOhutnYguYFbJU3J94c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2188a322244472620e95468d87b13405

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AXjTphnlHo...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.856 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:06.711Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 149.567 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:07.658Z"}
  console.log
    CSRF token generation: {
      sessionID: '32fd2532291e186156c7b60f5cd8fba7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9cA5xzWQ-Ftc3_Ysa4VBYio7qVq2WQHpOTOA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 32fd2532291e186156c7b60f5cd8fba7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CnS6ghjjLu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.713 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:07.921Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 147.665 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:08.850Z"}
  console.log
    CSRF token generation: {
      sessionID: '976dccb0ed0f787783e5b68b3dacfac9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WqtIv8WX-9sAB97S2mUGOypWlZebcJd1ki3w

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 976dccb0ed0f787783e5b68b3dacfac9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5oBe02M68h...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.513 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:09.155Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 167.317 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:10.081Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bfc34178700bcab0d90789edc06c8c9b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uKnKrTUN-v1mS0Wq97_-L1WNYpUQpiNvVcos

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bfc34178700bcab0d90789edc06c8c9b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: n-TmZN5ZWn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.965 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:10.359Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 141.802 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:11.317Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a502ae0e1f6dfb6a07ec702c67fa38bd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2wtiUjdc-lnIIpOSP70HfPOTG0SzyDjhMiIw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a502ae0e1f6dfb6a07ec702c67fa38bd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eWerpSfMmG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.959 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:11.455Z"}
[0mPOST /api/v1/auth/customer/login [33m401[0m 27.377 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:12.226Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e0f88214bb269e825c31d7ee52a19eb6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: S4SRJibm-_vXgE5bw7-nRqvlZyY5MCG6n-VM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e0f88214bb269e825c31d7ee52a19eb6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 99pGR1mhZG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.125 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:12.462Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:12.606Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 144.813 ms - 544[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:12.612Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.301 ms - 129[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:13.424Z"}
  console.log
    CSRF token generation: {
      sessionID: '334377da847f0c789e4997b9f5cfeb7a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: l031SCbb-McteCKgEkVQ47W6GVp6tocuqffo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 334377da847f0c789e4997b9f5cfeb7a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gVVLmCw8k1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.103 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:13.575Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.591 ms - 43[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:14.351Z"}
  console.log
    CSRF token generation: {
      sessionID: '116a864a7c459884465537aafb9e4ab3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cyqerQ6M-qNomlBmnpXib6q58nqnptvreBvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 116a864a7c459884465537aafb9e4ab3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xiwcMx7XiS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.272 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:14.502Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.583 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:15.255Z"}
  console.log
    CSRF token generation: {
      sessionID: '03cd6f331815a29d20edd960ffe978d0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jZV5Q4Oo-4zBw_ePheESxnDqaWd-78cPNeFE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 03cd6f331815a29d20edd960ffe978d0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RO8b5iealR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.117 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:15.494Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:15.680Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 186.262 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:15.682Z"}
[0mPOST /api/v1/auth/refresh-token [32m200[0m 265.881 ms - 409[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:17.306Z"}
  console.log
    CSRF token generation: {
      sessionID: '82ca39c254a1a272ec33d225f3557aab',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: FZQufT01-qDDtIUDdpxpMr1UpCUgMZOqDP18

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 82ca39c254a1a272ec33d225f3557aab

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sfWTsdEkKQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.787 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:17.642Z"}
[0mPOST /api/v1/auth/refresh-token [33m400[0m 2.385 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:18.530Z"}
  console.log
    CSRF token generation: {
      sessionID: '2c1ed108f3ac80f17bfe404ee0cfbe9e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4uj35qFQ-KQSZa78MC_MIjpYjfqt8AeybhFo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2c1ed108f3ac80f17bfe404ee0cfbe9e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vmvraDO1my...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.306 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:18.840Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 37.069 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:19.664Z"}
  console.log
    CSRF token generation: {
      sessionID: '7000162d992b72b6bf627ff5aaebb6a7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Pc8R2plB-oxAGnjDEt3Ykk-rUAwNBU9NB2xw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7000162d992b72b6bf627ff5aaebb6a7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CjfD-wM0Fc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.376 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:19.898Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:20.053Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 154.715 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:20.056Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: '7000162d992b72b6bf627ff5aaebb6a7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7000162d992b72b6bf627ff5aaebb6a7.8Pd9ZtTahfBE%2Fm7v0HjY9XTLDjiXmgf4vir45aq7Xm8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 113.415 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:20.172Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.188 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:20.203Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 27.395 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.031Z"}
  console.log
    CSRF token generation: {
      sessionID: '45839e6bda6def6867e9091545731511',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IJdJXBJZ-6u3KTavU-7LNdNlmtYGmuuYzwZI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 45839e6bda6def6867e9091545731511

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: wYpUeDMIgp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 29.037 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.337Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:21.494Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.994 ms - 544[0m
  console.log
    Got refresh token: 34f50bf747d0f5423fb2484bdad93a1eeb29de7de16a2285cb7dc25339a1e867d4d78228ef003ea9

      at Object.log (tests/integration/auth.test.js:805:15)

  console.log
    Starting concurrent requests...

      at Object.log (tests/integration/auth.test.js:819:15)

[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.514Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.517Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.519Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.523Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:21.525Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 35.583 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 42.681 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 41.901 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 48.025 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [32m200[0m 151.942 ms - 409[0m
  console.log
    Responses received: [
      {
        status: 200,
        body: {
          success: true,
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NmJmOWRkZmI1OTNjZGI5NzY0NmExMSIsImFmZmlsaWF0ZUlkIjoiQUZGMTIzIiwicm9sZSI6ImFmZmlsaWF0ZSIsImlhdCI6MTc1MTkwNjc4MSwiZXhwIjoxNzUxOTEwMzgxLCJhdWQiOiJ3YXZlbWF4LWNsaWVudCIsImlzcyI6IndhdmVtYXgtYXBpIn0.Ll1kUddeqlxQeJvunhI4k1lMjLB7meTEFVSYnpFpdhE',
          refreshToken: '1461c4129744bfaf0b6cdc2cdb0231ae59f926fa1641d118c6344668907970aba8caba544a4e2944'
        }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      }
    ]

      at Object.log (tests/integration/auth.test.js:821:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:22.429Z"}
  console.log
    CSRF token generation: {
      sessionID: '15be1b2e826bdce02fd7098509754e84',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: CWkOTAri-rxwoxDAFXGYAOjwpygM3fI5v6AU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 15be1b2e826bdce02fd7098509754e84

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tzDtPxdiNG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.419 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:22.675Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:22.821Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 145.326 ms - 547[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:23.925Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:24.082Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 157.233 ms - 547[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.086Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.029 ms - 129[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.118Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.269 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.152Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: '15be1b2e826bdce02fd7098509754e84',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A15be1b2e826bdce02fd7098509754e84.z%2BegCFI3P6H56KQSbTHGxU8dymapMjeNUtO0jXwK7rM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 109.628 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.267Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.762 ms - 56[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.302Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.316 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.334Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: '15be1b2e826bdce02fd7098509754e84',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A15be1b2e826bdce02fd7098509754e84.z%2BegCFI3P6H56KQSbTHGxU8dymapMjeNUtO0jXwK7rM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 93.575 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:24.433Z"}
[0mGET /api/v1/auth/verify [33m401[0m 35.074 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:25.263Z"}
  console.log
    CSRF token generation: {
      sessionID: 'df4564463b55e2f24eda3b646128bd8d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dyh3u7il-OOwrfSLrpqdD-i3I-43HX7Cb6dM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: df4564463b55e2f24eda3b646128bd8d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cSQmEVQv6J...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.418 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:25.507Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:25.664Z","userType":"administrator","username":"admin@example.com"}
info: undefined {"adminId":"ADM001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T16:46:25.665Z","userId":"686bf9e1fb593cdb97646a79","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.938 ms - 684[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:26.442Z"}
  console.log
    CSRF token generation: {
      sessionID: '1e2956e4db78177145bd5694b2659b65',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: oXMsebdc-ILeI_poIUtZNeEQHPLdxV-y1v8w

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1e2956e4db78177145bd5694b2659b65

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4n2Av9hGet...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.485 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:26.679Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T16:46:26.802Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 123.304 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:27.557Z"}
  console.log
    CSRF token generation: {
      sessionID: '3fc91b54e1c29174f54faf0faa184eaf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Mj1xsAgL-QYpyDCpD8BWOhnMlkai-NvJ-aG8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3fc91b54e1c29174f54faf0faa184eaf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: z5zMnBh1pB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.505 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:27.795Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T16:46:27.823Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.655 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:28.599Z"}
  console.log
    CSRF token generation: {
      sessionID: '88c867be5d23bfe178b0f1a9f8dfd39f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VzoaEymz-puPXr3-kH1XpLwptMqMEgcOFEXk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 88c867be5d23bfe178b0f1a9f8dfd39f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CIIfqw4wFq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.266 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:28.931Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T16:46:29.083Z","userType":"operator","username":"operator@example.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T16:46:29.083Z","userId":"686bf9e4fb593cdb97646aeb","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 150.948 ms - 593[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:29.861Z"}
  console.log
    CSRF token generation: {
      sessionID: '563afaaca7d2768edd7e52f625214f8f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: quo6Ob43-jNaLwLdAszOa7aQmojaiEPI2cCo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 563afaaca7d2768edd7e52f625214f8f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Yk4B48OHKa...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.094 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:30.215Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T16:46:30.325Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m401[0m 110.701 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:31.097Z"}
  console.log
    CSRF token generation: {
      sessionID: '4fc3f247594a73d15ada849984a1a9ae',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nfj83In5-ngRJmkFtk9D-sJb8ByBNsn70phQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4fc3f247594a73d15ada849984a1a9ae

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iCGWtUQA8d...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 57.322 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:31.547Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T16:46:31.587Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 38.183 ms - 82[0m
PASS tests/integration/auth.test.js (31.81 s)
  Authentication Integration Tests
    POST /api/v1/auth/affiliate/login
      ✓ should login affiliate with valid credentials (2159 ms)
      ✓ should fail with invalid credentials (1117 ms)
      ✓ should fail with non-existent username (997 ms)
    POST /api/v1/auth/customer/login
      ✓ should login customer with valid credentials (1219 ms)
      ✓ should login customer using emailOrUsername field with email (1197 ms)
      ✓ should login customer using emailOrUsername field with username (1230 ms)
      ✓ should prioritize emailOrUsername over username field (1235 ms)
      ✓ should return error with invalid emailOrUsername (909 ms)
    GET /api/v1/auth/verify
      ✓ should verify valid token (1198 ms)
      ✓ should fail with invalid token (926 ms)
      ✓ should fail with missing token (904 ms)
    POST /api/v1/auth/refresh-token
      ✓ should refresh token successfully (2051 ms)
      ✓ should fail with invalid refresh token (1224 ms)
      ✓ should fail with expired refresh token (1135 ms)
    POST /api/v1/auth/logout
      ✓ should logout successfully and blacklist tokens (1366 ms)
    Rate limiting tests
      ○ skipped should rate limit login attempts
      ○ skipped should rate limit refresh token requests
    Concurrent refresh token usage
      ✓ should handle concurrent refresh token requests safely (1399 ms)
    Token blacklisting after logout
      ✓ should blacklist all active tokens on logout (2831 ms)
    POST /api/v1/auth/administrator/login
      ✓ should login administrator with valid credentials (1182 ms)
      ✓ should fail with invalid administrator credentials (1114 ms)
      ✓ should fail when administrator is inactive (1041 ms)
    POST /api/v1/auth/operator/login
      ✓ should login operator with valid credentials (1255 ms)
      ✓ should fail with invalid operator credentials (1243 ms)
      ✓ should fail when operator is inactive (1280 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:33.951Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:34.319Z"}
  console.log
    CSRF token generation: {
      sessionID: '97301c8ba52d97420fdf724a45260152',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: i08DbaBX-9z-FWsyk4PQjWdwjwcUEk7iYvr0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 97301c8ba52d97420fdf724a45260152

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kdbbXRRidk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.718 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:35.200Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '97301c8ba52d97420fdf724a45260152',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A97301c8ba52d97420fdf724a45260152.%2FYXC%2FsJknHI2g5L2qO2bKsxfz1Kv4Q1DhXmGtXgHcRU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD214187
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD214187
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Ring doorbell
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 469.765 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:36.716Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd40024c0ef550ed7327eba2cbea71d72',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zqrZpohb-GSfCxLLbyhdFMhClmALREmiqbD8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d40024c0ef550ed7327eba2cbea71d72

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AI5iItPEXN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.673 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:37.218Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'd40024c0ef550ed7327eba2cbea71d72',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad40024c0ef550ed7327eba2cbea71d72.3w5hpCaA1Zr0zuEdfifY4cOtH2O3YhPuaWTjm7UT1f4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD269540
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $43.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD269540
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 282.170 ms - 125[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:38.329Z"}
  console.log
    CSRF token generation: {
      sessionID: '66bc644f988480a3eff0c241025e4b40',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wbV4Tjsd-bEqu9nQaTIwaRsgEOykNo4nZXQc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 66bc644f988480a3eff0c241025e4b40

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jykCBs8tNb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.632 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:38.670Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '66bc644f988480a3eff0c241025e4b40',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A66bc644f988480a3eff0c241025e4b40.uVTzCn0baqWpQw5udkg8oOqvrPk114awy6G4tH2mjWc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'INVALID',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at log (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at log (server/controllers/orderController.js:130:15)

[0mPOST /api/v1/orders [33m400[0m 59.045 ms - 49[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:39.499Z"}
  console.log
    CSRF token generation: {
      sessionID: '126d702c2d82ef3f7c89a9c045310e8c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RdeJHlsH-2KSIG1IqDPtQ5mQaK5vL6n8TnxQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 126d702c2d82ef3f7c89a9c045310e8c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OGnF9l_vkZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.423 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:39.782Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '126d702c2d82ef3f7c89a9c045310e8c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A126d702c2d82ef3f7c89a9c045310e8c.rdCz12DmYtwgLOZLM%2FGY4G4cmyaYkdXER%2BOJExZRgTM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'INVALID',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at log (server/controllers/orderController.js:159:15)

[0mPOST /api/v1/orders [33m400[0m 113.330 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:40.687Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e5881307f1944c1eb06c36dce3cb9f46',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kqjwbVx7-fnjnaEc4gxZ7MwiTzDWoj9uSNr0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e5881307f1944c1eb06c36dce3cb9f46

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: S7MTWW0jX0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.105 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:41.062Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'e5881307f1944c1eb06c36dce3cb9f46',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae5881307f1944c1eb06c36dce3cb9f46.kudH4X9zjvBD1WiF%2BRkWS%2BDaFy5sM%2FyqltrjFIG0o9k',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST999',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST999

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Bob Jones

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

[0mPOST /api/v1/orders [33m403[0m 116.737 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:41.950Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a709d9317c1091bda392497124970aa0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VKR5qIaZ-GXnbGHVzXwEcskNN5fC6fBY36oo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a709d9317c1091bda392497124970aa0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8w2nUo2D7v...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.522 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:42.243Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'a709d9317c1091bda392497124970aa0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa709d9317c1091bda392497124970aa0.aDzrao8nNsDRvQR9Z6vSZMZyIn0z6YxSdvgWnK%2FZ3iU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Validation errors: [
      {
        type: 'field',
        value: undefined,
        msg: 'Valid pickup date is required',
        path: 'pickupDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid pickup time',
        path: 'pickupTime',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Number of bags must be at least 1',
        path: 'numberOfBags',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Estimated weight must be a positive number',
        path: 'estimatedWeight',
        location: 'body'
      }
    ]

      at log (server/controllers/orderController.js:105:15)

[0mPOST /api/v1/orders [33m400[0m 34.535 ms - 444[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:43.047Z"}
  console.log
    CSRF token generation: {
      sessionID: '0d9617a3a2fdd60434922279d2175ab2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GOG8NSOn-l4nG8pfh5T-L40n9TkFNYK8_SYU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0d9617a3a2fdd60434922279d2175ab2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xhwaOa4Pjo...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.678 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:43.368Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 117.994 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:44.298Z"}
  console.log
    CSRF token generation: {
      sessionID: '776c4bede001a02e2a8b1510ae509aad',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dx0IG1Tp-TPa3iXuRYZpbNCMbp2o8NqKmeBE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 776c4bede001a02e2a8b1510ae509aad

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _hbML9Ckbn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.925 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:44.620Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 120.673 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:45.517Z"}
  console.log
    CSRF token generation: {
      sessionID: '8dc28921c6429e1d6a0261284ec0d93e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: snwa1ote-W6s_VtRYVMcfDM0kUtHHTfLP4pY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8dc28921c6429e1d6a0261284ec0d93e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IT1jeRJK4b...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.530 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:45.866Z"}
[0mGET /api/v1/orders/ORD123456 [33m403[0m 59.120 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:46.687Z"}
  console.log
    CSRF token generation: {
      sessionID: '424f056b6347564a81a5ccd8fa375b14',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DnlAzsgd-lyS8DvS44AO5I6YRglCAu9cCAoI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 424f056b6347564a81a5ccd8fa375b14

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lv7OTvzz9G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.699 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/NONEXISTENT {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:47.070Z"}
[0mGET /api/v1/orders/NONEXISTENT [33m404[0m 56.160 ms - 45[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:47.882Z"}
  console.log
    CSRF token generation: {
      sessionID: '449fcf97f0a29caf5fac673a3de9cc09',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3eqyT6HX-7NuJG9O74OTjmb6HAXHOdb2IJGg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 449fcf97f0a29caf5fac673a3de9cc09

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _VtlkY28hN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.165 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:48.178Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '449fcf97f0a29caf5fac673a3de9cc09',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A449fcf97f0a29caf5fac673a3de9cc09.TK6gTcWZqsjcN1S4fuB2mSfPK4NAdz8nAVBjQ9QJ%2FKw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Laundry Processing

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry has been received and is being processed
                    </div>
                    
                    
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 155.390 ms - 131[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:49.177Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dfcca494aa2c38e6b2befd06e14c9010',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uM0cj9hf-UUDZzzV9Qj8KNTCo3zAIuFx-RM8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dfcca494aa2c38e6b2befd06e14c9010

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: whnu99oDw-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.132 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:49.603Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'dfcca494aa2c38e6b2befd06e14c9010',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adfcca494aa2c38e6b2befd06e14c9010.ASCczFN6i5FCjBb2%2FEayPtb7KH8wEFFNb9sIPO7QTuI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Ready for Pickup

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry is ready for pickup by the affiliate
                    </div>
                    <div class="detail-row"><span class="detail-label">Weight:</span> 25.5 lbs</div>
                    <div class="detail-row"><span class="detail-label">Final Total:</span> $48.20</div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 173.466 ms - 172[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:50.586Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd91f933b230cd9c1d59486b1ac481fec',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zvAX97Hg-3WZjoX5Ijom_yzBG3pSgGgqvGQs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d91f933b230cd9c1d59486b1ac481fec

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dDkQH1oACE...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.266 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:50.943Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'd91f933b230cd9c1d59486b1ac481fec',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad91f933b230cd9c1d59486b1ac481fec.twnYwB7EivDvaY3ZnyqR83fb4Q377RkVdGP%2Bx1cO4qs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m400[0m 64.295 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:52.081Z"}
  console.log
    CSRF token generation: {
      sessionID: '33d7e9de35b8cd71d4bd4316faec5b1f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: vwvfvI85-Z9DTJ3HrGbG5L9o8BsKNYF_HM9M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 33d7e9de35b8cd71d4bd4316faec5b1f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JoRnQNPObV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.738 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:52.416Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '33d7e9de35b8cd71d4bd4316faec5b1f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A33d7e9de35b8cd71d4bd4316faec5b1f.%2BvskQl%2FOPpUthm5557SaAIGMxG5ZGR7V6Ep6Yk8cmDQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 55.649 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:53.279Z"}
  console.log
    CSRF token generation: {
      sessionID: '4a3ee43f20c56c2a13df3b1632f01200',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: INY8rbgk-Nb6i4BFzS1bRG6n2BJpdawqHV5U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4a3ee43f20c56c2a13df3b1632f01200

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Wl5BbWAmWD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.483 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:53.602Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '4a3ee43f20c56c2a13df3b1632f01200',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4a3ee43f20c56c2a13df3b1632f01200.sq0OsAWO0%2BXyFIDxnOzJMkYldyiV1GvgeH9oh7H%2Brao',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 76.855 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:54.496Z"}
  console.log
    CSRF token generation: {
      sessionID: '1062120ed6a3cf10a1847b72bd5f535d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zi4ACqb7-kwEchTer0iPOopxBj0SNptbUWjM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1062120ed6a3cf10a1847b72bd5f535d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BC3FetqYGA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.478 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:54.888Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '1062120ed6a3cf10a1847b72bd5f535d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1062120ed6a3cf10a1847b72bd5f535d.VXRZRhc9hcNXvfp1IJ%2BGRLe2cmtdJxPz59F2WZm3GVY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 4:46:55 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 4:46:55 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 585.543 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:56.364Z"}
  console.log
    CSRF token generation: {
      sessionID: '92e83ca4c46ee0e490a3ec5bc26d0048',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ICCCSTfq-LHgUrY2k2WyZcnHHQyIPaQFT9wQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 92e83ca4c46ee0e490a3ec5bc26d0048

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Gscd5d9E3i...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.644 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:56.981Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '92e83ca4c46ee0e490a3ec5bc26d0048',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A92e83ca4c46ee0e490a3ec5bc26d0048.R2vqbcNY0ou4Vj0apvsk6e6Yxh52JXSkziqX0IcNspM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 4:46:57 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 4:46:57 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 151.734 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:57.888Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a4a0ac061f2abe4e6c5aea225b9fbe88',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mOhrr3Hl-voO-us4Vap5Ch2w4XjAvCa5CjMU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a4a0ac061f2abe4e6c5aea225b9fbe88

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _773xC_AA4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.955 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:58.235Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'a4a0ac061f2abe4e6c5aea225b9fbe88',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa4a0ac061f2abe4e6c5aea225b9fbe88.HJqjZqd2U%2FizC6KQS6cYSunH1kETD0Iu%2BFEo64qKZlY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m400[0m 57.611 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:59.069Z"}
  console.log
    CSRF token generation: {
      sessionID: '559314d6fecee1b14975a29b148571a3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lk879xV7-vWPo0eQORaT81jNl6XkUUzC0A4A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 559314d6fecee1b14975a29b148571a3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pDdhzJv9aZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.928 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:46:59.419Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '559314d6fecee1b14975a29b148571a3',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A559314d6fecee1b14975a29b148571a3.hcEYWmDhGZABu1L1c29ixNlBRV8xJaRY842rgGiMpsc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m403[0m 64.762 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:00.755Z"}
  console.log
    CSRF token generation: {
      sessionID: 'af5e27d7caa35e30086ce23747b14e1e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KmeBPN9w-aRt6zwDmxvlPeZx1A1oPa4PKbd8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: af5e27d7caa35e30086ce23747b14e1e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dvNAHXBVmG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.260 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:01.098Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: 'af5e27d7caa35e30086ce23747b14e1e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aaf5e27d7caa35e30086ce23747b14e1e.jjSLlMpbYfM7SyPiIKMsok2C7JnABtiIRj%2BuaXEgc%2Fc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 140.995 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:02.088Z"}
  console.log
    CSRF token generation: {
      sessionID: '16875f08b42e313053ddf87480f1d9ba',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xoX1pj67-TO8BLIZ7pwPWAufaoHaejAAph9k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 16875f08b42e313053ddf87480f1d9ba

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dGM5atpPBc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.460 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:02.466Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '16875f08b42e313053ddf87480f1d9ba',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A16875f08b42e313053ddf87480f1d9ba.sFsi928Nc0IBN3wutxStK8eMpETKNHI5qTrJ9%2Fi7R%2FE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 135.901 ms - 296[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:03.756Z"}
  console.log
    CSRF token generation: {
      sessionID: '785256d9da5e68fd8c64cc8355c9e026',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rBR2AiZ8-_4ADW49D_LRIVS-ZjF1K5xuyE7Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 785256d9da5e68fd8c64cc8355c9e026

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7SbilPdr1m...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.878 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/bulk/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:04.074Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/cancel {
      sessionID: '785256d9da5e68fd8c64cc8355c9e026',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A785256d9da5e68fd8c64cc8355c9e026.Dj4VV2mYbPuF0JWNxUDoZ4rZIzZ%2FJDxYO7aEQReWL3o',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/bulk/cancel [32m200[0m 169.952 ms - 161[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:05.034Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f58325329d13963405356ef74744cecf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xnRUCEoK-zfixzj_gDl8aXFIsek3vbmR7lgY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f58325329d13963405356ef74744cecf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: re5F3_Njpm...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.731 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:05.357Z"}
[0mGET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 [32m200[0m 92.140 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:06.229Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a017ab4baae77e2805a6001775013765',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 16qiq9zW-bv0GIU_UtVskr2xD2bQ8Bjy6lJ4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a017ab4baae77e2805a6001775013765

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vFKOjJmJi1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.900 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:06.577Z"}
[0mGET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 [32m200[0m 90.284 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:07.446Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e40b67aac6033dafe6d553477ad0e03',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Idxk4xvv-Fv8FTz065KYTFneMsv4Y7vxQGrQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e40b67aac6033dafe6d553477ad0e03

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -xin1qocdg...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.124 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=excel&customerId=CUST123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:07.802Z"}
[0mGET /api/v1/orders/export?format=excel&customerId=CUST123 [31m501[0m 102.196 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:08.735Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f360e6203cdb1e8ee2156dbe16d8197b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v2PSzdty-P3eaCVDumERzz_AfZjBpy7fB6JM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f360e6203cdb1e8ee2156dbe16d8197b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: L6yjc7vdFD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.439 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:09.067Z"}
[0mGET /api/v1/orders/export?format=csv [33m403[0m 30.322 ms - 70[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:09.883Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd66663c7129e0c0ae2188f3b16fa6681',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BXUdXy6z-rTV0gFWNSUs1KUhI5IJWGZ0eFGs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d66663c7129e0c0ae2188f3b16fa6681

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hp694UoPY4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.302 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:10.199Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'd66663c7129e0c0ae2188f3b16fa6681',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad66663c7129e0c0ae2188f3b16fa6681.Kw7cIakNTqM0mx3mJfpgpy3gqnymtCoHDrqkWLG0QPo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 94.506 ms - 223[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:11.114Z"}
  console.log
    CSRF token generation: {
      sessionID: '678733f88e30f9eec804582dbdd4c53b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: K4vGCN2l-xk9mM-73re8uhpcyL9NlC1Lelj8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 678733f88e30f9eec804582dbdd4c53b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DG87RHjl5o...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.468 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:11.424Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '678733f88e30f9eec804582dbdd4c53b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A678733f88e30f9eec804582dbdd4c53b.alVl91AIPLqCy74RbLg4OhVNrWJpseryIHkRZIWxfYA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 104.759 ms - 180[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:12.298Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f446269aed4d1a356a6f25716bf52822',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PkeI2d1V-4baxkduVPPnWeiQs3yxWOh4m_ao

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f446269aed4d1a356a6f25716bf52822

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5TQKh5QzBF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.042 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:12.645Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'f446269aed4d1a356a6f25716bf52822',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af446269aed4d1a356a6f25716bf52822.bPQUpmlJLm28NIwZWoK0m2UtptiT3iuJBjsYND7L3qM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [33m400[0m 61.387 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:13.471Z"}
  console.log
    CSRF token generation: {
      sessionID: '016c4f15bfbca9d72c8255fa13f4d15e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: b5EoOSdC-XgSWFrTGocEB_b9IY6jzrDE9RQg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 016c4f15bfbca9d72c8255fa13f4d15e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: exjPSLuyvp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.373 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:13.825Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '016c4f15bfbca9d72c8255fa13f4d15e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A016c4f15bfbca9d72c8255fa13f4d15e.u8oK6E5jez4Ny%2FFzRc8TFZB02B7dRSbhco8N2enwqT0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 97.929 ms - 319[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:14.682Z"}
  console.log
    CSRF token generation: {
      sessionID: '99fce1f31f24352fcb6e82a8fb29f0f9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HQxlOHbK-g22vbyznpQkQ6aZpSlxFLhJvtsE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 99fce1f31f24352fcb6e82a8fb29f0f9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yJpvVR0jWR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.002 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/search?search=alice&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:15.041Z"}
[0mGET /api/v1/orders/search?search=alice&affiliateId=AFF123 [32m200[0m 155.135 ms - 552[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:15.984Z"}
  console.log
    CSRF token generation: {
      sessionID: '8177c8511ee8cb9cadd55d4fe42f5543',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: oSwYyO6N-s0kZywNntj8fQupyEMy_IzZqnJo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8177c8511ee8cb9cadd55d4fe42f5543

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xBd-tm0_oD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.909 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=complete&date=month {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:16.349Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=complete&date=month [32m200[0m 119.276 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:17.275Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c055f6b0fad7e6f9f72697a765cc9bce',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9zhZoAXW-ysINGC6dW9JvLYMDTALyyfriIEQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c055f6b0fad7e6f9f72697a765cc9bce

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oZc_oj6AWh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.000 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=all {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:17.636Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=all [32m200[0m 114.124 ms - 945[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:18.545Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f9912991fb6de4155c3c2cd8b9a3676c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: oe4G4QYj-BZd1TOHZe64saWel9aBGF7XekZw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f9912991fb6de4155c3c2cd8b9a3676c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zO9jLqkJyx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.231 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:18.939Z"}
[0mGET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true [32m200[0m 74.036 ms - 239[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:19.788Z"}
  console.log
    CSRF token generation: {
      sessionID: '49876ee1b5ece8ffba224e9e5da95346',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6rWyPvX9-6TuKO6CJz-i3mF2ACzxsz2qpLvM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 49876ee1b5ece8ffba224e9e5da95346

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: o-4zPg5Tow...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.687 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:20.657Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '49876ee1b5ece8ffba224e9e5da95346',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A49876ee1b5ece8ffba224e9e5da95346.WZ0nGef2yZLFHd20N8qcnSFwb%2BpIlIz6xfeEGL%2FxGJE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD569030
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD569030
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 287.820 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:21.873Z"}
  console.log
    CSRF token generation: {
      sessionID: '0870d0dc6d4e308ec8a69ab1b6122c17',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sDKMqcGn-0h7fd8Al1qEhcLSFRfap9FEuP0g

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0870d0dc6d4e308ec8a69ab1b6122c17

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Sbm64SfgBc...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.235 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:22.694Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '0870d0dc6d4e308ec8a69ab1b6122c17',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0870d0dc6d4e308ec8a69ab1b6122c17.Na%2Flscbag1P1fbpO%2BudlSgDrtpkM6xIkHb%2F%2F5utLcsQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 50,
      numberOfBags: 3
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD777500
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $125.00
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD777500
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 50 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 3
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 257.815 ms - 123[0m
  console.log
    Order baseRate: 2 Expected: 2.00

      at Object.log (tests/integration/order.test.js:1139:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:23.947Z"}
  console.log
    CSRF token generation: {
      sessionID: '7dfd9197211132c05a08c2492e498b83',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: NfCvD8Dc-_tc1BsAUXsGyt8gwQJEgWW8xMyQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7dfd9197211132c05a08c2492e498b83

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kaOR24I6ti...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.790 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:24.813Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '7dfd9197211132c05a08c2492e498b83',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7dfd9197211132c05a08c2492e498b83.ygl51vyeVbVsctwykraeLu1zbkFu6MSREenvig4kwNs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-0',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-0

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test0 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test0,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD410175
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD410175
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test0 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 257.434 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:25.176Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '7dfd9197211132c05a08c2492e498b83',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7dfd9197211132c05a08c2492e498b83.ygl51vyeVbVsctwykraeLu1zbkFu6MSREenvig4kwNs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-1',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-1

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test1 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test1,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD904753
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD904753
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test1 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 251.206 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:25.522Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '7dfd9197211132c05a08c2492e498b83',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7dfd9197211132c05a08c2492e498b83.ygl51vyeVbVsctwykraeLu1zbkFu6MSREenvig4kwNs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-2',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-2

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test2 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test2,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD460953
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD460953
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test2 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 285.674 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:26.833Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd5859564f163b792243bf268a04ed4b6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: X9qDqF6d-IJwjJGDBlv95ihpzpPvAIH2oG2E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d5859564f163b792243bf268a04ed4b6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Pv3Svq-AsW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.134 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T16:47:27.598Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'd5859564f163b792243bf268a04ed4b6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad5859564f163b792243bf268a04ed4b6.%2BjAz1s%2FOQDkv87HnbfjE39JvZArjkzm0KXlWwOHob2E',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD516873
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $68.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD516873
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 253.610 ms - 125[0m
PASS tests/integration/order.test.js (56.183 s)
  Order Integration Tests
    POST /api/v1/orders
      ✓ should create order as customer (2415 ms)
      ✓ should create order as affiliate for their customer (1612 ms)
      ✓ should fail with invalid customer ID (1170 ms)
      ✓ should fail with invalid affiliate ID (1188 ms)
      ✓ should fail when customer tries to create order for another customer (1261 ms)
      ✓ should validate required fields (1098 ms)
    GET /api/v1/orders/:orderId
      ✓ should return order details for customer (1251 ms)
      ✓ should return order details for affiliate (1219 ms)
      ✓ should fail for unauthorized customer (1170 ms)
      ✓ should return 404 for non-existent order (1195 ms)
    PUT /api/v1/orders/:orderId/status
      ✓ should update order status as affiliate (1295 ms)
      ✓ should update weight when processing (1409 ms)
      ✓ should prevent invalid status transitions (1494 ms)
      ✓ should fail for unauthorized affiliate (1198 ms)
      ✓ should fail for customers (1216 ms)
    POST /api/v1/orders/:orderId/cancel
      ✓ should cancel order as customer (1868 ms)
      ✓ should cancel order as affiliate (1524 ms)
      ✓ should prevent cancelling non-cancellable orders (1181 ms)
      ✓ should fail for unauthorized user (1686 ms)
    Bulk order operations
      ✓ should update multiple orders status in bulk (1333 ms)
      ✓ should handle partial bulk update failures (1669 ms)
      ✓ should cancel multiple orders in bulk (1277 ms)
    Order export functionality
      ✓ should export orders as CSV (1195 ms)
      ✓ should export orders as JSON (1217 ms)
      ✓ should export orders as Excel (1289 ms)
      ✓ should respect export permissions (1147 ms)
    Payment status updates
      ✓ should update payment status (1231 ms)
      ✓ should handle payment failure (1184 ms)
      ✓ should prevent payment status update on non-complete orders (1173 ms)
      ✓ should record refund (1211 ms)
    Order filtering and search
      ✓ should search orders by customer name (1301 ms)
      ✓ should filter orders by multiple criteria (1289 ms)
      ✓ should filter by pickup time slots (1271 ms)
      ✓ should provide aggregated statistics with filters (1242 ms)
    Commission Calculation Tests
      ✓ should calculate commission correctly when order is completed (2084 ms)
      ✓ should use dynamic WDF rate from SystemConfig (2075 ms)
      ✓ should calculate commission for multiple orders (2885 ms)
      ✓ should handle high delivery fee scenarios (1904 ms)

-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                                                                                                                                                                                                         
-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                    |   88.08 |    78.42 |   91.76 |   88.17 |                                                                                                                                                                                                                                                                                                                                                           
 config                      |   96.68 |    87.17 |     100 |   96.53 |                                                                                                                                                                                                                                                                                                                                                           
  csrf-config.js             |    86.2 |    72.72 |     100 |    86.2 | 245-269,279-280,295,310-311                                                                                                                                                                                                                                                                                                                               
  passport-config.js         |     100 |    86.66 |     100 |     100 | 19,210,225,250-251,304,330-331                                                                                                                                                                                                                                                                                                                            
  paygistix.config.js        |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  storeIPs.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 controllers                 |   85.98 |    77.05 |   91.63 |   86.25 |                                                                                                                                                                                                                                                                                                                                                           
  administratorController.js |   89.35 |       84 |   85.96 |   89.77 | 208,225,332,405,453-454,471,481,506,586-587,674-692,726,786-787,870,928-929,989-990,1212-1221,1383-1384,1650-1651,1710,1752,1763-1764,1795-1796,1836-1837,1846-1847,1981-1995,2020,2227,2295-2296,2419-2420                                                                                                                                               
  affiliateController.js     |   86.51 |    79.01 |   96.96 |   86.24 | 207,217,248-250,284-285,302,312,327,386-387,439-440,445,505-506,529,560-563,578,667,725-726,742,825-826,861,943-944,953-986                                                                                                                                                                                                                               
  authController.js          |   74.95 |    62.03 |     100 |   74.95 | 143-144,156,189-194,198,228-229,247-248,292-301,353-354,375,461-462,477-478,486-487,516-517,567-568,615-616,666-667,682,694-699,734-742,750-751,766,790-801,817,820,842-843,868,909,933,943,953-954,1011-1028,1104-1132,1160,1284-1341,1353,1486,1533-1534,1550,1604,1635-1665,1794,1883-1914,2036,2072-2110,2122,2158,2172-2173,2185,2198,2255,2304-2305 
  customerController.js      |   91.52 |    83.85 |     100 |    91.3 | 135,214-215,234,247,270-286,296-297,316,329,341,343,345,379-380                                                                                                                                                                                                                                                                                           
  operatorController.js      |   81.44 |    72.65 |   71.05 |   82.99 | 560,634,711,727,744-745,839,856,922-923,1022,1047-1175,1192,1275-1369                                                                                                                                                                                                                                                                                     
  orderController.js         |   89.63 |    83.18 |     100 |   89.82 | 145-146,341-342,361,429-430,498-499,524,534,587-592,603-604,619,629,642,655-660,683-684,823,869,886,928-929,949-951,956,969,1064,1126-1127                                                                                                                                                                                                                
  paymentController.js       |   94.84 |    80.85 |     100 |   94.84 | 192-193,212,249-250                                                                                                                                                                                                                                                                                                                                       
  quickbooksController.js    |   94.73 |    81.81 |     100 |   94.35 | 269-270,332,408-409,438-439                                                                                                                                                                                                                                                                                                                               
  w9ControllerDocuSign.js    |   93.96 |    84.78 |     100 |   93.96 | 207,222,280,285-286,334-336,421-422,475,676                                                                                                                                                                                                                                                                                                               
 middleware                  |   89.01 |    81.92 |   89.36 |   88.52 |                                                                                                                                                                                                                                                                                                                                                           
  auth.js                    |   86.07 |    90.62 |     100 |   86.07 | 57-90                                                                                                                                                                                                                                                                                                                                                     
  cspNonce.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  errorHandler.js            |    72.3 |    63.26 |     100 |    72.3 | 10,81-96,102-103                                                                                                                                                                                                                                                                                                                                          
  rateLimiting.js            |   66.66 |       24 |    37.5 |   65.51 | 24-33,117,135,166,183,190-200                                                                                                                                                                                                                                                                                                                             
  rbac.js                    |     100 |    95.45 |     100 |     100 | 248,268,274,301                                                                                                                                                                                                                                                                                                                                           
  sanitization.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 models                      |   93.88 |    86.11 |   96.39 |    94.1 |                                                                                                                                                                                                                                                                                                                                                           
  Administrator.js           |   85.89 |    72.22 |   94.11 |   87.67 | 137-159                                                                                                                                                                                                                                                                                                                                                   
  Affiliate.js               |   83.72 |    70.45 |     100 |   83.72 | 89,201-204,213,217                                                                                                                                                                                                                                                                                                                                        
  CallbackPool.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Customer.js                |     100 |       50 |     100 |     100 | 30-36                                                                                                                                                                                                                                                                                                                                                     
  DocuSignToken.js           |   86.36 |    81.81 |     100 |   86.36 | 101,126-127                                                                                                                                                                                                                                                                                                                                               
  OAuthSession.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Operator.js                |   91.66 |    85.36 |   89.47 |   91.48 | 168,179,199-207                                                                                                                                                                                                                                                                                                                                           
  Order.js                   |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Payment.js                 |   88.09 |    55.55 |   88.88 |   88.09 | 237-245                                                                                                                                                                                                                                                                                                                                                   
  PaymentExport.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  PaymentMethod.js           |   96.96 |    95.65 |     100 |   96.92 | 229,233                                                                                                                                                                                                                                                                                                                                                   
  PaymentToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  RefreshToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  SystemConfig.js            |     100 |     98.3 |     100 |     100 | 70                                                                                                                                                                                                                                                                                                                                                        
  TokenBlacklist.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Transaction.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 routes                      |   84.52 |    75.26 |   67.21 |   84.49 |                                                                                                                                                                                                                                                                                                                                                           
  administratorRoutes.js     |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  affiliateRoutes.js         |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  authRoutes.js              |   91.66 |    83.33 |      75 |   91.66 | 66,189-190                                                                                                                                                                                                                                                                                                                                                
  coverageRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  customerRoutes.js          |   95.83 |    83.33 |     100 |   95.83 | 43                                                                                                                                                                                                                                                                                                                                                        
  docsRoutes.js              |   34.61 |        0 |       0 |   34.61 | 10-45                                                                                                                                                                                                                                                                                                                                                     
  embedRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  generalPaymentCallback.js  |   93.02 |    95.83 |     100 |   93.02 | 45-46,82-83,303-304                                                                                                                                                                                                                                                                                                                                       
  monitoringRoutes.js        |      40 |      100 |       0 |      40 | 9-11,19-115,128                                                                                                                                                                                                                                                                                                                                           
  operatorRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  orderRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  paymentCallbackRoute.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  paymentRoutes.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  quickbooksRoutes.js        |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  routingRoutes.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  socialAuthRoutes.js        |   83.05 |       80 |   69.23 |   83.05 | 50-51,86-91,103,120-125,159                                                                                                                                                                                                                                                                                                                               
  systemConfigRoutes.js      |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  testRoutes.js              |   20.63 |        0 |       0 |   20.63 | 11-14,21-31,37-109,115-167,173-183                                                                                                                                                                                                                                                                                                                        
  w9Routes.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 services                    |   91.07 |    76.36 |     100 |   90.99 |                                                                                                                                                                                                                                                                                                                                                           
  callbackPoolManager.js     |   94.44 |    61.11 |     100 |   94.44 | 13-17                                                                                                                                                                                                                                                                                                                                                     
  docusignService.js         |      90 |    79.34 |     100 |   89.88 | 67-75,172,231-232,265,360,453-454,509-510,572-573,595-596,625-626                                                                                                                                                                                                                                                                                         
 services/paygistix          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  index.js                   |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 utils                       |   91.07 |    74.78 |   97.75 |   90.99 |                                                                                                                                                                                                                                                                                                                                                           
  auditLogger.js             |     100 |    97.14 |     100 |     100 | 101                                                                                                                                                                                                                                                                                                                                                       
  cspHelper.js               |   62.96 |       50 |     100 |   61.53 | 15-42,56-57,74-75                                                                                                                                                                                                                                                                                                                                         
  emailService.js            |   91.48 |    62.81 |   96.42 |   91.48 | 334,482,617,843,870,1103-1104,1249,1409,1523,1550,1672,1699,1822,1938,2084-2088,2096-2104                                                                                                                                                                                                                                                                 
  encryption.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  fieldFilter.js             |   85.71 |    72.41 |     100 |   87.71 | 146,207-212                                                                                                                                                                                                                                                                                                                                               
  helpers.js                 |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  logger.js                  |     100 |       50 |     100 |     100 | 11-30                                                                                                                                                                                                                                                                                                                                                     
  paginationMiddleware.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  passwordValidator.js       |   90.83 |    89.71 |     100 |   89.81 | 141-145,193,231-232,234-235,246-247                                                                                                                                                                                                                                                                                                                       
  qrCodeGenerator.js         |   28.57 |        0 |       0 |   28.57 | 11-17                                                                                                                                                                                                                                                                                                                                                     
  validators.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for branches (80%) not met: 78.42%
Summary of all failing tests
FAIL tests/unit/customerDashboardWdfCredit.test.js (7.912 s)
  ● Customer Dashboard WDF Credit Display › Dashboard Stats with WDF Credit › should show zero WDF credit for new customers

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      121 |       const responseData = JSON.parse(res._getData());
      122 |       
    > 123 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      124 |         amount: 0,
      125 |         updatedAt: null,
      126 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:123:48)

  ● Customer Dashboard WDF Credit Display › Edge Cases › should handle null WDF credit fields gracefully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      314 |       const responseData = JSON.parse(res._getData());
      315 |       
    > 316 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      317 |         amount: 0,
      318 |         updatedAt: null,
      319 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:316:48)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

FAIL tests/unit/coverageRoutes.test.js
  ● Coverage Routes › Route Handlers › should serve index.html at root path

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      131 |         .expect(200);
      132 |
    > 133 |       expect(response.headers['cache-control']).toContain('no-cache');
          |                                                 ^
      134 |       expect(response.headers['cache-control']).toContain('no-store');
      135 |     });
      136 |

      at Object.toContain (tests/unit/coverageRoutes.test.js:133:49)

  ● Coverage Routes › Route Handlers › should serve critical-files page

    expect(received).toBeDefined()

    Received: undefined

      141 |
      142 |       // Express serves static files with default cache headers
    > 143 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      144 |     });
      145 |
      146 |     test('should serve test-templates page', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:143:49)

  ● Coverage Routes › Route Handlers › should serve test-templates page

    expect(received).toBeDefined()

    Received: undefined

      150 |
      151 |       // Express serves static files with default cache headers
    > 152 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      153 |     });
      154 |
      155 |     test('should serve action-plan page', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:152:49)

  ● Coverage Routes › Route Handlers › should serve action-plan page

    expect(received).toBeDefined()

    Received: undefined

      159 |
      160 |       // Express serves static files with default cache headers
    > 161 |       expect(response.headers['cache-control']).toBeDefined();
          |                                                 ^
      162 |     });
      163 |
      164 |     test('should return 404 for non-existent pages', async () => {

      at Object.toBeDefined (tests/unit/coverageRoutes.test.js:161:49)

  ● Coverage Routes › Edge Cases › should handle root path without trailing slash

    expected 301 "Moved Permanently", got 200 "OK"

      314 |       const response = await request(app)
      315 |         .get('/coverage')
    > 316 |         .expect(301); // Redirect to /coverage/
          |          ^
      317 |
      318 |       expect(response.headers.location).toBe('/coverage/');
      319 |     });

      at Object.expect (tests/unit/coverageRoutes.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/bagTracking.test.js
  ● Bag Tracking System › weighBags › should add bags to order and update status

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Bags weighed successfully",
    -   "order": ObjectContaining {
    -     "actualWeight": 10,
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "bagNumber": 1,
    -         "status": "processing",
    -         "weight": 5.5,
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "bagNumber": 2,
    -         "status": "processing",
    -         "weight": 4.5,
    -       },
    -     ],
    -     "orderId": "ORD-123456",
    -     "status": "processing",
    -   },
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 0,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      146 |       await operatorController.weighBags(req, res);
      147 |
    > 148 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      149 |         success: true,
      150 |         order: expect.objectContaining({
      151 |           orderId: 'ORD-123456',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:148:24)

  ● Bag Tracking System › weighBags › should prevent duplicate bag IDs

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      211 |       await operatorController.weighBags(req, res);
      212 |
    > 213 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      214 |       expect(res.json).toHaveBeenCalledWith({
      215 |         success: false,
      216 |         error: 'Duplicate bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:213:26)

  ● Bag Tracking System › scanProcessed › should update bag status to processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -     "weight": 5,
    -   },
    -   "message": "Bag 1 marked as processed",
    -   "order": Any<Object>,
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 1,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      258 |       await operatorController.scanProcessed(req, res);
      259 |
    > 260 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      261 |         success: true,
      262 |         order: expect.any(Object),
      263 |         bag: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:260:24)

  ● Bag Tracking System › scanProcessed › should show warning for already processed bag

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -   },
    -   "message": "This bag has already been processed. 1 bags still need processing.",
    -   "remainingCount": 1,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
        "success": false,
    -   "warning": "duplicate_scan",
      },

    Number of calls: 1

      317 |       await operatorController.scanProcessed(req, res);
      318 |
    > 319 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      320 |         success: false,
      321 |         warning: 'duplicate_scan',
      322 |         message: 'This bag has already been processed. 1 bags still need processing.',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:319:24)

  ● Bag Tracking System › scanProcessed › should trigger completion actions when all bags processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "action": "show_pickup_modal",
    -   "allBagsProcessed": true,
    -   "message": "All bags processed - ready for pickup",
    -   "order": ObjectContaining {
    -     "status": "processed",
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      380 |       await operatorController.scanProcessed(req, res);
      381 |
    > 382 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      383 |         success: true,
      384 |         action: 'show_pickup_modal',
      385 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:382:24)

  ● Bag Tracking System › completePickup › should complete order when all bags scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Order pickup completed successfully",
    -   "order": ObjectContaining {
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "status": "completed",
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "status": "completed",
    -       },
    -     ],
    -     "status": "complete",
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      440 |       await operatorController.completePickup(req, res);
      441 |
    > 442 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      443 |         success: true,
      444 |         message: 'Order pickup completed successfully',
      445 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:442:24)

  ● Bag Tracking System › completePickup › should reject if bag count mismatch

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      497 |       await operatorController.completePickup(req, res);
      498 |
    > 499 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      500 |       expect(res.json).toHaveBeenCalledWith({
      501 |         success: false,
      502 |         error: 'Bag count mismatch',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:499:26)

  ● Bag Tracking System › completePickup › should reject if wrong bag scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      543 |       await operatorController.completePickup(req, res);
      544 |
    > 545 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      546 |       expect(res.json).toHaveBeenCalledWith({
      547 |         success: false,
      548 |         error: 'Invalid bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:545:26)

FAIL tests/unit/wdfCredit.test.js (8.91 s)
  ● WDF Credit System › WDF Credit Application › should apply positive WDF credit to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      224 |
      225 |       // Check response
    > 226 |       expect(res.statusCode).toBe(201);
          |                              ^
      227 |       const responseData = JSON.parse(res._getData());
      228 |       expect(responseData.success).toBe(true);
      229 |       expect(responseData.wdfCreditApplied).toBe(10.00);

      at Object.toBe (tests/unit/wdfCredit.test.js:226:30)

  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      266 |
      267 |       // Check response
    > 268 |       expect(res.statusCode).toBe(201);
          |                              ^
      269 |       const responseData = JSON.parse(res._getData());
      270 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      271 |

      at Object.toBe (tests/unit/wdfCredit.test.js:268:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      305 |       // Verify no credit was applied
      306 |       const responseData = JSON.parse(res._getData());
    > 307 |       expect(responseData.wdfCreditApplied).toBe(0);
          |                                             ^
      308 |
      309 |       const newOrder = await Order.findOne({ orderId: responseData.orderId });
      310 |       expect(newOrder.wdfCreditApplied).toBe(0);

      at Object.toBe (tests/unit/wdfCredit.test.js:307:45)

  ● WDF Credit System › Edge Cases › should handle concurrent bag weighing correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      436 |       // Verify final state
      437 |       const updatedOrder = await Order.findOne({ orderId: order.orderId });
    > 438 |       expect(updatedOrder.bagsWeighed).toBe(2);
          |                                        ^
      439 |       expect(updatedOrder.actualWeight).toBe(45);
      440 |       expect(updatedOrder.wdfCreditGenerated).toBe(6.25); // (45-40) * 1.25
      441 |     });

      at Object.toBe (tests/unit/wdfCredit.test.js:438:40)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

FAIL tests/unit/operatorController.test.js (5.32 s)
  ● Operator Controller › scanCustomer › should scan customer and return current order

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    @@ -2,10 +2,11 @@
        "action": "weight_input",
        "currentOrder": true,
        "order": Object {
          "actualWeight": undefined,
          "affiliateName": "N/A",
    +     "bags": Array [],
          "bagsPickedUp": 0,
          "bagsProcessed": 0,
          "bagsWeighed": 0,
          "customerName": "John Doe",
          "estimatedWeight": 30,,

    Number of calls: 1

       997 |
       998 |       expect(Customer.findOne).toHaveBeenCalledWith({ customerId: 'CUST123' });
    >  999 |       expect(res.json).toHaveBeenCalledWith({
           |                        ^
      1000 |         success: true,
      1001 |         currentOrder: true,
      1002 |         action: 'weight_input',

      at Object.toHaveBeenCalledWith (tests/unit/operatorController.test.js:999:24)

FAIL tests/integration/wdfCreditIntegration.test.js (13.767 s)
  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit fields in customer profile

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should handle order not found error when weighing bags

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should prevent duplicate bag weighing

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Concurrent Operations › should handle concurrent credit updates correctly

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)


Test Suites: 6 failed, 99 passed, 105 total
Tests:       27 failed, 4 skipped, 2088 passed, 2119 total
Snapshots:   0 total
Time:        754.751 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
