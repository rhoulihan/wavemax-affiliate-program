
> wavemax-affiliate-program@1.0.0 test:coverage
> jest --coverage --runInBand --forceExit

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/logger.test.js
  Logger Utility
    ✓ should export logger methods (75 ms)
    ✓ should be a winston logger instance (17 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/routingRoutes.test.js
  Routing Routes
    GET /
      ✓ should serve filmwalk index.html (24 ms)
      ✓ should handle root path without trailing slash (5 ms)
      ✓ should return 404 for non-existent paths (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentModel.test.js
  Payment Model Methods
    Instance Methods
      ✓ should determine if payment can be captured (256 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryption.test.js
  Encryption Utility
    ✓ should hash password correctly (56 ms)
    ✓ should verify password correctly (163 ms)
    ✓ should encrypt and decrypt data correctly (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixService.test.js
  Paygistix Service
    getConfig
      ✓ should return client config from paygistixConfig (2 ms)
    isConfigured
      ✓ should return true when properly configured (1 ms)
      ✓ should return false when not configured

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paginationMiddleware.test.js (5.542 s)
  Pagination Middleware
    ✓ should set default pagination values when no query params provided (2 ms)
    ✓ should parse page and limit from query params (1 ms)
    ✓ should enforce minimum values
    ✓ should enforce maximum limit
    ✓ should handle non-numeric values (1 ms)
    ✓ should calculate skip correctly for different pages
    ✓ should handle floating point numbers (1 ms)
    ✓ should preserve other query parameters (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/helpers.test.js
  Helpers Utility Functions
    formatCurrency
      ✓ should format a number as USD currency by default (29 ms)
      ✓ should handle null and undefined amounts
      ✓ should handle NaN values (1 ms)
      ✓ should parse string amounts
      ✓ should format with different currencies (1 ms)
      ✓ should handle negative amounts (1 ms)
      ✓ should round to 2 decimal places (1 ms)
    formatDate
      ✓ should format date with short format by default (8 ms)
      ✓ should format date with long format (1 ms)
      ✓ should format date with ISO format (1 ms)
      ✓ should handle string dates
      ✓ should handle null and undefined dates
      ✓ should handle invalid dates (1 ms)
      ✓ should handle different format cases

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportGoogleOnly.test.js
  Google OAuth Passport Configuration - Isolated
    ✓ should handle Google OAuth callback correctly (1 ms)
    ✓ should configure Google strategy with correct parameters
    ✓ should support state parameter for context detection

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/quickbooksRoutesSimple.test.js
  QuickBooks Routes - Simple
    GET /api/quickbooks/vendors/export
      ✓ should export vendors (14 ms)
      ✓ should export vendors as CSV (3 ms)
    GET /api/quickbooks/payments/export
      ✓ should export payment summary (3 ms)
    GET /api/quickbooks/commissions/export
      ✓ should export commission detail (2 ms)
    GET /api/quickbooks/exports
      ✓ should get export history (3 ms)
      ✓ should filter export history by type (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateModel.test.js
  Affiliate Model Methods
    Virtual Properties
      ✓ should calculate full name virtual property (160 ms)
    Payment Methods
      ✓ should determine if affiliate can receive payments (169 ms)
    W9 Status Display
      ✓ should return correct W9 status display text (198 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportFacebookOnly.test.js
  Facebook OAuth Passport Configuration - Isolated
    ✓ should handle Facebook OAuth callback correctly (1 ms)
    ✓ should configure Facebook strategy with profile fields (1 ms)
    ✓ should configure Facebook strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportLinkedInOnly.test.js
  LinkedIn OAuth Passport Configuration - Isolated
    ✓ should handle LinkedIn OAuth callback correctly (2 ms)
    ✓ should configure LinkedIn strategy with correct scope
    ✓ should configure LinkedIn strategy with correct parameters (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorAdditional.test.js
  Administrator Model - Additional Coverage
    Permission Methods
      ✓ should check single permission with hasPermission (234 ms)
      ✓ should check all permissions with hasAllPermissions (249 ms)
    Password History
      ✓ should check if password is in history (667 ms)
      ✓ should handle empty password history (183 ms)
    Virtual Properties
      ✓ should calculate isLocked virtual property correctly (141 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /non-existent-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /protected-file.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /file%20with%20spaces.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /../../../etc/passwd

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /styles.css

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /script.js

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] POST /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] PUT /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] DELETE /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

PASS tests/unit/coverageRoutesAdditional.test.js
  Coverage Routes - Additional Coverage
    Error Handler Function
      ✓ should handle file not found errors (9 ms)
      ✓ should handle permission denied errors (4 ms)
    Static File Serving Edge Cases
      ✓ should handle requests with special characters in filename (4 ms)
      ✓ should handle requests with directory traversal attempts (3 ms)
      ✓ should serve CSS files with proper headers (4 ms)
      ✓ should serve JS files with proper headers (3 ms)
    Environment-specific Behavior
      ✓ should handle staging environment (2 ms)
    Request Method Handling
      ✓ should reject POST requests (3 ms)
      ✓ should reject PUT requests (4 ms)
      ✓ should reject DELETE requests (3 ms)
    Concurrent Request Handling
      ✓ should handle multiple simultaneous requests (21 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutesSimple.test.js
  Order Routes - Simple
    POST /api/orders
      ✓ should create order with valid data (16 ms)
    GET /api/orders/export
      ✓ should export orders (4 ms)
    GET /api/orders/search
      ✓ should search orders (4 ms)
    GET /api/orders/statistics
      ✓ should get order statistics (2 ms)
    PUT /api/orders/bulk/status
      ✓ should bulk update order status (3 ms)
    POST /api/orders/bulk/cancel
      ✓ should bulk cancel orders (2 ms)
    GET /api/orders/:orderId
      ✓ should get order details (2 ms)
    PUT /api/orders/:orderId/status
      ✓ should update order status (2 ms)
    POST /api/orders/:orderId/cancel
      ✓ should cancel order (2 ms)
    PUT /api/orders/:orderId/payment-status
      ✓ should update payment status (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModelSimple.test.js
  Order Model - Line Coverage
    SystemConfig Error Handling (Line 110)
      ✓ should use default base rate when SystemConfig.getValue throws error (248 ms)
    Status Timestamp Updates (Lines 132-148)
      ✓ should set processingStartedAt when status changes to processing (234 ms)
      ✓ should set processedAt when status changes to processed (236 ms)
      ✓ should set completedAt when status changes to complete (234 ms)
      ✓ should set cancelledAt when status changes to cancelled (240 ms)
      ✓ should not overwrite existing timestamps (252 ms)
    Actual Weight and Commission Calculations
      ✓ should calculate actualTotal and commission when actualWeight is set (229 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:43.888Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:44.076Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T19:29:44.113Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:44.307Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:44.441Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:45.113Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:29:45.246Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

PASS tests/unit/docusignToken.test.js
  DocuSignToken Model
    saveToken
      ✓ should save a new token with all fields (195 ms)
      ✓ should update existing token if one exists (231 ms)
      ✓ should calculate expiration time correctly (127 ms)
    getCurrentToken
      ✓ should return the most recent token (159 ms)
      ✓ should return null if no tokens exist (107 ms)
    clearTokens
      ✓ should remove all tokens (260 ms)
    token expiration
      ✓ should identify expired tokens (150 ms)
      ✓ should handle tokens without refresh token (132 ms)
    lastUsed tracking
      ✓ should update lastUsed when token is accessed (257 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/modelsAdditional.test.js
  Models - Additional Coverage
    Administrator Model - Pre-save Hook
      ✓ should add password to history on password change (158 ms)
      ✓ should limit password history to 5 entries (161 ms)
    Payment Model - Helper Methods
      ✓ should have a method to format payment display (165 ms)
      ✓ should validate payment can be refunded (119 ms)
      ✓ should calculate net amount after fees (166 ms)
    Edge Cases and Error Handling
      ✓ should handle missing required fields gracefully (118 ms)
      ✓ should handle invalid enum values (112 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethodModel.test.js
  PaymentMethod Model Methods
    Virtual Properties
      ✓ should calculate displayName for card payment method (97 ms)
      ✓ should calculate displayName for bank account payment method (91 ms)
      ✓ should return unknown for unsupported payment type (77 ms)
      ✓ should check if card is expired (96 ms)
    Static Methods
      ✓ should find default payment method for customer (405 ms)
      ✓ should find active payment methods for customer (216 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderRoutes.isolated.test.js
  Order Routes - Isolated V2
    ✓ POST /api/orders - should create a new order (20 ms)
    ✓ GET /api/orders/export - should export orders (4 ms)
    ✓ GET /api/orders/search - should search orders (3 ms)
    ✓ GET /api/orders/statistics - should get statistics (3 ms)
    ✓ PUT /api/orders/bulk/status - should bulk update (3 ms)
    ✓ POST /api/orders/bulk/cancel - should bulk cancel (8 ms)
    ✓ GET /api/orders/:orderId - should get order details (2 ms)
    ✓ PUT /api/orders/:orderId/status - should update status (2 ms)
    ✓ POST /api/orders/:orderId/cancel - should cancel order (4 ms)
    ✓ PUT /api/orders/:orderId/payment-status - should update payment (3 ms)
    ✓ Error handling - should return 404 for unknown routes (3 ms)
    ✓ Error handling - should handle controller errors (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/authRoutesSimple.test.js
  Auth Routes - Simple
    POST /api/auth/login
      ✓ should login with valid credentials (7 ms)
      ✓ should reject invalid credentials (2 ms)
    POST /api/auth/register
      ✓ should register new user (2 ms)
    POST /api/auth/logout
      ✓ should logout with valid token (1 ms)
      ✓ should reject logout without token (1 ms)
    POST /api/auth/forgot-password
      ✓ should send password reset email (2 ms)
    POST /api/auth/reset-password
      ✓ should reset password with valid token (2 ms)
    GET /api/auth/verify-email/:token
      ✓ should verify email with valid token (2 ms)
    POST /api/auth/refresh-token
      ✓ should refresh token (11 ms)
    GET /api/auth/me
      ✓ should get current user with valid token (2 ms)
      ✓ should reject without token (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateLoginInit.test.js
  Affiliate Login Initialization
    Module Loading
      ✓ should initialize when form is found (6 ms)
      ✓ should handle missing form gracefully (1 ms)
    URL Parameter Handling Logic
      ✓ should correctly parse customer parameter from URL
      ✓ should handle URL without customer parameter
      ✓ should construct redirect URL correctly with customer parameter
      ✓ should construct redirect URL correctly without customer parameter
    URL Validation
      ✓ should validate customer ID format (1 ms)
      ✓ should handle URL encoding correctly
    Integration with Email URLs
      ✓ should parse email-generated URLs correctly
      ✓ should handle both login and customer parameters together
    Parameter Preservation Logic
      ✓ should preserve customer parameter through login flow (1 ms)
      ✓ should handle multiple URL parameters correctly

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.isolated.test.js
  Payment Routes - Isolated
    GET /api/v1/payments/config
      ✓ should return payment configuration (6 ms)
    POST /api/v1/payments/log-submission
      ✓ should log payment submission (6 ms)
    POST /api/v1/payments/create-token
      ✓ should create payment token (3 ms)
    GET /api/v1/payments/check-status/:token
      ✓ should check payment status (3 ms)
    POST /api/v1/payments/cancel-token/:token
      ✓ should cancel payment token (3 ms)
    POST /api/v1/payments/update-status/:token
      ✓ should update payment status (4 ms)
    GET /api/v1/payments/pool-stats
      ✓ should return pool statistics (9 ms)
    Error Handling
      ✓ should handle controller errors gracefully (2 ms)
      ✓ should handle missing routes with 404 (3 ms)
    Request Validation
      ✓ should pass through request headers (2 ms)
      ✓ should handle JSON parsing errors (4 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Export orders error: Error: Export failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:114:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      827 |     }
      828 |   } catch (error) {
    > 829 |     console.error('Export orders error:', error);
          |             ^
      830 |     res.status(500).json({
      831 |       success: false,
      832 |       message: 'An error occurred while exporting orders'

      at error (server/controllers/orderController.js:829:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:117:7)

  console.error
    Search orders error: Error: Search failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerUncovered.test.js:237:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |     });
      1035 |   } catch (error) {
    > 1036 |     console.error('Search orders error:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'An error occurred while searching orders'

      at error (server/controllers/orderController.js:1036:13)
      at Object.<anonymous> (tests/unit/orderControllerUncovered.test.js:240:7)

PASS tests/unit/orderControllerUncovered.test.js
  Order Controller - Uncovered Functions
    exportOrders
      ✓ should export orders as CSV (322 ms)
      ✓ should export orders as Excel (131 ms)
      ✓ should export orders as JSON by default (111 ms)
      ✓ should handle export errors (129 ms)
    searchOrders
      ✓ should search orders by customer name (113 ms)
      ✓ should search orders without search term (113 ms)
      ✓ should handle search with no results (122 ms)
      ✓ should handle search errors (117 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administratorEmailService.test.js
  Administrator Email Service Tests
    sendAdministratorWelcomeEmail
      ✓ should call sendAdministratorWelcomeEmail function (1 ms)
      ✓ should handle admin with different permission sets (1 ms)
      ✓ should handle admin with single permission
      ✓ should handle admin with no permissions (1 ms)
    sendAdministratorPasswordResetEmail
      ✓ should call sendAdministratorPasswordResetEmail function
      ✓ should handle different reset URLs
    Email template data processing
      ✓ should replace uppercase placeholders correctly (1 ms)
      ✓ should handle missing placeholders gracefully
      ✓ should include current year in template data (1 ms)
      ✓ should format permissions correctly as comma-separated string
      ✓ should handle empty permissions array
      ✓ should handle single permission (1 ms)
    Email service integration
      ✓ should be available as a module export
      ✓ should not throw error when sending welcome email
      ✓ should not throw error when sending password reset email
    Admin data validation
      ✓ should handle admin with required fields (1 ms)
      ✓ should handle admin with different adminId formats (1 ms)
      ✓ should handle admin with different email formats

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminDirectly.test.js
  Create Admin Directly Script Unit Tests
    generateAdminId function
      ✓ should generate ADM001 when no administrators exist (3 ms)
      ✓ should generate next sequential ID when administrators exist
      ✓ should handle double-digit admin IDs correctly (1 ms)
    Permission selection
      ✓ should handle "all" permission selection
      ✓ should handle specific permission selection
      ✓ should filter out invalid permission numbers
    Database operations
      ✓ should connect to MongoDB successfully
      ✓ should create administrator with correct data (1 ms)
      ✓ should handle database save errors
    Email functionality
      ✓ should send welcome email after admin creation (1 ms)
      ✓ should handle email sending errors gracefully
    Input validation
      ✓ should handle empty input fields (1 ms)
      ✓ should handle whitespace in permission input
    Error handling
      ✓ should handle MongoDB connection errors (1 ms)
      ✓ should close database connection in finally block
      ✓ should close readline interface in finally block (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderModel.test.js
  Order Model - Additional Coverage
    Pre-save Hook Coverage
      SystemConfig Error Handling
        ✓ should use default base rate when SystemConfig.getValue throws error (355 ms)
      Status Timestamp Updates
        ✓ should set processingStartedAt timestamp when status changes to processing (214 ms)
        ✓ should not overwrite existing processingStartedAt timestamp (217 ms)
      Actual Weight and Commission Calculations
        ✓ should calculate actual total and commission when actual weight is set (210 ms)
        ✓ should set processedAt timestamp when status changes to processed (219 ms)
        ✓ should set completedAt timestamp when status changes to complete (222 ms)
        ✓ should set cancelledAt timestamp when status changes to cancelled (223 ms)
        ✓ should properly calculate commission with different fee structures (185 ms)
        ✓ should not overwrite existing timestamps (214 ms)
      Edge Cases
        ✓ should handle status change to processing (221 ms)
        ✓ should calculate commission for large orders (214 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/wdfCreditModel.test.js (5.566 s)
  WDF Credit Model Tests
    Order Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (259 ms)
      ✓ should calculate estimated total with positive WDF credit (280 ms)
      ✓ should calculate estimated total with negative WDF credit (debit) (306 ms)
      ✓ should calculate actual total with WDF credit when weight is updated (355 ms)
      ✓ should store weight difference and generated credit (258 ms)
    Customer Model - WDF Credit Fields
      ✓ should have WDF credit tracking fields (298 ms)
      ✓ should store positive WDF credit (256 ms)
      ✓ should store negative WDF credit (debit) (265 ms)
    WDF Credit Calculation Logic
      ✓ should handle precision correctly (353 ms)
      ✓ should handle zero credit correctly (566 ms)
    Order Total Recalculation
      ✓ should recalculate total when weight changes (401 ms)
      ✓ should maintain affiliate commission calculation with WDF credit (447 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailService.test.js
  Email Service Mock
    All Email Functions
      ✓ should have all required email functions mocked (2 ms)
      ✓ should return expected mock response for all functions (5 ms)
      ✓ should track function calls correctly (1 ms)
      ✓ should handle errors when mocked to reject (9 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/controllersAdditional.test.js
  Controllers - Additional Function Coverage
    Order Controller - Additional Functions
      searchOrders - Additional Cases
        ✓ should handle search with affiliate filter (54 ms)
        ✓ should handle empty search query (66 ms)
      exportOrders - Edge Cases
        ✓ should handle export with date filters (77 ms)
      getOrderStatistics - Various Scenarios
        ✓ should get order statistics with time range (66 ms)
        ✓ should handle statistics for affiliate user (53 ms)
    Affiliate Controller - Additional Functions
      getAffiliateDashboardStats - Edge Cases
        ✓ should handle empty statistics (64 ms)
        ✓ should handle date range filters (111 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:56:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:62:7)

  console.error
    Error creating administrator: Error: Duplicate key
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:79:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at error (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:85:7)

  console.error
    Error deleting administrator: TypeError: Cannot read properties of undefined (reading 'length')
        at length (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:352:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:164:7)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at error (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:164:7)

  console.error
    Error fetching dashboard data: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerAdditional.test.js:225:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1249 |
      1250 |   } catch (error) {
    > 1251 |     console.error('Error fetching dashboard data:', error);
           |             ^
      1252 |     res.status(500).json({
      1253 |       success: false,
      1254 |       message: 'Failed to fetch dashboard data'

      at error (server/controllers/administratorController.js:1251:13)
      at Object.<anonymous> (tests/unit/administratorControllerAdditional.test.js:227:7)

PASS tests/unit/administratorControllerAdditional.test.js
  Administrator Controller - Additional Coverage
    createAdministrator - Error Handling
      ✓ should handle validation errors from pre-save hooks (144 ms)
      ✓ should handle duplicate email errors (129 ms)
    updateAdministrator - Edge Cases
      ✓ should prevent self-deactivation (60 ms)
      ✓ should handle administrator not found (68 ms)
    deleteAdministrator - Error Cases
      ✓ should prevent deleting the last administrator with full permissions (51 ms)
      ✓ should handle deletion errors (90 ms)
    getDashboard - Complex Scenarios
      ✓ should handle empty analytics data (52 ms)
      ✓ should handle database errors gracefully (53 ms)
    getOrderAnalytics - Date Range Handling
      ✓ should handle custom date range (65 ms)
      ✓ should handle invalid date format (59 ms)
    Helper Functions
      ✓ should export updateOperatorStats function (51 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paygistixConfig.test.js
  Paygistix Config
    validateEnvironment
      ✓ should warn when required environment variables are missing (1 ms)
      ✓ should not warn when all required variables are present (2 ms)
    getEnvironment
      ✓ should return configured environment (1 ms)
      ✓ should default to production if not configured (1 ms)
    getMerchantId
      ✓ should return merchant ID when configured (1 ms)
      ✓ should throw error when not configured (10 ms)
    getFormId
      ✓ should return form ID when configured (1 ms)
      ✓ should throw error when not configured (1 ms)
    getFormHash
      ✓ should return form hash when configured (1 ms)
      ✓ should throw error when not configured (1 ms)
    getFormActionUrl
      ✓ should return configured form action URL (1 ms)
      ✓ should return default URL when not configured
    getReturnUrl
      ✓ should return configured return URL
      ✓ should return default URL when not configured (1 ms)
    isConfigured
      ✓ should return true when all required config is present (1 ms)
      ✓ should return false and log error when config is incomplete
    getClientConfig
      ✓ should return complete client config when properly configured (1 ms)
      ✓ should throw and log error when config is missing (1 ms)
      ✓ should set testModeEnabled to false when not configured (1 ms)
    getFullConfig
      ✓ should return complete config including hash (1 ms)
      ✓ should throw and log error when config is missing (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/affiliateDashboardInit.test.js
  Affiliate Dashboard Customer Filtering
    URL Parameter Detection Logic
      ✓ should detect customer parameter from URL search params (2 ms)
      ✓ should handle URL without customer parameter
      ✓ should parse customer parameter from complex URL (1 ms)
      ✓ should handle regex pattern matching for customer parameter
    Customer Highlighting Logic
      ✓ should identify highlighted customer correctly (1 ms)
      ✓ should generate correct CSS classes for highlighted customer
      ✓ should generate correct HTML content for highlighted customer (1 ms)
      ✓ should not highlight non-matching customers
    Tab Switching Logic
      ✓ should determine correct tab activation based on customer parameter
      ✓ should not switch tabs when no customer parameter (1 ms)
      ✓ should handle empty string customer parameter
    Authentication Check Logic
      ✓ should identify authenticated state correctly
      ✓ should identify unauthenticated state when missing token
      ✓ should identify unauthenticated state when missing affiliate (1 ms)
    Customer Data Processing
      ✓ should handle empty customer list
      ✓ should process customer list without filtering (1 ms)
      ✓ should filter customer list by customer ID
    URL Construction and Validation
      ✓ should construct API URLs correctly
      ✓ should validate customer ID format
    Timing and Delays
      ✓ should calculate correct delay for tab switching
      ✓ should handle immediate execution when no customer parameter

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.test.js
  Payment Routes
    Static Routes
      GET /api/v1/payments/config
        ✓ should return payment configuration (11 ms)
      POST /api/v1/payments/log-submission
        ✓ should log payment submission (9 ms)
      POST /api/v1/payments/create-token
        ✓ should create payment token (3 ms)
      GET /api/v1/payments/check-status/:token
        ✓ should check payment status (2 ms)
      POST /api/v1/payments/cancel-token/:token
        ✓ should cancel payment token (2 ms)
      POST /api/v1/payments/update-status/:token
        ✓ should update payment status (3 ms)
      GET /api/v1/payments/pool-stats
        ✓ should return pool statistics (3 ms)
    Dynamic Callback Routes
      ✓ should handle GET callback routes (2 ms)
      ✓ should handle POST callback routes (3 ms)
      ✓ should handle multiple callback paths (4 ms)
    Error Handling
      ✓ should handle controller errors gracefully (2 ms)
      ✓ should handle missing routes with 404 (4 ms)
      ✓ should handle JSON parsing errors (3 ms)
    Request Validation
      ✓ should pass through request headers (2 ms)
      ✓ should handle empty request bodies (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilterWdfCredit.test.js
  Field Filter WDF Credit Support
    Customer WDF Credit Fields
      ✓ should include WDF credit fields for customer viewing own profile (2 ms)
      ✓ should include WDF credit fields for affiliate viewing customer
      ✓ should include WDF credit fields for admin viewing customer
      ✓ should NOT include WDF credit for public access (1 ms)
      ✓ should NOT include WDF credit for other customers (1 ms)
    Order WDF Credit Fields
      ✓ should include WDF fields for customer viewing own order
      ✓ should include WDF fields for affiliate viewing order (1 ms)
      ✓ should include WDF fields for admin viewing order (1 ms)
    Field Definition Verification
      ✓ should have WDF credit fields defined in customer field definitions (1 ms)
      ✓ should have WDF credit fields defined in order field definitions
    Array Filtering
      ✓ should filter WDF credit fields in customer arrays (1 ms)
      ✓ should filter WDF credit fields in order arrays
    Edge Cases
      ✓ should handle null/undefined WDF credit values (1 ms)
      ✓ should handle zero WDF credit values

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/errorHandler.test.js
  Error Handler Middleware
    errorHandler
      ✓ should handle generic errors with 500 status (11 ms)
      ✓ should handle custom status codes (1 ms)
      ✓ should handle Mongoose validation errors (1 ms)
      ✓ should handle MongoDB duplicate key errors (1 ms)
      ✓ should handle JWT errors (1 ms)
      ✓ should handle JWT token expiration errors
      ✓ should handle rate limiting errors (1 ms)
      ✓ should handle CastError (invalid MongoDB ObjectId) (1 ms)
      ✓ should include user context when available (1 ms)
      ✓ should handle errors with customer context
      ✓ should hide error details in production (1 ms)
      ✓ should show error details in development
      ✓ should use original message for non-500 errors in production (1 ms)
      ✓ should handle errors without message
      ✓ should handle errors with code property (1 ms)
      ✓ should log all console error sections (1 ms)
    AppError
      ✓ should create custom error with status code (1 ms)
      ✓ should have stack trace
      ✓ should work with error handler (1 ms)
    Edge cases
      ✓ should handle null error (3 ms)
      ✓ should handle undefined error
      ✓ should handle non-error objects (1 ms)
      ✓ should handle errors thrown from within error handler (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/orderWithSystemConfig.test.js (11.037 s)
  Order Model with SystemConfig Integration
    Dynamic WDF Pricing
      ✓ should fetch base rate from SystemConfig on order creation (838 ms)
      ✓ should use default rate when SystemConfig is not available (1024 ms)
      ✓ should calculate estimated total using SystemConfig rate (745 ms)
      ✓ should calculate actual total using SystemConfig rate (764 ms)
    Commission Calculations
      ✓ should calculate affiliate commission correctly with custom WDF rate (766 ms)
      ✓ should calculate commission for zero delivery fee (841 ms)
      ✓ should handle commission calculation for large orders (786 ms)
    Edge Cases
      ✓ should handle commission when only estimated size is available (800 ms)
      ✓ should update calculations when base rate changes (905 ms)
      ✓ should validate minimum and maximum base rates (958 ms)
    Revenue Calculator Scenarios
      ✓ should match revenue calculator example - 10 customers scenario (1360 ms)
      ✓ should match revenue calculator with different parameters (759 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentRoutes.full.test.js
  Payment Routes - Full Coverage
    Dynamic Route Loading
      ✓ should load dynamic callback routes when not in test environment (24 ms)
      ✓ should handle GET requests on dynamic callback routes (30 ms)
      ✓ should handle POST requests on dynamic callback routes (39 ms)
      ✓ should handle errors when loading config file (24 ms)
      ✓ should handle invalid JSON in config file (19 ms)
      ✓ should skip dynamic route loading in test environment (30 ms)
    Static Routes
      ✓ should handle GET /config (27 ms)
      ✓ should handle POST /log-submission (49 ms)
      ✓ should handle POST /create-token (49 ms)
      ✓ should handle GET /check-status/:token (23 ms)
      ✓ should handle POST /cancel-token/:token (27 ms)
      ✓ should handle POST /update-status/:token (26 ms)
      ✓ should handle GET /pool-stats (23 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

FAIL tests/unit/customerDashboardWdfCredit.test.js (17.062 s)
  ● Customer Dashboard WDF Credit Display › Dashboard Stats with WDF Credit › should show zero WDF credit for new customers

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      121 |       const responseData = JSON.parse(res._getData());
      122 |       
    > 123 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      124 |         amount: 0,
      125 |         updatedAt: null,
      126 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:123:48)

  ● Customer Dashboard WDF Credit Display › Edge Cases › should handle null WDF credit fields gracefully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      314 |       const responseData = JSON.parse(res._getData());
      315 |       
    > 316 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      317 |         amount: 0,
      318 |         updatedAt: null,
      319 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:316:48)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/tokenBlacklist.test.js
  TokenBlacklist Model
    Schema Validation
      ✓ should create a valid token blacklist entry (164 ms)
      ✓ should use default values for blacklistedAt and reason (137 ms)
      ✓ should require all mandatory fields (85 ms)
      ✓ should enforce unique token constraint (361 ms)
      ✓ should validate userType enum (104 ms)
      ✓ should accept all valid userTypes (256 ms)
    Static Methods
      blacklistToken
        ✓ should successfully blacklist a token (123 ms)
        ✓ should use default reason when not provided (128 ms)
        ✓ should return null when token already blacklisted (313 ms)
        ✓ should handle custom reasons (116 ms)
        ✓ should propagate non-duplicate errors (97 ms)
      isBlacklisted
        ✓ should return true for blacklisted token (158 ms)
        ✓ should return false for non-blacklisted token (113 ms)
        ✓ should handle empty token (103 ms)
        ✓ should handle null token (106 ms)
      cleanupExpired
        ✓ should delete expired tokens (262 ms)
        ✓ should return 0 when no expired tokens (234 ms)
        ✓ should handle empty collection (127 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] Google callback: {
      error: null,
      user: 'exists',
      userObject: { id: '12345', email: 'test@example.com', provider: 'google' },
      isExistingAffiliate: undefined,
      info: null
    }

      at log (server/routes/socialAuthRoutes.js:40:13)

PASS tests/unit/socialAuthRoutes.full.test.js
  Social Auth Routes - Full Coverage
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (115 ms)
      ✓ should return 404 when Google OAuth is not configured (61 ms)
      ✓ should handle Google OAuth callback (123 ms)
      ✓ should pass state parameter through OAuth (59 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (56 ms)
      ✓ should return 404 when Facebook OAuth is not configured (49 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (50 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (49 ms)
      ✓ should redirect customer Google OAuth callback (58 ms)
      ✓ should handle customer Facebook OAuth callback (59 ms)
      ✓ should initiate Facebook OAuth for customers (55 ms)
      ✓ should return 404 when Facebook OAuth is not configured for customers (54 ms)
      ✓ should initiate LinkedIn OAuth for customers (60 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured for customers (52 ms)
      ✓ should handle customer LinkedIn OAuth callback (55 ms)
    Social Registration Completion
      ✓ should complete affiliate social registration (61 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/validators.test.js
  Validators
    isValidEmail
      ✓ should validate correct email addresses (3 ms)
      ✓ should reject invalid email addresses (1 ms)
    isValidPhone
      ✓ should validate correct US phone numbers
      ✓ should reject invalid phone numbers
    isValidUsername
      ✓ should validate correct usernames (1 ms)
      ✓ should reject invalid usernames (1 ms)
    isValidZipCode
      ✓ should validate correct US zip codes
      ✓ should reject invalid zip codes
    isValidTimeFormat
      ✓ should validate correct time formats (1 ms)
      ✓ should reject invalid time formats
    isValidName
      ✓ should validate correct names (1 ms)
      ✓ should reject invalid names (1 ms)
    mongooseValidators
      ✓ should provide email validator
      ✓ should provide phone validator
      ✓ should provide username validator (1 ms)
      ✓ should provide zipCode validator
      ✓ should provide timeFormat validator (1 ms)
      ✓ should provide name validator
    expressValidators
      ✓ should provide email validator function
      ✓ should provide phone validator function (1 ms)
      ✓ should provide username validator function
      ✓ should provide zipCode validator function
      ✓ should provide timeFormat validator function
      ✓ should provide name validator function
    Client-side validation functions
      validateEmail
        ✓ should return validation result for emails (1 ms)
      validatePhone
        ✓ should return validation result for phones
      validateUsername
        ✓ should return validation result for usernames
      validateZipCode
        ✓ should return validation result for zip codes (1 ms)
      validateTimeFormat
        ✓ should return validation result for time formats (4 ms)
      validateName
        ✓ should return validation result for names

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error creating administrator: Error [ValidationError]: Invalid permission: invalid_permission
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:49:31)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:70:7)

  console.error
    Error creating administrator: Error: E11000 duplicate key error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerUncovered.test.js:88:30)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 11000
    }

      188 |
      189 |   } catch (error) {
    > 190 |     console.error('Error creating administrator:', error);
          |             ^
      191 |
      192 |     // Handle validation errors from model pre-save hooks
      193 |     if (error.name === 'ValidationError') {

      at Object.error [as createAdministrator] (server/controllers/administratorController.js:190:13)
      at Object.<anonymous> (tests/unit/administratorControllerUncovered.test.js:109:7)

PASS tests/unit/administratorControllerUncovered.test.js
  Administrator Controller - Uncovered Functions
    createAdministrator - Additional Error Cases
      ✓ should handle pre-save validation errors (83 ms)
      ✓ should handle duplicate email error (11000) (73 ms)
    deleteAdministrator - Last Admin Check
      ✓ should prevent deleting the last administrator with full permissions (91 ms)
    getDashboard - All Statistics
      ✓ should return dashboard with all statistics (58 ms)
    getOrderAnalytics - With Date Filters
      ✓ should handle date range in analytics (55 ms)
    exportReport - Different Formats
      ✓ should export orders report (53 ms)
      ✓ should handle invalid report type (51 ms)
    getAffiliatesList - With Filters
      ✓ should get filtered affiliates list (58 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /critical-files

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/critical-files.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /test-templates

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/test-templates.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /action-plan

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/action-plan.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /non-existent-page

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /index.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /action-plan.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /critical-files.html

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /missing

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

  console.log
    [Coverage Route] GET /

      at log (server/routes/coverageRoutes.js:86:11)

  console.log
    [CSP] Serving HTML with nonce: coverage-analysis/index.html, nonce: undefined

      at log (server/utils/cspHelper.js:70:15)

FAIL tests/unit/coverageRoutes.test.js
  Coverage Routes
    Access Control Middleware
      ✓ should allow access in development environment (27 ms)
      ✓ should allow access in test environment (8 ms)
      ✓ should deny access in production without key (1 ms)
      ✓ should allow access in production with valid key (8 ms)
      ✓ should deny access in production with invalid key (3 ms)
    Embedded Access Prevention
      ✓ should deny access when Sec-Fetch-Dest is iframe (3 ms)
      ✓ should deny access when X-Frame-Options is present (2 ms)
      ✓ should deny access when referer contains /embed (13 ms)
      ✓ should allow access with normal referer (10 ms)
    Route Handlers
      ✓ should serve index.html at root path (13 ms)
      ✓ should serve critical-files page (10 ms)
      ✓ should serve test-templates page (11 ms)
      ✓ should serve action-plan page (9 ms)
      ✓ should return 404 for non-existent pages (7 ms)
    Static File Headers
      ✓ should set no-cache headers for static files (9 ms)
      ✓ should set no-cache headers for HTML files (23 ms)
      ✓ should set no-cache headers for other HTML files (7 ms)
    Environment Variable Handling
      ✓ should handle missing COVERAGE_ACCESS_KEY (2 ms)
      ✓ should handle empty COVERAGE_ACCESS_KEY (6 ms)
    Multiple Middleware Interaction
      ✓ should check embedded access before access control (2 ms)
      ✓ should apply X-Frame-Options even with valid access (5 ms)
    HTML Response Validation
      ✓ should return valid HTML for access denied page (2 ms)
      ✓ should return valid HTML for 404 page (5 ms)
    Query Parameter Handling
      ✓ should ignore extra query parameters (9 ms)
      ✓ should handle URL-encoded keys (9 ms)
    Edge Cases
      ✕ should handle root path without trailing slash (18 ms)
      ✓ should handle specific route handlers (7 ms)

  ● Coverage Routes › Edge Cases › should handle root path without trailing slash

    expected 301 "Moved Permanently", got 200 "OK"

      314 |       const response = await request(app)
      315 |         .get('/coverage')
    > 316 |         .expect(301); // Redirect to /coverage/
          |          ^
      317 |
      318 |       expect(response.headers.location).toBe('/coverage/');
      319 |     });

      at Object.expect (tests/unit/coverageRoutes.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/emailServiceAdditional.test.js
  Email Service - Additional Coverage
    Affiliate Commission Email
      ✓ should send affiliate commission email successfully (7 ms)
      ✓ should handle email sending error (4 ms)
    Customer Password Reset Email
      ✓ should send customer password reset email (3 ms)
    Administrator Emails
      ✓ should send administrator welcome email with language support (3 ms)
      ✓ should send administrator password reset email (3 ms)
    Operator Emails
      ✓ should send operator PIN reset email (4 ms)
      ✓ should send operator shift reminder email (3 ms)
    System Alerts
      ✓ should send service down alert to multiple admins (4 ms)
      ✓ should handle service alert with minimal details (4 ms)
    Template Loading Errors
      ✓ should handle template file read errors (7 ms)
    Console Email Provider
      ✓ should log emails to console when using console provider (16 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/encryptionEnhanced.test.js
  Encryption Utility - Enhanced Coverage
    Encryption Error Paths
      ✓ should return null for falsy inputs (2 ms)
      ✓ should throw error with invalid encryption key length (15 ms)
      ✓ should throw error when encryption key is missing (2 ms)
      ✓ should handle crypto errors gracefully (1 ms)
    Decryption Error Paths
      ✓ should return null for falsy inputs (1 ms)
      ✓ should throw error with invalid encrypted object structure (2 ms)
      ✓ should throw error with tampered data (1 ms)
      ✓ should throw error with wrong encryption key (1 ms)
      ✓ should handle corrupted encrypted data (1 ms)
    Password Hashing Error Paths
      ✓ should handle crypto.randomBytes failure (1 ms)
      ✓ should handle crypto.pbkdf2Sync failure (1 ms)
      ✓ should handle empty password (48 ms)
    Password Verification Error Paths
      ✓ should throw error when pbkdf2Sync fails (1 ms)
      ✓ should handle invalid inputs gracefully (169 ms)
      ✓ should return false for invalid salt format (53 ms)
    Token and Barcode Generation
      ✓ should generate tokens of correct length (1 ms)
      ✓ should generate unique tokens
      ✓ should handle token generation errors (1 ms)
      ✓ should generate barcodes with correct format
      ✓ should generate unique barcodes (1 ms)
      ✓ should handle barcode generation errors (1 ms)
    Edge Cases and Security Tests
      ✓ should handle large data encryption/decryption (13 ms)
      ✓ should handle unicode and special characters (2 ms)
      ✓ should produce different IVs for same input (2 ms)
      ✓ should validate encryption output structure (4 ms)
      ✓ should handle password edge cases (1321 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/models.test.js (7.179 s)
  Model Tests
    Affiliate Model
      ✓ should create a valid affiliate (881 ms)
      ✓ should require required fields (322 ms)
      ✓ should enforce unique constraints (720 ms)
      ✓ should handle payment information correctly (374 ms)
    Customer Model
      ✓ should create a valid customer (367 ms)
    Order Model
      ✓ should create a valid order (397 ms)
      ✓ should calculate estimated total correctly (398 ms)
      ✓ should calculate actual total and commission when weight is set (389 ms)
      ✓ should update timestamps for status changes (502 ms)
    Transaction Model
      ✓ should create a valid transaction (376 ms)
      ✓ should validate transaction type (362 ms)
      ✓ should validate transaction status (323 ms)
    RefreshToken Model
      ✓ should create a valid refresh token (373 ms)
      ✓ should validate user type (317 ms)
      ✓ should check if token is expired (408 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching public configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:88:55)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      21 |     res.json(formattedConfigs);
      22 |   } catch (error) {
    > 23 |     console.error('Error fetching public configs:', error);
         |             ^
      24 |     res.status(500).json({ error: 'Failed to fetch public configurations' });
      25 |   }
      26 | });

      at error (server/routes/systemConfigRoutes.js:23:13)

  console.error
    Error fetching config: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:141:46)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      47 |     });
      48 |   } catch (error) {
    > 49 |     console.error('Error fetching config:', error);
         |             ^
      50 |     res.status(500).json({ error: 'Failed to fetch configuration' });
      51 |   }
      52 | });

      at error (server/routes/systemConfigRoutes.js:49:13)

  console.error
    Error fetching configs: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:190:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      70 |     res.json(configs);
      71 |   } catch (error) {
    > 72 |     console.error('Error fetching configs:', error);
         |             ^
      73 |     res.status(500).json({ error: 'Failed to fetch configurations' });
      74 |   }
      75 | });

      at error (server/routes/systemConfigRoutes.js:72:13)

  console.error
    Error updating config: Error: Invalid value
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:333:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

  console.error
    Error initializing configs: Error: Init failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/systemConfigRoutes.test.js:359:57)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      103 |     res.json({ message: 'Default configurations initialized' });
      104 |   } catch (error) {
    > 105 |     console.error('Error initializing configs:', error);
          |             ^
      106 |     res.status(500).json({ error: 'Failed to initialize configurations' });
      107 |   }
      108 | });

      at error (server/routes/systemConfigRoutes.js:105:13)

PASS tests/unit/systemConfigRoutes.test.js
  System Config Routes
    GET /api/system-config/public
      ✓ should return public configurations (15 ms)
      ✓ should handle errors when fetching public configs (7 ms)
    GET /api/system-config/public/:key
      ✓ should return specific public configuration (10 ms)
      ✓ should return 404 for non-existent public config (3 ms)
      ✓ should handle errors when fetching specific config (6 ms)
    GET /api/system-config (authenticated)
      ✓ should return all configurations for admin (3 ms)
      ✓ should filter configurations by category (3 ms)
      ✓ should handle errors when fetching all configs (3 ms)
      ✓ should require authentication (2 ms)
      ✓ should require administrator role (59 ms)
    PUT /api/system-config/:key
      ✓ should update configuration value (8 ms)
      ✓ should require system_config permission (56 ms)
      ✓ should handle validation errors (4 ms)
    POST /api/system-config/initialize
      ✓ should initialize default configurations (2 ms)
      ✓ should handle errors during initialization (4 ms)
      ✓ should require authentication and admin role (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:79:7)

  console.warn
    Email template placeholder [shift_date] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:98:7)

  console.warn
    Email template placeholder [content] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendOperatorShiftReminderEmail] (server/utils/emailService.js:2042:18)
      at Object.<anonymous> (tests/unit/emailServiceUncovered.test.js:351:7)

PASS tests/unit/emailServiceUncovered.test.js
  Email Service - Uncovered Functions
    sendOperatorShiftReminderEmail
      ✓ should send shift reminder email successfully (19 ms)
      ✓ should handle email sending error (4 ms)
    sendOperatorPasswordResetEmail
      ✓ should log error since operators use PINs (4 ms)
      ✓ should still log error even with missing reset URL (3 ms)
    sendServiceDownAlert
      ✓ should send service down alert to all admin emails (4 ms)
      ✓ should handle empty admin emails (6 ms)
      ○ skipped should handle email sending errors gracefully
    sendOrderReadyNotification
      ✓ should send order ready notification successfully (3 ms)
      ✓ should handle missing data fields (3 ms)
    sendOrderPickedUpNotification
      ✓ should send order picked up notification successfully (3 ms)
      ○ skipped should handle email error and log it
    Console Email Provider
      ✓ should log emails when using console provider (12 ms)
    Template Loading Errors
      ✓ should handle template file not found (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/adminIdGeneration.test.js
  Admin ID Generation Logic Tests
    generateAdminId function logic
      ✓ should generate ADM001 when no administrators exist (165 ms)
      ✓ should generate ADM002 when ADM001 exists (269 ms)
      ✓ should generate ADM003 when ADM001 and ADM002 exist (348 ms)
      ✓ should handle non-sequential admin IDs correctly (326 ms)
      ✓ should handle double-digit admin IDs (239 ms)
      ✓ should handle triple-digit admin IDs (257 ms)
      ✓ should handle large admin ID numbers (231 ms)
    Admin ID format validation
      ✓ should maintain three-digit padding for numbers below 100 (116 ms)
      ✓ should handle numbers above 999 without padding issues (107 ms)
    Admin ID parsing logic
      ✓ should correctly parse admin ID numbers (153 ms)
      ✓ should handle edge cases in admin ID parsing (112 ms)
    Admin ID generation with mixed data
      ✓ should work correctly with inactive administrators (292 ms)
      ✓ should work correctly with different creation dates (294 ms)
      ✓ should work correctly with different permissions (295 ms)
    Performance and reliability
      ✓ should handle database query efficiently (247 ms)
      ✓ should handle concurrent admin creation scenario (245 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/csrfConfig.test.js
  CSRF Configuration
    CSRF_CONFIG
      ✓ should define all endpoint categories (2 ms)
      ✓ should have valid endpoint patterns (5 ms)
      ✓ should not have duplicate endpoints across categories (1 ms)
      ✓ should include critical security endpoints
      ✓ should exclude authentication endpoints from CSRF
      ✓ should exclude registration endpoints from CSRF (1 ms)
    shouldEnforceCsrf
      HTTP method checks
        ✓ should not enforce CSRF for GET requests
        ✓ should not enforce CSRF for HEAD requests (1 ms)
        ✓ should not enforce CSRF for OPTIONS requests
        ✓ should consider CSRF for POST requests (1 ms)
        ✓ should consider CSRF for PUT requests
        ✓ should consider CSRF for DELETE requests
        ✓ should consider CSRF for PATCH requests (1 ms)
      Public endpoints
        ✓ should not enforce CSRF for public endpoints (4 ms)
        ✓ should not enforce CSRF for health check endpoints (1 ms)
      Authentication endpoints
        ✓ should not enforce CSRF for login endpoints
        ✓ should not enforce CSRF for forgot password
        ✓ should not enforce CSRF for refresh token
      Registration endpoints
        ✓ should not enforce CSRF for affiliate registration
        ✓ should not enforce CSRF for customer registration
      Critical endpoints
        ✓ should enforce CSRF for logout
        ✓ should enforce CSRF for order creation
        ✓ should enforce CSRF for order cancellation
        ✓ should enforce CSRF for password changes
        ✓ should enforce CSRF for data deletion (1 ms)
        ✓ should enforce CSRF for admin operations
        ✓ should enforce CSRF for operator shift changes
        ✓ should enforce CSRF for order status updates
      High priority endpoints
        ✓ should not enforce CSRF for high priority endpoints when CSRF_PHASE < 2
        ✓ should enforce CSRF for high priority endpoints when CSRF_PHASE >= 2
        ✓ should handle bag management endpoints based on phase (1 ms)
        ✓ should handle payment updates based on phase
      Read-only endpoints
        ✓ should not enforce CSRF for dashboard endpoints
        ✓ should enforce CSRF for search endpoints with state-changing methods (1 ms)
        ✓ should enforce CSRF for export endpoints with state-changing methods
      Pattern matching
        ✓ should match parameterized routes
        ✓ should match nested parameterized routes (1 ms)
        ✓ should not match partial paths
        ✓ should handle complex IDs in paths
      Default behavior
        ✓ should enforce CSRF for unknown state-changing endpoints (1 ms)
        ✓ should enforce CSRF for unmatched PUT requests
        ✓ should not enforce CSRF for unknown GET endpoints
      Edge cases
        ✓ should handle missing CSRF_PHASE environment variable (1 ms)
        ✓ should handle non-numeric CSRF_PHASE
        ✓ should handle paths with query parameters
        ✓ should handle paths with trailing slashes

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/fieldFilter.test.js (6.745 s)
  Field Filter Utility
    filterFields
      ✓ should filter object to include only allowed fields (2 ms)
      ✓ should handle empty allowed fields array (1 ms)
      ✓ should handle null or undefined objects
      ✓ should handle non-object inputs
      ✓ should handle missing fields gracefully (1 ms)
      ✓ should not include inherited properties
      ✓ should handle nested objects without deep filtering
    filterArray
      ✓ should filter array of objects
      ✓ should handle empty array
      ✓ should handle non-array inputs (1 ms)
      ✓ should handle arrays with mixed types
    fieldDefinitions
      ✓ should have definitions for all data types (1 ms)
      ✓ should have different field sets for different roles
      ✓ should not expose sensitive fields in public view
      ✓ should include appropriate fields for each role (1 ms)
    getFilteredData
      ✓ should filter data based on admin role
      ✓ should filter data based on public role (1 ms)
      ✓ should handle self context for customers
      ✓ should handle arrays of data (1 ms)
      ✓ should return data as-is for unknown data types
      ✓ should handle null or undefined data (1 ms)
      ✓ should use fallback field definitions
    responseFilter middleware
      ✓ should create filtered json method (1 ms)
      ✓ should filter response data when _filterType is provided
      ✓ should not filter when _filterType is not provided (1 ms)
      ✓ should handle public role when user is not authenticated
      ✓ should extract user ID from different user types
      ✓ should preserve other response properties
      ✓ should handle responses without data property
      ✓ should maintain this context in json method (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/storeIPs.test.js
  storeIPs configuration
    IP whitelist configuration
      ✓ should load single store IP from environment (5 ms)
      ✓ should handle empty store IP (1 ms)
      ✓ should load additional IPs from environment (1 ms)
      ✓ should trim whitespace from IPs
      ✓ should filter out empty IP entries (1 ms)
      ✓ should load IP ranges from environment (1 ms)
      ✓ should handle empty IP ranges (1 ms)
    Session renewal configuration
      ✓ should use default session renewal settings
      ✓ should load custom session renewal settings from environment
      ✓ should handle invalid numeric values (1 ms)
    isWhitelisted function
      ✓ should return true for directly whitelisted IPs (1 ms)
      ✓ should return false for non-whitelisted IPs (3 ms)
      ✓ should check IP ranges (1 ms)
      ✓ should return false for IPs outside ranges (1 ms)
    isInRange function
      ✓ should correctly check IPs in /24 subnet (1 ms)
      ✓ should correctly check IPs in /16 subnet (1 ms)
      ✓ should correctly check IPs in /8 subnet (1 ms)
      ✓ should correctly check IPs in /32 subnet (single host) (1 ms)
      ✓ should correctly check IPs in /0 subnet (all IPs) (1 ms)
      ✓ should handle invalid CIDR notation (1 ms)
      ✓ should handle invalid mask bits (1 ms)
      ✓ should handle invalid IP addresses (1 ms)
      ✓ should handle IP parts out of range
      ✓ should handle edge cases with console error (1 ms)
      ✓ should correctly handle boundary cases (2 ms)
      ✓ should handle various subnet sizes correctly (1 ms)
    Configuration export structure
      ✓ should export all required properties and functions (2 ms)
      ✓ should have correct session renewal properties (1 ms)
    Integration scenarios
      ✓ should handle complex whitelist configuration (1 ms)
      ✓ should work with no configuration (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPoolManager.test.js
  CallbackPoolManager
    constructor
      ✓ should initialize with correct configuration (1 ms)
    initializePool
      ✓ should create or update callback entries for all paths (1 ms)
      ✓ should start cleanup job after initialization (1 ms)
    acquireCallback
      ✓ should acquire callback successfully (1 ms)
      ✓ should return null when no callbacks available
    releaseCallback
      ✓ should release callback successfully (1 ms)
      ✓ should handle null callback gracefully (1 ms)
    getPoolStatus
      ✓ should return pool status with all handler details (2 ms)
      ✓ should handle empty pool (1 ms)
    startCleanupJob
      ✓ should start cleanup interval (2 ms)
      ✓ should run cleanup task every 5 minutes (1 ms)
      ✓ should handle cleanup errors gracefully (1 ms)
      ✓ should not log when no locks are released (1 ms)
    stopCleanupJob
      ✓ should stop cleanup interval when running (1 ms)
      ✓ should handle stopping when no interval exists
    integration scenarios
      ✓ should handle complete payment flow (1 ms)
      ✓ should handle concurrent acquire attempts (9 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidator.test.js
  Password Validator Utility
    validatePasswordStrength
      Basic Requirements
        ✓ should validate minimum length requirement (2 ms)
        ✓ should require uppercase letters (1 ms)
        ✓ should require lowercase letters
        ✓ should require numbers (1 ms)
        ✓ should require special characters
      Security Validations
        ✓ should reject common passwords (3 ms)
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email (1 ms)
        ✓ should reject sequential characters
        ✓ should reject repeated characters
      Valid Passwords
        ✓ should accept strong valid passwords (1 ms)
      Edge Cases
        ✓ should handle empty password
        ✓ should handle null/undefined password
        ✓ should handle case-insensitive username/email checks
    customPasswordValidator
      ✓ should work as express-validator custom validator (16 ms)
      ✓ should include validation errors in thrown message (1 ms)
    passwordValidationMiddleware
      ✓ should create middleware function
      ✓ should validate password and call next on success (1 ms)
      ✓ should return error response on validation failure (1 ms)
    isPasswordInHistory
      ✓ should return false for empty history (1 ms)
      ✓ should return false for password not in history (73 ms)
      ✓ should handle null/undefined history (1 ms)
    getPasswordStrength
      ✓ should return higher scores for stronger passwords
      ✓ should score length appropriately (3 ms)
      ✓ should score character variety
      ✓ should penalize common patterns
    commonPasswords array
      ✓ should contain common passwords
      ✓ should contain domain-specific passwords

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/callbackPool.test.js (8.992 s)
  CallbackPool Model
    Schema and Indexes
      ✓ should have required fields (807 ms)
      ✓ should have default values (853 ms)
      ✓ should have unique constraint on callbackPath (211 ms)
      ✓ should create document with defaults (180 ms)
    Instance Methods
      lock()
        ✓ should lock callback with payment token (220 ms)
        ✓ should increment usage count on each lock (320 ms)
        ✓ should update lastUsedAt timestamp (262 ms)
      release()
        ✓ should release locked callback (282 ms)
        ✓ should handle releasing already unlocked callback (219 ms)
    Static Methods
      acquireCallback()
        ✓ should acquire available unlocked callback (243 ms)
        ✓ should use least recently used callback (308 ms)
        ✓ should acquire expired locked callback (291 ms)
        ✓ should return null when no callbacks available (280 ms)
        ✓ should increment usage count atomically (263 ms)
      releaseCallback()
        ✓ should release callback by payment token (248 ms)
        ✓ should return null if no callback found with token (183 ms)
        ✓ should only release callback locked by specific token (275 ms)
      releaseExpiredLocks()
        ✓ should release callbacks locked longer than timeout (334 ms)
        ✓ should not release recently locked callbacks (276 ms)
        ✓ should handle custom timeout values (289 ms)
        ✓ should return 0 when no expired locks (285 ms)
        ✓ should handle empty collection (299 ms)
    Edge Cases and Error Handling
      ✓ should handle concurrent lock attempts (177 ms)
      ✓ should maintain data integrity with rapid lock/release cycles (911 ms)
      ✓ should handle invalid ObjectId gracefully (215 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/sanitization.test.js
  Sanitization Middleware
    sanitizeInput
      ✓ should sanitize string input (2 ms)
      ✓ should sanitize arrays recursively (1 ms)
      ✓ should sanitize objects recursively
      ✓ should handle null values
      ✓ should handle undefined values (1 ms)
      ✓ should handle numbers
      ✓ should handle booleans
      ✓ should handle deeply nested objects (1 ms)
      ✓ should handle arrays of objects (1 ms)
      ✓ should not modify prototype properties
    sanitizeRequest
      ✓ should sanitize request body (1 ms)
      ✓ should sanitize query parameters
      ✓ should sanitize URL parameters (1 ms)
      ✓ should handle missing request properties
      ✓ should handle all properties in one request (1 ms)
    sanitizeEmail
      ✓ should sanitize and validate email
      ✓ should remove HTML from email
      ✓ should return empty string for invalid email
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should handle empty string
      ✓ should validate complex email formats (1 ms)
    sanitizePhone
      ✓ should keep only allowed characters
      ✓ should remove invalid characters (1 ms)
      ✓ should handle international format
      ✓ should remove HTML and special characters
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string (1 ms)
    sanitizeId
      ✓ should keep alphanumeric characters and hyphens
      ✓ should remove special characters (1 ms)
      ✓ should remove spaces
      ✓ should handle script injection attempts
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
      ✓ should handle MongoDB ObjectId format (1 ms)
    sanitizePath
      ✓ should allow valid file paths
      ✓ should remove directory traversal attempts (1 ms)
      ✓ should remove multiple directory traversal attempts
      ✓ should allow valid characters in paths
      ✓ should remove invalid characters (1 ms)
      ✓ should handle Windows-style paths
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (1 ms)
      ✓ should handle empty string (11 ms)
      ✓ should handle complex path traversal attempts (1 ms)
      ✓ should preserve forward slashes
    Integration tests
      ✓ should work with express middleware chain (1 ms)
      ✓ should handle complex nested structures (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error checking active orders: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderControllerAdditional.test.js:99:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      86 |     });
      87 |   } catch (error) {
    > 88 |     console.error('Error checking active orders:', error);
         |             ^
      89 |     res.status(500).json({
      90 |       success: false,
      91 |       message: 'Failed to check active orders'

      at Object.error [as checkActiveOrders] (server/controllers/orderController.js:88:13)
      at Object.<anonymous> (tests/unit/orderControllerAdditional.test.js:102:7)

  console.log
    Creating order with data: {
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 20
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

PASS tests/unit/orderControllerAdditional.test.js
  Order Controller - Additional Coverage
    checkActiveOrders
      ✓ should check active orders for authenticated customer (54 ms)
      ✓ should return no active orders when none exist (74 ms)
      ✓ should handle missing customer ID (59 ms)
      ✓ should handle database errors (86 ms)
    createOrder error handling
      ✓ should handle general errors during order creation (108 ms)
    exportOrders
      ✓ should export orders as CSV (54 ms)
      ✓ should export orders as JSON when format=json (52 ms)
      ✓ should handle export errors (52 ms)
      ✓ should handle unauthorized access (52 ms)
    updateOrderStatus edge cases
      ✓ should handle invalid status transitions (64 ms)
    cancelOrder method
      ✓ should handle order not found (63 ms)
      ✓ should handle cancellation of non-cancellable order (52 ms)
    updatePaymentStatus
      ✓ should handle order not found (54 ms)
      ✓ should prevent payment updates on non-complete orders (51 ms)
      ✓ should allow refund on complete orders regardless of payment status (57 ms)
    bulkUpdateOrderStatus
      ✓ should handle invalid order IDs format (51 ms)
      ✓ should handle empty order IDs array (51 ms)
      ✓ should handle unauthorized access (51 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

  console.log
    Updated customer isActive status to true for customer: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:225:15)

  console.error
    Failed to send notification emails: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderController.test.js:109:73)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      231 |       await emailService.sendAffiliateNewOrderEmail(affiliate, customer, newOrder);
      232 |     } catch (emailError) {
    > 233 |       console.error('Failed to send notification emails:', emailError);
          |               ^
      234 |       // Continue with the response even if emails fail
      235 |     }
      236 |

      at Object.error [as createOrder] (server/controllers/orderController.js:233:15)
      at Object.<anonymous> (tests/unit/orderController.test.js:112:7)

  console.log
    Creating order with data: { customerId: 'INVALID', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:130:15)

  console.log
    Creating order with data: { customerId: 'CUST123', affiliateId: 'INVALID' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: { customerId: 'CUST456', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST456

      at Object.log [as createOrder] (server/controllers/orderController.js:126:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:165:13)

PASS tests/unit/orderController.test.js
  Order Controller
    createOrder
      ✓ should successfully create a new order (172 ms)
      ✓ should handle email sending failures gracefully (138 ms)
      ✓ should return error for invalid customer (63 ms)
      ✓ should return error for invalid affiliate (63 ms)
      ✓ should enforce authorization (58 ms)
    getOrderDetails
      ✓ should return order details for authorized user (63 ms)
      ✓ should return 404 for non-existent order (61 ms)
      ✓ should enforce authorization for customers (52 ms)
    updateOrderStatus
      ✓ should successfully update order status (54 ms)
      ✓ should update actual weight when processing (69 ms)
      ✓ should validate status transitions (55 ms)
      ✓ should send commission email when complete (51 ms)
    cancelOrder
      ✓ should successfully cancel an order (60 ms)
      ✓ should prevent cancelling non-cancellable orders (51 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/auditLogger.test.js
  Audit Logger
    AuditEvents
      ✓ should define all audit event types (2 ms)
      ✓ should have unique event names (1 ms)
    logAuditEvent
      ✓ should log basic audit event
      ✓ should add request context when provided (1 ms)
      ✓ should handle customer context (1 ms)
      ✓ should use error level for critical events
      ✓ should use info level for non-critical events (1 ms)
      ✓ should handle missing user context
      ✓ should handle connection.remoteAddress fallback (1 ms)
    auditMiddleware
      ✓ should create middleware that logs on response finish
      ✓ should log successful responses (1 ms)
      ✓ should not log failed responses
      ✓ should include request context in logs
    logLoginAttempt
      ✓ should log successful login (1 ms)
      ✓ should log failed login with reason
      ✓ should handle null reason (1 ms)
    logSensitiveDataAccess
      ✓ should log sensitive data access
      ✓ should handle different data types and actions
    logPaymentActivity
      ✓ should log payment info access (1 ms)
      ✓ should log payment info update
      ✓ should handle additional details
    logSuspiciousActivity
      ✓ should log suspicious activity with error level (1 ms)
      ✓ should include request context
      ✓ should merge all details (1 ms)
    Logger configuration
      ✓ should export audit logger with required methods
      ✓ should not add console transport in production (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c04733ed7adf8e8a7b0b8","orderId":"ORD-TEST-001","path":"","timestamp":"2025-07-07T17:31:31.348Z","totalWeight":25,"userId":"686c04733ed7adf8e8a7b0b8"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c04743ed7adf8e8a7b0e3","orderId":"ORD-TEST-002","path":"","timestamp":"2025-07-07T17:31:32.296Z","totalWeight":25,"userId":"686c04743ed7adf8e8a7b0e3"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":2,"numberOfBags":2,"operatorId":"686c04743ed7adf8e8a7b104","orderId":"ORD-TEST-003","path":"","timestamp":"2025-07-07T17:31:33.038Z","totalWeight":20,"userId":"686c04743ed7adf8e8a7b104"}
  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T17:31:33.749Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test instructions'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T17:31:34.657Z',
      pickupTime: 'morning',
      estimatedWeight: 20,
      numberOfBags: 1,
      specialPickupInstructions: 'Test instructions'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

  console.log
    Creating order with data: {
      customerId: 'CUST-TEST-001',
      affiliateId: 'AFF-TEST-001',
      pickupDate: '2025-07-07T17:31:35.324Z',
      pickupTime: 'morning',
      estimatedWeight: 20,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-TEST-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: John Doe

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: AFF-TEST-001

      at log (server/controllers/orderController.js:159:15)

info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686c04793ed7adf8e8a7b19c","orderId":"ORD-TEST-004","path":"","timestamp":"2025-07-07T17:31:37.485Z","totalWeight":24.3,"userId":"686c04793ed7adf8e8a7b19c"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686c04793ed7adf8e8a7b1ba","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T17:31:38.195Z","totalWeight":25,"userId":"686c04793ed7adf8e8a7b1ba"}
info: undefined {"action":"bags_weighed","eventType":"ORDER_STATUS_CHANGED","ip":"127.0.0.1","method":"GET","newBags":1,"numberOfBags":1,"operatorId":"686c04793ed7adf8e8a7b1ba","orderId":"ORD-TEST-005","path":"","timestamp":"2025-07-07T17:31:38.200Z","totalWeight":20,"userId":"686c04793ed7adf8e8a7b1ba"}
FAIL tests/unit/wdfCredit.test.js (8.6 s)
  ● WDF Credit System › WDF Credit Application › should apply positive WDF credit to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      224 |
      225 |       // Check response
    > 226 |       expect(res.statusCode).toBe(201);
          |                              ^
      227 |       const responseData = JSON.parse(res._getData());
      228 |       expect(responseData.success).toBe(true);
      229 |       expect(responseData.wdfCreditApplied).toBe(10.00);

      at Object.toBe (tests/unit/wdfCredit.test.js:226:30)

  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      266 |
      267 |       // Check response
    > 268 |       expect(res.statusCode).toBe(201);
          |                              ^
      269 |       const responseData = JSON.parse(res._getData());
      270 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      271 |

      at Object.toBe (tests/unit/wdfCredit.test.js:268:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      305 |       // Verify no credit was applied
      306 |       const responseData = JSON.parse(res._getData());
    > 307 |       expect(responseData.wdfCreditApplied).toBe(0);
          |                                             ^
      308 |
      309 |       const newOrder = await Order.findOne({ orderId: responseData.orderId });
      310 |       expect(newOrder.wdfCreditApplied).toBe(0);

      at Object.toBe (tests/unit/wdfCredit.test.js:307:45)

  ● WDF Credit System › Edge Cases › should handle concurrent bag weighing correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      436 |       // Verify final state
      437 |       const updatedOrder = await Order.findOne({ orderId: order.orderId });
    > 438 |       expect(updatedOrder.bagsWeighed).toBe(2);
          |                                        ^
      439 |       expect(updatedOrder.actualWeight).toBe(45);
      440 |       expect(updatedOrder.wdfCreditGenerated).toBe(6.25); // (45-40) * 1.25
      441 |     });

      at Object.toBe (tests/unit/wdfCredit.test.js:438:40)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/createAdminScript.test.js (12.379 s)
  Create Admin Script Tests
    Script File Structure
      ✓ should exist and be readable (536 ms)
      ✓ should contain required functionality markers (443 ms)
    Admin ID Generation Logic
      ✓ should generate sequential admin IDs starting from ADM001 (709 ms)
      ✓ should calculate next admin ID correctly (784 ms)
    Password Security Requirements
      ✓ should enforce strong password requirements for admins (483 ms)
      ✓ should accept strong passwords for admins (881 ms)
    Permission System Validation
      ✓ should validate all permission types (571 ms)
      ✓ should handle partial permission sets (533 ms)
    Unique Constraint Validation
      ✓ should prevent duplicate administrator IDs (687 ms)
      ✓ should prevent duplicate emails (636 ms)
    Email Integration
      ✓ should handle admin creation with welcome email sending (534 ms)
    Data Validation and Sanitization
      ✓ should handle special characters in names correctly (523 ms)
      ✓ should normalize email addresses (581 ms)
      ✓ should validate email format (755 ms)
    Administrator Model Integration
      ✓ should integrate with existing administrator model schema (550 ms)
      ✓ should work with password hashing middleware (583 ms)
    Script Error Handling
      ✓ should handle database connection errors gracefully (441 ms)
      ✓ should handle invalid input gracefully (545 ms)
    Security Considerations
      ✓ should not log or expose passwords (440 ms)
      ✓ should generate secure random passwords when needed (481 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed for path: /api/test - User role: undefined Allowed roles: [ 'admin' ]

      at log (server/middleware/auth.js:227:15)

  console.log
    Authorization failed - No user object on request for path: /api/test

      at log (server/middleware/auth.js:219:15)

  console.log
    Token renewed for operator OP123 from store IP 127.0.0.1

      at log (server/middleware/auth.js:136:17)

  console.error
    Authentication error: Error: Generic error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:446:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as verify] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at verify (/var/www/wavemax/wavemax-affiliate-program/server/middleware/auth.js:99:21)
        at Object.authenticate (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authMiddleware.test.js:449:13)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      198 |     }
      199 |
    > 200 |     console.error('Authentication error:', error);
          |             ^
      201 |
      202 |     res.status(500).json({
      203 |       success: false,

      at error (server/middleware/auth.js:200:13)
      at Object.authenticate (tests/unit/authMiddleware.test.js:449:13)

  console.log
    Authorization failed for path: /api/test - User role: customer Allowed roles: [ 'admin', 'affiliate' ]

      at log (server/middleware/auth.js:227:15)

PASS tests/unit/authMiddleware.test.js (7.91 s)
  Auth Middleware
    authenticate
      ✓ should authenticate valid Bearer token (371 ms)
      ✓ should authenticate valid x-auth-token header (291 ms)
      ✓ should reject request with no token (250 ms)
      ✓ should reject request with invalid token (268 ms)
      ✓ should reject request with expired token (227 ms)
      ✓ should handle malformed Authorization header (251 ms)
      ✓ should reject blacklisted token (274 ms)
    authorize
      ✓ should authorize user with correct role (302 ms)
      ✓ should authorize user with one of multiple roles (280 ms)
      ✓ should reject user with incorrect role (310 ms)
      ✓ should reject user with no role (247 ms)
      ✓ should reject when user is not set (245 ms)
    authLimiter
      ✓ should be a function (218 ms)
      ✓ should have rate limit configuration (230 ms)
      ✓ should skip rate limiting in test environment (256 ms)
    validateRequest
      ✓ should pass valid request (219 ms)
      ✓ should reject invalid request (226 ms)
      ✓ should reject request with missing required fields (339 ms)
      ✓ should handle complex validation schemas (490 ms)
    authenticate - additional edge cases
      ✓ should handle requirePasswordChange flag (327 ms)
      ✓ should allow password change endpoint when requirePasswordChange is true (236 ms)
      ✓ should handle operator token renewal from store IP (229 ms)
      ✓ should handle generic authentication errors (231 ms)
      ✓ should handle W9 endpoint logging (213 ms)
    authorize - array syntax
      ✓ should accept array of roles (215 ms)
      ✓ should reject user not in array of roles (226 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.error
    Error in scanProcessed: TypeError: Cannot set properties of undefined (setting 'processed')
        at Object.<anonymous>.exports.scanProcessed (/var/www/wavemax/wavemax-affiliate-program/server/controllers/operatorController.js:1089:28)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/bagTracking.test.js:294:7)

      1171 |     
      1172 |   } catch (error) {
    > 1173 |     console.error('Error in scanProcessed:', error);
           |             ^
      1174 |     logger.error('Error scanning processed bag:', error);
      1175 |     res.status(500).json({ 
      1176 |       success: false,

      at Object.error [as scanProcessed] (server/controllers/operatorController.js:1173:13)
      at Object.<anonymous> (tests/unit/bagTracking.test.js:294:7)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-001', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    scanProcessed called with: { qrCode: 'CUST-12345#bag-002', operatorId: 'op123' }

      at Object.log [as scanProcessed] (server/controllers/operatorController.js:1018:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-002' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    completePickup called with: { bagIds: [ 'bag-001' ], orderId: 'ORD-123456', operatorId: 'op123' }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

  console.log
    completePickup called with: {
      bagIds: [ 'bag-001', 'bag-wrong' ],
      orderId: 'ORD-123456',
      operatorId: 'op123'
    }

      at Object.log [as completePickup] (server/controllers/operatorController.js:1263:13)

FAIL tests/unit/bagTracking.test.js
  Bag Tracking System
    scanBag
      ✓ should parse new QR format correctly (2 ms)
      ✓ should handle legacy QR format
    weighBags
      ✓ should add bags to order and update status (1 ms)
      ✓ should prevent duplicate bag IDs
    scanProcessed
      ✕ should update bag status to processed (45 ms)
      ✕ should show warning for already processed bag (2 ms)
      ✕ should trigger completion actions when all bags processed (8 ms)
    completePickup
      ✕ should complete order when all bags scanned (2 ms)
      ✕ should reject if bag count mismatch (1 ms)
      ✕ should reject if wrong bag scanned (1 ms)

  ● Bag Tracking System › scanProcessed › should update bag status to processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -     "weight": 5,
    -   },
    -   "message": "Bag 1 marked as processed",
    -   "order": Any<Object>,
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 1,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Failed to scan processed bag",
    +   "message": "Cannot set properties of undefined (setting 'processed')",
    +   "success": false,
      },

    Number of calls: 1

      294 |       await operatorController.scanProcessed(req, res);
      295 |
    > 296 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      297 |         success: true,
      298 |         order: expect.any(Object),
      299 |         bag: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:296:24)

  ● Bag Tracking System › scanProcessed › should show warning for already processed bag

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -   },
    -   "message": "This bag has already been processed. 1 bags still need processing.",
    -   "remainingCount": 1,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
        "success": false,
    -   "warning": "duplicate_scan",
      },

    Number of calls: 1

      357 |       await operatorController.scanProcessed(req, res);
      358 |
    > 359 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      360 |         success: false,
      361 |         warning: 'duplicate_scan',
      362 |         message: 'This bag has already been processed. 1 bags still need processing.',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:359:24)

  ● Bag Tracking System › scanProcessed › should trigger completion actions when all bags processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "action": "show_pickup_modal",
    -   "allBagsProcessed": true,
    -   "message": "All bags processed - ready for pickup",
    -   "order": ObjectContaining {
    -     "status": "processed",
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      433 |       await operatorController.scanProcessed(req, res);
      434 |
    > 435 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      436 |         success: true,
      437 |         action: 'show_pickup_modal',
      438 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:435:24)

  ● Bag Tracking System › completePickup › should complete order when all bags scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Order pickup completed successfully",
    -   "order": ObjectContaining {
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "status": "completed",
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "status": "completed",
    -       },
    -     ],
    -     "status": "complete",
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      506 |       await operatorController.completePickup(req, res);
      507 |
    > 508 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      509 |         success: true,
      510 |         message: 'Order pickup completed successfully',
      511 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:508:24)

  ● Bag Tracking System › completePickup › should reject if bag count mismatch

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      567 |       await operatorController.completePickup(req, res);
      568 |
    > 569 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      570 |       expect(res.json).toHaveBeenCalledWith({
      571 |         success: false,
      572 |         error: 'Bag count mismatch',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:569:26)

  ● Bag Tracking System › completePickup › should reject if wrong bag scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      617 |       await operatorController.completePickup(req, res);
      618 |
    > 619 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      620 |       expect(res.json).toHaveBeenCalledWith({
      621 |         success: false,
      622 |         error: 'Invalid bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:619:26)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/oAuthSession.test.js (8.564 s)
  OAuthSession Model
    Schema Validation
      ✓ should create a valid OAuth session with all required fields (470 ms)
      ✓ should require sessionId field (281 ms)
      ✓ should require result field (281 ms)
      ✓ should automatically set createdAt (306 ms)
      ✓ should automatically set expiresAt to 5 minutes from now (271 ms)
      ✓ should enforce unique sessionId (313 ms)
      ✓ should allow complex result objects (297 ms)
    Static Methods
      createSession
        ✓ should create and save a new OAuth session (380 ms)
        ✓ should throw error for duplicate session IDs (323 ms)
        ✓ should handle database errors (258 ms)
      getSession
        ✓ should retrieve existing session result by sessionId (345 ms)
        ✓ should return null for non-existent session (258 ms)
      consumeSession
        ✓ should retrieve and delete session in one operation (648 ms)
        ✓ should return null when consuming non-existent session (349 ms)
        ✓ should handle race conditions safely (362 ms)
      cleanupExpired
        ✓ should manually delete expired sessions (524 ms)
        ✓ should return zero deletions when no expired sessions exist (383 ms)
    TTL Behavior
      ✓ should have TTL index configured on expiresAt field (274 ms)
      ✓ should respect custom expiresAt when provided (382 ms)
    Data Integrity
      ✓ should preserve all data types in result field (283 ms)
      ✓ should handle empty and minimal result objects (469 ms)
    Error Handling
      ✓ should handle MongoDB connection errors gracefully (248 ms)
      ✓ should handle very large result objects (363 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentMethod.test.js
  PaymentMethod Model Unit Tests
    Schema Validation
      ✓ should create a valid payment method (59 ms)
      ✓ should require customerId (69 ms)
      ✓ should require paygistixId (65 ms)
      ✓ should validate type enum (79 ms)
      ✓ should reject invalid type (83 ms)
      ✓ should default type to card (63 ms)
    Card Validation
      ✓ should require card details when type is card (78 ms)
      ✓ should validate card last4 length (76 ms)
      ✓ should validate card brand enum (73 ms)
      ✓ should reject invalid card brand (53 ms)
      ✓ should validate expiry month range (52 ms)
      ✓ should validate expiry year is not in the past (66 ms)
      ✓ should require card fingerprint (61 ms)
    Bank Account Validation
      ✓ should create valid bank account payment method (71 ms)
      ✓ should require bank account details when type is bank_account (59 ms)
      ✓ should validate bank account last4 length (52 ms)
      ✓ should validate account type enum (58 ms)
      ✓ should reject invalid account type (53 ms)
    Wallet Validation
      ✓ should create valid wallet payment method (51 ms)
      ✓ should require wallet type when type is wallet (55 ms)
      ✓ should validate wallet type enum (55 ms)
    Default Values
      ✓ should default isDefault to false (51 ms)
      ✓ should default isActive to true (51 ms)
      ✓ should default isVerified to false (57 ms)
    Virtual Properties
      displayName
        ✓ should format card display name (52 ms)
        ✓ should format bank account display name (59 ms)
        ✓ should format wallet display name (53 ms)
        ✓ should handle google_pay formatting (52 ms)
        ✓ should return default for unknown type (54 ms)
      isExpired
        ✓ should return false for non-card types (56 ms)
        ✓ should return false for future expiry (52 ms)
        ✓ should return true for past year (52 ms)
        ✓ should return true for current year past month (52 ms)
        ✓ should return false for current year future month (52 ms)
    Instance Methods
      canUse()
        ✓ should allow use of active non-expired card (55 ms)
        ✓ should not allow use of inactive payment method (54 ms)
        ✓ should not allow use of expired card (52 ms)
        ✓ should not allow use of unverified bank account (53 ms)
        ✓ should allow use of verified bank account (51 ms)
      markAsUsed()
        ✓ should update lastUsedAt (52 ms)
    Static Methods
      findDefault()
        ✓ should find default payment method for customer (52 ms)
      findActiveByCustomer()
        ✓ should find active payment methods sorted by default and date (52 ms)
      checkDuplicate()
        ✓ should check for duplicate card fingerprint (52 ms)
        ✓ should return null if no duplicate found (78 ms)
    Middleware
      Pre-save middleware existence
        ✓ should have pre-save middleware defined (62 ms)
    Metadata Field
      ✓ should store metadata as Map (54 ms)
    JSON Transformation
      ✓ should include virtuals and exclude sensitive fields (81 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/payment.test.js
  Payment Model Unit Tests
    Schema Validation
      ✓ should create a valid payment (56 ms)
      ✓ should require orderId (109 ms)
      ✓ should require customerId (66 ms)
      ✓ should require paymentMethodId (78 ms)
      ✓ should require paygistixId (82 ms)
      ✓ should require amount (59 ms)
      ✓ should validate amount is non-negative (75 ms)
      ✓ should default currency to USD (59 ms)
      ✓ should validate currency enum (69 ms)
      ✓ should reject invalid currency (59 ms)
      ✓ should validate status enum (54 ms)
      ✓ should reject invalid status (62 ms)
      ✓ should default status to pending (52 ms)
    Default Values
      ✓ should default capturedAmount to 0 (51 ms)
      ✓ should default refundedAmount to 0 (51 ms)
      ✓ should default hasDispute to false (66 ms)
      ✓ should have empty refunds array (52 ms)
    Virtual Properties
      ✓ should calculate netAmount correctly (51 ms)
      ✓ should handle zero amounts (53 ms)
      ✓ should handle full refund (51 ms)
    Instance Methods
      canRefund()
        ✓ should allow refund when status is captured (51 ms)
        ✓ should allow refund when status is partially_refunded (59 ms)
        ✓ should not allow refund when status is pending (51 ms)
        ✓ should not allow refund when fully refunded (51 ms)
        ✓ should validate refund amount (67 ms)
        ✓ should handle null amount parameter (58 ms)
      canCapture()
        ✓ should allow capture when status is authorized (52 ms)
        ✓ should not allow capture when status is captured (51 ms)
        ✓ should not allow capture when status is pending (51 ms)
      addRefund()
        ✓ should add refund to refunds array (78 ms)
        ✓ should update refundedAmount (59 ms)
        ✓ should update lastRefundAt (52 ms)
        ✓ should set status to partially_refunded for partial refund (51 ms)
        ✓ should set status to refunded for full refund (55 ms)
        ✓ should handle multiple refunds (52 ms)
        ✓ should handle refund that exceeds captured amount (52 ms)
    Static Methods
      findByOrder()
        ✓ should find payments by orderId (51 ms)
      findSuccessfulByCustomer()
        ✓ should find successful payments by customer with default limit (52 ms)
        ✓ should accept custom limit (52 ms)
      calculateRevenue()
        ✓ should calculate revenue for a period (93 ms)
    Middleware
      ✓ should have pre-save middleware defined (52 ms)
    Refund Schema
      ✓ should validate refund subdocument (55 ms)
      ✓ should require refundId in refund (53 ms)
      ✓ should require amount in refund (58 ms)
      ✓ should validate refund amount is non-negative (52 ms)
      ✓ should set default createdAt for refund (65 ms)
    Dispute Tracking
      ✓ should validate dispute status enum (55 ms)
      ✓ should allow dispute fields when hasDispute is true (59 ms)
      ✓ should validate dispute amount is non-negative (51 ms)
    Metadata and Response Fields
      ✓ should store metadata as Map (59 ms)
      ✓ should store response as mixed type (52 ms)
    JSON Transformation
      ✓ should remove __v and response fields from JSON (69 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/socialAuthRoutes.test.js
  Social Auth Routes - Simple Tests
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (11 ms)
      ✓ should return 404 when Google OAuth is not configured (4 ms)
      ✓ should handle Google OAuth callback (3 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (2 ms)
      ✓ should return 404 when Facebook OAuth is not configured (2 ms)
      ✓ should handle Facebook OAuth callback (2 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (2 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured (2 ms)
      ✓ should handle LinkedIn OAuth callback (2 ms)
    Social Registration Route
      ✓ should handle social registration with valid data (10 ms)
      ✓ should validate required fields for social registration (3 ms)
      ✓ should validate service radius range (4 ms)
      ✓ should validate payment method (2 ms)
    Social Account Linking Route
      ✓ should handle social account linking (3 ms)
      ✓ should validate provider for account linking (2 ms)
      ✓ should require social token for account linking (2 ms)
    Social Login Callback Route
      ✓ should handle social login callback (2 ms)
      ✓ should validate social login data (2 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (1 ms)
      ✓ should handle customer Google OAuth callback redirect (1 ms)
      ✓ should handle customer Facebook callback (3 ms)
      ✓ should handle customer LinkedIn callback (2 ms)
    Customer Social Registration Route
      ✓ should handle customer social registration (3 ms)
      ✓ should validate customer registration fields (3 ms)
      ✓ should validate service frequency (3 ms)
    Error Handling
      ✓ should handle errors gracefully (16 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentController.test.js
  Payment Controller
    getConfig
      ✓ should return payment configuration when properly configured (53 ms)
      ✓ should return error when Paygistix is not configured (65 ms)
      ✓ should handle errors gracefully (74 ms)
    logSubmission
      ✓ should log payment submission successfully (66 ms)
      ✓ should handle logging errors (55 ms)
    createPaymentToken
      ✓ should create payment token successfully (56 ms)
      ✓ should handle no available callbacks (56 ms)
      ✓ should handle token creation errors (52 ms)
    checkPaymentStatus
      ✓ should return payment status successfully (53 ms)
      ✓ should handle token not found (52 ms)
      ✓ should handle database errors (56 ms)
    cancelPaymentToken
      ✓ should cancel pending payment token (52 ms)
      ✓ should not cancel non-pending tokens (52 ms)
      ✓ should handle token not found (52 ms)
    updatePaymentStatus
      ✓ should update payment status to success (58 ms)
      ✓ should update payment status to failed (59 ms)
    handleFormCallback
      ✓ should process callback successfully (70 ms)
      ✓ should handle no pending payment for callback (52 ms)
      ✓ should handle callback processing errors (53 ms)
    processCallbackResult
      ✓ should process successful payment from query params (60 ms)
      ✓ should process failed payment (58 ms)
      ✓ should handle body parameters (54 ms)
      ✓ should redirect with all parameters (53 ms)
    getPoolStats
      ✓ should return pool statistics (72 ms)
      ✓ should handle stats retrieval errors (52 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentCallbackRoute.test.js
  Payment Callback Route
    GET /payment_callback
      Successful payment
        ✓ should handle approved payment successfully (8 ms)
        ✓ should handle success status as well as approved (3 ms)
        ✓ should update existing payment if found (2 ms)
        ✓ should handle customer not found gracefully (2 ms)
        ✓ should handle email send failure gracefully (2 ms)
        ✓ should not update customer if already active (1 ms)
      Failed payment
        ✓ should handle declined payment (2 ms)
        ✓ should handle failed status (1 ms)
        ✓ should increment payment attempts on failure (1 ms)
        ✓ should use default error message when none provided (2 ms)
      Error handling
        ✓ should handle order not found (2 ms)
        ✓ should handle unknown payment status (2 ms)
        ✓ should handle database errors gracefully (2 ms)
        ✓ should handle payment save error (7 ms)
      Edge cases
        ✓ should handle missing amount parameter (2 ms)
        ✓ should handle malformed maskedCard (2 ms)
        ✓ should log callback parameters (2 ms)
    POST /payment_callback
      ✓ should handle POST callback and return JSON response (6 ms)
      ✓ should handle POST callback errors (3 ms)
      ✓ should handle empty POST body (2 ms)
      ✓ should handle POST with form-urlencoded data (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:102:13)

  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-123

      at Object.log [as exportVendors] (server/controllers/quickbooksController.js:94:15)

PASS tests/unit/quickbooksController.test.js
  QuickBooks Controller
    exportVendors
      ✓ should export vendors as JSON (9 ms)
      ✓ should export vendors as CSV (2 ms)
      ✓ should return 404 when no verified vendors found
      ✓ should handle errors gracefully (1 ms)
    exportPaymentSummary
      ✓ should export payment summary as JSON (1 ms)
      ✓ should export payment summary as CSV
      ✓ should return 400 when dates are missing (1 ms)
      ✓ should return 404 when no payable commissions found
      ✓ should filter out orders without verified W-9 (1 ms)
    exportCommissionDetail
      ✓ should export commission detail as JSON (2 ms)
      ✓ should return 400 when required parameters are missing
      ✓ should return 404 when affiliate not found
      ✓ should return 400 when affiliate has no verified W-9
    getExportHistory
      ✓ should get export history
      ✓ should filter by type (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passwordValidatorEnhanced.test.js
  Enhanced Password Validator
    validatePasswordStrength
      Length Requirements
        ✓ should reject passwords shorter than 8 characters (3 ms)
        ✓ should accept passwords with 8 or more characters
      Character Type Requirements
        ✓ should require at least one uppercase letter (1 ms)
        ✓ should require at least one lowercase letter (1 ms)
        ✓ should require at least one number (1 ms)
        ✓ should require at least one special character
        ✓ should accept passwords with all required character types
      Common Password Detection
        ✓ should reject common passwords (2 ms)
        ✓ should accept non-common passwords
      Sequential Character Detection
        ✓ should reject passwords with sequential numbers (1 ms)
        ✓ should reject passwords with sequential letters
        ✓ should accept passwords without sequential characters (1 ms)
      Repeated Character Detection
        ✓ should reject passwords with too many repeated characters
        ✓ should accept passwords with acceptable repeated characters
      Username/Email Inclusion Check
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email
        ✓ should accept passwords not containing username or email (1 ms)
      Password History Check
        ✓ should reject passwords in history
        ✓ should accept passwords not in history (1 ms)
      Complete Valid Passwords
        ✓ should accept completely valid passwords (9 ms)
    getPasswordStrength
      ✓ should return correct strength scores (1 ms)
      ✓ should return correct strength labels
    isPasswordInHistory
      ✓ should return true for passwords in history
      ✓ should return false for passwords not in history (1 ms)
      ✓ should handle empty history
    customPasswordValidator
      ✓ should return custom validator function (1 ms)
      ✓ should validate passwords correctly in express-validator context
      ✓ should throw for invalid passwords in express-validator context (19 ms)
      ✓ should include admin-specific validation when userType is admin (1 ms)
      ✓ should include admin-specific validation when userType is operator (1 ms)
    passwordValidationMiddleware
      ✓ should call next() for valid passwords (1 ms)
      ✓ should return 400 error for invalid passwords
      ✓ should skip validation if no password in request
      ✓ should include strength assessment in response for invalid passwords
    Edge Cases and Security
      ✓ should handle null and undefined inputs gracefully
      ✓ should handle very long passwords (1 ms)
      ✓ should handle special Unicode characters
      ✓ should be case-sensitive for username/email checks

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/administrator.test.js (8.513 s)
  Administrator Model
    Schema Validation
      ✓ should create a valid administrator (273 ms)
      ✓ should require all mandatory fields (97 ms)
      ✓ should enforce email format validation (150 ms)
      ✓ should enforce unique email constraint (592 ms)
      ✓ should enforce unique adminId constraint (632 ms)
      ✓ should validate permission enum values (137 ms)
      ✓ should accept valid permissions (193 ms)
      ✓ should trim whitespace from string fields (184 ms)
      ✓ should convert email to lowercase (185 ms)
      ✓ should not allow role to be changed after creation (262 ms)
    Password Handling
      ✓ should store password as hash and salt (235 ms)
      ✓ should verify correct password (264 ms)
      ✓ should reject incorrect password (265 ms)
      ✓ should not expose password in JSON output (180 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (246 ms)
      ✓ should lock account after 5 failed attempts (246 ms)
      ✓ should reset login attempts on successful login (266 ms)
      ✓ should reset attempts if lock has expired (234 ms)
      ✓ should correctly identify locked accounts (207 ms)
    Password Reset
      ✓ should generate password reset token (225 ms)
      ✓ should set password reset expiry to 30 minutes (205 ms)
    Permissions
      ✓ should check single permission correctly (188 ms)
      ✓ should check multiple permissions with AND operation (181 ms)
      ✓ should check multiple permissions with OR operation (206 ms)
      ✓ should set default permissions if none provided (187 ms)
    Static Methods
      ✓ should find active administrators (354 ms)
      ✓ should find administrator by email with password (187 ms)
      ✓ should handle case-insensitive email search (203 ms)
      ✓ should return null for non-existent email (120 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (179 ms)
      ✓ should update updatedAt on modification (318 ms)
    Admin ID Generation
      ✓ should auto-generate unique admin ID (278 ms)
      ✓ should not override provided admin ID (213 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/generalPaymentCallback.test.js
  General Payment Callback Routes
    GET /
      Registration Payment
        ✓ should redirect to success page on approved registration payment (7 ms)
        ✓ should redirect to success page on success status (2 ms)
        ✓ should redirect to register page with error on failed registration payment (2 ms)
        ✓ should handle missing response message on failure (1 ms)
        ✓ should handle registration payment callback errors (1 ms)
      Order Payment
        ✓ should handle approved order payment successfully (3 ms)
        ✓ should handle success status for order payment (2 ms)
        ✓ should update existing payment record (2 ms)
        ✓ should handle declined order payment (1 ms)
        ✓ should handle failed order payment (1 ms)
        ✓ should handle unknown payment status (6 ms)
        ✓ should handle order not found (2 ms)
        ✓ should handle missing orderId in query (2 ms)
        ✓ should handle email service failure gracefully (1 ms)
        ✓ should skip customer update if customer not found (2 ms)
        ✓ should not update already active customer (1 ms)
        ✓ should handle payment callback errors (2 ms)
        ✓ should use order amount if payment amount not provided (2 ms)
        ✓ should handle partial masked card (1 ms)
        ✓ should handle missing masked card (2 ms)
      General error handling
        ✓ should handle general callback errors (1 ms)
    POST /
      Registration Payment
        ✓ should create customer on approved registration payment with session (7 ms)
        ✓ should handle success status for registration (2 ms)
        ✓ should handle customer creation error (3 ms)
        ✓ should handle no pending registration (1 ms)
        ✓ should handle declined registration payment (2 ms)
        ✓ should handle failed registration payment without message (1 ms)
      Order Payment POST
        ✓ should acknowledge order payment callback (1 ms)
        ✓ should handle order payment with explicit type (2 ms)
      General POST error handling
        ✓ should handle POST callback errors (15 ms)
        ✓ should log POST callback data (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/rbac.test.js
  RBAC Middleware
    Role Hierarchy
      ✓ should define correct role hierarchy (1 ms)
      ✓ should define allowed roles
    checkRole Middleware
      ✓ should reject when no user is present
      ✓ should reject when user has no role
      ✓ should reject when user has invalid role
      ✓ should accept when user has exact required role
      ✓ should accept when user has higher role in hierarchy
      ✓ should reject when user has lower role in hierarchy (1 ms)
      ✓ should handle array of required roles
      ✓ should accept administrator accessing operator resources
      ✓ should reject operator accessing administrator resources (1 ms)
    checkAllRoles Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should accept when user has access to all required roles
      ✓ should reject when user lacks access to any required role
      ✓ should accept admin for any combination of roles
    checkResourceOwnership Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should allow admin access to any resource
      ✓ should allow administrator access to any resource (1 ms)
      ✓ should allow affiliate access to own resource via params
      ✓ should allow customer access to own resource via body (1 ms)
      ✓ should allow operator access to own resource
      ✓ should reject affiliate access to another affiliate resource (1 ms)
      ✓ should prefer params over body for resource ID
    checkAdminPermission Middleware
      ✓ should reject when user is not administrator (1 ms)
      ✓ should reject when administrator not found
      ✓ should reject when administrator is not active (1 ms)
      ✓ should accept when administrator has required permission (1 ms)
      ✓ should handle array of required permissions
      ✓ should reject when administrator lacks any required permission (1 ms)
      ✓ should handle database errors (1 ms)
    checkOperatorStatus Middleware
      ✓ should skip check for non-operators
      ✓ should reject when operator not found (1 ms)
      ✓ should reject when operator is not active
      ✓ should reject when operator is not on shift (1 ms)
      ✓ should accept active operator on shift
      ✓ should handle database errors (1 ms)
    filterResponseFields Middleware
      ✓ should pass through data when no user present (1 ms)
      ✓ should pass through data when user has no role
      ✓ should pass through all fields when role has wildcard permission (1 ms)
      ✓ should filter fields based on role permissions
      ✓ should handle nested field permissions (7 ms)
      ✓ should handle array data
      ✓ should handle standard response format with data property
      ✓ should use default permissions when role not specified
      ✓ should handle deeply nested fields
      ✓ should handle non-object data gracefully (1 ms)
      ✓ should handle empty allowed fields

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[31merror[39m: Failed to retrieve PKCE verifier: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json' {"code":"ENOENT","errno":-2,"path":"/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json","service":"wavemax-affiliate","stack":"Error: ENOENT: no such file or directory, open '/var/www/wavemax/wavemax-affiliate-program/temp/pkce/test_state_789.json'\n    at open (node:internal/fs/promises:639:25)\n    at Object.readFile (node:internal/fs/promises:1246:14)\n    at DocuSignService.getPkceVerifier (/var/www/wavemax/wavemax-affiliate-program/server/services/docusignService.js:85:23)\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/docusignService.test.js:113:31)","syscall":"open","timestamp":"2025-07-07T17:32:33.942Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.363Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":13}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:32:34.370Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: Token saved to database {"expiresAt":"2025-07-07T18:32:34.370Z","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.409Z","tokenId":"default"}
[32minfo[39m: Token exchange successful {"expiresIn":3600,"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.410Z"}
[31merror[39m: PKCE verifier not found for state: {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.537Z"}
[32minfo[39m: Token exchange request: {"client_id":"test_integration_key","has_verifier":true,"redirect_uri":"https://test.com/callback","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.654Z","url":"https://account-d.docusign.com/oauth/token","verifier_length":8}
[31merror[39m: Failed to exchange code for token: {"error":"Network error","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:34.655Z"}
  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:32:34.736Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:32:34.798Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

  console.log
    DocuSignToken saved: {
      tokenId: 'default',
      expiresAt: 2025-07-07T18:32:35.055Z,
      status: 'active'
    }

      at Function.log [as saveToken] (server/models/DocuSignToken.js:118:13)

[32minfo[39m: DocuSign envelope created: {"affiliateId":"123456789","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:35.486Z"}
[31merror[39m: Failed to create W9 envelope: {"affiliateEmail":"test@example.com","data":{"message":"Invalid template ID"},"service":"wavemax-affiliate","status":400,"templateId":"test_template_id","timestamp":"2025-07-07T17:32:35.583Z"}
[32minfo[39m: DocuSign in test mode - returning mock envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:35.662Z"}
[32minfo[39m: Embedded signing URL generated: {"affiliateId":"123456","envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:35.743Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-completed","service":"wavemax-affiliate","status":"completed","timestamp":"2025-07-07T17:32:35.995Z"}
[32minfo[39m: Processing DocuSign webhook event: {"envelopeId":"test_envelope_id","event":"envelope-declined","service":"wavemax-affiliate","status":"declined","timestamp":"2025-07-07T17:32:36.084Z"}
[32minfo[39m: Downloaded completed W9: {"envelopeId":"test_envelope_id","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:36.254Z"}
[32minfo[39m: Voided envelope: {"envelopeId":"test_envelope_id","reason":"Cancelled by user","service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:36.341Z"}
[31merror[39m: Authentication required: {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:32:37.124Z"}
PASS tests/unit/docusignService.test.js
  DocuSign Service
    PKCE Generation
      ✓ should generate valid PKCE challenge and verifier (96 ms)
    PKCE Storage
      ✓ should store and retrieve PKCE verifier (111 ms)
      ✓ should delete verifier after retrieval (164 ms)
      ✓ should clean up old PKCE files (89 ms)
    Authorization URL
      ✓ should generate correct authorization URL (88 ms)
      ✓ should use provided state if given (96 ms)
    Token Exchange
      ✓ should exchange authorization code for tokens (199 ms)
      ✓ should throw error if PKCE verifier not found (119 ms)
      ✓ should handle token exchange errors (80 ms)
    Token Refresh
      ✓ should refresh access token using refresh token (214 ms)
      ✓ should throw error if no refresh token available (105 ms)
    Access Token Management
      ✓ should return valid access token if not expired (182 ms)
      ✓ should refresh token if expired (133 ms)
      ✓ should throw error if no valid token and no refresh token (113 ms)
    Envelope Creation
      ✓ should create W9 envelope for affiliate (88 ms)
      ✓ should handle envelope creation errors (87 ms)
      ✓ should return mock envelope in test mode (81 ms)
    Embedded Signing URL
      ✓ should generate embedded signing URL (80 ms)
    Webhook Signature Verification
      ✓ should verify valid webhook signature (91 ms)
      ✓ should reject invalid webhook signature (80 ms)
    Webhook Event Processing
      ✓ should process completed envelope event (86 ms)
      ✓ should handle declined envelope (83 ms)
    Envelope Status
      ✓ should get envelope status (82 ms)
    Document Download
      ✓ should download completed W9 document (95 ms)
    Envelope Voiding
      ✓ should void an envelope (79 ms)
    hasValidToken
      ✓ should return true when a valid token exists (218 ms)
      ✓ should return false when no valid token exists (105 ms)
      ✓ should return false when token is expired (159 ms)
    authenticate
      ✓ should return access token when authentication succeeds (186 ms)
      ✓ should throw error when authentication fails (114 ms)
    extractTaxInfoFromTabs
      ✓ should extract SSN tax info from tabs (84 ms)
      ✓ should extract EIN tax info from tabs (80 ms)
      ✓ should extract business name from tabs (111 ms)
      ✓ should return empty object when no tax info found (117 ms)
      ✓ should handle empty tabs (94 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'customer_test-session-id', popup: 'true' },
      headers: {},
      state: 'customer_test-session-id',
      stateStartsWithCustomer: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'customer_test-session-id',
      isCustomerRequest: true,
      willDelegate: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    [OAuth] Delegating to handleCustomerSocialCallback

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:986:15)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: {},
      headers: {},
      state: undefined,
      stateStartsWithCustomer: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: undefined,
      isCustomerRequest: undefined,
      willDelegate: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: { state: undefined, sessionId: null, allParams: {} }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-07-07T17:32:40.909Z","userType":"affiliate","username":"johndoe"}
  console.error
    Error storing OAuth session: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:128:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1087 |             await OAuthSession.createSession(sessionId, message);
      1088 |           } catch (dbError) {
    > 1089 |             console.error('Error storing OAuth session:', dbError);
           |                     ^
      1090 |           }
      1091 |         }
      1092 |

      at Object.error [as handleSocialCallback] (server/controllers/authController.js:1089:21)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:131:7)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'oauth_test-session-id', popup: 'true' },
      headers: {},
      state: 'oauth_test-session-id',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: {
      state: 'oauth_test-session-id',
      isCustomerRequest: false,
      willDelegate: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'customer@example.com',
        firstName: 'Customer',
        lastName: 'User',
        isNewUser: true
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:240:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T17:32:42.677Z","userType":"affiliate"}
  console.warn
    Email template placeholder [AFFILIATE_ID] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous>.exports.completeSocialRegistration (server/controllers/authController.js:1484:7)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:330:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi undefined,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> </p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=undefined</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=undefined</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T17:32:44.844Z","userType":"affiliate"}
  console.error
    Missing customer or affiliate data for welcome email

      883 |     // Validate inputs
      884 |     if (!customer || !affiliate) {
    > 885 |       console.error('Missing customer or affiliate data for welcome email');
          |               ^
      886 |       return;
      887 |     }
      888 |

      at Object.error [as sendCustomerWelcomeEmail] (server/utils/emailService.js:885:15)
      at Object.sendCustomerWelcomeEmail [as completeSocialCustomerRegistration] (server/controllers/authController.js:2253:26)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:388:7)

info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-07-07T17:32:46.217Z","userType":"customer"}
  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'not found',
      resultData: null
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: test-session-123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:583:65)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:585:7)

PASS tests/unit/authControllerEnhanced.test.js (16.505 s)
  Enhanced Auth Controller - OAuth Methods
    handleSocialCallback
      ✓ should create OAuth session and redirect for affiliate context (956 ms)
      ✓ should handle customer context from state parameter (644 ms)
      ✓ should handle missing user data gracefully (419 ms)
      ✓ should handle OAuth session creation errors (689 ms)
      ✓ should extract profile data correctly for different providers (638 ms)
    handleCustomerSocialCallback
      ✓ should create customer OAuth session (417 ms)
    completeSocialRegistration
      ✓ should complete social registration successfully (672 ms)
      ✓ should sanitize social data and reject if fields become empty (190 ms)
      ✓ should check for existing email and username (424 ms)
      ✓ should check for existing social account (901 ms)
      ✓ should generate unique username from social data (642 ms)
      ✓ should handle JWT verification errors (674 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration successfully (478 ms)
      ✓ should validate affiliate existence (651 ms)
      ✓ should sanitize customer social data (164 ms)
    pollOAuthSession
      ✓ should return complete session data when available (649 ms)
      ✓ should return social-auth-login session data (2295 ms)
      ✓ should return social-auth-error session data (670 ms)
      ✓ should return social-auth-account-conflict session data for affiliate conflict (399 ms)
      ✓ should return social-auth-account-conflict session data for customer conflict (404 ms)
      ✓ should return pending status when session not ready (406 ms)
      ✓ should handle database errors gracefully (645 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed JWT tokens (399 ms)
      ✓ should handle database connection errors (157 ms)
      ✓ should handle missing required fields in social data (188 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:663:13)

  console.error
    Token verification error: Error: User data not found in request
        at Object.<anonymous>.exports.verifyToken (/var/www/wavemax/wavemax-affiliate-program/server/controllers/authController.js:860:13)
        at Object.verifyToken (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authController.test.js:370:28)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      881 |     });
      882 |   } catch (error) {
    > 883 |     console.error('Token verification error:', error);
          |             ^
      884 |     res.status(500).json({
      885 |       success: false,
      886 |       message: 'An error occurred during token verification'

      at Object.error [as verifyToken] (server/controllers/authController.js:883:13)
      at Object.verifyToken (tests/unit/authController.test.js:370:28)

PASS tests/unit/authController.test.js
  Auth Controller
    affiliateLogin
      ✓ should successfully login an affiliate with valid credentials (3 ms)
      ✓ should return 401 for non-existent affiliate
      ✓ should return 401 for incorrect password
    customerLogin
      ✓ should successfully login a customer with valid credentials (7 ms)
      ✓ should return 401 for non-existent customer (1 ms)
      ✓ should login customer using emailOrUsername field (1 ms)
      ✓ should prioritize emailOrUsername over username field (11 ms)
      ✓ should return error when neither username nor emailOrUsername provided
    verifyToken
      ✓ should verify a valid JWT token (5 ms)
      ✓ should handle missing user data (35 ms)
      ✓ should return customer user data (1 ms)
    refreshToken
      ✓ should refresh token successfully (2 ms)
      ✓ should return error for invalid refresh token
      ✓ should return error for expired refresh token (1 ms)
    administratorLogin
      ✓ should successfully login administrator (1 ms)
      ✓ should handle locked account (1 ms)
      ✓ should handle inactive administrator
    operatorLogin
      ✓ should successfully login operator with PIN (1 ms)
      ✓ should increment login attempts on failure
    logout
      ✓ should logout user and blacklist token (1 ms)
    forgotPassword
      ✓ should send password reset email for affiliate
      ✓ should handle non-existent email gracefully
    resetPassword
      ✓ should reset password with valid token (1 ms)
      ✓ should reject expired token

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/passportConfig.test.js
  Passport Configuration Tests
    Strategy Configuration
      ✓ should configure Google strategy when credentials are present (4 ms)
      ✓ should not configure Google strategy without credentials (1 ms)
      ✓ should configure Facebook strategy when credentials are present (1 ms)
      ✓ should not configure Facebook strategy without credentials (1 ms)
      ✓ should configure LinkedIn strategy when credentials are present (1 ms)
    Google OAuth Strategy
      ✓ should handle database errors (1 ms)
      Customer Context
        ✓ should handle existing customer with Google account (2 ms)
        ✓ should link Google account to existing customer (1 ms)
        ✓ should handle existing affiliate conflict (1 ms)
        ✓ should return new user data (1 ms)
      Affiliate Context
        ✓ should handle existing affiliate with Google account (1 ms)
        ✓ should handle customer conflict (1 ms)
        ✓ should link Google account to existing affiliate with email (2 ms)
        ✓ should return new affiliate user data (1 ms)
    Facebook OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should return new user data for registration (1 ms)
      ✓ should link Facebook account to existing affiliate (1 ms)
      ✓ should handle Facebook error (1 ms)
    LinkedIn OAuth Strategy
      ✓ should handle existing affiliate (3 ms)
      ✓ should link LinkedIn account to existing affiliate (1 ms)
      ✓ should return new LinkedIn user data (8 ms)
      ✓ should handle LinkedIn error (1 ms)
    Serialization
      ✓ should serialize user with _id (1 ms)
      ✓ should serialize user with socialId (1 ms)
      ✓ should deserialize user (1 ms)
      ✓ should handle deserialization errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/paymentExport.test.js (5.385 s)
  PaymentExport Model Unit Tests
    Schema Validation
      ✓ should create a valid PaymentExport (63 ms)
      ✓ should generate exportId automatically (68 ms)
      ✓ should require type field (64 ms)
      ✓ should validate type enum values (75 ms)
      ✓ should reject invalid type values (81 ms)
      ✓ should require generatedBy field (63 ms)
    Period Fields
      ✓ should store period dates for payment summary (55 ms)
      ✓ should store period dates for commission detail (55 ms)
    Export Data
      ✓ should store vendor export data (56 ms)
      ✓ should store payment summary data (58 ms)
      ✓ should store commission detail data (88 ms)
    Affiliate IDs
      ✓ should store multiple affiliate IDs for vendor export (55 ms)
      ✓ should store single affiliate ID for commission detail (57 ms)
      ✓ should allow empty affiliate IDs array (54 ms)
    Timestamps
      ✓ should have createdAt and updatedAt timestamps (56 ms)
    Indexes
      ✓ should have required indexes defined (54 ms)
    Different Export Types
      ✓ should handle vendor export type correctly (61 ms)
      ✓ should handle payment summary export type correctly (66 ms)
      ✓ should handle commission detail export type correctly (70 ms)
    Export ID Generation
      ✓ should generate unique export IDs (54 ms)
    Reference Validation
      ✓ should validate generatedBy as ObjectId reference (54 ms)
      ✓ should accept valid ObjectId for generatedBy (54 ms)
    Instance Methods
      markDownloaded()
        ✓ should mark export as downloaded (203 ms)
        ✓ should increment download count on multiple downloads (378 ms)
        ✓ should not change status if already downloaded (245 ms)
        ✓ should update downloadedAt timestamp (248 ms)
      updateImportStatus()
        ✓ should update import status to success (191 ms)
        ✓ should update import status to failed (185 ms)
        ✓ should handle partial import status (222 ms)
    Static Methods
      findByPeriod()
        ✓ should find exports within period (183 ms)
        ✓ should filter by type when specified (185 ms)
        ✓ should return empty array when no matches (162 ms)
        ✓ should sort by generatedAt descending (230 ms)
      existsForPeriod()
        ✓ should find existing export for period (182 ms)
        ✓ should not find export for different period (177 ms)
        ✓ should exclude failed exports (221 ms)
        ✓ should find export with non-failed status (209 ms)
    Virtual Properties
      ageInDays
        ✓ should calculate age in days correctly (107 ms)
        ✓ should return 1 for exports created today (90 ms)
        ✓ should handle exports created in the past correctly (53 ms)
        ✓ should update as time passes (61 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/systemConfig.test.js (9.142 s)
  SystemConfig Model
    Schema Validation
      ✓ should create a valid system config (161 ms)
      ✓ should require mandatory fields (111 ms)
      ✓ should enforce unique key constraint (355 ms)
      ✓ should validate category enum (78 ms)
      ✓ should validate dataType enum (79 ms)
      ✓ should accept all valid categories (471 ms)
      ✓ should accept all valid data types (276 ms)
      ✓ should trim string fields (120 ms)
    Value Validation
      Number validation
        ✓ should reject non-number values for number dataType (79 ms)
        ✓ should enforce minimum value validation (91 ms)
        ✓ should enforce maximum value validation (85 ms)
        ✓ should accept valid number within range (122 ms)
      Boolean validation
        ✓ should reject non-boolean values for boolean dataType (84 ms)
        ✓ should accept boolean values (141 ms)
      String validation
        ✓ should reject non-string values for string dataType (84 ms)
        ✓ should enforce regex validation (80 ms)
        ✓ should accept valid string matching regex (121 ms)
      Array validation
        ✓ should reject non-array values for array dataType (77 ms)
        ✓ should accept array values (124 ms)
      Object validation
        ✓ should reject non-object values for object dataType (81 ms)
        ✓ should reject arrays for object dataType (87 ms)
        ✓ should accept object values (121 ms)
      Allowed values validation
        ✓ should enforce allowed values (79 ms)
        ✓ should accept allowed values (122 ms)
    Static Methods
      getValue
        ✓ should return config value (158 ms)
        ✓ should return defaultValue when value is undefined (163 ms)
        ✓ should return provided default when config not found (107 ms)
        ✓ should return null when config not found and no default provided (104 ms)
      setValue
        ✓ should update config value (211 ms)
        ✓ should throw error for non-existent config (136 ms)
        ✓ should throw error for non-editable config (152 ms)
        ✓ should update updatedBy when provided (200 ms)
        ✓ should validate new value according to dataType (149 ms)
      getByCategory
        ✓ should return all configs for a category (175 ms)
        ✓ should return only public configs when specified (174 ms)
        ✓ should return empty array for non-existent category (182 ms)
        ✓ should sort by key (201 ms)
      getPublicConfigs
        ✓ should return only public configs (168 ms)
        ✓ should sort by category then key (163 ms)
      initializeDefaults
        ✓ should create default configurations (562 ms)
        ✓ should not overwrite existing configurations (523 ms)
        ✓ should add missing configurations (567 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (124 ms)
      ✓ should update updatedAt on modification (257 ms)
    toJSON transformation
      ✓ should include currentValue in JSON output (127 ms)
      ✓ should use defaultValue when value is undefined (126 ms)
    Edge Cases
      ✓ should handle mixed types for value and defaultValue (127 ms)
      ✓ should handle empty validation object (144 ms)
      ✓ should skip validation when value is not modified (175 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Checking email availability for: new@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'new@example.com',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: existing@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'existing@example.com',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: customer@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.log
    Email check results: {
      email: 'customer@example.com',
      affiliateFound: false,
      customerFound: true,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkEmail] (server/controllers/authController.js:2394:13)

  console.log
    Checking email availability for: test@example.com

      at Object.log [as checkEmail] (server/controllers/authController.js:2384:13)

  console.error
    Check email error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:130:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2408 |
      2409 |   } catch (error) {
    > 2410 |     console.error('Check email error:', error);
           |             ^
      2411 |     res.status(500).json({
      2412 |       success: false,
      2413 |       message: 'Error checking email availability'

      at Object.error [as checkEmail] (server/controllers/authController.js:2410:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:132:7)

  console.log
    Checking username availability for: newuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'newuser',
      affiliateFound: false,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: existinguser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.log
    Username check results: {
      username: 'existinguser',
      affiliateFound: true,
      customerFound: false,
      administratorFound: false,
      operatorFound: false
    }

      at Object.log [as checkUsername] (server/controllers/authController.js:2341:13)

  console.log
    Checking username availability for: testuser

      at Object.log [as checkUsername] (server/controllers/authController.js:2331:13)

  console.error
    Check username error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:186:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2355 |
      2356 |   } catch (error) {
    > 2357 |     console.error('Check username error:', error);
           |             ^
      2358 |     res.status(500).json({
      2359 |       success: false,
      2360 |       message: 'Error checking username availability'

      at Object.error [as checkUsername] (server/controllers/authController.js:2357:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:188:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login attempt from IP: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    Auto-login denied - IP not whitelisted: 192.168.1.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:390:15)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.error
    Default operator not found: OP001

      400 |     
      401 |     if (!operator) {
    > 402 |       console.error('Default operator not found:', defaultOperatorId);
          |               ^
      403 |       return res.status(404).json({
      404 |         success: false,
      405 |         message: 'Default operator not configured'

      at Object.error [as operatorAutoLogin] (server/controllers/authController.js:402:15)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:282:7)

  console.log
    Auto-login attempt from IP: 127.0.0.1

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:382:13)

  console.log
    Whitelisted IPs: [ '127.0.0.1' ]

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:386:13)

  console.log
    Whitelisted Ranges: []

      at Object.log [as operatorAutoLogin] (server/controllers/authController.js:387:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'exists',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    OAuth Callback Debug: {
      popup: undefined,
      state: 'affiliate',
      referer: 'http://localhost:3000',
      isPopup: false,
      userIsNew: undefined
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:1041:13)

  console.log
    [OAuth] handleSocialCallback called with: {
      user: 'null',
      query: { state: 'affiliate' },
      headers: { referer: 'http://localhost:3000', 'user-agent': 'test-user-agent' },
      state: 'affiliate',
      stateStartsWithCustomer: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:965:11)

  console.log
    [OAuth] Customer request check: { state: 'affiliate', isCustomerRequest: false, willDelegate: false }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:978:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'affiliate',
      sessionId: null,
      allParams: { state: 'affiliate' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:996:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'existing-customer',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Called with: {
      user: 'exists',
      userType: 'new-user',
      query: { state: 'customer_oauth_test-session-id' },
      url: undefined,
      originalUrl: undefined
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1594:11)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1628:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: 'http://localhost:3000',
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1747:13)

  console.log
    [handleCustomerSocialCallback] Checking for existing affiliate: {
      isExistingAffiliate: undefined,
      userObject: {
        provider: 'google',
        socialId: 'google123',
        email: 'jane@example.com',
        firstName: 'Jane',
        lastName: 'Doe',
        isNewUser: true,
        displayName: 'Jane Doe'
      }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1877:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        sessionId: 'session123',
        status: 'completed',
        userId: 'user123',
        userType: 'affiliate',
        token: 'mock-token'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'session123',
      sessionResult: 'found',
      resultData: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: { sessionId: 'session123', status: 'pending' }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1578:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: invalid

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.log
    OAuth Session Polling Debug: { sessionId: 'invalid', sessionResult: 'not found', resultData: null }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1559:13)

  console.log
    [OAuth] pollOAuthSession called for sessionId: session123

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1545:11)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerAdditional.test.js:812:53)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1580 |
      1581 |   } catch (error) {
    > 1582 |     console.error('OAuth session polling error:', error);
           |             ^
      1583 |     res.status(500).json({
      1584 |       success: false,
      1585 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1582:13)
      at Object.<anonymous> (tests/unit/authControllerAdditional.test.js:814:7)

PASS tests/unit/authControllerAdditional.test.js
  Auth Controller - Additional Coverage
    checkEmail
      ✓ should return available when email does not exist (9 ms)
      ✓ should return not available when email exists in Affiliate (2 ms)
      ✓ should return not available when email exists in Customer (2 ms)
      ✓ should handle errors (20 ms)
      ✓ should return error for missing email (2 ms)
    checkUsername
      ✓ should return available when username does not exist (3 ms)
      ✓ should return not available when username exists (2 ms)
      ✓ should handle errors (3 ms)
      ✓ should return error for missing username (1 ms)
    operatorAutoLogin
      ✓ should auto-login operator from store IP (14 ms)
      ✓ should fail from invalid IP (4 ms)
      ✓ should handle missing default operator (6 ms)
      ✓ should handle inactive operator (4 ms)
    handleSocialCallback
      ✓ should handle successful social auth callback for affiliate (5 ms)
      ✓ should redirect new user to registration (23 ms)
      ✓ should handle errors (4 ms)
    handleCustomerSocialCallback
      ✓ should handle customer social auth callback (12 ms)
      ✓ should handle new customer registration (4 ms)
    completeSocialRegistration
      ✓ should complete affiliate social registration (24 ms)
      ✓ should handle existing email (1 ms)
      ✓ should handle invalid token (1 ms)
      ✓ should handle missing social data (1 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration (1 ms)
      ✓ should handle invalid affiliate code
    pollOAuthSession
      ✓ should return completed session data (3 ms)
      ✓ should return session data for pending session (2 ms)
      ✓ should handle session not found (1 ms)
      ✓ should handle errors (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/unit/operator.test.js (13.514 s)
  Operator Model
    Schema Validation
      ✓ should create a valid operator (253 ms)
      ✓ should require all mandatory fields (97 ms)
      ✓ should enforce email format validation (88 ms)
      ✓ should enforce unique email constraint (732 ms)
      ✓ should enforce unique username constraint (860 ms)
      ✓ should validate username format (81 ms)
      ✓ should validate shift time format (87 ms)
      ✓ should accept valid shift times (193 ms)
      ✓ should enforce quality score range (87 ms)
      ✓ should trim whitespace from string fields (206 ms)
      ✓ should convert email and username to lowercase (413 ms)
      ✓ should not allow role to be changed after creation (300 ms)
    Password Handling
      ✓ should hash password on save (296 ms)
      ✓ should verify correct password (271 ms)
      ✓ should reject incorrect password (295 ms)
      ✓ should not expose password in JSON output (207 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (307 ms)
      ✓ should lock account after 5 failed attempts (939 ms)
      ✓ should lock for 30 minutes (503 ms)
      ✓ should reset login attempts on successful login (318 ms)
      ✓ should reset attempts if lock has expired (263 ms)
      ✓ should correctly identify locked accounts (202 ms)
    Password Reset
      ✓ should generate password reset token (79 ms)
      ✓ should set password reset expiry to 30 minutes (79 ms)
    Shift Management
      isOnShift virtual
        ✓ should return true when no shift times are set (78 ms)
        ✓ should correctly identify operator on shift during normal hours (86 ms)
        ✓ should correctly identify operator off shift (78 ms)
        ✓ should handle overnight shifts correctly (83 ms)
    Processing Statistics
      ✓ should update processing stats correctly (223 ms)
      ✓ should handle first order processing (363 ms)
      ✓ should update quality score with passing result (283 ms)
      ✓ should update quality score with failing result (255 ms)
    Static Methods
      findActive
        ✓ should find only active operators (322 ms)
      findOnShift
        ✓ should find only operators on shift (342 ms)
      findByEmailWithPassword
        ✓ should find operator by email with password (203 ms)
        ✓ should handle case-insensitive email search (214 ms)
        ✓ should return null for non-existent email (105 ms)
      findAvailableOperators
        ✓ should find operators with low order count (324 ms)
        ✓ should sort by current order count (301 ms)
        ✓ should respect limit parameter (1402 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (175 ms)
      ✓ should update updatedAt on modification (314 ms)
    Operator ID Generation
      ✓ should auto-generate unique operator ID (269 ms)
      ✓ should not override provided operator ID (177 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Failed to initiate W9 signing: Error: Template not found
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/w9ControllerDocuSign.test.js:250:58)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

  console.log
    Envelope mismatch: { expected: 'test_envelope_id', received: 'wrong_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

  console.log
    Envelope mismatch: { expected: undefined, received: 'test_envelope_id' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

PASS tests/unit/w9ControllerDocuSign.test.js (9.449 s)
  W9 Controller DocuSign Methods
    Check DocuSign Auth
      ✓ should return authorized true if valid token exists (210 ms)
      ✓ should return authorization URL if no valid token (140 ms)
      ✓ should handle service errors (210 ms)
    OAuth Callback
      ✓ should handle successful OAuth callback (125 ms)
      ✓ should handle missing authorization code (127 ms)
      ✓ should handle missing state parameter (135 ms)
      ✓ should display error page on token exchange failure (132 ms)
    Initiate W9 Signing
      ✓ should create new envelope and return signing URL (271 ms)
      ✓ should return existing envelope if one is in progress (440 ms)
      ✓ should require DocuSign authorization if no valid token (269 ms)
      ✓ should handle affiliate not found (239 ms)
      ✓ should handle envelope creation errors (195 ms)
    Get Envelope Status
      ✓ should return envelope status from DocuSign (790 ms)
      ✓ should handle mismatched envelope ID (225 ms)
      ✓ should handle affiliate with no W9 information (247 ms)
      ✓ should return local status if DocuSign API fails (228 ms)
      ✓ should clear envelope ID if declined (458 ms)
    DocuSign Webhook
      ✓ should process completed envelope webhook (368 ms)
      ✓ should reject webhook with invalid signature (129 ms)
      ✓ should handle affiliate not found (155 ms)
      ✓ should process completed W9 without downloading document (257 ms)
    Check Authorization Status
      ✓ should return authorized true if valid token exists (122 ms)
      ✓ should return authorized false if no valid token (139 ms)
      ✓ should handle service errors (136 ms)
    Get W9 Signing Status
      ✓ should return W9 status for affiliate (136 ms)
      ✓ should include tax info for verified W9 (128 ms)
      ✓ should check DocuSign status for in-progress envelopes (144 ms)
      ✓ should handle affiliate not found (153 ms)
      ✓ should handle errors gracefully (117 ms)
    Cancel W9 Signing
      ✓ should cancel W9 signing successfully (203 ms)
      ✓ should handle no W9 signing in progress (154 ms)
      ✓ should handle affiliate not found (128 ms)
      ✓ should handle void envelope errors (171 ms)
    Resend W9 Request
      ✓ should resend W9 request successfully (170 ms)
      ✓ should handle affiliate not found (149 ms)
      ✓ should continue if voiding existing envelope fails (217 ms)
      ✓ should handle envelope creation errors (121 ms)
    Send W9 To Affiliate
      ✓ should send W9 to affiliate successfully (161 ms)
      ✓ should handle affiliate not found (132 ms)
      ✓ should prevent sending to affiliate with verified W9 (126 ms)
      ✓ should prevent sending to affiliate with submitted W9 (128 ms)
      ✓ should handle authorization errors (132 ms)
      ✓ should handle template configuration errors (144 ms)
      ✓ should handle general errors (131 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Welcome email could not be sent: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:159:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      101 |       // Email sent successfully - no need to check result
      102 |     } catch (emailError) {
    > 103 |       console.warn('Welcome email could not be sent:', emailError);
          |               ^
      104 |       // Continue with registration process even if email fails
      105 |     }
      106 |

      at Object.warn [as registerAffiliate] (server/controllers/affiliateController.js:103:15)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:161:7)

  console.error
    Affiliate registration error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:176:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      111 |     });
      112 |   } catch (error) {
    > 113 |     console.error('Affiliate registration error:', error);
          |             ^
      114 |     res.status(500).json({
      115 |       success: false,
      116 |       message: 'An error occurred during registration'

      at Object.error [as registerAffiliate] (server/controllers/affiliateController.js:113:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:178:7)

  console.error
    Error decrypting PayPal email: Error: Decryption failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:273:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as decrypt] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at Object.decrypt [as getAffiliateProfile] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:175:28)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:276:7)

      176 |           : affiliate.paypalEmail;
      177 |       } catch (error) {
    > 178 |         console.error('Error decrypting PayPal email:', error);
          |                 ^
      179 |         // Don't include if decryption fails
      180 |       }
      181 |     }

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:178:17)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:276:7)

  console.error
    Get affiliate orders error: TypeError: Cannot read properties of undefined (reading 'forEach')
        at Object.forEach [as getAffiliateOrders] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:599:15)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:695:7)

      647 |     });
      648 |   } catch (error) {
    > 649 |     console.error('Get affiliate orders error:', error);
          |             ^
      650 |     res.status(500).json({
      651 |       success: false,
      652 |       message: 'An error occurred while retrieving orders'

      at Object.error [as getAffiliateOrders] (server/controllers/affiliateController.js:649:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:695:7)

  console.error
    Get affiliate profile error: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:942:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      187 |     });
      188 |   } catch (error) {
    > 189 |     console.error('Get affiliate profile error:', error);
          |             ^
      190 |     res.status(500).json({
      191 |       success: false,
      192 |       message: 'An error occurred while retrieving affiliate profile'

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:189:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:944:7)

  console.error
    Delete affiliate data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:1031:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error('Delete affiliate data error:', error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteAffiliateData] (server/controllers/affiliateController.js:901:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:1033:7)

PASS tests/unit/affiliateController.test.js
  Affiliate Controller
    registerAffiliate
      ✓ should successfully register a new affiliate (3 ms)
      ✓ should return validation errors (1 ms)
      ✓ should handle duplicate email or username (1 ms)
      ✓ should handle email service failure gracefully (37 ms)
      ✓ should handle database errors (2 ms)
    getAffiliateProfile
      ✓ should return affiliate profile for authorized user (1 ms)
      ✓ should return 404 for non-existent affiliate (1 ms)
      ✓ should return 403 for unauthorized access
      ✓ should handle decryption errors gracefully (14 ms)
    updateAffiliateProfile
      ✓ should successfully update affiliate profile (2 ms)
      ✓ should handle password change (10 ms)
      ✓ should reject incorrect current password (1 ms)
      ✓ should update payment method (1 ms)
    getAffiliateEarnings
      ✓ should return earnings for specified period (1 ms)
      ✓ should handle different time periods (1 ms)
      ✓ should handle missing customers gracefully
    getAffiliateCustomers
      ✓ should return paginated customers with search (2 ms)
      ✓ should handle different sort options
    getAffiliateOrders
      ✓ should return filtered orders (1 ms)
      ✓ should handle date filters correctly (2 ms)
    getAffiliateTransactions
      ✓ should return paginated transactions (1 ms)
    getAffiliateDashboardStats
      ✓ should return comprehensive dashboard statistics (2 ms)
      ✓ should handle empty data gracefully
    getPublicAffiliateInfo
      ✓ should return only public affiliate information
      ✓ should return 404 for non-existent affiliate (1 ms)
    Error handling
      ✓ should handle database connection errors (1 ms)
    deleteAffiliateData
      ✓ should delete all affiliate data in development environment (2 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion (1 ms)
      ✓ should handle deletion errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: TypeError: Administrator.find(...).select is not a function
        at select (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:54:8)
        at Object.getAdministrators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:161:15)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.getAdministrators (tests/unit/administratorControllerEnhanced.test.js:161:15)

  console.error
    Error updating operator profile: TypeError: updatedOperator.toObject is not a function
        at toObject (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2255:70)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1078:9)

      2261 |     });
      2262 |   } catch (error) {
    > 2263 |     console.error('Error updating operator profile:', error);
           |             ^
      2264 |     res.status(500).json({
      2265 |       success: false,
      2266 |       message: 'An error occurred while updating the profile'

      at error (server/controllers/administratorController.js:2263:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1078:9)

  console.error
    Error fetching administrators: Error: Connection timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:1093:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:1096:7)

PASS tests/unit/administratorControllerEnhanced.test.js
  Administrator Controller - Enhanced Coverage
    Administrator Management
      getAdministrators
        ✓ should get all administrators with pagination (2 ms)
        ✓ should filter administrators by search query (1 ms)
        ✓ should handle database errors (46 ms)
      getAdministratorById
        ✓ should get administrator by ID (1 ms)
        ✓ should return 404 for non-existent administrator
        ✓ should return 400 for invalid ObjectId
      createAdministrator
        ✓ should create new administrator with valid data (52 ms)
        ✓ should return validation errors
        ✓ should handle duplicate email error (1 ms)
      updateAdministrator
        ✓ should update administrator successfully (1 ms)
        ✓ should not allow self-demotion of last super admin (1 ms)
      deleteAdministrator
        ✓ should delete administrator successfully
        ✓ should prevent self-deletion (1 ms)
        ✓ should prevent deletion of last administrator
      resetAdministratorPassword
        ✓ should reset administrator password (60 ms)
        ✓ should handle email sending failure (57 ms)
      getPermissions
        ✓ should return all available permissions (1 ms)
    Operator Management Extensions
      deactivateOperator
        ✓ should deactivate operator (1 ms)
        ✓ should handle non-existent operator
      resetOperatorPassword
        ✓ should reset operator password and send email (1 ms)
      resetOperatorPin
        ✓ should reset operator PIN (1 ms)
        ✓ should validate PIN format
      deleteOperator
        ✓ should delete operator permanently (1 ms)
      getAvailableOperators
        ✓ should get available operators for assignment
      updateOperatorStats
        ✓ should update operator statistics (1 ms)
    Analytics Extensions
      getOperatorAnalytics
        ✓ should get operator analytics with date range (1 ms)
        ✓ should handle missing date range
      getAffiliateAnalytics
        ✓ should get affiliate analytics (1 ms)
      exportReport
        ✓ should export report as CSV (1 ms)
        ✓ should export report as JSON (1 ms)
        ✓ should reject invalid report type
    Operator Self-Management
      getOperatorSelf
        ✓ should get current operator profile (1 ms)
        ✓ should handle non-operator users
      updateOperatorSelf
        ✓ should allow operator to update own profile (1 ms)
        ✓ should prevent changing restricted fields (2 ms)
    Error Handling
      ✓ should handle database connection errors (2 ms)
      ✓ should handle validation errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    Creating new customer with email: jane@example.com username: janesmith

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST123456

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

  console.error
    Delete customer data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:460:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      615 |     });
      616 |   } catch (error) {
    > 617 |     console.error('Delete customer data error:', error);
          |             ^
      618 |     res.status(500).json({
      619 |       success: false,
      620 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteCustomerData] (server/controllers/customerController.js:617:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:462:7)

  console.error
    Get customer dashboard stats error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:735:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      503 |     });
      504 |   } catch (error) {
    > 505 |     console.error('Get customer dashboard stats error:', error);
          |             ^
      506 |     res.status(500).json({
      507 |       success: false,
      508 |       message: 'An error occurred while retrieving dashboard statistics'

      at Object.error [as getCustomerDashboardStats] (server/controllers/customerController.js:505:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:737:7)

  console.error
    Update payment info error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:839:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      557 |     });
      558 |   } catch (error) {
    > 559 |     console.error('Update payment info error:', error);
          |             ^
      560 |     res.status(500).json({
      561 |       success: false,
      562 |       message: 'An error occurred while updating payment information'

      at Object.error [as updatePaymentInfo] (server/controllers/customerController.js:559:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:841:7)

  console.error
    Update customer password error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1004:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      687 |     });
      688 |   } catch (error) {
    > 689 |     console.error('Update customer password error:', error);
          |             ^
      690 |     res.status(500).json({
      691 |       success: false,
      692 |       message: 'An error occurred while updating password'

      at Object.error [as updateCustomerPassword] (server/controllers/customerController.js:689:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1006:7)

  console.error
    Get customers for admin error: TypeError: Cannot read properties of undefined (reading 'search')
        at Object.search [as getCustomersForAdmin] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/customerController.js:707:19)
        at Object.getCustomersForAdmin (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1239:32)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      784 |     });
      785 |   } catch (error) {
    > 786 |     console.error('Get customers for admin error:', error);
          |             ^
      787 |     res.status(500).json({
      788 |       success: false,
      789 |       message: 'Failed to retrieve customers'

      at Object.error [as getCustomersForAdmin] (server/controllers/customerController.js:786:13)
      at Object.getCustomersForAdmin (tests/unit/customerController.test.js:1239:32)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.error
    Customer registration error: Error: Database save failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:1306:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      152 |     });
      153 |   } catch (error) {
    > 154 |     console.error('Customer registration error:', error);
          |             ^
      155 |     res.status(500).json({
      156 |       success: false,
      157 |       message: 'An error occurred during registration'

      at Object.error [as registerCustomer] (server/controllers/customerController.js:154:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:1325:7)

  console.log
    Creating new customer with email: test@example.com username: testuser

      at Object.log [as registerCustomer] (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at Object.log [as registerCustomer] (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST999

      at Object.log [as registerCustomer] (server/controllers/customerController.js:121:13)

PASS tests/unit/customerController.test.js
  Customer Controller
    registerCustomer
      ✓ should successfully register a new customer (20 ms)
      ✓ should return error for invalid affiliate (1 ms)
      ✓ should return error for duplicate email
    getCustomerProfile
      ✓ should return customer profile for authorized customer (2 ms)
      ✓ should return 403 for unauthorized access
      ✓ should return 404 for non-existent customer (1 ms)
    updateCustomerProfile
      ✓ should successfully update customer profile (1 ms)
      ✓ should prevent updating protected fields (2 ms)
    getCustomerOrders
      ✓ should return customer orders with pagination (1 ms)
    deleteCustomerData
      ✓ should delete all customer data in development environment (1 ms)
      ✓ should reject deletion in production environment (1 ms)
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (24 ms)
      ✓ should return 404 for non-existent customer (1 ms)
    getCustomerDashboardStats
      ✓ should return dashboard stats for authorized customer (1 ms)
      ✓ should return 404 for non-existent customer (1 ms)
      ✓ should return 403 for unauthorized access (5 ms)
      ✓ should allow affiliate access to their customer dashboard (1 ms)
      ✓ should handle database errors gracefully (1 ms)
    updatePaymentInfo
      ✓ should successfully update payment information (1 ms)
      ✓ should return 404 for non-existent customer (1 ms)
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should allow admin to update customer payment info
      ✓ should handle database errors (2 ms)
    updateCustomerPassword
      ✓ should successfully update password (1 ms)
      ✓ should reject incorrect current password
      ✓ should validate new password length (1 ms)
      ✓ should return 404 for non-existent customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should handle missing new password
      ✓ should handle database errors (1 ms)
    getCustomersForAdmin
      ✓ should return all customers for admin (1 ms)
      ✓ should filter customers by search query (1 ms)
      ✓ should filter customers by affiliate
      ✓ should filter customers by active status (1 ms)
      ✓ should filter customers by inactive status
      ✓ should filter new customers with no orders
      ✓ should handle combined filters (1 ms)
      ✓ should handle database errors (11 ms)
      ✓ should ignore "all" filter values
    validation errors
      ✓ should return validation errors for registerCustomer (1 ms)
    error handling for registration
      ✓ should handle database save errors during registration (3 ms)
      ✓ should handle missing payment info gracefully (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: 'CUST123' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'INVALID', bagId: 'INVALID' }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1069:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.log
    scanCustomer called with: { customerId: 'CUST123', bagId: undefined }

      at Object.log [as scanCustomer] (server/controllers/operatorController.js:591:13)

  console.error
    Error in scanCustomer: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/operatorController.test.js:1607:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      680 |     res.json(response);
      681 |   } catch (error) {
    > 682 |     console.error('Error in scanCustomer:', error);
          |             ^
      683 |     if (logger && logger.error) {
      684 |       logger.error('Error scanning customer card:', error);
      685 |     }

      at Object.error [as scanCustomer] (server/controllers/operatorController.js:682:13)
      at Object.<anonymous> (tests/unit/operatorController.test.js:1609:7)

PASS tests/unit/operatorController.test.js
  Operator Controller
    getOrderQueue
      ✓ should return available orders for operator workstation (2 ms)
    claimOrder
      ✓ should allow operator to claim an order (1 ms)
      ✓ should fail if order is already claimed
      ✓ should fail if order not found
      ✓ should handle database error during claim (1 ms)
    updateOrderStatus
      ✓ should update order status
      ✓ should handle invalid status transition
      ✓ should handle order not found
      ✓ should handle unauthorized operator (1 ms)
      ✓ should update workstation when washing status with new workstation (1 ms)
      ✓ should set processingCompleted when status is ready (1 ms)
      ✓ should handle database error (1 ms)
    performQualityCheck
      ✓ should record quality check results (1 ms)
      ✓ should handle order not found
      ✓ should handle order not ready for quality check
      ✓ should handle database error during quality check
    getMyOrders
      ✓ should return orders assigned to operator (1 ms)
    updateShiftStatus
      ✓ should update operator shift status
      ✓ should handle operator not found (1 ms)
      ✓ should end shift successfully
      ✓ should handle database error (1 ms)
    getPerformanceStats
      ✓ should return operator performance statistics (1 ms)
    getCustomerDetails
      ✓ should return customer details for an order
    addCustomerNote
      ✓ should add a note to an order
      ✓ should handle customer not found (1 ms)
      ✓ should handle errors during note addition
    Error handling in existing functions
      ✓ should handle error in getOrderQueue (1 ms)
      ✓ should handle different filters in getOrderQueue
      ✓ should handle operator at max capacity in claimOrder (1 ms)
      ✓ should handle quality check failure in performQualityCheck (1 ms)
      ✓ should handle workstation conflict in updateShiftStatus
      ✓ should handle incomplete orders when ending shift
      ✓ should handle invalid action in updateShiftStatus (1 ms)
      ✓ should handle missing workstation when starting shift
      ✓ should handle different time periods in getPerformanceStats (1 ms)
      ✓ should handle operator not found in getPerformanceStats
      ✓ should handle customer not found in getCustomerDetails
      ✓ should handle filters in getMyOrders (1 ms)
    scanCustomer
      ✓ should scan customer and return current order (19 ms)
      ✓ should handle customer not found (2 ms)
    scanBag
      ✓ should redirect to scanCustomer (2 ms)
      ✓ should handle error in scanBag (28 ms)
    receiveOrder
      ✓ should receive order and update status (13 ms)
      ✓ should handle order not found (1 ms)
    markBagProcessed
      ✓ should mark bag as processed
      ✓ should update order status when all bags processed (233 ms)
    confirmPickup
      ✓ should confirm pickup and complete order (1 ms)
      ✓ should handle partial pickup (1 ms)
    getTodayStats
      ✓ should return today's operator statistics (1 ms)
      ✓ should handle no orders for today
    getWorkstationStatus
      ✓ should return workstation status for all workstations (1 ms)
      ✓ should handle database error (1 ms)
    Additional coverage tests
      ✓ should handle error in getMyOrders (8 ms)
      ✓ should handle different performance stat periods
      ✓ should handle error in getPerformanceStats (1 ms)
      ✓ should handle error in getCustomerDetails
      ✓ should handle no active order in scanCustomer (5 ms)
      ✓ should handle different scan actions in scanCustomer (3 ms)
      ✓ should handle affiliate lookup in scanCustomer (1 ms)
      ✓ should handle error in scanCustomer (2 ms)
      ✓ should handle error in receiveOrder (1 ms)
      ✓ should handle order not found in markBagProcessed (1 ms)
      ✓ should handle error in markBagProcessed (1 ms)
      ✓ should handle order not found in confirmPickup
      ✓ should handle error in confirmPickup
      ✓ should handle error in getTodayStats (1 ms)
      ✓ should handle markOrderReady (deprecated function) (1 ms)
      ✓ should handle markOrderReady with affiliate notification
      ✓ should handle errors in markOrderReady

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.error
    Error fetching administrators: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:380:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      71 |
      72 |   } catch (error) {
    > 73 |     console.error('Error fetching administrators:', error);
         |             ^
      74 |     res.status(500).json({
      75 |       success: false,
      76 |       message: 'Failed to fetch administrators'

      at Object.error [as getAdministrators] (server/controllers/administratorController.js:73:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:383:7)

  console.error
    Error fetching administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:814:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      109 |
      110 |   } catch (error) {
    > 111 |     console.error('Error fetching administrator:', error);
          |             ^
      112 |     res.status(500).json({
      113 |       success: false,
      114 |       message: 'Failed to fetch administrator'

      at Object.error [as getAdministratorById] (server/controllers/administratorController.js:111:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:817:7)

  console.error
    Error changing administrator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:929:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      544 |
      545 |   } catch (error) {
    > 546 |     console.error('Error changing administrator password:', error);
          |             ^
      547 |     res.status(500).json({
      548 |       success: false,
      549 |       message: 'Failed to change password'

      at Object.error [as changeAdministratorPassword] (server/controllers/administratorController.js:546:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:932:7)

  console.error
    Error fetching operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:996:47)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      849 |
      850 |   } catch (error) {
    > 851 |     console.error('Error fetching operator:', error);
          |             ^
      852 |     res.status(500).json({
      853 |       success: false,
      854 |       message: 'Failed to fetch operator details'

      at Object.error [as getOperatorById] (server/controllers/administratorController.js:851:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:999:7)

  console.error
    Error resetting operator password: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1062:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1034 |
      1035 |   } catch (error) {
    > 1036 |     console.error('Error resetting operator password:', error);
           |             ^
      1037 |     res.status(500).json({
      1038 |       success: false,
      1039 |       message: 'Failed to reset operator password'

      at Object.error [as resetOperatorPassword] (server/controllers/administratorController.js:1036:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1064:7)

  console.error
    Error fetching operator analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1117:41)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1510 |
      1511 |   } catch (error) {
    > 1512 |     console.error('Error fetching operator analytics:', error);
           |             ^
      1513 |     res.status(500).json({
      1514 |       success: false,
      1515 |       message: 'Failed to fetch operator analytics'

      at Object.error [as getOperatorAnalytics] (server/controllers/administratorController.js:1512:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1119:7)

  console.error
    Error fetching affiliate analytics: Error: Aggregation Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1171:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1612 |
      1613 |   } catch (error) {
    > 1614 |     console.error('Error fetching affiliate analytics:', error);
           |             ^
      1615 |     res.status(500).json({
      1616 |       success: false,
      1617 |       message: 'Failed to fetch affiliate analytics'

      at Object.error [as getAffiliateAnalytics] (server/controllers/administratorController.js:1614:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1173:7)

  console.error
    Error exporting report: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1293:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1677 |
      1678 |   } catch (error) {
    > 1679 |     console.error('Error exporting report:', error);
           |             ^
      1680 |     res.status(500).json({
      1681 |       success: false,
      1682 |       message: 'Failed to export report'

      at Object.error [as exportReport] (server/controllers/administratorController.js:1679:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1296:7)

  console.error
    Error fetching affiliates list: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1339:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1730 |     });
      1731 |   } catch (error) {
    > 1732 |     console.error('Error fetching affiliates list:', error);
           |             ^
      1733 |     res.status(500).json({
      1734 |       success: false,
      1735 |       message: 'Failed to fetch affiliates list',

      at Object.error [as getAffiliatesList] (server/controllers/administratorController.js:1732:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1342:7)

  console.error
    Error updating operator stats: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1520:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2080 |     });
      2081 |   } catch (error) {
    > 2082 |     console.error('Error updating operator stats:', error);
           |             ^
      2083 |     res.status(500).json({
      2084 |       success: false,
      2085 |       message: 'An error occurred while updating operator statistics'

      at Object.error [as updateOperatorStats] (server/controllers/administratorController.js:2082:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1522:7)

  console.error
    Error getting available operators: TypeError: Operator.find(...).sort(...).limit is not a function
        at Object.limit [as getAvailableOperators] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2103:8)
        at Object.getAvailableOperators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1570:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2109 |     });
      2110 |   } catch (error) {
    > 2111 |     console.error('Error getting available operators:', error);
           |             ^
      2112 |     res.status(500).json({
      2113 |       success: false,
      2114 |       message: 'An error occurred while fetching available operators'

      at Object.error [as getAvailableOperators] (server/controllers/administratorController.js:2111:13)
      at Object.getAvailableOperators (tests/unit/administratorController.test.js:1570:37)

  console.error
    Error deleting operator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1624:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2159 |     });
      2160 |   } catch (error) {
    > 2161 |     console.error('Error deleting operator:', error);
           |             ^
      2162 |     res.status(500).json({
      2163 |       success: false,
      2164 |       message: 'An error occurred while deleting the operator'

      at Object.error [as deleteOperator] (server/controllers/administratorController.js:2161:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1626:7)

  console.error
    Error resetting operator PIN: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1684:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2207 |     });
      2208 |   } catch (error) {
    > 2209 |     console.error('Error resetting operator PIN:', error);
           |             ^
      2210 |     res.status(500).json({
      2211 |       success: false,
      2212 |       message: 'An error occurred while resetting the PIN'

      at Object.error [as resetOperatorPin] (server/controllers/administratorController.js:2209:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1686:7)

  console.error
    Error fetching environment variables: TypeError: Cannot read properties of undefined (reading 'DEFAULT_ADMIN_EMAIL')
        at Object.DEFAULT_ADMIN_EMAIL [as getEnvironmentVariables] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2402:56)
        at Object.getEnvironmentVariables (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1732:37)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      2443 |
      2444 |   } catch (error) {
    > 2445 |     console.error('Error fetching environment variables:', error);
           |             ^
      2446 |     res.status(500).json({
      2447 |       success: false,
      2448 |       message: 'Failed to fetch environment variables'

      at Object.error [as getEnvironmentVariables] (server/controllers/administratorController.js:2445:13)
      at Object.getEnvironmentVariables (tests/unit/administratorController.test.js:1732:37)

  console.error
    Error updating administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1852:45)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      313 |
      314 |   } catch (error) {
    > 315 |     console.error('Error updating administrator:', error);
          |             ^
      316 |     res.status(500).json({
      317 |       success: false,
      318 |       message: 'Failed to update administrator'

      at Object.error [as updateAdministrator] (server/controllers/administratorController.js:315:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1855:7)

  console.error
    Error deleting administrator: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:1889:44)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      385 |
      386 |   } catch (error) {
    > 387 |     console.error('Error deleting administrator:', error);
          |             ^
      388 |     res.status(500).json({
      389 |       success: false,
      390 |       message: 'Failed to delete administrator'

      at Object.error [as deleteAdministrator] (server/controllers/administratorController.js:387:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:1891:7)

PASS tests/unit/administratorController.test.js
  Administrator Controller
    getAdministrators
      ✓ should get administrators with pagination (2 ms)
      ✓ should handle errors (35 ms)
    createAdministrator
      ✓ should create administrator (1 ms)
      ✓ should handle validation errors (1 ms)
    updateAdministrator
      ✓ should update administrator
      ✓ should prevent self-deactivation
    deleteAdministrator
      ✓ should delete administrator
      ✓ should prevent self-deletion
    resetAdministratorPassword
      ✓ should reset password (1 ms)
    Operator Management
      ✓ createOperator should create new operator (6 ms)
      ✓ getOperators should return operators list (1 ms)
      ✓ updateOperator should update operator details (1 ms)
      ✓ deactivateOperator should deactivate operator
    Analytics Functions
      ✓ getDashboard should return dashboard data (1 ms)
      ✓ getOrderAnalytics should return order analytics (1 ms)
    System Configuration
      ✓ getSystemConfig should return configurations
      ✓ updateSystemConfig should update configuration
    getPermissions
      ✓ should return available permissions (1 ms)
    getAdministratorById
      ✓ should get administrator by id
      ✓ should handle not found (1 ms)
      ✓ should handle errors (2 ms)
    changeAdministratorPassword
      ✓ should change password successfully (1 ms)
      ✓ should reject incorrect current password
      ✓ should validate new password strength (1 ms)
      ✓ should handle errors (2 ms)
    getOperatorById
      ✓ should get operator by id (1 ms)
      ✓ should handle operator not found
      ✓ should handle errors (3 ms)
    resetOperatorPassword
      ✓ should reset operator password
      ✓ should handle operator not found (1 ms)
      ✓ should handle errors (2 ms)
    getOperatorAnalytics
      ✓ should get operator analytics
      ✓ should handle errors (2 ms)
    getAffiliateAnalytics
      ✓ should get affiliate analytics
      ✓ should handle errors (1 ms)
    exportReport
      ✓ should export orders report
      ✓ should export operators report (1 ms)
      ✓ should handle invalid report type (1 ms)
      ✓ should handle errors (2 ms)
    getAffiliatesList
      ✓ should get affiliates list (1 ms)
      ✓ should handle errors (2 ms)
    getSystemHealth
      ✓ should get system health status (1 ms)
      ✓ should handle database connection issues (1 ms)
      ✓ should handle errors
    updateOperatorStats
      ✓ should update operator stats with processing time (6 ms)
      ✓ should handle operator not found (1 ms)
      ✓ should validate processing time
      ✓ should handle errors (2 ms)
    getAvailableOperators
      ✓ should get available operators (1 ms)
      ✓ should handle errors (22 ms)
    deleteOperator
      ✓ should delete operator (1 ms)
      ✓ should prevent deletion with active orders
      ✓ should handle errors (2 ms)
    resetOperatorPin
      ✓ should reset operator PIN (1 ms)
      ✓ should handle operator not found
      ✓ should handle errors (3 ms)
    getEnvironmentVariables
      ✓ should get environment variables (1 ms)
      ✓ should handle errors (3 ms)
    Additional coverage for getAdministrators
      ✓ should handle search with active filter (1 ms)
    Additional coverage for createAdministrator
      ✓ should handle duplicate email
      ✓ should handle password validation failure
    Additional coverage for updateAdministrator
      ✓ should handle administrator not found
      ✓ should handle database errors (3 ms)
    Additional coverage for deleteAdministrator
      ✓ should prevent deleting last super admin
      ✓ should handle database errors (2 ms)
    Additional coverage for resetAdministratorPassword
      ✓ should handle admin not found (1 ms)
      ✓ should handle weak password

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:44.336Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/customers/CUST-API-001/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:45.699Z"}
[0mGET /api/v1/customers/CUST-API-001/dashboard [32m200[0m 198.028 ms - 457[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:47.091Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.log
    Creating order with data: {
      customerId: 'CUST-API-001',
      affiliateId: 'AFF-API-001',
      pickupDate: '2025-07-07T17:33:47.089Z',
      pickupTime: 'morning',
      estimatedWeight: 25,
      numberOfBags: 2,
      specialPickupInstructions: 'Test order with credit'
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-API-001

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: API Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF-API-001

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: API Affiliate

      at log (server/controllers/orderController.js:165:13)

  console.log
    Applying WDF credit of $15.5 to order for customer CUST-API-001

      at log (server/controllers/orderController.js:188:15)

  console.log
    Reset WDF credit for customer CUST-API-001 after applying to order ORD520495

      at log (server/controllers/orderController.js:218:15)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.customer@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD520495
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $40.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> API Affiliate
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> api.affiliate@test.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: api.affiliate@test.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello API,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD520495
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> API Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 1234567890
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 API Ave, API City, AP 12345
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 7/7/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 25 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Test order with credit
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 317.541 ms - 128[0m
[34mdebug[39m: GET /api/v1/orders/ORD-API-001 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:48.427Z"}
[0mGET /api/v1/orders/ORD-API-001 [32m200[0m 116.996 ms - 827[0m
PASS tests/integration/wdfCreditSimple.test.js (7.199 s)
  WDF Credit Integration Test
    WDF Credit API Endpoints
      ✓ should include WDF credit in customer dashboard (2263 ms)
      ✓ should apply WDF credit when creating new order (1325 ms)
      ✓ should show WDF credit in order details (1081 ms)
    WDF Credit Calculation
      ✓ should generate correct credit for weight differences (926 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:51.187Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:51.551Z"}
  console.log
    CSRF token generation: {
      sessionID: '448e328fb1cc6340fcb9b1ecefbb8f0a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Z9O2loj3-kz7KOvH-LqYUut8Efg1CKX0k2j8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 448e328fb1cc6340fcb9b1ecefbb8f0a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: FAD4awCTCb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.719 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:52.509Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:53.030Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:53.031Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:53.149Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-a9964101-d267-4a6f-a98c-11bb2882c978",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 177.222 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:53.397Z"}
[32minfo[39m: Payment config accessed {"hasHash":true,"hostname":"127.0.0.1","ip":"::ffff:127.0.0.1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:53.400Z"}
[0mGET /api/v1/payments/config [32m200[0m 3.174 ms - 310[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:54.360Z"}
  console.log
    CSRF token generation: {
      sessionID: '3816d625d8bd9dff54b27e4e6d86e7ff',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WvOP6Gf1-ovf04Ml3MOqAgQkn6jFQyUvM5tY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3816d625d8bd9dff54b27e4e6d86e7ff

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2vBlZxsxm-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.205 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:54.507Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:54.849Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:54.850Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:54.946Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-a700aa56-1b65-4326-a782-60ac10c4d514",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 150.774 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:55.165Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrhwh-i867iug: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:55.209Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:55.256Z","token":"mctdrhwh-i867iug"}
[0mPOST /api/v1/payments/create-token [32m200[0m 90.075 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:56.100Z"}
  console.log
    CSRF token generation: {
      sessionID: '337e0b026793e4bbfffcfa67c0239a7d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GmNuRZ2z-SO4MfyF9Yvb79EylTboBBusV21c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 337e0b026793e4bbfffcfa67c0239a7d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JKAGwJocQU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.728 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:56.287Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:56.682Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:56.682Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:56.803Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-da7ba1af-e0ee-4cb5-8202-735b0cf44d58",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 187.456 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:57.060Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrjd3-itno4ae: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:57.101Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:57.141Z","token":"mctdrjd3-itno4ae"}
[0mPOST /api/v1/payments/create-token [32m200[0m 80.998 ms - 283[0m
[34mdebug[39m: GET /api/v1/payments/check-status/mctdrjd3-itno4ae {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:57.145Z"}
[0mGET /api/v1/payments/check-status/mctdrjd3-itno4ae [32m200[0m 30.137 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:57.996Z"}
  console.log
    CSRF token generation: {
      sessionID: '85844d3e1dad1004ccd41aab82c29922',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4jylRVWB-0SjazXfP-DWrszvnHHJNOsPKYvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 85844d3e1dad1004ccd41aab82c29922

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: siFJu7kjMT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.927 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.146Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.552Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.552Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.652Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-07d47c90-2a90-4688-ba15-688a769406b3",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 149.907 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.863Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrkr5-d17p670: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.905Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"test@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.945Z","token":"mctdrkr5-d17p670"}
[0mPOST /api/v1/payments/create-token [32m200[0m 83.316 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctdrkr5-d17p670 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:58.955Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctdrkr5-d17p670 {
      sessionID: '85844d3e1dad1004ccd41aab82c29922',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A85844d3e1dad1004ccd41aab82c29922.ibQt6HYxG6L4Xl%2Bhef%2BBdFGs2DTJB9H%2B48q2YYJdLb4',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctdrkr5-d17p670: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:59.070Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:59.070Z","token":"mctdrkr5-d17p670"}
[0mPOST /api/v1/payments/cancel-token/mctdrkr5-d17p670 [32m200[0m 113.700 ms - 73[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:33:59.918Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b17eaf09fa97c9665eefd35ae9702281',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8RCDoIq6-8FUQXGMMqjxiw2bb7sSeVA_rmFU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b17eaf09fa97c9665eefd35ae9702281

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: r05ee_9SAx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.625 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.090Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.509Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.509Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.618Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-5e582c38-a48c-4b64-99b3-557b2f91fcec",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 206.499 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.907Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.910Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.912Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.914Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.916Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.918Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.920Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.923Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.926Z"}
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.928Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmbz-4o6vq4q: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.962Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmbw-wzzj943: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.966Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmc7-8dffmoq: {"callbackPath":"/api/v1/payments/callback/handler-4","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-4","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.975Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmc1-7i3a75y: {"callbackPath":"/api/v1/payments/callback/handler-5","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-5","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.978Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmcf-fqus689: {"callbackPath":"/api/v1/payments/callback/handler-7","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-7","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.980Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmc3-d3dkvs7: {"callbackPath":"/api/v1/payments/callback/handler-9","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-9","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.985Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmc9-zhlz9lw: {"callbackPath":"/api/v1/payments/callback/handler-6","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-6","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.989Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmc5-hcijvx7: {"callbackPath":"/api/v1/payments/callback/handler-8","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-8","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.991Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmcc-hv0j227: {"callbackPath":"/api/v1/payments/callback/handler-3","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-3","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.993Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrmch-va1lqdk: {"callbackPath":"/api/v1/payments/callback/handler-10","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-10","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:00.994Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"customer0@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.013Z","token":"mctdrmbw-wzzj943"}
[0mPOST /api/v1/payments/create-token [32m200[0m 108.614 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"customer1@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.018Z","token":"mctdrmbz-4o6vq4q"}
[0mPOST /api/v1/payments/create-token [32m200[0m 108.883 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-4","customerEmail":"customer5@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.023Z","token":"mctdrmc7-8dffmoq"}
[0mPOST /api/v1/payments/create-token [32m200[0m 105.442 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-5","customerEmail":"customer2@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.028Z","token":"mctdrmc1-7i3a75y"}
[0mPOST /api/v1/payments/create-token [32m200[0m 116.094 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-7","customerEmail":"customer8@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.030Z","token":"mctdrmcf-fqus689"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-3","customerEmail":"customer7@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.032Z","token":"mctdrmcc-hv0j227"}
[0mPOST /api/v1/payments/create-token [32m200[0m 104.964 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 108.788 ms - 283[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-6","customerEmail":"customer6@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.041Z","token":"mctdrmc9-zhlz9lw"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-10","customerEmail":"customer9@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.042Z","token":"mctdrmch-va1lqdk"}
[0mPOST /api/v1/payments/create-token [32m200[0m 120.980 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 113.996 ms - 285[0m
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-9","customerEmail":"customer3@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.043Z","token":"mctdrmc3-d3dkvs7"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-8","customerEmail":"customer4@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.044Z","token":"mctdrmc5-hcijvx7"}
[0mPOST /api/v1/payments/create-token [32m200[0m 129.119 ms - 283[0m
[0mPOST /api/v1/payments/create-token [32m200[0m 128.104 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.060Z"}
[33mwarn[39m: No callback handlers available. All handlers are currently in use. {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:01.094Z"}
[0mPOST /api/v1/payments/create-token [31m503[0m 34.421 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.031Z"}
  console.log
    CSRF token generation: {
      sessionID: '451600361ea664a60dfaab52bad94f13',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: p3FDepsO--6sLBMQn6m7FGqfiqLVReZjH4_c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 451600361ea664a60dfaab52bad94f13

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: PRb3isPdGl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.006 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.181Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.596Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.597Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.683Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-30110638-2b0a-4630-bf5f-8cad6f691831",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 150.792 ms - 674[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.903Z"}
[32minfo[39m: Acquired callback handler for payment token mctdrnvd-flaxh5r: {"callbackPath":"/api/v1/payments/callback/handler-1","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.939Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-1","customerEmail":"cancel@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.976Z","token":"mctdrnvd-flaxh5r"}
[0mPOST /api/v1/payments/create-token [32m200[0m 72.726 ms - 283[0m
[34mdebug[39m: POST /api/v1/payments/cancel-token/mctdrnvd-flaxh5r {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:02.979Z"}
  console.log
    CSRF check for: /api/v1/payments/cancel-token/mctdrnvd-flaxh5r {
      sessionID: '451600361ea664a60dfaab52bad94f13',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A451600361ea664a60dfaab52bad94f13.81h1qqD4LslEVnaaMuwFczEn6nZRKpabCDtuWZG9Ycs',
      hasCsrfSecret: true,
      hasAuth: false,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[32minfo[39m: Released callback handler for payment token mctdrnvd-flaxh5r: {"callbackPath":"/api/v1/payments/callback/handler-1","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.086Z"}
[32minfo[39m: Payment token cancelled: {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.087Z","token":"mctdrnvd-flaxh5r"}
[0mPOST /api/v1/payments/cancel-token/mctdrnvd-flaxh5r [32m200[0m 108.515 ms - 73[0m
[34mdebug[39m: POST /api/v1/payments/create-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.091Z"}
[32minfo[39m: Acquired callback handler for payment token mctdro0n-igbg77a: {"callbackPath":"/api/v1/payments/callback/handler-2","callbackUrl":"http://localhost:3005/api/v1/payments/callback/handler-2","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.145Z"}
[32minfo[39m: Payment token created with callback assignment: {"callbackPath":"/api/v1/payments/callback/handler-2","customerEmail":"new@example.com","service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.188Z","token":"mctdro0n-igbg77a"}
[0mPOST /api/v1/payments/create-token [32m200[0m 96.363 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:03.989Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd9272ad2d0d794f1bedef75aa996bd59',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GfdGbARF-FVqiRnM30ZRtzuzglJBCArdWUPs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d9272ad2d0d794f1bedef75aa996bd59

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9Xj63W4Zlu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.851 ms - 67[0m
[32minfo[39m: Initializing callback pool... {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:04.180Z"}
[32minfo[39m: Initialized 10 callback handlers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:04.553Z"}
[32minfo[39m: Callback pool cleanup job started (runs every 5 minutes) {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:04.553Z"}
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:04.650Z"}
  console.log
    Customer affiliateId: AFF-TEST-123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: null

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: null

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST-445d89de-5a0c-45a3-8fa0-5dc61c985d00",
      "firstName": "Test",
      "lastName": "Customer",
      "email": "test@example.com",
      "phone": "+1234567890",
      "address": "123 Test St",
      "city": "Test City",
      "state": "TS",
      "zipCode": "12345",
      "affiliateId": "AFF-TEST-123",
      "affiliate": null
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 162.930 ms - 674[0m
[34mdebug[39m: GET /api/v1/payments/pool-stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:04.884Z"}
[0mGET /api/v1/payments/pool-stats [32m200[0m 64.517 ms - -[0m
[32minfo[39m: Callback pool cleanup job stopped {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:05.772Z"}
PASS tests/integration/payment.test.js (15.414 s)
  Payment Integration Tests
    Payment Configuration Tests
      ✓ should get payment configuration (2818 ms)
    Payment Token Tests
      ✓ should create payment token (1740 ms)
      ✓ should check payment status (1895 ms)
      ✓ should cancel payment token (1922 ms)
    Payment Callback Tests
      ✓ should return 503 when all callback handlers are locked (2112 ms)
      ✓ should release callback handler when payment is cancelled (1958 ms)
    Pool Statistics Tests
      ✓ should get pool statistics (1784 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:06.841Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:08.077Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:08.539Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 464.040 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:10.016Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:10.174Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 158.424 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-97a5a342-5bd4-48fd-9dc7-bc794914490b/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:10.190Z"}
[0mGET /api/v1/affiliates/AFF-97a5a342-5bd4-48fd-9dc7-bc794914490b/customers [32m200[0m 140.806 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:11.369Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:11.556Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 187.944 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-9ecd5b9b-302a-4055-b53d-706e04601950/customers?customerId=CUST-257e0d2c-6893-46db-8e54-bf6a777fbd1f {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:11.658Z"}
[0mGET /api/v1/affiliates/AFF-9ecd5b9b-302a-4055-b53d-706e04601950/customers?customerId=CUST-257e0d2c-6893-46db-8e54-bf6a777fbd1f [32m200[0m 108.852 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:12.770Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:12.928Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 158.317 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-78625765-fd5b-437c-ae21-5073dfd1be62/customers?customerId=NONEXISTENT123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:12.932Z"}
[0mGET /api/v1/affiliates/AFF-78625765-fd5b-437c-ae21-5073dfd1be62/customers?customerId=NONEXISTENT123 [32m200[0m 125.127 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:14.008Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:14.154Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 145.357 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-d417b5b2-e0fe-4f57-9622-9fffca872d2c/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:14.157Z"}
[0mGET /api/v1/affiliates/AFF-d417b5b2-e0fe-4f57-9622-9fffca872d2c/customers [33m401[0m 1.108 ms - 47[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:15.126Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:15.294Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 165.145 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:15.297Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:15.452Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.468 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-8439d143-45c5-46c0-b570-a9eddb77c10e/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:15.456Z"}
[0mGET /api/v1/affiliates/AFF-8439d143-45c5-46c0-b570-a9eddb77c10e/customers [32m200[0m 110.706 ms - 437[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-8439d143-45c5-46c0-b570-a9eddb77c10e/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:15.572Z"}
[0mGET /api/v1/affiliates/AFF-8439d143-45c5-46c0-b570-a9eddb77c10e/dashboard [32m200[0m 152.541 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:16.738Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:16.892Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 153.002 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:17.879Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:18.047Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 168.509 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-ac4dc825-5fb0-452b-a596-7be295baa848 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:18.056Z"}
[0mGET /api/v1/affiliates/AFF-ac4dc825-5fb0-452b-a596-7be295baa848 [32m200[0m 57.940 ms - 573[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:19.120Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:19.270Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 150.487 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-57a38a39-3bed-4eed-b0f2-33ef7d656dc2/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:19.273Z"}
[0mGET /api/v1/affiliates/AFF-57a38a39-3bed-4eed-b0f2-33ef7d656dc2/dashboard [32m200[0m 136.205 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:20.352Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:20.504Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 150.730 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-a2237c3a-f7e8-495e-8886-1661b46c6d12/customers?customerId=INVALID_ID {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:20.508Z"}
[0mGET /api/v1/affiliates/AFF-a2237c3a-f7e8-495e-8886-1661b46c6d12/customers?customerId=INVALID_ID [32m200[0m 110.347 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:21.592Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:21.770Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 178.179 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/INVALID_AFFILIATE/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:21.774Z"}
[0mGET /api/v1/affiliates/INVALID_AFFILIATE/customers [33m403[0m 28.453 ms - 42[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:22.759Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:22.912Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 152.962 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-23b65e41-d8fc-4a7e-9c7f-f3bd81723cde/customers {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:22.916Z"}
[0mGET /api/v1/affiliates/AFF-23b65e41-d8fc-4a7e-9c7f-f3bd81723cde/customers [32m200[0m 121.102 ms - 437[0m
PASS tests/integration/affiliateCustomerFiltering.test.js (17.905 s)
  Affiliate Customer Filtering Integration Tests
    Email URL Generation for Customer Filtering
      ✓ should generate correct dashboard URL with customer parameter (2565 ms)
    Affiliate Dashboard Customer Filtering API
      ✓ should return customers for authenticated affiliate (1322 ms)
      ✓ should filter customers by customerId when provided (1432 ms)
      ✓ should return empty array when filtering by non-existent customerId (1234 ms)
      ✓ should require authentication to access customer list (1117 ms)
    Complete Email-to-Dashboard Flow Simulation
      ✓ should handle complete flow from email generation to dashboard access (1581 ms)
      ✓ should handle URL parameters correctly throughout the flow (1175 ms)
    Dashboard Data Loading for Customer Highlighting
      ✓ should load affiliate profile data correctly (1235 ms)
      ✓ should load dashboard statistics correctly (1249 ms)
    Error Handling in Customer Filtering Flow
      ✓ should handle invalid customer ID gracefully (1220 ms)
      ✓ should handle invalid affiliate ID (1164 ms)
      ✓ should handle database connection issues gracefully (1271 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:24.758Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:25.116Z"}
  console.log
    CSRF token generation: {
      sessionID: '2029793074ccd3ec14f9fea68431340e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6BticleD-6rTHihnBUa4BlNuKSaZ1h8aRjQ4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2029793074ccd3ec14f9fea68431340e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BvGcOrl2EC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.814 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:25.393Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: new@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi New,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-cbd7bbf6-2b1f-481d-b2f0-c086c5c1ba15</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-cbd7bbf6-2b1f-481d-b2f0-c086c5c1ba15">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-cbd7bbf6-2b1f-481d-b2f0-c086c5c1ba15</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-cbd7bbf6-2b1f-481d-b2f0-c086c5c1ba15">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-cbd7bbf6-2b1f-481d-b2f0-c086c5c1ba15</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 737.041 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:27.282Z"}
  console.log
    CSRF token generation: {
      sessionID: '0f86cea36b298eb389dc709ff2ca535d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: aEXjx8Cr-d7LCkSEqs_gFiiYuvH-J7OnokpY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0f86cea36b298eb389dc709ff2ca535d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LRUxH-hYDm...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.108 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-791c8ffb-b538-416d-b93f-b53142760170 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:27.334Z"}
[0mGET /api/v1/affiliates/AFF-791c8ffb-b538-416d-b93f-b53142760170 [32m200[0m 57.092 ms - 495[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:28.166Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cbf593ac4d7ea83f03b0ef48bdac59bc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rQLibJ3p-2ZaLng2ckUXNNTVS7CaiZQSBr4M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cbf593ac4d7ea83f03b0ef48bdac59bc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _AVW2-mpKX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.828 ms - 67[0m
[34mdebug[39m: PUT /api/v1/affiliates/AFF-92120aac-23de-44bc-8b7d-c3c735ba10a7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:28.221Z"}
[0mPUT /api/v1/affiliates/AFF-92120aac-23de-44bc-8b7d-c3c735ba10a7 [32m200[0m 91.129 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:29.134Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a47379a87be46331b3af2c2a48aa729c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tjkz4Eoj-Q6m2904XCpk43hMsmd8DCh63hvw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a47379a87be46331b3af2c2a48aa729c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 54hNQneiqg...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.430 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:29.283Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:34:29.449Z","userType":"affiliate","username":"testaffiliate"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 166.538 ms - 629[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:30.217Z"}
  console.log
    CSRF token generation: {
      sessionID: '544c3f86ea8f04740dd4b366d4788578',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pasnPfVk-YLyxqn62xj7D7qq_eVBrOIzBKYI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 544c3f86ea8f04740dd4b366d4788578

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2WU-aIhndD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.376 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-8acef427-1476-4f11-82e9-b25f6c07b41c/customers?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:30.307Z"}
[0mGET /api/v1/affiliates/AFF-8acef427-1476-4f11-82e9-b25f6c07b41c/customers?page=1&limit=10 [32m200[0m 111.457 ms - 689[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:31.214Z"}
  console.log
    CSRF token generation: {
      sessionID: '487b7451153c2d28af9f521e714e7c27',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wCQ4icPo-usZtx9ZGSypsn-8JrmxkABX0HtM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 487b7451153c2d28af9f521e714e7c27

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BOp9aVcZr0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.274 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-4bfb1912-a197-40e6-924d-b09e5e216cb4/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:31.371Z"}
[0mGET /api/v1/affiliates/AFF-4bfb1912-a197-40e6-924d-b09e5e216cb4/orders?page=1&limit=10 [32m200[0m 108.269 ms - 576[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:32.442Z"}
  console.log
    CSRF token generation: {
      sessionID: '760b54abc8d557b75c6c69346fe706b7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TXNw3Fn9-YiKOfbexuCJ_m2baWsqDtPOavIM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 760b54abc8d557b75c6c69346fe706b7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q7kS217-Zi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.233 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-3a20459f-0dd1-42a3-a3c4-7f1c8fe2d499/transactions?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:32.542Z"}
[0mGET /api/v1/affiliates/AFF-3a20459f-0dd1-42a3-a3c4-7f1c8fe2d499/transactions?page=1&limit=10 [32m200[0m 110.464 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:33.418Z"}
  console.log
    CSRF token generation: {
      sessionID: '2580b74d2f89f2986332f60d669cee0d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iWaoDLyE-El40YafbfoVyriX1NralVQY2vNU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2580b74d2f89f2986332f60d669cee0d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3lbw7Cz8Cn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.523 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-a69554d1-c309-4c8a-9bf6-8eeb9476d991/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:33.564Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-a69554d1-c309-4c8a-9bf6-8eeb9476d991/delete-all-data {
      sessionID: '2580b74d2f89f2986332f60d669cee0d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2580b74d2f89f2986332f60d669cee0d.Oy%2BcoOHItdzCJilHf%2FYyzL%2F952pzXGUV6Lj3dBQ4uHI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-a69554d1-c309-4c8a-9bf6-8eeb9476d991/delete-all-data [32m200[0m 214.634 ms - 191[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:34.647Z"}
  console.log
    CSRF token generation: {
      sessionID: '4fd6f47065d8576fefd297d932dc2493',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yFOVb9V6-u3rFLtHj5UZW_B5SevCwva2pCkc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4fd6f47065d8576fefd297d932dc2493

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: PYpymfoZuk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.827 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-c28ce0ed-333c-4ea3-8320-fb3510eb61b5/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:34.703Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-c28ce0ed-333c-4ea3-8320-fb3510eb61b5/delete-all-data {
      sessionID: '4fd6f47065d8576fefd297d932dc2493',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4fd6f47065d8576fefd297d932dc2493.14A0%2F3CkVjGct4ZBim4fiJICeYtvnIwKqOhTC35vdpQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/affiliates/AFF-c28ce0ed-333c-4ea3-8320-fb3510eb61b5/delete-all-data [33m403[0m 30.117 ms - 59[0m
PASS tests/integration/affiliate.test.js (11.587 s)
  Affiliate API
    ✓ should register a new affiliate (2173 ms)
    ✓ should get affiliate profile (884 ms)
    ✓ should update affiliate profile (968 ms)
    ✓ should login affiliate (1083 ms)
    ✓ should get affiliate's customers list (996 ms)
    ✓ should get affiliate's orders (1228 ms)
    ✓ should get affiliate's earnings/transactions (976 ms)
    ✓ Delete all affiliate data (development only) (1229 ms)
    ✓ Reject delete in production environment (859 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:140:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:167:22)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliatePasswordResetEmail] (server/utils/emailService.js:862:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:186:22)

  console.log
    Missing template: order-confirmation.html

      at Object.log (tests/integration/emailService.integration.test.js:226:19)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendAffiliateWelcomeEmail] (server/utils/emailService.js:317:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:276:9)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: undefined

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: 
            <!DOCTYPE html>
            <html>
            <head><title>Test Email</title></head>
            <body>
              <h1>Test Email Template</h1>
              <p></p>
              <p>Reset Link: </p>
              <p>User: </p>
              <p>Email: </p>
            </body>
            </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:301:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [EMAIL_CONTENT] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [RESET_LINK] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_NAME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

  console.warn
    Email template placeholder [USER_EMAIL] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1084:18)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/emailService.integration.test.js:333:7)

PASS tests/integration/emailService.integration.test.js
  Email Service Integration
    Email Service Configuration
      ✓ should load and configure the email service correctly (9 ms)
      ✓ should have all required email functions (14 ms)
    Console Email Provider
      ✓ should log affiliate welcome emails to console (21 ms)
      ✓ should log customer welcome emails to console (16 ms)
      ✓ should log password reset emails to console (15 ms)
    Email Template Verification
      ✓ should verify email templates directory exists (9 ms)
      ✓ should verify essential email templates exist (1 ms)
    Mailcow SMTP Configuration
      ✓ should handle Mailcow SMTP configuration (8 ms)
      ✓ should handle secure Mailcow SMTP on port 465 (11 ms)
    Error Handling
      ✓ should handle missing required fields gracefully (19 ms)
      ✓ should handle invalid email addresses (16 ms)
    Bulk Email Operations
      ✓ should handle multiple email sends efficiently (28 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:37.263Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/w9/check-auth {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.362Z"}
[0mGET /api/v1/w9/check-auth [32m200[0m 117.601 ms - 115[0m
[34mdebug[39m: GET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.490Z"}
[32minfo[39m: OAuth callback - token exchange completed {"hasAccessToken":true,"hasRefreshToken":true,"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.492Z"}
[0mGET /api/auth/docusign/callback?code=auth_code_from_docusign&state=test_state_123 [32m200[0m 3.171 ms - -[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.663Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"env_123456","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686c052e63c62267c0ed5a00","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T17:34:38.838Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 175.604 ms - 139[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/env_123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.882Z"}
[0mGET /api/v1/w9/envelope-status/env_123456 [32m200[0m 105.806 ms - 48[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:38.991Z"}
[32minfo[39m: W9 status updated for affiliate AFF000001: {"details":{"envelopeId":"env_123456","event":"envelope-completed","status":"completed","success":true},"docusignStatus":"completed","envelopeId":"env_123456","performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"system@docusign","userName":"DocuSign System","userType":"system"},"service":"wavemax-affiliate","status":"verified","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T17:34:39.063Z"}
[0mPOST /api/v1/w9/docusign-webhook [32m200[0m 72.244 ms - 70[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:40.274Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[0mPOST /api/v1/w9/initiate-signing [32m200[0m 68.905 ms - 156[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/declined_env {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:41.288Z"}
[0mGET /api/v1/w9/envelope-status/declined_env [32m200[0m 99.938 ms - 49[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:42.391Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

[32minfo[39m: W9 upload attempt via DocuSign {"action":"upload_attempt","details":{"envelopeId":"new_env_after_refresh","method":"docusign","success":true},"performedBy":{"ipAddress":"::ffff:127.0.0.1","userEmail":"test@example.com","userId":"686c053263c62267c0ed5a94","userName":"Test Affiliate","userType":"affiliate"},"service":"wavemax-affiliate","target":{"affiliateId":"AFF000001","affiliateName":"Test Affiliate"},"timestamp":"2025-07-07T17:34:42.487Z"}
[0mPOST /api/v1/w9/initiate-signing [32m200[0m 98.958 ms - 143[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:43.446Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Invalid template ID
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Invalid template ID {"service":"wavemax-affiliate","stack":"Error: Invalid template ID\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:290:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T17:34:43.508Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 61.608 ms - 79[0m
[34mdebug[39m: POST /api/v1/w9/initiate-signing {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:44.458Z"}
  console.log
    Skipping CSRF for authenticated request without session cookie

      at log (server/config/csrf-config.js:225:13)

  console.error
    Failed to initiate W9 signing: Error: Network timeout
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      258 |     });
      259 |   } catch (error) {
    > 260 |     console.error('Failed to initiate W9 signing:', error);
          |             ^
      261 |     logger.error('Failed to initiate W9 signing:', error);
      262 |     res.status(500).json({
      263 |       error: 'Failed to create W9 signing session',

      at error (server/controllers/w9ControllerDocuSign.js:260:13)

[31merror[39m: Failed to initiate W9 signing: Network timeout {"service":"wavemax-affiliate","stack":"Error: Network timeout\n    at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/docusignW9.test.js:307:9)\n    at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)\n    at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)","timestamp":"2025-07-07T17:34:44.523Z"}
[0mPOST /api/v1/w9/initiate-signing [31m500[0m 65.933 ms - 75[0m
[34mdebug[39m: POST /api/v1/w9/docusign-webhook {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:45.432Z"}
[33mwarn[39m: Invalid DocuSign webhook signature {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:45.434Z"}
[0mPOST /api/v1/w9/docusign-webhook [33m401[0m 1.776 ms - 29[0m
[34mdebug[39m: GET /api/v1/w9/envelope-status/other_envelope {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:46.356Z"}
  console.log
    Envelope mismatch: { expected: undefined, received: 'other_envelope' }

      at log (server/controllers/w9ControllerDocuSign.js:291:15)

[0mGET /api/v1/w9/envelope-status/other_envelope [33m403[0m 59.124 ms - 24[0m
[34mdebug[39m: GET /api/v1/w9/authorization-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:47.292Z"}
[0mGET /api/v1/w9/authorization-status [32m200[0m 30.575 ms - 65[0m
PASS tests/integration/docusignW9.test.js (11.826 s)
  DocuSign W9 Integration Tests
    Complete W9 Signing Flow
      ✓ should complete full W9 signing flow from authorization to completion (2548 ms)
    Resume Existing Signing Session
      ✓ should resume existing envelope instead of creating new one (1012 ms)
    Handle Declined Envelope
      ✓ should reset W9 status when envelope is declined (1089 ms)
    Token Refresh Flow
      ✓ should handle expired token and refresh automatically (1112 ms)
    Error Handling
      ✓ should handle DocuSign service errors gracefully (1007 ms)
      ✓ should handle network errors during envelope creation (968 ms)
    Security Tests
      ✓ should reject webhook with invalid signature (895 ms)
      ✓ should prevent accessing another affiliates envelope status (977 ms)
    Authorization Status Check
      ✓ should verify authorization after OAuth callback (907 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

PASS tests/integration/adminCreation.test.js (5.444 s)
  Admin Creation Integration Tests
    Direct Database Admin Creation
      ✓ should create admin with sequential ID when no admins exist (269 ms)
      ✓ should create admin with next sequential ID when admins exist (399 ms)
      ✓ should handle admin creation with all permissions (239 ms)
      ✓ should handle admin creation with partial permissions (207 ms)
    Admin Model Validation
      ✓ should require email field (168 ms)
      ✓ should save admins with different adminIds successfully (312 ms)
      ✓ should save admins with different emails successfully (341 ms)
    Password Handling
      ✓ should hash password before saving (199 ms)
      ✓ should validate password with verifyPassword method (310 ms)
    Admin Query Operations
      ✓ should find admin by adminId (351 ms)
      ✓ should find admin by email (342 ms)
      ✓ should find active admins only (351 ms)
      ✓ should find admins with specific permissions (348 ms)
      ✓ should get last admin for ID generation (358 ms)
    Email Integration
      ✓ should call email service after admin creation (196 ms)
      ✓ should handle email service failures gracefully (227 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:34:54.631Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

FAIL tests/integration/wdfCreditIntegration.test.js (9.989 s)
  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit fields in customer profile

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should handle order not found error when weighing bags

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should prevent duplicate bag weighing

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Concurrent Operations › should handle concurrent credit updates correctly

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:04.710Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:06.954Z"}
[0mGET /api/v1/system/config/public [32m200[0m 34.679 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:08.668Z"}
[0mGET /api/v1/system/config/public [32m200[0m 35.843 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:09.978Z"}
[0mGET /api/v1/system/config/public/wdf_base_rate_per_pound [32m200[0m 29.546 ms - 172[0m
[34mdebug[39m: GET /api/v1/system/config/public/non_existent_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:11.212Z"}
[0mGET /api/v1/system/config/public/non_existent_key [33m404[0m 28.495 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config/public/private_key {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:12.533Z"}
[0mGET /api/v1/system/config/public/private_key [33m404[0m 39.977 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:14.236Z"}
[0mGET /api/v1/system/config [32m200[0m 75.288 ms - -[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:15.606Z"}
[0mGET /api/v1/system/config [33m401[0m 2.296 ms - 47[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:16.798Z"}
[0mGET /api/v1/system/config [33m403[0m 29.040 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:18.130Z"}
  console.log
    CSRF token generation: {
      sessionID: '9c61b3b4dd7615cd229b06dff6b6f8f7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9ufsD0tV-lgoEBmAl7frZMuvH_KjRzJNme1A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9c61b3b4dd7615cd229b06dff6b6f8f7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: r9_aFr9xGj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.765 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:18.271Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '9c61b3b4dd7615cd229b06dff6b6f8f7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9c61b3b4dd7615cd229b06dff6b6f8f7.qv0QSiyklc2ovseE84xHbLuO5qFNfRTpAzi2zaDqY3U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [32m200[0m 123.259 ms - 149[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:19.745Z"}
  console.log
    CSRF token generation: {
      sessionID: '44762ccc851cfe64702f16b736edf350',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UTtGD6eZ-y7nNOLnP1FqnqCN_k0YdtcO0gLI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 44762ccc851cfe64702f16b736edf350

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5wbP12em7j...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.235 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:19.879Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '44762ccc851cfe64702f16b736edf350',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A44762ccc851cfe64702f16b736edf350.KVa%2BNHAOQKW%2BaU1gc%2F9yHOlAYZ%2Bb37UnKTkzA5zyKdg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be a number for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:67:21)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 101.200 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:21.150Z"}
  console.log
    CSRF token generation: {
      sessionID: '20079df9de864951335e40fdcc2966df',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0BZZj8VX-NXrW8NXxhl6HNOfMGpxikH6W62U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 20079df9de864951335e40fdcc2966df

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bzKOFdLcTk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.701 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:21.289Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '20079df9de864951335e40fdcc2966df',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A20079df9de864951335e40fdcc2966df.%2BQVNYaVub948RQ3068OZwEtogCGJb%2FjYyk%2F3X4XODpM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Value must be at least 0.5 for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:72:23)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 86.228 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:22.782Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f6708e8fbf04cd7cf1d662af51397d6d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M6tbRWWo-tzGCLCkt-1hLQTp5ZUwjXSZINJA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f6708e8fbf04cd7cf1d662af51397d6d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: X9WR1maM2g...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.340 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/non_editable_config {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:22.971Z"}
  console.log
    CSRF check for: /api/v1/system/config/non_editable_config {
      sessionID: 'f6708e8fbf04cd7cf1d662af51397d6d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af6708e8fbf04cd7cf1d662af51397d6d.lScffld8xN9u9TigXxquGWogqMajBNIhHvE7mCXeWlM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.error
    Error updating config: Error: Configuration is not editable: non_editable_config
        at Function.Object.<anonymous>.systemConfigSchema.statics.setValue (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:140:11)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /var/www/wavemax/wavemax-affiliate-program/server/routes/systemConfigRoutes.js:83:20

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/non_editable_config [33m400[0m 112.255 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:24.300Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a68ad8e8b279d0b53e7231e7bdfb3cb3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AGNNHxCm-t7IRN5fzWnwxpZryAYrJPV4lYIM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a68ad8e8b279d0b53e7231e7bdfb3cb3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kK1Xt7kYex...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 30.834 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:24.630Z"}
  console.log
    CSRF token generation: {
      sessionID: '841f0843b6dde9659ea18dd90fc0f6d8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gqaIDBb7-oU0CDkjU_e-DqYxv7wXodRrZ4pQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 841f0843b6dde9659ea18dd90fc0f6d8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: H2z26kZmh4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.263 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:24.643Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: '841f0843b6dde9659ea18dd90fc0f6d8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A841f0843b6dde9659ea18dd90fc0f6d8.k0A3e8bkhasofxt7IKngv3zXXzVCbWDGfdcPgh1K7dY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m403[0m 58.067 ms - 78[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:25.969Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ff254df0b5df8a17a0b7ad3b3be40fb2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dlrn4YAq-bhqUGtWOWnQsAP_Lie_UGB3FzXA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ff254df0b5df8a17a0b7ad3b3be40fb2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XknsH6EJgP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.508 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:26.022Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'ff254df0b5df8a17a0b7ad3b3be40fb2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aff254df0b5df8a17a0b7ad3b3be40fb2.Le%2Bs0AFjzwwYV9i7l8Fwh3GOoB5y%2BmJSCkVla10%2FcTQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 431.577 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:27.799Z"}
  console.log
    CSRF token generation: {
      sessionID: '055cac13228e532d006f4bf4c16516b2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mQTbNehK-HqD9Gs_LYDqKhYRlI7uZ7U0h8lc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 055cac13228e532d006f4bf4c16516b2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aWemti6DxT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.400 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:27.882Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: '055cac13228e532d006f4bf4c16516b2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A055cac13228e532d006f4bf4c16516b2.CTT9XIVU4O2u6mDzHGHbObQcVm5KWP0gqLeTj8OGy0Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 373.391 ms - 48[0m
PASS tests/integration/systemConfig.test.js (27.09 s)
  System Config API Tests
    Public Endpoints
      GET /api/v1/system/config/public
        ✓ should return all public configurations (2289 ms)
        ✓ should not return private configurations (1319 ms)
      GET /api/v1/system/config/public/:key
        ✓ should return a specific public configuration (1246 ms)
        ✓ should return 404 for non-existent config (1217 ms)
        ✓ should return 404 for private config accessed via public endpoint (1799 ms)
    Admin Endpoints
      GET /api/v1/system/config
        ✓ should return all configurations for admin (1330 ms)
        ✓ should return 401 without authentication (1217 ms)
        ✓ should return 403 for non-admin users (1269 ms)
      PUT /api/v1/system/config/:key
        ✓ should update a configuration value (1690 ms)
        ✓ should validate value based on data type (1434 ms)
        ✓ should validate value against min/max constraints (1594 ms)
        ✓ should not allow updating non-editable configs (1525 ms)
        ✓ should require system_config permission (1660 ms)
      POST /api/v1/system/config/initialize
        ✓ should initialize default configurations (1847 ms)
        ✓ should not overwrite existing configurations (1729 ms)
    Integration with Order Model
      ✓ should use SystemConfig WDF rate in new orders (1504 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:31.993Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:34.238Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-08354d35-728a-4920-99b0-a5d9116dffb0

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 181.415 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:38.928Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-060d4809-97f6-465d-ac85-6390ecfa14fb

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 107.998 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:40.770Z"}
[0mGET /api/v1/quickbooks/vendors [33m404[0m 56.922 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:42.512Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 126.016 ms - 316[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:44.311Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=json [32m200[0m 136.642 ms - 961[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:46.010Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m400[0m 31.051 ms - 66[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:47.702Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2026-07-07&endDate=2026-07-07 [33m404[0m 116.101 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:49.458Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 154.756 ms - 169[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:51.108Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-001&startDate=2025-01-01 [33m400[0m 50.577 ms - 81[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:52.847Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-QB-003&startDate=2025-01-01&endDate=2025-01-31 [33m400[0m 57.073 ms - 76[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:54.414Z"}
[0mGET /api/v1/quickbooks/commission-detail?affiliateId=AFF-NONEXISTENT&startDate=2025-01-01&endDate=2025-01-31 [33m404[0m 72.288 ms - 49[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:55.940Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-dbf0ea7a-104c-4965-a38f-f033aec49d09

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 128.992 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:56.074Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 259.816 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:56.338Z"}
[0mGET /api/v1/quickbooks/history [32m200[0m 122.675 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:57.970Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-9fcf517b-5a85-49ab-91e1-5d4766960d48

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 155.437 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:58.130Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 90.371 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?type=vendor {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:58.225Z"}
[0mGET /api/v1/quickbooks/history?type=vendor [32m200[0m 93.011 ms - 946[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:59.828Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-63713cf3-aaa4-49b0-beac-58548795403d

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 107.210 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:35:59.939Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-01-01&endDate=2025-01-31&format=json [33m404[0m 84.701 ms - 83[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.029Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-2b297592-7e70-4abd-a78c-c5cc865481ac

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 96.156 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.128Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-b10a5f84-58e0-449c-b77a-17eb44310b00

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 94.868 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.226Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-b7c0805e-6e4c-4c49-be9d-3633ceb868d6

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 104.032 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.333Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-834238df-20a7-4ef7-b04d-28f0db79ec5e

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 105.350 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=json {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.442Z"}
  console.log
    QuickBooks vendor export: JSON, 2 records, exportId: EXP-d7a740fd-03ee-4b37-966a-a528b619af95

      at log (server/controllers/quickbooksController.js:102:13)

[0mGET /api/v1/quickbooks/vendors?format=json [32m200[0m 104.773 ms - 915[0m
[34mdebug[39m: GET /api/v1/quickbooks/history?limit=3 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:00.550Z"}
[0mGET /api/v1/quickbooks/history?limit=3 [32m200[0m 127.707 ms - -[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:02.410Z"}
[0mGET /api/v1/quickbooks/vendors [33m401[0m 2.483 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:02.416Z"}
[0mGET /api/v1/quickbooks/payment-summary [33m401[0m 1.297 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/commission-detail {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:02.420Z"}
[0mGET /api/v1/quickbooks/commission-detail [33m401[0m 1.387 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/history {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:02.426Z"}
[0mGET /api/v1/quickbooks/history [33m401[0m 1.899 ms - 47[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:04.015Z"}
  console.log
    Authorization failed for path: /vendors - User role: affiliate Allowed roles: [ 'administrator' ]

      at log (server/middleware/auth.js:227:15)

[0mGET /api/v1/quickbooks/vendors [33m403[0m 29.478 ms - 54[0m
[34mdebug[39m: GET /api/v1/quickbooks/vendors?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:05.956Z"}
  console.log
    QuickBooks vendor export: CSV, 2 records, exportId: EXP-acbbf4c4-b7e4-4b8e-b8c2-c57ff6bf9e04

      at log (server/controllers/quickbooksController.js:94:15)

[0mGET /api/v1/quickbooks/vendors?format=csv [32m200[0m 211.049 ms - 354[0m
[34mdebug[39m: GET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:07.866Z"}
[0mGET /api/v1/quickbooks/payment-summary?startDate=2025-06-30&endDate=2025-07-07&format=csv [32m200[0m 133.920 ms - 316[0m
PASS tests/integration/quickbooks.test.js (37.794 s)
  QuickBooks Export Integration Tests
    Vendor Export
      ✓ should export verified vendors as CSV (5694 ms)
      ✓ should export vendors as JSON (1943 ms)
      ✓ should handle no verified vendors gracefully (1906 ms)
    Payment Summary Export
      ✓ should export payment summary for date range as CSV (1789 ms)
      ✓ should export payment summary as JSON with correct aggregations (1677 ms)
      ✓ should require date parameters (1714 ms)
      ✓ should handle empty date range (1687 ms)
    Commission Detail Export
      ✓ should export commission details for specific affiliate (1761 ms)
      ✓ should require all parameters (1711 ms)
      ✓ should reject unverified affiliate export (1556 ms)
      ✓ should handle non-existent affiliate (1517 ms)
    Export History
      ✓ should retrieve export history (2086 ms)
      ✓ should filter export history by type (1816 ms)
      ✓ should limit export history results (2459 ms)
    Security and Permissions
      ✓ should require admin authentication for all QuickBooks endpoints (1753 ms)
      ✓ should not allow affiliate access to QuickBooks exports (1471 ms)
    CSV Format Validation
      ✓ should generate QuickBooks-compatible vendor CSV (2307 ms)
      ✓ should generate QuickBooks-compatible payment CSV (1680 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:10.076Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:10.738Z"}
  console.log
    CSRF token generation: {
      sessionID: '7b56160b0b958eb346ed8fa946a6298e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TQYPWjo5-GbNPxK5xZx-VJ8s8ruOV9ZvOgY4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7b56160b0b958eb346ed8fa946a6298e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NG_aEZY6jp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.548 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:11.893Z"}
  console.log
    Creating new customer with email: bob@example.com username: bobjohnson

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-fc7b797a-71b2-439d-aaff-a081ca78e9b4

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: bob@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Bob,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-fc7b797a-71b2-439d-aaff-a081ca78e9b4</p>
            <p><strong>Your Service Provider:</strong> John Doe</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> John Doe<br>
            <strong>Phone:</strong> 555-123-4567<br>
            <strong>Email:</strong> john@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: bob@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-fc7b797a-71b2-439d-aaff-a081ca78e9b4</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Bob Johnson</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>bob@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>555-555-5555</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>789 Pine St, Austin, TX 78703</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-fc7b797a-71b2-439d-aaff-a081ca78e9b4" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 322.715 ms - 297[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:13.325Z"}
  console.log
    CSRF token generation: {
      sessionID: '48fee53576b7fb9df38fb1cbb007d5f2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2vSbTPjb-OeGSMSPsrUEv0X63i8CSnbxz_mE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 48fee53576b7fb9df38fb1cbb007d5f2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jLvRIkJB2Q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.173 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:13.640Z"}
[0mPOST /api/v1/customers/register [33m400[0m 53.720 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:14.479Z"}
  console.log
    CSRF token generation: {
      sessionID: '054bf861bddf0a3e58e9f3450fcc8137',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sKSvGNNF-RgMRAdntjmxkuahGWe8U3wQoWso

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 054bf861bddf0a3e58e9f3450fcc8137

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QViKp6jW5Z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.053 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:14.804Z"}
[0mPOST /api/v1/customers/register [33m400[0m 60.304 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:16.412Z"}
  console.log
    CSRF token generation: {
      sessionID: '6583acdd02cc5b25d6452503f1e4ae4c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gu7Wep7B-zaJYQyayGqWTSvJiP_T4h3pD2hg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6583acdd02cc5b25d6452503f1e4ae4c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3UsTNeDsra...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.152 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:16.860Z"}
[0mPOST /api/v1/customers/register [33m400[0m 560.028 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:19.534Z"}
  console.log
    CSRF token generation: {
      sessionID: '97e49c19e0f7765e92116aa95ddfeb01',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: c9UwojAJ-vYa1KnuIej3IAqgm2r2wZ1lPQdQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 97e49c19e0f7765e92116aa95ddfeb01

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aIS2bnlGR6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.693 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:19.859Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 114.049 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:21.070Z"}
  console.log
    CSRF token generation: {
      sessionID: '5a02a78b2a6ee9f0fa9b541c81467b4b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Btc1ILaT-p0ZJspu-IsIZ09EunbMYsEe8acM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5a02a78b2a6ee9f0fa9b541c81467b4b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yEpEJZkG52...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.859 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:21.369Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 83.178 ms - 462[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:22.220Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b1c8ed54fec018039ff754032daf2b6c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: S1Ktfm8w-ZOVQlZU0_F8Jj5LmSBHBYXjLN6o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b1c8ed54fec018039ff754032daf2b6c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kJrUM2rPar...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.360 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:22.494Z"}
[0mGET /api/v1/customers/CUST123/profile [33m403[0m 56.738 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:23.312Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b2105c7e870dcb23c463d84d057654a4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jtNwBlZv-12kjiYfVPIrqlt1evK-aZOUBQE0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b2105c7e870dcb23c463d84d057654a4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7qJgqzzGbi...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.587 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:23.627Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 55.953 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:25.562Z"}
  console.log
    CSRF token generation: {
      sessionID: '926d7cd7a4d26732f04bec725b6b4c3b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: foq4DwHi-QJgVbvj_j-zz2zBagl8lB3MchwA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 926d7cd7a4d26732f04bec725b6b4c3b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: s1TlVt_NZG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.852 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:25.842Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 93.686 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:26.737Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bcba1a89778ebc8eefa156b2afa2a3c4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BJTJhRvR-q-binwuGLu2w0aIrpVF9c3FsTsk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bcba1a89778ebc8eefa156b2afa2a3c4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: q1-nNvyOwA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.162 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:27.051Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 88.590 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:27.943Z"}
  console.log
    CSRF token generation: {
      sessionID: '6fedd1d3d1a191109e6733ee31600adb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: LFOy2rn5-tR0OxbR9Q5EwcwDmndojBV5J9P8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6fedd1d3d1a191109e6733ee31600adb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sjizySsopP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.497 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:28.284Z"}
[0mGET /api/v1/customers/CUST123/orders?page=1&limit=10 [32m200[0m 116.405 ms - 603[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:29.246Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ac12f06e93be69edd99b0da76deef47e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TQPEEgHU-7Y1AiZcWhbvVheXBuTcL2VSF8FQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ac12f06e93be69edd99b0da76deef47e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eXHYlvar9q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 16.663 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?status=complete {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:29.588Z"}
[0mGET /api/v1/customers/CUST123/orders?status=complete [32m200[0m 117.709 ms - 365[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:30.732Z"}
  console.log
    CSRF token generation: {
      sessionID: '5a542d641e60c251219ca0a4d2d26a62',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XwiNEDcS-04ul3FO8KjlnRL66CAvct2PSeh8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5a542d641e60c251219ca0a4d2d26a62

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: R185TIHfpS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.609 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:31.038Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '5a542d641e60c251219ca0a4d2d26a62',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5a542d641e60c251219ca0a4d2d26a62.JZKtd7IzG955G9RtZCySHeATCHr0hiJOVEOszpMbvj0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [32m200[0m 324.026 ms - 58[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:31.367Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 173.266 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:32.311Z"}
  console.log
    CSRF token generation: {
      sessionID: '1c3c73b1a2bbc9982b7e0ff842e45053',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bz5OreRA-ETYHodpC6Jf8-yO3rUZpicAX8GM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1c3c73b1a2bbc9982b7e0ff842e45053

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9vp8QnicML...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.913 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:32.602Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '1c3c73b1a2bbc9982b7e0ff842e45053',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1c3c73b1a2bbc9982b7e0ff842e45053.QgBOII9MluTfHqWN4yKoTw6tZxQdHR%2FpzeWP1%2B7YCSw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m401[0m 110.154 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:33.510Z"}
  console.log
    CSRF token generation: {
      sessionID: '2563da2ae32ee15dbd49b1ab2c8e5687',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jkFfftOs-_CiPRTBq7DJLz1avZVv0_sC7Ing

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2563da2ae32ee15dbd49b1ab2c8e5687

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gQ02blkKkL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.715 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:33.789Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '2563da2ae32ee15dbd49b1ab2c8e5687',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2563da2ae32ee15dbd49b1ab2c8e5687.%2BKFUrTxE0sL5yKT8KuvCzqkclxTQ4qE006lofDryejA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/customers/CUST123/password [33m400[0m 115.820 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:34.938Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a0d0a887cae8d6d62d4882e1461a8da8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v79zynbd-SjHgWvcwK_TM7Iqjeuz5vwpkQak

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a0d0a887cae8d6d62d4882e1461a8da8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: U8hgejq-VL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.472 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:35.312Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 140.925 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:36.393Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b726a7a3772af3e7dab34239f88e6bbd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UhhCY5Sw-tTheY1sxxXwlTeKDRMwmA_daeQQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b726a7a3772af3e7dab34239f88e6bbd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2LctaRssQd...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.439 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:36.741Z"}
[0mGET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true [32m200[0m 136.592 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:37.705Z"}
  console.log
    CSRF token generation: {
      sessionID: '9e579ac527b8813acb359e70283236ed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: z46RLoqm-kz2Bz6MznCe2kWpnI9zxqQlkxEI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9e579ac527b8813acb359e70283236ed

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: niEzrcuE0t...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.953 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:38.080Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 149.710 ms - 853[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:39.889Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b1f20641fa167f11bc1164720bd1260b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: P50Rq7iJ-eDUr1Pe9DvBs4wv8h1LamY0-UNI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b1f20641fa167f11bc1164720bd1260b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: di94jdRWmt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.425 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:40.317Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'b1f20641fa167f11bc1164720bd1260b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ab1f20641fa167f11bc1164720bd1260b.EQwhTYmk8PoRs1vBMF96r7UM1Q6gU9%2F3gEeF7mDfBMc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [32m200[0m 131.468 ms - 107[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:41.277Z"}
  console.log
    CSRF token generation: {
      sessionID: '22778b876c31ce052158073d31859eb6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: InkwSw8S-yp5EvP25rtsmvwYBJkD-2nF5je4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 22778b876c31ce052158073d31859eb6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VUD4-cjvII...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.512 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:41.566Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: '22778b876c31ce052158073d31859eb6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A22778b876c31ce052158073d31859eb6.AfJR8sMCykoOM9zh8Ll5YQEbj0zl9OGzfDaRdrqrf8c',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 31.884 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:42.359Z"}
  console.log
    CSRF token generation: {
      sessionID: '05806580d3c68d7fb100ee29c9638464',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SvRk8KVf-_UCoxO89TLu-hzxInBoxVPYBdLs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 05806580d3c68d7fb100ee29c9638464

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GHdZjnelvN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.260 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:42.736Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: '05806580d3c68d7fb100ee29c9638464',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A05806580d3c68d7fb100ee29c9638464.a2eICYrVv%2FNchV0IqBG6vvijPXfxebBfXLZaguHxXaQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 30.289 ms - 63[0m
PASS tests/integration/customer.test.js (34.884 s)
  Customer Integration Tests
    POST /api/v1/customers/register
      ✓ should register a new customer (2603 ms)
      ✓ should fail with invalid affiliate ID (1154 ms)
      ✓ should fail with duplicate email (1931 ms)
      ✓ should fail with duplicate username (3123 ms)
    GET /api/v1/customers/:customerId/profile
      ✓ should return customer profile for authenticated customer (1533 ms)
      ✓ should return customer profile for affiliate (1152 ms)
      ✓ should fail for unauthorized customer (1093 ms)
      ✓ should return limited data without authentication (2249 ms)
    PUT /api/v1/customers/:customerId/profile
      ✓ should update customer profile (1175 ms)
      ✓ should not update protected fields (1206 ms)
    GET /api/v1/customers/:customerId/orders
      ✓ should return customer orders with pagination (1303 ms)
      ✓ should filter orders by status (1486 ms)
    PUT /api/v1/customers/:customerId/password
      ✓ should update customer password (1579 ms)
      ✓ should fail with incorrect current password (1199 ms)
      ✓ should fail with weak new password (1428 ms)
    GET /api/v1/customers/:customerId/dashboard
      ✓ should return customer dashboard statistics (1455 ms)
      ✓ should return monthly statistics (1313 ms)
      ✓ should allow affiliate to view customer dashboard (2183 ms)
    DELETE /api/v1/customers/:customerId/delete-all-data
      ✓ should delete all customer data in development environment (1387 ms)
      ✓ should reject deletion in production environment (1082 ms)
      ✓ should reject unauthorized deletion (1599 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:44.990Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:46.132Z"}
  console.log
    CSRF token generation: {
      sessionID: '966aa83546c16a318442e5424455cad7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hJMkRWbP-ueHPiXqv4p72xj2VFAf_bs1dX6Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 966aa83546c16a318442e5424455cad7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Q0A49N00ok...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.213 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:46.247Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 200.887 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:46.606Z"}
[0mGET /api/v1/administrators [32m200[0m 118.977 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:47.771Z"}
  console.log
    CSRF token generation: {
      sessionID: '36320de58bc1dd6ab3ff6434db67a9a2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KCZq8sXL-l6wxKy3Ea_CGr_9W8EjXRMc2YCI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 36320de58bc1dd6ab3ff6434db67a9a2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5G4Sqgp3SA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.369 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:47.880Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 173.624 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:48.156Z"}
[0mGET /api/v1/administrators?active=true [32m200[0m 132.210 ms - 376[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:49.336Z"}
  console.log
    CSRF token generation: {
      sessionID: '8be34c945cd23b9fbfd24db56b3400eb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: H6vOdkWh--dpsOPvN7JX5vT7qQ7xjyIZyeH8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8be34c945cd23b9fbfd24db56b3400eb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oHalvv1m8h...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.278 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:49.445Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 192.584 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:50.575Z"}
[0mGET /api/v1/administrators?page=2&limit=5 [32m200[0m 148.524 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:51.676Z"}
  console.log
    CSRF token generation: {
      sessionID: '909322e2aa3fbf03f1fd2ea7c90ebd67',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: RDixcakT-SPasXCDMNNBJ7SxFHuQq71ctiDQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 909322e2aa3fbf03f1fd2ea7c90ebd67

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iKCmoSjgQf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.493 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:51.820Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 214.048 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:52.037Z"}
[0mGET /api/v1/administrators [33m401[0m 2.661 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:53.091Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b6073217a775200929a2a4a04ca524af',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0lM1STe6-rk0Fe6lbQYXHudHIetmTdVYEdyw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b6073217a775200929a2a4a04ca524af

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: w8ecNRbGbR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.567 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:53.205Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 274.193 ms - 615[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:53.580Z"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 217.876 ms - 555[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:53.802Z"}
[0mGET /api/v1/administrators [33m403[0m 37.041 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:54.880Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e9ee4ea081eafa6c6aed6edfebc63a00',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nL14GGsf-CcN_TPLgA9MsIu3u2GRCpSbsSPo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e9ee4ea081eafa6c6aed6edfebc63a00

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mI21anp198...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.777 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:54.989Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 172.687 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686c05b7e0723d92e8c904a9 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:55.255Z"}
[0mGET /api/v1/administrators/686c05b7e0723d92e8c904a9 [32m200[0m 86.158 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:56.283Z"}
  console.log
    CSRF token generation: {
      sessionID: '7204bf2e09ec2b058d02a79e9314c229',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XN3LiC8a-c9W4ga9iisyPhn6iJSs1iq_-_L4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7204bf2e09ec2b058d02a79e9314c229

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Cm-FjqsAS9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.446 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:56.389Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.902 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/686c05b8e0723d92e8c904d4 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:56.542Z"}
[0mGET /api/v1/administrators/686c05b8e0723d92e8c904d4 [33m404[0m 207.898 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:57.627Z"}
  console.log
    CSRF token generation: {
      sessionID: '67c38d8e449d42163167c2562e4cddd5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Ei8fKuw9-BnB3wG7WJAWl4sHsYU9ZZM6m6ic

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 67c38d8e449d42163167c2562e4cddd5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jn-PJAY1tl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.234 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:57.726Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 177.535 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/invalid-id {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:57.907Z"}
[0mGET /api/v1/administrators/invalid-id [33m400[0m 87.481 ms - 54[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:59.112Z"}
  console.log
    CSRF token generation: {
      sessionID: 'df0c2cb89593c0930628f920fa1e3e98',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jn8bYPQm-7L0PBaPEevnBc869944KhISIsFQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: df0c2cb89593c0930628f920fa1e3e98

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rMPaDdvPaj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.950 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:59.228Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 173.456 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:59.404Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'df0c2cb89593c0930628f920fa1e3e98',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adf0c2cb89593c0930628f920fa1e3e98.SMye3lYlwem7P9fK3LnWWnzO3LoiOzTk9c%2FNIJbPUYg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [32m201[0m 469.401 ms - 329[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:36:59.877Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 206.697 ms - 677[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:01.116Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fcd9313f4c9212e501fd0bb62a79ad10',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IOjf7QE3-mvHuOcAW2jTOgvWF0LCAU3OQydI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fcd9313f4c9212e501fd0bb62a79ad10

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IudzgmI7JJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.256 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:01.211Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.860 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:01.370Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'fcd9313f4c9212e501fd0bb62a79ad10',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Afcd9313f4c9212e501fd0bb62a79ad10.H0jDQ%2BQGV0yxZqZeoZUWNukHGDOFtWli0257NotApUQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 61.790 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:02.369Z"}
  console.log
    CSRF token generation: {
      sessionID: '1d546a927877909c87f4364b078929f5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3A8TIh8B-vB15p6OZsVIX8G0_8_qLXYvU98k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1d546a927877909c87f4364b078929f5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NL92MJKeds...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.046 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:02.473Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 238.891 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:02.716Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '1d546a927877909c87f4364b078929f5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1d546a927877909c87f4364b078929f5.lnEss%2F3RyVwRlkbbd4QQE%2F9%2Bcdu%2BDbyRa7LHmKRgKmY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 592.263 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:04.847Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd321cc9bb45a173a031e8742a49133aa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IzTSU71V-FQPWZLdhitJ4zRU2Sx_JzgU16nU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d321cc9bb45a173a031e8742a49133aa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: m9n6pJxq4q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.996 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:04.949Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 207.056 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:05.159Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'd321cc9bb45a173a031e8742a49133aa',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad321cc9bb45a173a031e8742a49133aa.lKjmCfYtc39yjG%2FXKoFNNXLH54h42YFSt%2BeERv%2F%2BjOk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 75.409 ms - 204[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:06.498Z"}
  console.log
    CSRF token generation: {
      sessionID: '2fd2d454c1a8dd52f130a5a3adfc162c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GzfkRtnu-lQgxPaubmENj-9jbU8ABUm3z624

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2fd2d454c1a8dd52f130a5a3adfc162c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Z37G_F4MAn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.475 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:06.600Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 181.857 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:06.785Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '2fd2d454c1a8dd52f130a5a3adfc162c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2fd2d454c1a8dd52f130a5a3adfc162c.P9Ht0SlMyCr49IYgDwK2t9saulAGQ103Zl%2Fjez15IoA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m409[0m 104.787 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:07.957Z"}
  console.log
    CSRF token generation: {
      sessionID: '0a5735f27eba2bb7b8e50cc5a3cba9ea',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2rOHFH7D-dkGVnz9OImvGZM0RYX-EbwgqLp4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0a5735f27eba2bb7b8e50cc5a3cba9ea

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AdM2KSP-_K...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.794 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:08.071Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 178.633 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:08.364Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd60fe44af181968a0ab11eee703fdcac',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 45TZDxBU-j5LJzZBddshzT2v5HJLC5Skr5xE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d60fe44af181968a0ab11eee703fdcac

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: uiAwGEgGjv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.538 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:08.375Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.992 ms - 649[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:08.541Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'd60fe44af181968a0ab11eee703fdcac',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad60fe44af181968a0ab11eee703fdcac.4P7KATdp%2Fs6R60oSoQxTdoSudKdz8dduOaLBIoaGDI4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m403[0m 104.359 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:09.784Z"}
  console.log
    CSRF token generation: {
      sessionID: '6d138355183ae64a08e5615fd654692c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ugt63Pqs-_sTkj39lnD7g-1bcXQxJ3OnjULA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6d138355183ae64a08e5615fd654692c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rMoR7D8Ww9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.462 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:09.886Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 176.133 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05c6e0723d92e8c90625 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:10.153Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05c6e0723d92e8c90625 {
      sessionID: '6d138355183ae64a08e5615fd654692c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6d138355183ae64a08e5615fd654692c.Cq8VM6zRfeQup4pd9Eb%2B7lx5nTg11NnvnIA6vdVNz3k',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05c6e0723d92e8c90625 [32m200[0m 97.666 ms - 337[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:11.383Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f0081c2e0f08e683868385bdc7d4f479',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ItDf17sY-1deLpzYeCH22gUM6Q-aF0Q79Opw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f0081c2e0f08e683868385bdc7d4f479

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eZBF4dQF-5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.032 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:11.497Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 163.926 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05c7e0723d92e8c90650 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:11.759Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05c7e0723d92e8c90650 {
      sessionID: 'f0081c2e0f08e683868385bdc7d4f479',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af0081c2e0f08e683868385bdc7d4f479.VxXmzaHpNbDj6WOez9i%2F%2FVTfvyQQCuvE7pAzqH2Oz28',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05c7e0723d92e8c90650 [32m200[0m 132.854 ms - 318[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:13.944Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f38db0b9eb634b47ea94d142853804dd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KHHNVQV4-h1WjQ5Bpiqbntj3L7q6kGfG4oTM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f38db0b9eb634b47ea94d142853804dd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KC48EbMcA7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.256 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:14.041Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 357.403 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05cae0723d92e8c9067c {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:14.503Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05cae0723d92e8c9067c {
      sessionID: 'f38db0b9eb634b47ea94d142853804dd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af38db0b9eb634b47ea94d142853804dd.2hevl%2BX5sZ4VVB2NTPUTqzkrbOyCutNu4P8CeVF3w84',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05cae0723d92e8c9067c [32m200[0m 267.081 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:14.776Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dea4a559f89fdaae49a2934fb74aa36f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AxnQY3Wj-efaesB1yzdct2aJYvwFwIpG3Yuw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dea4a559f89fdaae49a2934fb74aa36f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: h6Z45ATwA5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.533 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:14.785Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 185.807 ms - 645[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:15.985Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f93ac6e3341633d6dfe130d94f70745b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: amfWmQ2x-fB_OHgWZFTQWttZqcVRBm1OKrGQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f93ac6e3341633d6dfe130d94f70745b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: tRHr61xKLR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.124 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:16.112Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.273 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05cce0723d92e8c906ab {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:16.355Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05cce0723d92e8c906ab {
      sessionID: 'f93ac6e3341633d6dfe130d94f70745b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af93ac6e3341633d6dfe130d94f70745b.SEwqRff2lYWFuWv35pchVf0m3e6fHexgFJUixwyVxuA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05cce0723d92e8c906ab [32m200[0m 102.435 ms - 317[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:16.460Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.726 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:17.647Z"}
  console.log
    CSRF token generation: {
      sessionID: '214fbe5898969f0eed417e978ac41644',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xqve0qJI-5Qekp6VPx0cEdbpz_3wOA3-HvYc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 214fbe5898969f0eed417e978ac41644

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zi7X-zfAa6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.274 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:17.758Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.478 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05cde0723d92e8c906d7 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:18.029Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05cde0723d92e8c906d7 {
      sessionID: '214fbe5898969f0eed417e978ac41644',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A214fbe5898969f0eed417e978ac41644.02%2Bg0owALObzfih2WBY8jikxBMuT8QevPVxMG3sLqdk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05cde0723d92e8c906d7 [32m200[0m 92.783 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:19.165Z"}
  console.log
    CSRF token generation: {
      sessionID: '8a3c81ae0d6ec5c2255a34aba8658920',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ysL0mYRI-CEKknyH-Dzk89rNuNYkCPqX_DZc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8a3c81ae0d6ec5c2255a34aba8658920

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EXyg53T8E5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.721 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:19.273Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.976 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05cfe0723d92e8c90702 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:19.519Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05cfe0723d92e8c90702 {
      sessionID: '8a3c81ae0d6ec5c2255a34aba8658920',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8a3c81ae0d6ec5c2255a34aba8658920.OL4hwN2IKbQtziu0g%2BXuPyhHd9h4wa4PGiZ8BcPhAnM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05cfe0723d92e8c90702 [33m409[0m 102.736 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:20.607Z"}
  console.log
    CSRF token generation: {
      sessionID: '05fb96b0c03e4da2c4b0c9ad5456287b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gfQaQcwa-4LXvGlIJqQLA_zTB7t2AGVlmtJI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 05fb96b0c03e4da2c4b0c9ad5456287b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XQ_qz8J81t...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.395 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:20.709Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.817 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05d0e0723d92e8c90727 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:20.974Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d0e0723d92e8c90727 {
      sessionID: '05fb96b0c03e4da2c4b0c9ad5456287b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A05fb96b0c03e4da2c4b0c9ad5456287b.E4w2Y1vhg2oLVAaxrsoSB6ww%2Be7rzYLvQvVV9JoY9Jw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05d0e0723d92e8c90727 [33m400[0m 58.108 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:21.949Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd6628dfd9d47cf6a62b9a59c6a638d5c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: k9fATXnh-BDPJ6GN8YMRYtHib438swKdomcs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d6628dfd9d47cf6a62b9a59c6a638d5c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LCaPIHWF3e...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.569 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:22.051Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 239.741 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:22.495Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aba47da065f8dec48df28c2fc39a1dff',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: R7Mxu1zp-xuYvG5Cly2ExyadCOHpE1ghXp3E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aba47da065f8dec48df28c2fc39a1dff

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: iNLv1_hJEX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.299 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:22.510Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.310 ms - 650[0m
[34mdebug[39m: PATCH /api/v1/administrators/686c05d2e0723d92e8c90757 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:22.670Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d2e0723d92e8c90757 {
      sessionID: 'aba47da065f8dec48df28c2fc39a1dff',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aaba47da065f8dec48df28c2fc39a1dff.SVG61W5yf4TnIrYxv4cyxZ4rpII0Zix6xQ5PDuN%2FpoQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/administrators/686c05d2e0723d92e8c90757 [33m403[0m 67.083 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:23.729Z"}
  console.log
    CSRF token generation: {
      sessionID: '869cbeebda3ed8cfb4503c5eaecb1010',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gcNcWFdp-c1K0R_2TBaxEmP9Ppmks_509d2k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 869cbeebda3ed8cfb4503c5eaecb1010

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zwt8gnNFrn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.950 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:23.836Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 187.296 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c05d4e0723d92e8c90787 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:24.147Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d4e0723d92e8c90787 {
      sessionID: '869cbeebda3ed8cfb4503c5eaecb1010',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A869cbeebda3ed8cfb4503c5eaecb1010.WXrxmVYH%2FJ8eg2jflWFrPVaBKG0wIcLs7Vf2%2FQNZF10',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c05d4e0723d92e8c90787 [32m200[0m 127.783 ms - 63[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:25.204Z"}
  console.log
    CSRF token generation: {
      sessionID: '2022c31a773fc206cbd9100047097cb6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: qah5Jnjc-kHbG4H-4lySi_V9cOJc8DPWoMGE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2022c31a773fc206cbd9100047097cb6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Y3ZTctRBbF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.483 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:25.338Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.904 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c05d5e0723d92e8c907ae {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:25.583Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d5e0723d92e8c907ae {
      sessionID: '2022c31a773fc206cbd9100047097cb6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2022c31a773fc206cbd9100047097cb6.UYk5zhcQDBPzsa8k%2BLOxCalxa8UH6WOUwcTy9nntk%2BA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c05d5e0723d92e8c907ae [33m400[0m 63.503 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:26.537Z"}
  console.log
    CSRF token generation: {
      sessionID: '36d4571c11eaf80afa13a594c6101e6e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PsUjcOPR-nfXTwTtnGOK8srjlxfWXOvzLmEQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 36d4571c11eaf80afa13a594c6101e6e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BRdyNiKBKU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.570 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:26.647Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.024 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c05d6e0723d92e8c907d8 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:26.976Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d6e0723d92e8c907d8 {
      sessionID: '36d4571c11eaf80afa13a594c6101e6e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A36d4571c11eaf80afa13a594c6101e6e.B4hbYW19jTDPmID3LCAMcXrl%2F6AVwGvMz38ItSiQ%2BI0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c05d6e0723d92e8c907d8 [33m400[0m 65.020 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:27.963Z"}
  console.log
    CSRF token generation: {
      sessionID: '962849f1630e3c752203f8605c865e7c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9zEp37q5-u-Hq2nbz-domEkZQ-vukxoHgLCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 962849f1630e3c752203f8605c865e7c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fG8isyJGmW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.230 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:28.062Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.475 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:28.402Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ac7d55c58900dce7e7c6aa436c049e09',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3Z6amAsV-kbRskswHc-sI1YPEYSgy7718JPU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ac7d55c58900dce7e7c6aa436c049e09

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: wCjx658cSy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.393 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:28.411Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.395 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c05d8e0723d92e8c90809 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:28.571Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d8e0723d92e8c90809 {
      sessionID: 'ac7d55c58900dce7e7c6aa436c049e09',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aac7d55c58900dce7e7c6aa436c049e09.37%2Bmfz5LwGnq1zu4oCICtAa7KtJAPFhdN1k8n6cI67c',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c05d8e0723d92e8c90809 [33m403[0m 57.807 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:29.514Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f08464b14fa3322eaa55e2c193c2d7cd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cEvfENbt-IyUlm951eZZ2Q3B0N8wuUoh_WCc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f08464b14fa3322eaa55e2c193c2d7cd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 49A2xxVHWq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.051 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:29.620Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.936 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/686c05d9e0723d92e8c9083b {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:29.857Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05d9e0723d92e8c9083b {
      sessionID: 'f08464b14fa3322eaa55e2c193c2d7cd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Af08464b14fa3322eaa55e2c193c2d7cd.rOXd9sL%2Bo%2B%2FZm2xyrMDacQpO2FKvSYEP%2FXfl1yjE%2BLE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/administrators/686c05d9e0723d92e8c9083b [33m404[0m 112.352 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:30.878Z"}
  console.log
    CSRF token generation: {
      sessionID: '64eb1fc55bed4395cc3b7c14f750c99a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pLptRzmg-mSvaApwCaAPzdC9G4gAa8vN0VcQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 64eb1fc55bed4395cc3b7c14f750c99a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 75QawttM7E...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.977 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:30.995Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.097 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c05dbe0723d92e8c90866/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:31.302Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05dbe0723d92e8c90866/reset-password {
      sessionID: '64eb1fc55bed4395cc3b7c14f750c99a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A64eb1fc55bed4395cc3b7c14f750c99a.wg%2BX%2Bc9mGYMiIvVbE1jT%2BlHssf4Y%2BlecgHqzpMG0VZQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c05dbe0723d92e8c90866/reset-password [32m200[0m 210.843 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:31.518Z"}
  console.log
    CSRF token generation: {
      sessionID: '0a598b1290aa9efad897896ca471cc47',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rH61mAST-V-Fn0FTwnS_9EJzzSEWlNBies90

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0a598b1290aa9efad897896ca471cc47

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OOAfVgBiGp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.031 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:31.527Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.700 ms - 644[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:31.696Z"}
  console.log
    CSRF token generation: {
      sessionID: '313e650af7181b607d7a28f48479bbf6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PBedSo1m-yZHjhI0RJXUT91av6z8Roey-sIY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 313e650af7181b607d7a28f48479bbf6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vkanQYHwnD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.609 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:31.709Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 117.001 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:32.736Z"}
  console.log
    CSRF token generation: {
      sessionID: '4a1ee9dbd42ea3dc0b3d8b8dd03d0ad8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8QkUNnG2-lMbr3e9n1AoCPgTKuyGoi2VKqAo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4a1ee9dbd42ea3dc0b3d8b8dd03d0ad8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5xYMonTmBr...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.120 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:32.838Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.579 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c05dde0723d92e8c90898/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:33.139Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05dde0723d92e8c90898/reset-password {
      sessionID: '4a1ee9dbd42ea3dc0b3d8b8dd03d0ad8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4a1ee9dbd42ea3dc0b3d8b8dd03d0ad8.LLNCbBe33QD%2BY8IlJSmelpumSEoLIm5b1yOsDjTRVMM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c05dde0723d92e8c90898/reset-password [32m200[0m 185.884 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:34.254Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ddfe502ce18903c083f5bd9e5f79c212',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PmnWqeHd-_4WrIqgY6-aqO2jyxIoelhZfC_4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ddfe502ce18903c083f5bd9e5f79c212

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7m1uPZkILM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.797 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:34.357Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.930 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/686c05dee0723d92e8c908c6/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:34.596Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05dee0723d92e8c908c6/reset-password {
      sessionID: 'ddfe502ce18903c083f5bd9e5f79c212',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Addfe502ce18903c083f5bd9e5f79c212.xaVEqtQdV6sQ0nbcePLug59iRiE%2BSqx4jaQ3%2BWPjC3E',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c05dee0723d92e8c908c6/reset-password [33m400[0m 60.683 ms - 313[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:35.621Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f14fce94b56a2b9ca427479bf840fb68',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 133iK8Kh-6qqoqLXaYgmG9-U8MKWXjm0kQzc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f14fce94b56a2b9ca427479bf840fb68

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QGqpX_VZnD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.101 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:35.729Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.733 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:36.067Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd30e3a74a38b2441066e0b4d509d3328',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fzFjolBS-Xos-1SUhzq8_pu21waL2ANqkBeU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d30e3a74a38b2441066e0b4d509d3328

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: avI5UccMpW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.278 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:36.076Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 189.471 ms - 650[0m
[34mdebug[39m: POST /api/v1/administrators/686c05dfe0723d92e8c908f0/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:36.269Z"}
  console.log
    CSRF check for: /api/v1/administrators/686c05dfe0723d92e8c908f0/reset-password {
      sessionID: 'd30e3a74a38b2441066e0b4d509d3328',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad30e3a74a38b2441066e0b4d509d3328.SodqWU71aKIEPuOPD6yPYyjhbGzxDyStTlRBnQv1O3g',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators/686c05dfe0723d92e8c908f0/reset-password [33m403[0m 67.859 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:37.366Z"}
  console.log
    CSRF token generation: {
      sessionID: '925a0f5ffe396dc97c95d84cb3b927bc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EBkOzQUN-WmcGaqf80SAyDKhfHVRAcMfzvpM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 925a0f5ffe396dc97c95d84cb3b927bc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: siigIS8PGs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 20.111 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:37.562Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.764 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:37.716Z"}
[0mGET /api/v1/administrators/permissions [32m200[0m 36.100 ms - 361[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:38.646Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c30bdadec85a62a6ff4e5b8c77ad892f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2KrHlYFm-ccpEAFK3Olf0bg5-ljWTyVhtvQ0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c30bdadec85a62a6ff4e5b8c77ad892f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fmKz8h344Q...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.581 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:38.747Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 169.130 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:38.919Z"}
[0mGET /api/v1/administrators/permissions [33m401[0m 1.134 ms - 47[0m
PASS tests/integration/administrator.test.js (55.63 s)
  Administrator Integration Tests
    GET /api/v1/administrators
      ✓ should get all administrators with admin token (2365 ms)
      ✓ should filter by active status (1561 ms)
      ✓ should support pagination (2311 ms)
      ✓ should require admin authentication (1367 ms)
      ✓ should require administrator permissions (1868 ms)
    GET /api/v1/administrators/:id
      ✓ should get administrator by ID (1408 ms)
      ✓ should return 404 for non-existent administrator (1338 ms)
      ✓ should handle invalid ObjectId (1485 ms)
    POST /api/v1/administrators
      ✓ should create new administrator (1992 ms)
      ✓ should validate required fields (1269 ms)
      ✓ should validate email format (2479 ms)
      ✓ should validate password strength (1649 ms)
      ✓ should prevent duplicate emails (1348 ms)
      ✓ should require administrators.create permission (1932 ms)
    PATCH /api/v1/administrators/:id
      ✓ should update administrator details (1605 ms)
      ✓ should update email (2557 ms)
      ✓ should update password (2038 ms)
      ✓ should deactivate administrator (1645 ms)
      ✓ should not allow updating adminId (1540 ms)
      ✓ should validate email uniqueness on update (1428 ms)
      ✓ should prevent self-deactivation (1353 ms)
      ✓ should require administrators.update permission (1777 ms)
    DELETE /api/v1/administrators/:id
      ✓ should delete administrator (1478 ms)
      ✓ should prevent self-deletion (1335 ms)
      ✓ should prevent deleting last administrator with all permissions (1403 ms)
      ✓ should require administrators.delete permission (1574 ms)
      ✓ should handle non-existent administrator (1363 ms)
    POST /api/v1/administrators/:id/reset-password
      ✓ should reset administrator password (1859 ms)
      ✓ should clear login attempts on password reset (1496 ms)
      ✓ should validate password strength (1364 ms)
      ✓ should require administrators.update permission (1747 ms)
    GET /api/v1/administrators/permissions
      ✓ should get available permissions list (1296 ms)
      ✓ should require authentication (1161 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:40.732Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:42.991Z"}
  console.log
    CSRF token generation: {
      sessionID: '2ad8e60ae758da647c6271873019c342',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sxY0t2AV-fuKDM9dLN0khNDROcgapKVAAL5I

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2ad8e60ae758da647c6271873019c342

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RucRZPxu6r...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.357 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.008Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 9.403 ms - 148[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.021Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.855 ms - 241[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: weak, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.032Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.219 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.036Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.538 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.041Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.336 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.045Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.279 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: 12345678, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.049Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 3.093 ms - 191[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.054Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.271 ms - 284[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: Password1, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.058Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.145 ms - 163[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.061Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.229 ms - 256[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.064Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.430 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.067Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.280 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: ALLUPPERCASE123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.078Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.067 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.083Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.505 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: alllowercase123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.100Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.919 ms - 152[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.109Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.063 ms - 245[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoNumbers!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.122Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.801 ms - 199[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:43.129Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.680 ms - 292[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoSpecialChars123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.083Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e5b43e36eba50c29c053d71f0237e58',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: py5p4dsA-Hu3yEl4BtYQQ4ddxGO_n338_S1A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e5b43e36eba50c29c053d71f0237e58

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: N3fnhyrcS9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.582 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.098Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-ad3deb4a-bdde-45e5-904d-2a00393850c8</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-ad3deb4a-bdde-45e5-904d-2a00393850c8">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-ad3deb4a-bdde-45e5-904d-2a00393850c8</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-ad3deb4a-bdde-45e5-904d-2a00393850c8">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-ad3deb4a-bdde-45e5-904d-2a00393850c8</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 165.227 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.267Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-133fe789-d20d-4837-8290-23defb9cb899</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-133fe789-d20d-4837-8290-23defb9cb899">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-133fe789-d20d-4837-8290-23defb9cb899</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-133fe789-d20d-4837-8290-23defb9cb899">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-133fe789-d20d-4837-8290-23defb9cb899</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 130.828 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.401Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-e0c6434a-83b8-449c-a95c-f53a14e3a072</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-e0c6434a-83b8-449c-a95c-f53a14e3a072">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-e0c6434a-83b8-449c-a95c-f53a14e3a072</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-e0c6434a-83b8-449c-a95c-f53a14e3a072">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-e0c6434a-83b8-449c-a95c-f53a14e3a072</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 126.591 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.539Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test3@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-aa53643f-a95a-4c20-90c0-23e86d5137dc</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-aa53643f-a95a-4c20-90c0-23e86d5137dc">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-aa53643f-a95a-4c20-90c0-23e86d5137dc</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-aa53643f-a95a-4c20-90c0-23e86d5137dc">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-aa53643f-a95a-4c20-90c0-23e86d5137dc</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 115.349 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:45.657Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test4@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Test,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-32b2fafc-7ec4-4ad9-8c35-b9b6b41d850c</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-32b2fafc-7ec4-4ad9-8c35-b9b6b41d850c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-32b2fafc-7ec4-4ad9-8c35-b9b6b41d850c</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-32b2fafc-7ec4-4ad9-8c35-b9b6b41d850c">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-32b2fafc-7ec4-4ad9-8c35-b9b6b41d850c</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 220.382 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:47.609Z"}
  console.log
    CSRF token generation: {
      sessionID: '28dcb75aacec5d0b5982d1bcc42342e2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IxHwex82-jsbxySGKQIEpWp6WwrEL5YdquUE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 28dcb75aacec5d0b5982d1bcc42342e2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GRLiNWeXhY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.425 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:47.619Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.687 ms - 166[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:48.511Z"}
  console.log
    CSRF token generation: {
      sessionID: '41bc3db483beaa0851411d0466db2858',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fLqSf0hd-Dkl0mVpm1dtMmy-w7T2iQ4jZ_EQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 41bc3db483beaa0851411d0466db2858

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lTvK20Fk_S...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.051 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:48.519Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.819 ms - 167[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:49.363Z"}
  console.log
    CSRF token generation: {
      sessionID: '24b5126383f01c4876f5fe0bbb30547f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xCl2nIfu-rnZlklqhM6FHfaoUkgPIiLicyUQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 24b5126383f01c4876f5fe0bbb30547f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UgM6NHlEJJ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.388 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:49.378Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 6.923 ms - 180[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:49.392Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 3.579 ms - 181[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:49.399Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.355 ms - 182[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:49.405Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.056 ms - 182[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:50.284Z"}
  console.log
    CSRF token generation: {
      sessionID: '6027a13ca194dfa2c8e5c89d1fc5b999',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VNmvTPOX-sca-4EhWgVUKZjcxg89RYzviRac

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6027a13ca194dfa2c8e5c89d1fc5b999

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1cihXjiJiO...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.458 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:50.443Z"}
[0mPOST /api/v1/customers/register [33m400[0m 1.499 ms - 151[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:51.461Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ca8ef89f347f6d5779883f8ab769c6b7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PfNfbSA5-1Mi7AGRX7i_B_gyzvcfFC1zgnKg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ca8ef89f347f6d5779883f8ab769c6b7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RWIoLmeX2e...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.922 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:51.632Z"}
  console.log
    Creating new customer with email: customer2@example.com username: customertest2

      at log (server/controllers/customerController.js:88:13)

  console.log
    Saving customer to database...

      at log (server/controllers/customerController.js:119:13)

  console.log
    Customer saved successfully with ID: CUST-17b13564-85c4-46cf-b9e2-5cc70ad4fba1

      at log (server/controllers/customerController.js:121:13)

  console.log
    Language-specific template not found for en/customer-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: customer2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Service

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #ffffff !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .service-box {
          border: 1px solid #e0e0e0;
          border-radius: 4px;
          padding: 15px;
          margin: 20px 0;
          background-color: #f9f9f9;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .steps {
          padding: 0;
        }
        .step {
          display: flex;
          margin-bottom: 15px;
          align-items: flex-start;
        }
        .step-number {
          background-color: #1e3a8a;
          color: #ffffff !important;
          width: 25px;
          height: 25px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: bold;
          margin-right: 10px;
          flex-shrink: 0;
        }
        .step-content {
          flex: 1;
        }
        .divider {
          height: 1px;
          background-color: #e0e0e0;
          margin: 20px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to WaveMAX Laundry!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Customer,</h2>
            <p>Welcome to WaveMAX Laundry Service! Your account has been successfully created and you're ready to enjoy premium wash, dry, fold laundry services.</p>
          </div>
          
          <div class="highlight">
            <h3>Your Account Information</h3>
            <p><strong>Customer ID:</strong> CUST-17b13564-85c4-46cf-b9e2-5cc70ad4fba1</p>
            <p><strong>Your Service Provider:</strong> Test Affiliate</p>
          </div>
          
          <div class="service-box" style="background-color: #f0f7ff; border: 1px solid #3b82f6;">
            <h3>Your Laundry Bag Credit</h3>
            <p>We've credited your account with prepaid laundry bags. These bags will be delivered to you by your service provider.</p>
            
            <div style="background-color: #ffffff; border: 1px solid #e0e0e0; border-radius: 6px; padding: 15px; margin: 15px 0;">
              <h4 style="margin-top: 0; color: #1e3a8a;">Account Credit Details</h4>
              <table style="width: 100%; border-collapse: collapse;">
                <tr>
                  <td style="padding: 5px 0;">Bags Purchased</td>
                  <td style="text-align: right; font-weight: bold;">1</td>
                </tr>
                <tr>
                  <td style="padding: 5px 0;">Cost per Bag</td>
                  <td style="text-align: right;">$10.00</td>
                </tr>
                <tr style="border-top: 2px solid #e0e0e0;">
                  <td style="padding: 8px 0; font-weight: bold; color: #1e3a8a;">Total Account Credit</td>
                  <td style="text-align: right; font-weight: bold; color: #1e3a8a; font-size: 18px;">$10.00</td>
                </tr>
              </table>
            </div>
            
            <p style="font-size: 14px; color: #666; margin-top: 10px;">
              <strong>Note:</strong> This credit will be automatically applied to your first orders. Each bag holds approximately 20-25 lbs of laundry.
            </p>
          </div>
          
          <div class="service-box">
            <h3>How It Works</h3>
            <div class="steps">
              <div class="step">
                <div class="step-number">1</div>
                <div class="step-content">
                  <strong>Schedule a Pickup</strong>
                  <p>Login to your dashboard and schedule a convenient pickup time.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">2</div>
                <div class="step-content">
                  <strong>Prepare Your Laundry</strong>
                  <p>Place your laundry in the provided bags. Your service provider will pick them up.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">3</div>
                <div class="step-content">
                  <strong>We Do the Rest</strong>
                  <p>Your laundry is professionally washed, dried, and folded at our facility.</p>
                </div>
              </div>
              <div class="step">
                <div class="step-number">4</div>
                <div class="step-content">
                  <strong>Delivery to Your Door</strong>
                  <p>Your clean, fresh laundry is delivered back to you, usually within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="divider"></div>
          
          <div class="section">
            <h3>Ready to Schedule Your First Pickup?</h3>
            <p>Click the button below to access your dashboard and schedule your first pickup.</p>
            <div style="text-align: center; margin: 20px 0;">
              <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule Pickup</a>
            </div>
            <p style="text-align: center; color: #1e3a8a; font-style: italic;">Remember: Your account has been credited for your prepaid bags!</p>
          </div>
          
          <div class="section">
            <h3>Questions?</h3>
            <p>Your service provider is here to help! Feel free to reach out:</p>
            <p><strong>Name:</strong> Test Affiliate<br>
            <strong>Phone:</strong> +1234567890<br>
            <strong>Email:</strong> testaffiliate2@example.com</p>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Access your customer dashboard anytime to manage orders and track deliveries.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="background-color: #3b82f6;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team.</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Customer welcome email sent successfully to: customer2@example.com

      at Object.log [as sendCustomerWelcomeEmail] (server/utils/emailService.js:1101:13)

  console.log
    Language-specific template not found for en/affiliate-new-customer, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: testaffiliate2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Customer Registration

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Customer Registration</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background-color: #1e3a8a;
                color: #ffffff;
                padding: 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 28px;
            }
            .content {
                padding: 40px 30px;
            }
            .content h2 {
                color: #1e3a8a;
                font-size: 24px;
                margin-bottom: 20px;
            }
            .info-box {
                background-color: #f0f7ff;
                border-left: 4px solid #3b82f6;
                padding: 20px;
                margin: 20px 0;
            }
            .customer-details {
                background-color: #f9f9f9;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .customer-details h3 {
                color: #1e3a8a;
                margin-top: 0;
            }
            .detail-row {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #e0e0e0;
            }
            .detail-row:last-child {
                border-bottom: none;
            }
            .detail-label {
                font-weight: bold;
                color: #555;
            }
            .button {
                display: inline-block;
                background-color: #ffffff !important;
                color: #ffffff !important;
                padding: 12px 30px;
                text-decoration: none !important;
                border-radius: 6px;
                font-weight: bold;
                margin: 20px 0;
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #3b82f6;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Customer Registration!</h1>
            </div>
            
            <div class="content">
                <h2>Congratulations, [BUSINESS_NAME]!</h2>
                
                <p>Great news! A new customer has just registered through your affiliate link.</p>
                
                <div class="info-box">
                    <strong>Action Required:</strong> Please deliver 1 laundry bag(s) to your new customer within 48 hours.
                    <br><small>Note: The customer has been charged for their bags. This fee will be credited on their first order.</small>
                </div>
                
                <div class="customer-details">
                    <h3>Customer Information</h3>
                    <div class="detail-row">
                        <span class="detail-label">Customer ID:</span>
                        <span>CUST-17b13564-85c4-46cf-b9e2-5cc70ad4fba1</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span>Customer Test</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span>customer2@example.com</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span>+1234567890</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span>
                        <span>456 Customer St, Customer City, CC 54321</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Service Frequency:</span>
                        <span>weekly</span>
                    </div>
                </div>
                
                <h3>Next Steps:</h3>
                <ol><li>Contact the customer to arrange bag delivery</li><li>Deliver <strong>1</strong> laundry bag(s) they purchased during registration</li><li>Explain the pickup and delivery process</li><li>Schedule their first pickup if requested</li><li>Remind them that bag fees will be credited on their first order</li></ol>
                
                <center>
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate&customer=CUST-17b13564-85c4-46cf-b9e2-5cc70ad4fba1" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Customer in Dashboard</a>
                </center>
                
                <p>Remember: Providing excellent service from the start helps ensure customer retention and positive reviews!</p>
            </div>
            
            <div class="footer">
                <p>This email was sent by WaveMAX Laundry Affiliate Program</p>
                <p>Questions? Contact us at <a href="mailto:support@wavemax.promo">support@wavemax.promo</a></p>
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/customers/register [32m201[0m 200.405 ms - 345[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:52.723Z"}
  console.log
    CSRF token generation: {
      sessionID: '98775e3214142e9ab63af8234be79cca',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MwJKzzGA-a3eRw_QbCT94WcwiTk8xyynq_1E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 98775e3214142e9ab63af8234be79cca

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AIHFGG6RSR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.078 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:52.835Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:37:53.003Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:37:53.003Z","userId":"686c05f02e1b380a03b22d3a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 167.586 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:53.006Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '98775e3214142e9ab63af8234be79cca',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A98775e3214142e9ab63af8234be79cca.AqTApIDwzoRCkqC3jR%2FMWsaOVQrMFV%2BS4BDAhFVDMak',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/administrators [33m400[0m 58.127 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:53.939Z"}
  console.log
    CSRF token generation: {
      sessionID: '3525a45df476cf3dd7fbc12f0505c416',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zUAqWo66-O_jwWJxvSwyc5NLKgMOUwoMS-nA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3525a45df476cf3dd7fbc12f0505c416

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xDbEeWcskH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.390 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:54.046Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:37:54.212Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:37:54.213Z","userId":"686c05f22e1b380a03b22d62","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 167.174 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:54.218Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '3525a45df476cf3dd7fbc12f0505c416',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3525a45df476cf3dd7fbc12f0505c416.XwCSsrmvhvzbuAnoaq5GaT2fBW0vHnpxnVQjI6xe%2BwM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"CREATE_ADMINISTRATOR","details":{"adminId":"ADM002","email":"newuser@example.com"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c05f22e1b380a03b22d6c","targetType":"administrator","timestamp":"2025-07-07T17:37:54.433Z","userId":"686c05f22e1b380a03b22d62","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/administrators [32m201[0m 217.178 ms - 341[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:55.401Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd3ce0a2fdddf5e533e13ef0d8230ceeb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: CUT3lbdb-ebF62o2ebI7A1_poW52yEek4uPQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d3ce0a2fdddf5e533e13ef0d8230ceeb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gc2s1DId6M...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 15.072 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:55.519Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:37:55.677Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:37:55.678Z","userId":"686c05f32e1b380a03b22d8e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.775 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:55.682Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'd3ce0a2fdddf5e533e13ef0d8230ceeb',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad3ce0a2fdddf5e533e13ef0d8230ceeb.JqZTELlUwsL1EpKNDWmpRkRFkn%2BZMusbt55dOgsb88U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 64.377 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:56.983Z"}
  console.log
    CSRF token generation: {
      sessionID: '1c9be752ed8c3a8a7dbdd142f1060ab7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: CQ87KGHu-tdFuabUQp3K2PDxtbuXfbuqhhZU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1c9be752ed8c3a8a7dbdd142f1060ab7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OFk3ZNuUsh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.339 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:57.163Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:37:57.363Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:37:57.363Z","userId":"686c05f52e1b380a03b22db6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 200.393 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:57.366Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '1c9be752ed8c3a8a7dbdd142f1060ab7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1c9be752ed8c3a8a7dbdd142f1060ab7.x%2ByZ%2Bjw52dgeQK3TMIcvrYaqLMdNPuY2YeZomAmhXw8',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newoperator@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, Worker!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTDWOUZBCE9A0</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">SecureM@ster7!9K</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newoperator@example.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">Not specified</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newoperator@example.com","operatorId":"OPRMCTDWOUZBCE9A0"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c05f52e1b380a03b22dbf","targetType":"operator","timestamp":"2025-07-07T17:37:57.572Z","userId":"686c05f52e1b380a03b22db6","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 206.257 ms - 416[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:58.480Z"}
  console.log
    CSRF token generation: {
      sessionID: '52e37d23120de1848c7de5f4a474a8d7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EieGwDDr-TrP6L0tFdwnYQa2jtXzSpi1D3vs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 52e37d23120de1848c7de5f4a474a8d7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LjXkjidCWL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.704 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:58.623Z"}
[0mPOST /api/v1/auth/reset-password [33m400[0m 1.797 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:59.517Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a4fc13f6ace0fd1326d62cd031085d6a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: A615JLdw-W5ig5Fmzemh9cqAV24oQ9509xPM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a4fc13f6ace0fd1326d62cd031085d6a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: L8rH--SE3A...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.179 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:37:59.667Z"}
[0mPOST /api/v1/auth/reset-password [32m200[0m 138.962 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:00.768Z"}
  console.log
    CSRF token generation: {
      sessionID: '603736effd72160417f90788a35d5a92',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GBfvWcBy-4slAopmlRAXdMuo6-j9dRUaGqgQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 603736effd72160417f90788a35d5a92

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ffInyfaTBr...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.349 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:00.872Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:01.041Z","userType":"affiliate","username":"logintest"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 168.646 ms - 630[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:01.896Z"}
  console.log
    CSRF token generation: {
      sessionID: '678b23d1b9909bfc224968dfec358b41',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: q0krUvPv-vMF5MhgxVlWP-0kh_JRNiAn3Dgo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 678b23d1b9909bfc224968dfec358b41

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0bMQTmrDSm...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.644 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:01.906Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.429 ms - 164[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:02.770Z"}
  console.log
    CSRF token generation: {
      sessionID: '8cdfda9fecec057665c84ce7e9f88b8d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: k7aoLtnV-EzinRbrPJgxOBNX9MIZn_US1NGE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8cdfda9fecec057665c84ce7e9f88b8d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mPZmhmA9NU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.781 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:02.780Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.479 ms - 185[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:03.707Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b5caf8be7715ad3c5c417eca86adcaaa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: N3n4tBNZ-nPkqM9fFfnFnCn5Ok09MrKSAV74

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b5caf8be7715ad3c5c417eca86adcaaa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YRdnCmZMZN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.695 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:03.720Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: mixed@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Mixed,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-4a99bde0-a0e4-4deb-881a-8c83b362a867</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-4a99bde0-a0e4-4deb-881a-8c83b362a867">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-4a99bde0-a0e4-4deb-881a-8c83b362a867</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-4a99bde0-a0e4-4deb-881a-8c83b362a867">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-4a99bde0-a0e4-4deb-881a-8c83b362a867</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 147.227 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:04.940Z"}
  console.log
    CSRF token generation: {
      sessionID: '2eeb7781dfdb90c56ec01a4e852c30f0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fhWSlFJa-VXJLtSIczLc1zZQyWw6kNhKqPMg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2eeb7781dfdb90c56ec01a4e852c30f0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _uDsn5bwcj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.312 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:04.949Z"}
  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: unicode@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Laundry Affiliate Program

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Welcome to WaveMAX Laundry Affiliate Program</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333333;
          margin: 0;
          padding: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          padding: 20px;
        }
        .header {
          background-color: #1e3a8a;
          color: #ffffff !important;
          padding: 20px;
          text-align: center;
        }
        .logo {
          max-width: 180px;
          margin-bottom: 10px;
        }
        .content {
          padding: 20px;
          background-color: #ffffff;
        }
        .section {
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #1e3a8a !important;
          color: #ffffff !important;
          padding: 12px 20px;
          text-decoration: none !important;
          border-radius: 4px;
          font-weight: bold;
          text-align: center;
        }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        .footer {
          background-color: #f5f5f5;
          padding: 20px;
          text-align: center;
          font-size: 12px;
          color: #666666;
        }
        .stats {
          display: flex;
          justify-content: space-between;
          text-align: center;
          margin: 20px 0;
        }
        .stat {
          flex: 1;
          padding: 10px;
          background-color: #f5f5f5;
          border-radius: 4px;
          margin: 0 5px;
        }
        .stat-value {
          font-size: 24px;
          font-weight: bold;
          color: #1e3a8a;
        }
        .stat-label {
          font-size: 12px;
          color: #666666;
        }
        .highlight {
          background-color: #f0f7ff;
          border-left: 4px solid #1e3a8a;
          padding: 15px;
          margin: 20px 0;
        }
        .important-notice {
          background-color: #fef3c7;
          border: 2px solid #f59e0b;
          border-radius: 4px;
          padding: 20px;
          margin: 20px 0;
        }
        .important-notice h3 {
          color: #d97706;
          margin-top: 0;
        }
        .important-notice ul {
          margin: 10px 0;
          padding-left: 20px;
        }
        .important-notice li {
          margin: 5px 0;
        }
        @media (max-width: 480px) {
          .container {
            padding: 10px;
          }
          .content {
            padding: 15px;
          }
          .stats {
            flex-direction: column;
          }
          .stat {
            margin: 5px 0;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <img src="https://www.wavemax.promo/wp-content/themes/wavemax-laundry/assets/img/logo-white.png" alt="WaveMAX Laundry" class="logo">
          <h1>Welcome to the Affiliate Program!</h1>
        </div>
        
        <div class="content">
          <div class="section">
            <h2>Hi Unicode,</h2>
            <p>Congratulations and welcome to the WaveMAX Laundry Affiliate Program! We're excited to have you join our network of affiliate partners.</p>
            <p>You're now ready to start offering premium wash, dry, fold laundry services to your customers, with pickup and delivery handled by you.</p>
          </div>
          
          <div class="important-notice">
            <h3>⚠️ IMPORTANT: W-9 Form Required</h3>
            <p><strong>Action Required Before Payments Can Be Processed</strong></p>
            <p>To comply with IRS regulations and enable payment processing, you must submit a completed W-9 form:</p>
            <ul>
              <li>Download the official W-9 form from: https://www.irs.gov/pub/irs-pdf/fw9.pdf</li>
              <li>Complete all required fields including your taxpayer identification number</li>
              <li>Log in to your affiliate dashboard</li>
              <li>Navigate to "Tax Information" and upload your completed W-9</li>
            </ul>
            <p>Note: The W-9 form must be obtained directly from the IRS website to ensure you have the current version.</p>
            <p>For technical support with uploading, contact support@wavemax.com</p>
          </div>
          
          <div class="highlight">
            <h3>Your Affiliate Information</h3>
            <p><strong>Affiliate ID:</strong> AFF-fa716255-0625-4011-b55c-94ba2d7e1386</p>
            <p><strong>Customer Landing Page:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-fa716255-0625-4011-b55c-94ba2d7e1386">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?route=/affiliate-landing&code=AFF-fa716255-0625-4011-b55c-94ba2d7e1386</a></p>
            <p>Share this professional landing page with potential customers to showcase your services and pricing.</p>
            <p><strong>Direct Registration URL:</strong> <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-fa716255-0625-4011-b55c-94ba2d7e1386">https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?affid=AFF-fa716255-0625-4011-b55c-94ba2d7e1386</a></p>
            <p>Customers can also use this direct link to register. Each customer registered through your links will be associated with your account.</p>
          </div>
          
          <div class="section">
            <h3>Getting Started</h3>
            <ol>
              <li>Share your registration link with potential customers</li>
              <li>Receive laundry bags with unique barcodes for your customers</li>
              <li>Coordinate pickups and deliveries based on customer schedules</li>
              <li>Bring the laundry to our WaveMAX location for washing, drying, and folding</li>
              <li>Deliver clean laundry back to your customers</li>
              <li>Earn commissions on every order!</li>
            </ol>
          </div>
          
          <div class="stats">
            <div class="stat">
              <div class="stat-value">10%</div>
              <div class="stat-label">COMMISSION ON WDF</div>
            </div>
            <div class="stat">
              <div class="stat-value">100%</div>
              <div class="stat-label">OF DELIVERY FEES</div>
            </div>
            <div class="stat">
              <div class="stat-value">$0</div>
              <div class="stat-label">STARTUP COST</div>
            </div>
          </div>
          
          <div class="section" style="text-align: center;">
            <p>Login to your dashboard to manage your affiliate account, track orders, and view your earnings.</p>
            <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Go to Dashboard</a>
          </div>
        </div>
        
        <div class="footer">
          <p>If you have any questions, please contact our support team at support@wavemax.promo</p>
          <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
          <p>123 Main Street, Austin, TX 78701</p>
        </div>
      </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/affiliates/register [32m201[0m 177.856 ms - 120[0m
PASS tests/integration/passwordValidation.test.js (26.174 s)
  Password Validation Integration Tests
    Affiliate Registration Password Validation
      ✓ should reject weak passwords during affiliate registration (3695 ms)
      ✓ should accept strong passwords during affiliate registration (2526 ms)
      ✓ should reject passwords containing username (926 ms)
      ✓ should reject passwords containing email (860 ms)
      ✓ should reject passwords with sequential characters (914 ms)
    Customer Registration Password Validation
      ✓ should enforce strong passwords for customer registration (1175 ms)
      ✓ should accept strong passwords for customer registration (1264 ms)
    Administrator Password Validation
      ✓ should enforce strong passwords for administrator creation (1221 ms)
      ✓ should accept strong passwords for administrator creation (1440 ms)
    Operator Password Validation
      ✓ should enforce strong passwords for operator creation (1419 ms)
      ✓ should accept strong passwords for operator creation (1663 ms)
    Password Reset Validation
      ✓ should enforce strong passwords during password reset (1019 ms)
      ✓ should accept strong passwords during password reset (1289 ms)
    Login with Updated Passwords
      ✓ should successfully login with strong password (1124 ms)
      ✓ should handle case-insensitive username/email validation during registration (875 ms)
    Password Strength Edge Cases
      ✓ should reject passwords with only special characters at the end (925 ms)
      ✓ should accept passwords with mixed character distribution (1225 ms)
      ✓ should handle Unicode characters in passwords appropriately (1207 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:07.125Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:08.174Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ef1aa965cb38101ae38c79c540cde1dc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EZ4ObRQX-MKq9lSGcE6cAGKrez-n-POokDAw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ef1aa965cb38101ae38c79c540cde1dc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: M81HXokMJx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.458 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:08.355Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:08.636Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:08.636Z","userId":"686c0600ebddf989a62099da","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 283.159 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:08.644Z"}
  console.log
    CSRF token generation: {
      sessionID: '611a7d5045d15139238ecc6340c07515',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: f5YXUlqX-eLq4_xRa_VgiZpfRO7mul6ykqsI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 611a7d5045d15139238ecc6340c07515

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EIJeHhqa4r...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.898 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:08.743Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:08.948Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:08.949Z","userId":"686c0600ebddf989a62099e7","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 206.169 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:08.952Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bcc0bd00c8657ea018dd21a4aa1bd79c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 95H6mZ0l-Li-unMkBcza2rve9adr379O7nug

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bcc0bd00c8657ea018dd21a4aa1bd79c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: lEbWMu2Bv0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 14.075 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:09.189Z"}
[0mGET /api/v1/operators [32m200[0m 308.416 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:11.667Z"}
  console.log
    CSRF token generation: {
      sessionID: '7cfbc3cb6097f6a7545f596efb0a43af',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 9l4hsDu3-A789gH5WCM1yIsGA4IyEoWTJNb8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7cfbc3cb6097f6a7545f596efb0a43af

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yGSfGmZwLj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.799 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:11.773Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:11.943Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:11.944Z","userId":"686c0603ebddf989a6209a23","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.647 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:11.947Z"}
  console.log
    CSRF token generation: {
      sessionID: '7d29d925e0be0b113f36b5f1e9c744ee',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gKhSShsQ-BLNI_YR_oUF2HhQ_F4eiLN8Y6Pw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7d29d925e0be0b113f36b5f1e9c744ee

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: f_kZ_iuSLx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.305 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:12.060Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:12.233Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:12.234Z","userId":"686c0603ebddf989a6209a29","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 174.444 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:12.238Z"}
  console.log
    CSRF token generation: {
      sessionID: '1725d4dd3ccd6ca3ae37679a6bef6e03',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gcbOAwVF-T3A6QLMR-mXN3g1cKdrYJR2F900

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1725d4dd3ccd6ca3ae37679a6bef6e03

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eIg1LE83Pr...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.132 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?active=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:12.345Z"}
[0mGET /api/v1/operators?active=true [32m200[0m 168.628 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:13.413Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b96aea8065976d66e4e8861e94da5d11',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2y4PrtWq-BlY3wde3PEN9DN_Jv8Pi3UQXPEQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b96aea8065976d66e4e8861e94da5d11

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zL8Dm5JV3G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 29.983 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:13.556Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:13.723Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:13.724Z","userId":"686c0605ebddf989a6209a55","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 168.365 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:13.727Z"}
  console.log
    CSRF token generation: {
      sessionID: '00229bbbadd3551e3796e2b3264c83fb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3JnqCXaW-l25xYrp87h4HVLcn5omXvN69ajQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 00229bbbadd3551e3796e2b3264c83fb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: E0GdrPgSP4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.728 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:13.827Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:13.991Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:13.992Z","userId":"686c0605ebddf989a6209a5b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 164.397 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:13.995Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c2c94845f0b944ddfda9487ffad6e915',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: xg1NQEhd-UiQvnTYOXvaLkVthw4-JdxVe_Ts

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c2c94845f0b944ddfda9487ffad6e915

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dP3rHMzXCl...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 21.982 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?onShift=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:14.117Z"}
[0mGET /api/v1/operators?onShift=true [32m200[0m 112.407 ms - 724[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:16.045Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aad46eeaec78871c9471b50171729f8e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8bTt4Nq5-vImVtQsIKwIcCPavOpO7MnNfPDw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aad46eeaec78871c9471b50171729f8e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KfqFptPYBT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.197 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:16.156Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:16.311Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:16.311Z","userId":"686c0608ebddf989a6209a86","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.158 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:16.315Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ac594f4378b392656520a00cdc153daf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7QYBMyrV-lwjO0X7P2CG-aS1PEAGEc-s2qc4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ac594f4378b392656520a00cdc153daf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: qYzK5sZb0A...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.599 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:16.428Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:16.603Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:16.603Z","userId":"686c0608ebddf989a6209a8c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 175.194 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:16.606Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f450a07ec44d251839d2212503cd748c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SLCgL6W9-utxmOFe0tKzwTk_aBSvKs4EgaHY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f450a07ec44d251839d2212503cd748c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gHL2u7Aavf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.829 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:17.650Z"}
[0mGET /api/v1/operators?page=2&limit=5 [32m200[0m 142.576 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:18.713Z"}
  console.log
    CSRF token generation: {
      sessionID: '2ddaddcaedefd1751186a1ce21cfda61',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2UWdRXCm-Ln0hm2NOkvT-mgctAK7R-QSpv4c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2ddaddcaedefd1751186a1ce21cfda61

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2w8Y09iD3-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.391 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:18.827Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:19.026Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:19.027Z","userId":"686c060aebddf989a6209ad5","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 199.606 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:19.031Z"}
  console.log
    CSRF token generation: {
      sessionID: '2f7e9821a35e7030ea2ddb6b8f989d28',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: m9DvKHsj-7nSjMqMBkXmQEA5nG90HOxRxGk0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2f7e9821a35e7030ea2ddb6b8f989d28

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oFDw2ssvSI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.722 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:19.145Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:19.302Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:19.303Z","userId":"686c060bebddf989a6209adb","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.760 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:19.306Z"}
  console.log
    CSRF token generation: {
      sessionID: '83a5705282a12fcac5101de89fb37b33',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tdEHNrns-qPKebhgTe2YiMfQNnSTEdh3MX_A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 83a5705282a12fcac5101de89fb37b33

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: P04-TaFXV6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.777 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:19.314Z"}
[0mGET /api/v1/operators [33m401[0m 0.820 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:20.281Z"}
  console.log
    CSRF token generation: {
      sessionID: '093ba561e92d19a593b83c46a90ea6ec',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: T3fu3phw-HufT_Zt4UYb3pP62VkEihKk3VbE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 093ba561e92d19a593b83c46a90ea6ec

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: k8hIjvqUaT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.562 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:20.405Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:20.592Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:20.592Z","userId":"686c060cebddf989a6209b00","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 187.927 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:20.597Z"}
  console.log
    CSRF token generation: {
      sessionID: '2f26346cfe06d46c23f627e020ea2068',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zXq6voKv-Dzy5md2BDbWhBaD3D4YRzMt18s8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2f26346cfe06d46c23f627e020ea2068

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nr_b5Ytzq3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.089 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:20.717Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:20.902Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:20.902Z","userId":"686c060cebddf989a6209b06","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 185.097 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:20.905Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f8b229e758bffd50cecdcf626e4c7a25',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: d0sOs63l-pn6traPk0FVM4DiIaMTem2PODCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f8b229e758bffd50cecdcf626e4c7a25

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zDdxfiJsxj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.281 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:21.001Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:21.154Z","userType":"administrator","username":"limited@wavemax.com"}
info: undefined {"adminId":"LIMITED001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:21.155Z","userId":"686c060cebddf989a6209b0c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.299 ms - 649[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:21.159Z"}
[0mGET /api/v1/operators [33m403[0m 73.206 ms - 79[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.138Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd79841c3ec3b09da1c823f555394b7e2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: w9LjVRGL-_mzk5TER2gun9HzBaR7E0w-S4v8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d79841c3ec3b09da1c823f555394b7e2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hON1FlgbBI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 27.146 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.277Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:22.432Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:22.432Z","userId":"686c060eebddf989a6209b33","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.791 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.435Z"}
  console.log
    CSRF token generation: {
      sessionID: '43365d49c5848c654842781a0a20de54',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rsmkGfcu-gvz4p2BVQ4UG1xZmZPVimb0Oj1c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 43365d49c5848c654842781a0a20de54

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Q5ksO7k7MB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.025 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.545Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:22.702Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:22.702Z","userId":"686c060eebddf989a6209b39","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.919 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.706Z"}
  console.log
    CSRF token generation: {
      sessionID: '9cc40aca52c997d8dcbfadecaee8e724',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WbWUu7Wy-U0nFVHRPmy9YirV_sFpYIJP_UEA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9cc40aca52c997d8dcbfadecaee8e724

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: pyFbcM8dKA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.798 ms - 67[0m
[34mdebug[39m: GET /api/v1/administrators/operators/686c060eebddf989a6209b3f {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:22.803Z"}
[0mGET /api/v1/administrators/operators/686c060eebddf989a6209b3f [32m200[0m 114.196 ms - 761[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:23.825Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f8a538caaf0fa7685133ae062973c2ef',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KU2l0wBf-3L0xKPv2U6f721D-JqVbmoxNJd0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f8a538caaf0fa7685133ae062973c2ef

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hHGgCirDym...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.680 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:23.929Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:24.093Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:24.093Z","userId":"686c060febddf989a6209b64","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.352 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:24.099Z"}
  console.log
    CSRF token generation: {
      sessionID: '523dd50a2cdd3dde46c6ce9048db242c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2pUPgXAz-J5dLuJLwSSy8tFIKNQ41x76Czlk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 523dd50a2cdd3dde46c6ce9048db242c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -3gU7ZCuq_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.901 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:24.206Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:24.514Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:24.516Z","userId":"686c0610ebddf989a6209b6a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 310.845 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:24.520Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a585d96fb51681c8bee86715ea475f4b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v6KWa0Ny-d8_vkRIUm3JT00Aqx5Eg7HwG_RM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a585d96fb51681c8bee86715ea475f4b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 18--wbE4jQ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.971 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c0610ebddf989a6209b6a {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:24.537Z"}
[0mGET /api/v1/operators/686c0610ebddf989a6209b6a [32m200[0m 216.265 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.141Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c31762d6b5d317a54fd9849ea4e7f3bb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0ns6Qw3O-F1Ui_LlQPiMEUP4OE_RM6hxZs1E

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c31762d6b5d317a54fd9849ea4e7f3bb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7wu8KyV1v1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.123 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.240Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:26.386Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:26.386Z","userId":"686c0612ebddf989a6209b92","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.861 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.389Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd7f78d6fd44bb2a8ab5324adca24e37a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: I45EAFqy-R27NE4LbVe7_6B2gOBI0jSU9Iks

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d7f78d6fd44bb2a8ab5324adca24e37a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8ouKdV4r0W...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.194 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.488Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:26.650Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:26.651Z","userId":"686c0612ebddf989a6209b98","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 163.222 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.654Z"}
  console.log
    CSRF token generation: {
      sessionID: '25801c3259d6bcbeaa2d0487ba212b61',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Cp8h9BRw-GZ6UhSKkZjBFEfJ2Ld23KLl9wAw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 25801c3259d6bcbeaa2d0487ba212b61

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fnUUo2cQqm...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.670 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c0612ebddf989a6209b9e {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:26.749Z"}
[0mGET /api/v1/operators/686c0612ebddf989a6209b9e [33m403[0m 55.828 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:27.691Z"}
  console.log
    CSRF token generation: {
      sessionID: '571675d5a162bfde1fa335cbf7197ad3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GStFXXAB-eqMEe5O3cb_UFS1lctdhNbVSYp4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 571675d5a162bfde1fa335cbf7197ad3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hwdsM3dCf5...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.839 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:27.792Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:27.942Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:27.943Z","userId":"686c0613ebddf989a6209bc1","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.288 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:27.946Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ba74e457fddc6db840b861abc20cb29a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AewlZQek-pbGkquMuVGngyb-H-FQgdpcVlQo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ba74e457fddc6db840b861abc20cb29a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eW5gVvnrnk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 19.793 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:28.059Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:28.230Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:28.231Z","userId":"686c0613ebddf989a6209bc7","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 171.956 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:28.234Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fb992e14122a80be0a881f58330d0841',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4yg1rjQk-WeupGAHW2hN4a0Hu6f4LJIirty8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fb992e14122a80be0a881f58330d0841

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: S6zy1FC5MP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.415 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/686c0614ebddf989a6209bcd {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:28.242Z"}
[0mGET /api/v1/operators/686c0614ebddf989a6209bcd [33m404[0m 109.475 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:29.243Z"}
  console.log
    CSRF token generation: {
      sessionID: '6e87919a384176198113ec76d877d6e9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: TFXo009g-3mamFo3wcTa8nPsP4mzJAsWx0N0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6e87919a384176198113ec76d877d6e9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: nIsKfV49jD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.671 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:29.377Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:29.692Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:29.692Z","userId":"686c0615ebddf989a6209bf1","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 315.512 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:29.695Z"}
  console.log
    CSRF token generation: {
      sessionID: '20e0e17cccd6dc861201d17f6d4baff9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: DUOJo5j0-naNxR0HP4CAemu1n-78dRB3uGxw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 20e0e17cccd6dc861201d17f6d4baff9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OTlT023C8B...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.202 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:30.134Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:30.577Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:30.577Z","userId":"686c0615ebddf989a6209bf7","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 442.989 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:30.582Z"}
  console.log
    CSRF token generation: {
      sessionID: '78688921bc446f04534430074295216d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MHcEouHW-YhMsUaCJb5vRU0Sr101nSFJFdwk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 78688921bc446f04534430074295216d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EdVmNezRk8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.645 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:30.597Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '20e0e17cccd6dc861201d17f6d4baff9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A20e0e17cccd6dc861201d17f6d4baff9.IQZpIcs2tlJzAuWSr2l1%2BpmdnrIoVRFZ99%2FuAWPIKvc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/operator-welcome, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: newop@wavemax.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Welcome to WaveMAX Operations Team

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Welcome to WaveMAX Operations Team</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
                line-height: 1.6;
                color: #333;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
            }
            .container {
                max-width: 600px;
                margin: 20px auto;
                background-color: #ffffff;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            .header {
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                padding: 40px 30px;
                text-align: center;
            }
            .header h1 {
                margin: 0;
                font-size: 32px;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
            }
            .header p {
                margin: 10px 0 0;
                font-size: 18px;
                opacity: 0.9;
            }
            .content {
                padding: 40px 30px;
            }
            .greeting {
                font-size: 20px;
                color: #27ae60;
                margin-bottom: 20px;
                font-weight: 600;
            }
            .credentials-box {
                background-color: #e8f8f5;
                border: 2px solid #2ecc71;
                border-radius: 8px;
                padding: 25px;
                margin: 30px 0;
                text-align: center;
            }
            .credentials-title {
                font-size: 18px;
                font-weight: 600;
                color: #27ae60;
                margin-bottom: 15px;
            }
            .credential-item {
                margin: 15px 0;
                font-size: 16px;
            }
            .credential-label {
                font-weight: 600;
                color: #333;
            }
            .credential-value {
                display: block;
                font-size: 24px;
                color: #2c3e50;
                font-weight: 700;
                margin-top: 5px;
                letter-spacing: 2px;
            }
            .pin-highlight {
                background-color: #f1c40f;
                padding: 5px 15px;
                border-radius: 6px;
                display: inline-block;
            }
            .info-grid {
                display: table;
                width: 100%;
                margin: 20px 0;
            }
            .info-row {
                display: table-row;
            }
            .info-label {
                display: table-cell;
                padding: 10px 15px;
                font-weight: 600;
                color: #27ae60;
                width: 40%;
                vertical-align: top;
            }
            .info-value {
                display: table-cell;
                padding: 10px 15px;
                color: #333;
            }
            .button-container {
                text-align: center;
                margin: 40px 0;
            }
            .button {
                display: inline-block;
                padding: 16px 40px;
                background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
                color: #ffffff !important;
                text-decoration: none !important;
                border-radius: 8px;
                font-size: 18px;
                font-weight: 600;
                box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
            }
        a.button {
          color: #ffffff !important;
          text-decoration: none !important;
        }
        a.button:link,
        a.button:visited,
        a.button:hover,
        a.button:active {
          color: #ffffff !important;
          text-decoration: none !important;
        }
            .important-notes {
                background-color: #fff3cd;
                border: 1px solid #ffeaa7;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
            }
            .important-notes h3 {
                color: #856404;
                margin-bottom: 10px;
            }
            .important-notes ul {
                margin: 10px 0;
                padding-left: 20px;
            }
            .important-notes li {
                margin: 5px 0;
                color: #856404;
            }
            .footer {
                background-color: #f8f9fa;
                padding: 30px;
                text-align: center;
                color: #666;
                font-size: 14px;
            }
            .footer a {
                color: #2ecc71;
                text-decoration: none;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Welcome to WaveMAX Operations</h1>
                <p>Your Operator Account is Ready</p>
            </div>
            
            <div class="content">
                <div class="greeting">
                    Welcome aboard, New!
                </div>
                
                <p>We're excited to have you join the WaveMAX operations team. Your operator account has been created and you're ready to start processing orders.</p>
                
                <div class="credentials-box">
                    <div class="credentials-title">Your Login Credentials</div>
                    <div class="credential-item">
                        <span class="credential-label">Employee ID:</span>
                        <span class="credential-value">OPRMCTDXEKF616161</span>
                    </div>
                    <div class="credential-item">
                        <span class="credential-label">Temporary PIN:</span>
                        <span class="credential-value pin-highlight">NewPassw0rd!</span>
                    </div>
                </div>
                
                <div class="info-grid">
                    <div class="info-row">
                        <div class="info-label">Email:</div>
                        <div class="info-value">newop@wavemax.com</div>
                    </div>
                    <div class="info-row">
                        <div class="info-label">Shift Hours:</div>
                        <div class="info-value">00:00 - 23:59</div>
                    </div>
                </div>
                
                <div class="button-container">
                    <a href="https://wavemax.promo/embed-app-v2.html?login=operator" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to Operator Portal</a>
                </div>
                
                <div class="important-notes">
                    <h3>Important Information:</h3>
                    <ul><li>Change your PIN on first login</li><li>You can only login during your assigned shift hours</li><li>Keep your PIN confidential - never share it with anyone</li><li>Clock in at the start of your shift and clock out when finished</li><li>Contact your supervisor if you have any questions</li></ul>
                </div>
                
                <p>If you need assistance or have questions about your account, please contact your supervisor or the administrator.</p>
            </div>
            
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This email contains confidential login information. Please keep it secure.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newop@wavemax.com","operatorId":"OPRMCTDXEKF616161"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"686c0616ebddf989a6209c00","targetType":"operator","timestamp":"2025-07-07T17:38:30.892Z","userId":"686c0615ebddf989a6209bf1","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 295.398 ms - 449[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:30.895Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:31.054Z","userType":"operator","username":"newop@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPRMCTDXEKF616161","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:31.055Z","userId":"686c0616ebddf989a6209c00","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.903 ms - 621[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:31.919Z"}
  console.log
    CSRF token generation: {
      sessionID: '8d33c48af16b54378d7437442c07254b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Kdf6QeDM-VaOBRCCxVQ1GCt3szPp9P6DPh9c

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8d33c48af16b54378d7437442c07254b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: CTYnmmL83Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.969 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:32.013Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:32.178Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:32.179Z","userId":"686c0617ebddf989a6209c25","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.483 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:32.181Z"}
  console.log
    CSRF token generation: {
      sessionID: '5feb936ec7a6c1bc0f21f776276e15c7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: imZSxPbg-sIgOelZSFLsfu7ec0g-bj2paIs4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5feb936ec7a6c1bc0f21f776276e15c7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: SUD8pHNVXw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.280 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:32.281Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:32.457Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:32.457Z","userId":"686c0618ebddf989a6209c2b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 176.589 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:32.461Z"}
  console.log
    CSRF token generation: {
      sessionID: '42253e6a871119ff6021f89c6a66dc7a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: it5wekB8-CNX3XGygjGu2N1Vmg0hsH0kkghM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 42253e6a871119ff6021f89c6a66dc7a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: t8ag4jEi_-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.515 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:32.471Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '5feb936ec7a6c1bc0f21f776276e15c7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5feb936ec7a6c1bc0f21f776276e15c7.Ombf1u0PPh%2Ft3J0oTkPSfg6uzvvROT%2FIMwvApXcEf7o',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 59.680 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:33.419Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e95487f0648ae37f7bf0a024caac6e26',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0sm7uKJx-VPi8344f2XhGw1gPwCGW74R7X-o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e95487f0648ae37f7bf0a024caac6e26

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DSW8IC1Kp8...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.379 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:33.520Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:33.711Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:33.711Z","userId":"686c0619ebddf989a6209c52","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 191.280 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:33.714Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c83f94c901478a61c9ac56f01571f7d8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Ks10kjPP-ykrcIpwgXOph8Nstcgok3vKz7Tg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c83f94c901478a61c9ac56f01571f7d8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ekGoTxKypC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.862 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:33.845Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:34.080Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:34.080Z","userId":"686c0619ebddf989a6209c58","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 235.564 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:34.084Z"}
  console.log
    CSRF token generation: {
      sessionID: '38b744866785f2868f9686b8b83b0a74',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: COT6p8Sh-0K0_nbiBvwM26nNaER1IhOypOgk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 38b744866785f2868f9686b8b83b0a74

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fnpbTeIwX3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.940 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:34.093Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'c83f94c901478a61c9ac56f01571f7d8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac83f94c901478a61c9ac56f01571f7d8.%2BoU7aQM%2BLkSKZyg04GoHHCMYYytnub9SqW%2FWB1jCP3I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 99.382 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.127Z"}
  console.log
    CSRF token generation: {
      sessionID: '8579eb4429f33792f72220aab664a279',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YwiU3FTy-eTHQGZ1qHkml-huF4TwF7IK3DCA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8579eb4429f33792f72220aab664a279

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DE_kq80ORW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.656 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.233Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:35.389Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:35.390Z","userId":"686c061bebddf989a6209c7f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.568 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.392Z"}
  console.log
    CSRF token generation: {
      sessionID: '3cb7f22f6c915406eddde3197577990a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lDQ0Zmer-YUTzhDcKXM9hRtNGvdC03SIoZiA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3cb7f22f6c915406eddde3197577990a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: kNv07Gqrxu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.793 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.497Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:35.666Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:35.666Z","userId":"686c061bebddf989a6209c85","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 169.078 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.669Z"}
  console.log
    CSRF token generation: {
      sessionID: '58d0cdf39bc5ef6b673ec18f5357b35e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: JiwUSZuU-gUclvtXSku6jMveCuw-rHsNAzMQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 58d0cdf39bc5ef6b673ec18f5357b35e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Zc_iGagcEy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.888 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:35.678Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '3cb7f22f6c915406eddde3197577990a',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3cb7f22f6c915406eddde3197577990a.CkaC4NZpX%2B%2BdCw0AzKrg8sHQ%2FuoZFYGkSq8hvLTqLB0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m400[0m 57.040 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:36.640Z"}
  console.log
    CSRF token generation: {
      sessionID: '9b13854df87d41b6ca70b1077dbae689',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: i8F3jjI0-M4RpT8l6d1n43AXpB1zrT4Qp5KE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9b13854df87d41b6ca70b1077dbae689

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sDUM--LUR3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.695 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:36.743Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:36.922Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:36.922Z","userId":"686c061cebddf989a6209cac","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 179.669 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:36.926Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e0260b9b4db644ccf4990f97f3342ce8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MDjBc7AP-7REkJbUx76_d7fovqneJGx764qM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e0260b9b4db644ccf4990f97f3342ce8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7S_F13edMB...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.437 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:37.026Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:37.183Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:37.184Z","userId":"686c061cebddf989a6209cb2","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.653 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:37.186Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a61667b6a2681d333a598579f6279d0d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: v8Wu0A0Z--cSUAK4h9wvog2Cc89pRw9Hhvzo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a61667b6a2681d333a598579f6279d0d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cFX1f74Dnu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.523 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:37.194Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'e0260b9b4db644ccf4990f97f3342ce8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae0260b9b4db644ccf4990f97f3342ce8.qdk7qFrykEWZzYwKgd5QJmkef8DszTbKSih39gagGa0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m409[0m 92.913 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.269Z"}
  console.log
    CSRF token generation: {
      sessionID: '94206cab2e199b2ecd3f7ed3d6d0c457',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cU6TBwzy-tijRTmnSqNzTCzLaAINneSVdCYw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 94206cab2e199b2ecd3f7ed3d6d0c457

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yH_5d2jaJp...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.745 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.395Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:38.577Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:38.578Z","userId":"686c061eebddf989a6209cda","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 183.590 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.581Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bc6f8b05c83f108ed8f2bb571fcfb645',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: wAuWx9So-vFIgrrwjQZA4afvfM_c6QpnMdjo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bc6f8b05c83f108ed8f2bb571fcfb645

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9yKkrkeBbw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.156 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.717Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:38.880Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:38.881Z","userId":"686c061eebddf989a6209ce0","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 164.608 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.885Z"}
  console.log
    CSRF token generation: {
      sessionID: '60bfbd169bde5fb352900c4fc037d254',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GOx40fFc-ySP82h-NMRKtYEejenXG0ycXwBw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 60bfbd169bde5fb352900c4fc037d254

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vC0iJXdFJZ...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.041 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:38.975Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:39.132Z","userType":"administrator","username":"limited2@wavemax.com"}
info: undefined {"adminId":"LIMITED002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:39.132Z","userId":"686c061eebddf989a6209ce6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.326 ms - 655[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:39.135Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '94206cab2e199b2ecd3f7ed3d6d0c457',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A94206cab2e199b2ecd3f7ed3d6d0c457.JAAq5siW%2FBCD7Hz5Bx8vp4UvfRJ7cwgS7LJGlIpc7jc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/operators [33m403[0m 61.888 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.086Z"}
  console.log
    CSRF token generation: {
      sessionID: '703889b332671735740ea331520905f5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cpRyCAEA-_zpyHXQTSCtYsux2QwKH_RiUidM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 703889b332671735740ea331520905f5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GqPStxhm8N...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.802 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.193Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:40.387Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:40.388Z","userId":"686c0620ebddf989a6209d0d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 195.079 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.391Z"}
  console.log
    CSRF token generation: {
      sessionID: '34fb79d9cbad70c4eb297930f077e400',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uYggu2kx-slreH_U6y-prguOk_1PbklqYVjY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 34fb79d9cbad70c4eb297930f077e400

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HpR0ii6Plb...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.658 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.516Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:40.672Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:40.673Z","userId":"686c0620ebddf989a6209d13","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.049 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.677Z"}
  console.log
    CSRF token generation: {
      sessionID: 'daeb736c4cbe85a54529bb68287dc40c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 4TwhQmfk-hyHOeTsxPP5vn80ThCJWN-EWvhU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: daeb736c4cbe85a54529bb68287dc40c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Inuh1dPmdy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.363 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0620ebddf989a6209d19 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:40.772Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0620ebddf989a6209d19 {
      sessionID: '34fb79d9cbad70c4eb297930f077e400',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A34fb79d9cbad70c4eb297930f077e400.JKiTRYnySeK0VyInv5rE7tXvEMfyRxtzjqOC2Exs1b0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"firstName":"Updated","lastName":"Name","shiftEnd":"18:00","shiftStart":"10:00"}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c0620ebddf989a6209d19","targetId":"686c0620ebddf989a6209d19","targetType":"operator","timestamp":"2025-07-07T17:38:40.923Z","userId":"686c0620ebddf989a6209d0d","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c0620ebddf989a6209d19 [32m200[0m 150.982 ms - 442[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:41.801Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fe6e2fb4db57ddce10c19b9b3af5bae6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O3qMQTTv-2dDZIfyPuTSB1zaPZSqACRkcPmc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fe6e2fb4db57ddce10c19b9b3af5bae6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: y-Orql4q0z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.423 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:41.903Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:42.062Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:42.063Z","userId":"686c0621ebddf989a6209d3f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.501 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:42.067Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e72955d69d5089280c0ac969b21e3cc5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: zzcnQuic-Kt5Y9IHGk7Vjgs-5zMQyQDY_jIs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e72955d69d5089280c0ac969b21e3cc5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Ezn_2yQWda...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.114 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:42.177Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:42.336Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:42.337Z","userId":"686c0622ebddf989a6209d45","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.809 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:42.339Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ed8dcd9d8e90003eaef9cf5f9608aea0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lGINO2f3-71eo3vCpfnAPoYzwJTdTxDE6Xok

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ed8dcd9d8e90003eaef9cf5f9608aea0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: J0yd0UZMg0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.551 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0622ebddf989a6209d4b {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:42.462Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0622ebddf989a6209d4b {
      sessionID: 'e72955d69d5089280c0ac969b21e3cc5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae72955d69d5089280c0ac969b21e3cc5.pGylxo%2B6gsPyUQfU6Q1R4LeewOxHQifAzxP5427iVRk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c0622ebddf989a6209d4b","targetId":"686c0622ebddf989a6209d4b","targetType":"operator","timestamp":"2025-07-07T17:38:42.826Z","userId":"686c0621ebddf989a6209d3f","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c0622ebddf989a6209d4b [32m200[0m 363.985 ms - 445[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:42.830Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:43.098Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:43.098Z","userId":"686c0622ebddf989a6209d4b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 268.375 ms - 606[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.124Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a04f28a509b6bd4e341c0cce17c3a1f5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: qRZujEFG-1j9iORBYEekEn23eF5MEnZ49uuQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a04f28a509b6bd4e341c0cce17c3a1f5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 414sQ7xbPY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.414 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.223Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:44.376Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:44.376Z","userId":"686c0624ebddf989a6209d7a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.480 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.379Z"}
  console.log
    CSRF token generation: {
      sessionID: '3b19b65139497c069b93165305902237',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sJkqBU4k-BuF1JLT_iLoDn-dfRbIm5zV_G8U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3b19b65139497c069b93165305902237

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RWKsgsTGTM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.368 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.545Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:44.765Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:44.765Z","userId":"686c0624ebddf989a6209d80","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 218.071 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.768Z"}
  console.log
    CSRF token generation: {
      sessionID: '36bbe9cd90ed90ec053a5d7b33519616',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 0WuJ4C2v-nZm9Ln6K-NCC09Kc5qVwZyu5c_k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 36bbe9cd90ed90ec053a5d7b33519616

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jwXmKbHdlq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 12.113 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0624ebddf989a6209d86 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:44.912Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0624ebddf989a6209d86 {
      sessionID: '3b19b65139497c069b93165305902237',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3b19b65139497c069b93165305902237.k7w5q8jsl5%2FPHV3P9SrJ1CKGqnf7H3dQo8dPACL%2Fjvc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"isActive":false}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c0624ebddf989a6209d86","targetId":"686c0624ebddf989a6209d86","targetType":"operator","timestamp":"2025-07-07T17:38:45.064Z","userId":"686c0624ebddf989a6209d7a","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c0624ebddf989a6209d86 [32m200[0m 151.552 ms - 446[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:45.071Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T17:38:45.099Z","userType":"operator","username":"target@wavemax.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 28.256 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:45.979Z"}
  console.log
    CSRF token generation: {
      sessionID: '07e7fea6ca6ff1cd6180702a4870a6ef',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VRQIMGaE--uhr5xFVETwulF-7TNiR60sTBkc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 07e7fea6ca6ff1cd6180702a4870a6ef

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: QlT9meTYT6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.928 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.085Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:46.242Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:46.242Z","userId":"686c0626ebddf989a6209dad","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.890 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.244Z"}
  console.log
    CSRF token generation: {
      sessionID: '46b2507b21af53a3ff6326a84054cee8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iby9O6Qb-UAtloDseEgjp-ORSyHDKkXtGXb0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 46b2507b21af53a3ff6326a84054cee8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6sxTDr3a58...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.143 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.340Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:46.550Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:46.550Z","userId":"686c0626ebddf989a6209db3","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 210.127 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.553Z"}
  console.log
    CSRF token generation: {
      sessionID: '10e1bc5d05543f5db672bb7eb07b33e5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: IB6QP52z-JQ0bxM5O1lg-tpnuRujdNxmCJA8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 10e1bc5d05543f5db672bb7eb07b33e5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: r3k6sDfjGn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.179 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.652Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:46.808Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:46.808Z","userId":"686c0626ebddf989a6209db9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.811 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0626ebddf989a6209db9 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:46.811Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0626ebddf989a6209db9 {
      sessionID: '07e7fea6ca6ff1cd6180702a4870a6ef',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A07e7fea6ca6ff1cd6180702a4870a6ef.cakA1yvh6XilnN4eK3zTJr5iK9RNh0tBJQJqvhebxsk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0626ebddf989a6209db9 [32m200[0m 169.406 ms - 240[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.057Z"}
  console.log
    CSRF token generation: {
      sessionID: '531c5da50dc8b9b2fcba76715a933f50',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ryZBqEq5-lVlLzjAMkblxqkq7Q9bQvGWDjbg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 531c5da50dc8b9b2fcba76715a933f50

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6-Zm_FkQxg...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.847 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.179Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:48.331Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:48.331Z","userId":"686c0628ebddf989a6209de3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.956 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.335Z"}
  console.log
    CSRF token generation: {
      sessionID: '19550d4a1ca58428b276d1f0f506c6ba',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uWISGwHs-Cvq_WIUgGb4QflfHQrGcQ8suUjU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 19550d4a1ca58428b276d1f0f506c6ba

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EOxIqbDZDu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.515 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.438Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:48.609Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:48.610Z","userId":"686c0628ebddf989a6209de9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 172.878 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.615Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f595aa775ef95d28db16b923f64b6c5c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: yirYZ2xr-irEAcNjmK6_uR308D10Yw_1K26Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f595aa775ef95d28db16b923f64b6c5c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: HQipJIQPqj...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.816 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.721Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:48.896Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:48.896Z","userId":"686c0628ebddf989a6209def","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 175.555 ms - 606[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0628ebddf989a6209def {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:48.899Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0628ebddf989a6209def {
      sessionID: '531c5da50dc8b9b2fcba76715a933f50',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A531c5da50dc8b9b2fcba76715a933f50.zRLFxsZk7nEet70IZ1Hr5aP1xX0TqsiNhEkIww%2F9ez4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0628ebddf989a6209def [32m200[0m 125.596 ms - 245[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:49.902Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cf624e9bc5e082e5e9c0e55bf346e2da',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: S9SWcmoK-MpJfyYeL3aalKbvHTry-oOgxo_8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cf624e9bc5e082e5e9c0e55bf346e2da

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: B2Ol6-EpAG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.792 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:49.996Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:50.149Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:50.149Z","userId":"686c0629ebddf989a6209e18","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.821 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:50.152Z"}
  console.log
    CSRF token generation: {
      sessionID: '0a727aae0d57b10103ce90e0cc0cd8fa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M3KUCzNv-4e0PADMt2agRmKWf2V7Sr2PiBFo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0a727aae0d57b10103ce90e0cc0cd8fa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: qdD-aSvlG3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.361 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:50.248Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:50.411Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:50.413Z","userId":"686c062aebddf989a6209e1e","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 165.121 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:50.416Z"}
  console.log
    CSRF token generation: {
      sessionID: '6426afe05f857e23058cb646dbe588d7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2zqOil8k-AHMODWYpDUqM0I5cUUNQsgG3yx4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6426afe05f857e23058cb646dbe588d7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 1Tu0xRHIr7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.180 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c062aebddf989a6209e24 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:50.514Z"}
  console.log
    CSRF check for: /api/v1/operators/686c062aebddf989a6209e24 {
      sessionID: '0a727aae0d57b10103ce90e0cc0cd8fa',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0a727aae0d57b10103ce90e0cc0cd8fa.QYNFkmtlyp1nZjXnnYwyIe3sBJ0R%2FuYYzEWcXAjGaBY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/686c062aebddf989a6209e24","targetId":"686c062aebddf989a6209e24","targetType":"operator","timestamp":"2025-07-07T17:38:50.651Z","userId":"686c0629ebddf989a6209e18","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/686c062aebddf989a6209e24 [32m200[0m 139.061 ms - 445[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:51.538Z"}
  console.log
    CSRF token generation: {
      sessionID: '0f219285bcd7f589520d5be16f884123',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WG7LpAo9-zbfnoijJmdDFVsNgTm8j5YrPE40

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0f219285bcd7f589520d5be16f884123

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fjrDiy6K2n...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.569 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:51.765Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:52.050Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:52.051Z","userId":"686c062bebddf989a6209e4a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 285.429 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:52.055Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cc1b10059467dd1fa9dc93a59d970256',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: tHYpOzoG-reAPxvionxzKh1X1B11-x2P3mJc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cc1b10059467dd1fa9dc93a59d970256

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: H7Mrm_phLR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.013 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:52.164Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:52.339Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:52.340Z","userId":"686c062cebddf989a6209e50","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 175.390 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:52.343Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e2e8e28742cfb3bad858d804462e7887',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rqpL1Lny-4aKXgqE6pVxwrx3A1zuiyAiRjnU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e2e8e28742cfb3bad858d804462e7887

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: NrmXCOJFYA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.649 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c062cebddf989a6209e56 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:52.441Z"}
  console.log
    CSRF check for: /api/v1/operators/686c062cebddf989a6209e56 {
      sessionID: 'cc1b10059467dd1fa9dc93a59d970256',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Acc1b10059467dd1fa9dc93a59d970256.pIC%2FGNAVkML7thVQ4QKyjXAJepxq8WqZvXBWfkmeCXI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c062cebddf989a6209e56 [33m409[0m 140.076 ms - 50[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:38:53.048Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:53.506Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a13c84ba066e7827d4915ac0d8618faa',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Fj8eygLM-zS9RvXxa7e1RYvJG1FF2qRGqIYc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a13c84ba066e7827d4915ac0d8618faa

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: DfOumlNLvy...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.260 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:53.605Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:53.759Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:53.759Z","userId":"686c062debddf989a6209e7c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.998 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:53.763Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a35ee4ab8ae6151fb997a69036e1a521',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: M6wbnqKn-w2jY0LwUdvN3HemDLEtPaEZo7P4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a35ee4ab8ae6151fb997a69036e1a521

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 5VOhNH-rTu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.066 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:53.864Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:54.028Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:54.029Z","userId":"686c062debddf989a6209e82","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 164.392 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:54.031Z"}
  console.log
    CSRF token generation: {
      sessionID: '27709a0454d198df79e442ce56ab2844',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: sz4cO75T-NeqmPAbDkV2fuPO1r585vWsv93w

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 27709a0454d198df79e442ce56ab2844

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: rAlts8fkIM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.301 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c062eebddf989a6209e88 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:54.142Z"}
  console.log
    CSRF check for: /api/v1/operators/686c062eebddf989a6209e88 {
      sessionID: 'a35ee4ab8ae6151fb997a69036e1a521',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa35ee4ab8ae6151fb997a69036e1a521.ZrTWWCeOSOQbxck0%2BpEfzmMFNfE0DPR359rtCtlLx6U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"d","11":"d","12":"f","13":"9","14":"8","15":"9","16":"a","17":"6","18":"2","19":"0","2":"6","20":"9","21":"e","22":"7","23":"c","3":"c","4":"0","5":"6","6":"2","7":"d","8":"e","9":"b","timestamp":"2025-07-07T17:38:54.290Z"}
[0mDELETE /api/v1/operators/686c062eebddf989a6209e88 [32m200[0m 148.285 ms - 58[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:38:54.852Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.173Z"}
  console.log
    CSRF token generation: {
      sessionID: '57d44ab1117cb846c7d5726e34b80157',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UJ4b5pfR-qFCuEHc0VUCbUv-mXji5CSyo3Eg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 57d44ab1117cb846c7d5726e34b80157

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: TN9mxm7-CL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.800 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.285Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:55.440Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:55.441Z","userId":"686c062febddf989a6209eaf","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.561 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.444Z"}
  console.log
    CSRF token generation: {
      sessionID: '463e1b1e7b84c4bc1090b3f3f23e906d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AolowEyT-x0tpzF6etEJn6P9pWk4w-9r1JGQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 463e1b1e7b84c4bc1090b3f3f23e906d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Vm-_YyH9Z1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.220 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.550Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:55.707Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:55.708Z","userId":"686c062febddf989a6209eb5","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 158.620 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.713Z"}
  console.log
    CSRF token generation: {
      sessionID: '8e96562f3f9469bf2ed90e0bcc76e773',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: T1S3exZc-NviJOqHXJAUhoN_hrmgQt2GvWCs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8e96562f3f9469bf2ed90e0bcc76e773

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: YIVF8Jowye...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.217 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c062febddf989a6209ebb {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:55.885Z"}
  console.log
    CSRF check for: /api/v1/operators/686c062febddf989a6209ebb {
      sessionID: '463e1b1e7b84c4bc1090b3f3f23e906d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A463e1b1e7b84c4bc1090b3f3f23e906d.ZqjrvWyGa2gpj4WDGnU13Cp1MYDrn1H3rOSOo%2BQZyFY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c062febddf989a6209ebb [33m400[0m 120.489 ms - 71[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:38:56.684Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:57.357Z"}
  console.log
    CSRF token generation: {
      sessionID: '0371f169ec950ce917a87154348de99e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ueH07IcV-McXeia2IobJty9YeAiYJJN1RwqU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0371f169ec950ce917a87154348de99e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fyExgGcm_Z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.976 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:57.456Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:57.650Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:57.651Z","userId":"686c0631ebddf989a6209ee1","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 194.420 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:57.654Z"}
  console.log
    CSRF token generation: {
      sessionID: '1a249af66100aff2e4855a6a5236d6c8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: uYq8a314-WDWlT1oxwNwLuYhs1mh-FlO7bSo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1a249af66100aff2e4855a6a5236d6c8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: UOqAHoiebw...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.287 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:57.773Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:57.937Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:57.938Z","userId":"686c0631ebddf989a6209ee7","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 164.505 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:57.945Z"}
  console.log
    CSRF token generation: {
      sessionID: '873f770d97cc19861cd08e271aec03c7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: A8aWB3v2-rkB9_bDcRQsvzIVJByhoDZXCud4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 873f770d97cc19861cd08e271aec03c7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZFCVTSsJ7S...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.042 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:58.138Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:58.295Z","userType":"administrator","username":"limited3@wavemax.com"}
info: undefined {"adminId":"LIMITED003","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:58.295Z","userId":"686c0632ebddf989a6209eef","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.967 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/operators/686c0631ebddf989a6209eed {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:58.298Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0631ebddf989a6209eed {
      sessionID: '0371f169ec950ce917a87154348de99e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0371f169ec950ce917a87154348de99e.Zzkjcz4NaWVAngodgFfVguKOsZF1d441mOclC%2BHQVAc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c0631ebddf989a6209eed [33m403[0m 56.735 ms - 81[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:38:58.554Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.214Z"}
  console.log
    CSRF token generation: {
      sessionID: '7cff64cc607f0db94b2b24fd2147e484',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O0j46x4Z-kQA_pLNy37EES1vyea1lTBb-H4Y

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7cff64cc607f0db94b2b24fd2147e484

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aJlfgXU3r-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.653 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.317Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:59.472Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:38:59.472Z","userId":"686c0633ebddf989a6209f16","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.557 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.476Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e3f8a1d7d03d8c151bb7e97af9a0ee5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Dyohb4lY-34UavjF_w34hsZQFyfrc20yEYOE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e3f8a1d7d03d8c151bb7e97af9a0ee5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ll2BxC7IsI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.971 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.585Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:38:59.738Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:38:59.738Z","userId":"686c0633ebddf989a6209f1c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.080 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.741Z"}
  console.log
    CSRF token generation: {
      sessionID: '8514f70e144421b78f8f5cd4e8fcb390',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: mHVETvA2-JKLOoBl3VV4zjiGjk-YJuOErh9A

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8514f70e144421b78f8f5cd4e8fcb390

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dRT6i5q7h9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.593 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/686c0633ebddf989a6209f24 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:38:59.834Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0633ebddf989a6209f24 {
      sessionID: '2e3f8a1d7d03d8c151bb7e97af9a0ee5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2e3f8a1d7d03d8c151bb7e97af9a0ee5.r5PGZ5fIWddqKefGxIkPDqfkv3Hx8tHCwTjpmQmZ1Io',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mDELETE /api/v1/operators/686c0633ebddf989a6209f24 [33m404[0m 89.892 ms - 48[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:39:00.511Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:00.814Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a7a81fdb29251097cc47c54cf723efc6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: t9LzZ1ox-H2nM9A0WP6p7WxzQBt964KuaC8U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a7a81fdb29251097cc47c54cf723efc6

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: t0VhYcawpk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.621 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:00.905Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:01.059Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:01.059Z","userId":"686c0634ebddf989a6209f47","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.064 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:01.063Z"}
  console.log
    CSRF token generation: {
      sessionID: '8a2be3d4b71967de359a29ebf92fd285',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: PoOAiL0i-PWONfQLxXt0yFROk6t92iy1tUxs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8a2be3d4b71967de359a29ebf92fd285

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: yXqm2r6dzX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.610 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:01.167Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:01.319Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:01.319Z","userId":"686c0635ebddf989a6209f4d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.971 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:01.324Z"}
  console.log
    CSRF token generation: {
      sessionID: '9ce77f15aa7f546a45ab2e64a256c22e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jUhIMSwo-T1SbJFsg9QL0UJ4kFB5v4JxbicU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9ce77f15aa7f546a45ab2e64a256c22e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0WQdN5RR52...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.222 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686c0635ebddf989a6209f53/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:01.425Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0635ebddf989a6209f53/reset-pin {
      sessionID: '8a2be3d4b71967de359a29ebf92fd285',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8a2be3d4b71967de359a29ebf92fd285.QkEeEkvCQhgUF0kcL08d1OfINwfZwz8Rr6EspCi6GZc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"d","11":"d","12":"f","13":"9","14":"8","15":"9","16":"a","17":"6","18":"2","19":"0","2":"6","20":"9","21":"f","22":"4","23":"7","3":"c","4":"0","5":"6","6":"3","7":"4","8":"e","9":"b","timestamp":"2025-07-07T17:39:01.610Z"}
[0mPOST /api/v1/operators/686c0635ebddf989a6209f53/reset-pin [32m200[0m 187.538 ms - 51[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:01.615Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:01.776Z","userType":"operator","username":"pinreset@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"PIN001","path":"/operator/login","shift":"undefined - undefined","timestamp":"2025-07-07T17:39:01.776Z","userId":"686c0635ebddf989a6209f53","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.983 ms - 555[0m
[31merror[39m: Error in callback pool cleanup job: Client must be connected before running operations {"errorLabelSet":{},"service":"wavemax-affiliate","stack":"MongoNotConnectedError: Client must be connected before running operations\n    at autoConnect (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:135:13)\n    at executeOperation (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/operations/execute_operation.ts:69:25)\n    at Collection.updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongodb/src/collection.ts:420:34)\n    at NativeCollection.<computed> [as updateMany] (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)\n    at model.Query._updateThunk (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4065:37)\n    at model.Query._updateMany (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4114:23)\n    at model.Query.exec (/var/www/wavemax/wavemax-affiliate-program/node_modules/mongoose/lib/query.js:4604:80)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Function.Object.<anonymous>.callbackPoolSchema.statics.releaseExpiredLocks (/var/www/wavemax/wavemax-affiliate-program/server/models/CallbackPool.js:682:30)\n    at Timeout._onTimeout (/var/www/wavemax/wavemax-affiliate-program/server/services/callbackPoolManager.js:1639:35)","timestamp":"2025-07-07T17:39:02.598Z"}
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:02.969Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bf0a0a1545e2698a80eee8d51fac1222',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GWGzszCw-Dk6sp7MZ_5gxKo07jlO_i_-Ugl8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: bf0a0a1545e2698a80eee8d51fac1222

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2G2FHbXWZd...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.600 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:03.116Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:03.326Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:03.326Z","userId":"686c0637ebddf989a6209f7e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 209.980 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:03.329Z"}
  console.log
    CSRF token generation: {
      sessionID: '0a7856ec20f61ed860cfb709d3f760ac',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: V0nD13Ci-NGVWDUdqWBchzWBPOiBC15MQGew

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0a7856ec20f61ed860cfb709d3f760ac

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: VHl8m8FCjt...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.986 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:03.429Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:03.571Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:03.572Z","userId":"686c0637ebddf989a6209f84","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 142.876 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:03.574Z"}
  console.log
    CSRF token generation: {
      sessionID: '50e00affc65b8356dcf9852bf0fcc64a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: A0xdedLX-R-Uj3W6llHOQFHUt_Pa73lb_0hs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 50e00affc65b8356dcf9852bf0fcc64a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hiMklrOPWD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.303 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/686c0637ebddf989a6209f8a/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:03.718Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0637ebddf989a6209f8a/reset-pin {
      sessionID: '0a7856ec20f61ed860cfb709d3f760ac',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0a7856ec20f61ed860cfb709d3f760ac.HweuJqC4pOnLHTumFm76%2FfDKBJY69fO6tvUjGcH4gQ4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

info: undefined {"0":"6","1":"8","10":"d","11":"d","12":"f","13":"9","14":"8","15":"9","16":"a","17":"6","18":"2","19":"0","2":"6","20":"9","21":"f","22":"7","23":"e","3":"c","4":"0","5":"6","6":"3","7":"7","8":"e","9":"b","timestamp":"2025-07-07T17:39:03.892Z"}
[0mPOST /api/v1/operators/686c0637ebddf989a6209f8a/reset-pin [32m200[0m 174.339 ms - 51[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:04.792Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eeebf74932ba6d5966076ae982e8680e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ccL9B3Du-PJyQsaWXViZ2KQweE-BwBHKfCks

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: eeebf74932ba6d5966076ae982e8680e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gZzDtrumiC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.255 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:04.914Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:05.068Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:05.069Z","userId":"686c0638ebddf989a6209fb3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.164 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:05.074Z"}
  console.log
    CSRF token generation: {
      sessionID: '73f82c525182132f1e9de8ecf5f205e8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: BpbyBDhX-pkzviQIIZKvJyRdvQr0dOdUdMHo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 73f82c525182132f1e9de8ecf5f205e8

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _Awivyssn3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.985 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:05.178Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:05.411Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:05.412Z","userId":"686c0639ebddf989a6209fb9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 234.895 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:05.422Z"}
  console.log
    CSRF token generation: {
      sessionID: 'db13e984f3338bdff4859970bd901ce2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EeJxdGBa-EyBO_ROV_tr3KDhPq_nEGdqqOno

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: db13e984f3338bdff4859970bd901ce2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: WWY-8catPW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.371 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:05.806Z"}
[0mGET /api/v1/operators/available [32m200[0m 100.540 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:06.801Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f6e61c6707f403fba15549cc00e734f2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VBQz6KVX-rE45BQevCDq7e0ISy28QbL0VshA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: f6e61c6707f403fba15549cc00e734f2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: JMYMNfGhjF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.255 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:06.907Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:07.096Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:07.097Z","userId":"686c063aebddf989a6209fe9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.038 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:07.100Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a964a87ca4732401053ab6bf02a769cf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iZRroOC1-l_Lp0fZ9wg7l78Z5K0WXSdag1Mg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a964a87ca4732401053ab6bf02a769cf

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: IHwdlJkJvU...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.405 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:07.199Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:07.378Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:07.378Z","userId":"686c063bebddf989a6209fef","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 179.756 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:07.381Z"}
  console.log
    CSRF token generation: {
      sessionID: '7e05a42daecbdff2a3422119b7dcc62c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: VZCqL7Lb-VNAyj7aVpZxStWyFa1zDR5ILFCI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 7e05a42daecbdff2a3422119b7dcc62c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: foc-jrgGex...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.619 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available?limit=2 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:07.659Z"}
[0mGET /api/v1/operators/available?limit=2 [32m200[0m 108.664 ms - 536[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:08.636Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ec6738337def161cf0193760959f04dd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KgV15ECy-Cl69V36JV6yONmnxSaPo91C3rUg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ec6738337def161cf0193760959f04dd

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3esRAqjKRX...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.535 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:08.734Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:08.894Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:08.895Z","userId":"686c063cebddf989a620a01f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.597 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:08.897Z"}
  console.log
    CSRF token generation: {
      sessionID: '6aa61569ab317ab76873f9925f070a9a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iP0jfkMw-27Eyy04ojZ0nPKEFrYt4lR1kZUY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6aa61569ab317ab76873f9925f070a9a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Nrmxb7YN3B...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.637 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:08.994Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:09.153Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:09.153Z","userId":"686c063cebddf989a620a025","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 159.344 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:09.157Z"}
  console.log
    CSRF token generation: {
      sessionID: '815559444b41fbe33077045cde6ce8fe',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: deRM4ytS-JN3GeqyUpcPu1PuYGTfI48n11WE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 815559444b41fbe33077045cde6ce8fe

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 8NivAoy2zI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.189 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:09.449Z"}
[0mGET /api/v1/operators/available [32m200[0m 81.475 ms - 769[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:10.394Z"}
  console.log
    CSRF token generation: {
      sessionID: '5cbd08f3ef47853ee00ca93baf99b830',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EHIZZ6D8-qRCt2uKM4q2RNBxJZXzR_al_8pg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5cbd08f3ef47853ee00ca93baf99b830

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: eS0v9bK2YD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.845 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:10.495Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:10.656Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:10.656Z","userId":"686c063eebddf989a620a055","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.105 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:10.659Z"}
  console.log
    CSRF token generation: {
      sessionID: '8f467312fb6cb5b3f8dc6bc7a7d83f8a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bJKWHvCq-EYlYobb-G7LIpprMFdqyg0QhcHc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8f467312fb6cb5b3f8dc6bc7a7d83f8a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: RNS2qMFB4b...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.787 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:10.755Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:10.936Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:10.937Z","userId":"686c063eebddf989a620a05b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 181.731 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:10.941Z"}
  console.log
    CSRF token generation: {
      sessionID: '5f8b39370edc7c69c5e78c721a18ccc9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: E7CfSzkV-pOk7JgJDPUV1oJRRFGFsCB4g2v4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5f8b39370edc7c69c5e78c721a18ccc9

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: zcvl_sUVXd...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.502 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:11.214Z"}
[0mGET /api/v1/operators/available [33m401[0m 3.465 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.216Z"}
  console.log
    CSRF token generation: {
      sessionID: '690cc3407e5f21fbcae0312322896715',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jtzoR5t3-9RwS3Mdj1t797Kn4x6AxFOjLLsk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 690cc3407e5f21fbcae0312322896715

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Bnva_GZv0Y...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.741 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.343Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:12.512Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:12.513Z","userId":"686c0640ebddf989a620a088","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 169.937 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.517Z"}
  console.log
    CSRF token generation: {
      sessionID: '372542fe40c0017a27911bcc22545335',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: cOyIwTYA-4Ew2oFjj7Sxeae4FBO5jqWDj0O8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 372542fe40c0017a27911bcc22545335

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 518u0bixz9...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.258 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.632Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:12.802Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:12.803Z","userId":"686c0640ebddf989a620a08e","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 170.546 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.806Z"}
  console.log
    CSRF token generation: {
      sessionID: '83700079903c5b9a76587db0c64ad8ea',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Ml5tUJ6h-E1KUz5VQTwecC1Je8nQa12Z1FOo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 83700079903c5b9a76587db0c64ad8ea

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: cjnhUMBK-l...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.369 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0640ebddf989a620a094/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:12.913Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0640ebddf989a620a094/stats {
      sessionID: '372542fe40c0017a27911bcc22545335',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A372542fe40c0017a27911bcc22545335.fhzKOeOjOEh7pWKh2XCf9EWSLkTltU3nkQvdUUKVXv4',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0640ebddf989a620a094/stats [32m200[0m 127.655 ms - 267[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:13.922Z"}
  console.log
    CSRF token generation: {
      sessionID: '298c3be24c7d472f40620a9e8677578d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: kfssWX9t-cq5z_23TeunKjtCqEa-I8hYG9_Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 298c3be24c7d472f40620a9e8677578d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: b_5p1LVjxA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.661 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:14.028Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:14.182Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:14.183Z","userId":"686c0641ebddf989a620a0b9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.102 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:14.186Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a73dbc1519d3602fbf6a75d51fe1c304',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pyDvPRHW-rdRiN90QzmdJpCtEWqHu9lAVLMw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a73dbc1519d3602fbf6a75d51fe1c304

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Yvs4Ky6lOY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.308 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:14.291Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:14.451Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:14.451Z","userId":"686c0642ebddf989a620a0bf","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.556 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:14.455Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd1a197edae237a80502a10cc1c898489',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YPngFqK8-nnGx77s2jJCRrM51qs-Z7LTTV24

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d1a197edae237a80502a10cc1c898489

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ED4RoiZZju...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.566 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0642ebddf989a620a0c5/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:14.552Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0642ebddf989a620a0c5/stats {
      sessionID: 'a73dbc1519d3602fbf6a75d51fe1c304',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa73dbc1519d3602fbf6a75d51fe1c304.AyQJdb%2FRI%2BakUspUST4Kp81yAMZV8rmAkNmlX2XNe8I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0642ebddf989a620a0c5/stats [32m200[0m 121.638 ms - 252[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:15.541Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ed99d43b72b74b939386f99872a0c1c3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fubgDleM-AXQjoWhhOvUFEFuGyYyUouqHH2M

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ed99d43b72b74b939386f99872a0c1c3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: KQpGpsclor...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.638 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:15.638Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:15.790Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:15.790Z","userId":"686c0643ebddf989a620a0ea","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.618 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:15.792Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a680ef18d2918d256f1ef04bd8c692d7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 7Yp6a2oF-tmTXr7ce77XIP3GeRa7Oe3_6PMQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: a680ef18d2918d256f1ef04bd8c692d7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: mtI-3cyLr4...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.545 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:15.931Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:16.088Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:16.088Z","userId":"686c0643ebddf989a620a0f0","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 157.840 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:16.092Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ecb0a06c390a070aed606755785d7b93',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rvAuZXME-0eqxBRQBp2eq8pnTQOGiysHrF1Q

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ecb0a06c390a070aed606755785d7b93

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 7mrzKSfY4T...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.697 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0644ebddf989a620a0f6/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:16.226Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0644ebddf989a620a0f6/stats {
      sessionID: 'a680ef18d2918d256f1ef04bd8c692d7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aa680ef18d2918d256f1ef04bd8c692d7.HhPncnNvFo%2FAMCun%2BeayANuSBqsKXEG5SY%2FFiNeqzNU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0644ebddf989a620a0f6/stats [32m200[0m 134.996 ms - 268[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:17.424Z"}
  console.log
    CSRF token generation: {
      sessionID: '8ba18cc0b645cc4c4c15fc9dc0e8a05c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: iTXDPAOE-FkA9u2qrzylmgGOWjEEI3xD8jOo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8ba18cc0b645cc4c4c15fc9dc0e8a05c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: sdvESK3QRR...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.814 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:17.540Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:17.695Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:17.695Z","userId":"686c0645ebddf989a620a11b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.292 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:17.699Z"}
  console.log
    CSRF token generation: {
      sessionID: '5b1103fd14778eef664b6a68df53ce59',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 2HIicujt-zwHP7NdCG26_iXVBtAnj9Q3ODrc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5b1103fd14778eef664b6a68df53ce59

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: fdlnOFT8MT...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.780 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:17.797Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:17.957Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:17.957Z","userId":"686c0645ebddf989a620a121","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.899 ms - 599[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:17.963Z"}
  console.log
    CSRF token generation: {
      sessionID: '3856ae4626a1422a99a477b36f64ead4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ZxNyIJoa-hy68R1lkxll0XOm2DpeAfGLGRJs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3856ae4626a1422a99a477b36f64ead4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6bAe9o1TN6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.276 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/686c0645ebddf989a620a127/stats {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:18.062Z"}
  console.log
    CSRF check for: /api/v1/operators/686c0645ebddf989a620a127/stats {
      sessionID: '5b1103fd14778eef664b6a68df53ce59',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5b1103fd14778eef664b6a68df53ce59.2FG5fmmLPr%2FoUtPH1Fe%2BbVvyoWOqCA1UEk23I8RAS4Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPATCH /api/v1/operators/686c0645ebddf989a620a127/stats [33m400[0m 69.423 ms - 62[0m
PASS tests/integration/operator.test.js (72.876 s)
  Operator Integration Tests
    GET /api/v1/operators
      ✓ should get all operators with admin token (4115 ms)
      ✓ should filter by active status (1783 ms)
      ✓ should filter by on-shift status (2602 ms)
      ✓ should support pagination (2690 ms)
      ✓ should require authentication (1561 ms)
      ✓ should require operator management permissions (1869 ms)
    GET /api/v1/operators/:id
      ✓ should get operator by ID (1685 ms)
      ✓ should allow operators to view their own profile (2300 ms)
      ✓ should prevent operators from viewing other operators (1564 ms)
      ✓ should return 404 for non-existent operator (1540 ms)
    POST /api/v1/operators
      ✓ should create new operator (2691 ms)
      ✓ should validate required fields (1502 ms)
      ✓ should validate email format (1710 ms)
      ✓ should validate shift time format (1514 ms)
      ✓ should prevent duplicate emails (1593 ms)
      ✓ should require operators.manage permission (1848 ms)
    PATCH /api/v1/operators/:id
      ✓ should update operator details (1718 ms)
      ✓ should update password (2323 ms)
      ✓ should deactivate operator (1853 ms)
      ✓ should allow operators to update their own profile (limited fields) (2071 ms)
      ✓ should prevent operators from changing their own work station (1854 ms)
      ✓ should not allow updating operatorId (1588 ms)
      ✓ should validate email uniqueness on update (2016 ms)
    DELETE /api/v1/operators/:id
      ✓ should delete operator (1667 ms)
      ✓ should prevent deleting operator with active orders (2156 ms)
      ✓ should require operators.manage permission (1882 ms)
      ✓ should handle non-existent operator (1600 ms)
    POST /api/v1/operators/:id/reset-pin
      ✓ should reset operator PIN/password (2079 ms)
      ✓ should clear login attempts on PIN reset (1899 ms)
    GET /api/v1/operators/available
      ✓ should get available operators sorted by order count (2006 ms)
      ✓ should respect limit parameter (1836 ms)
      ✓ should only include active operators (1759 ms)
      ✓ should require authentication (1792 ms)
    PATCH /api/v1/operators/:id/stats
      ✓ should update processing statistics (1734 ms)
      ✓ should update quality score (1610 ms)
      ✓ should update both stats in one call (1864 ms)
      ✓ should validate processingTime is positive (1638 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:20.119Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:20.549Z"}
  console.log
    CSRF token generation: {
      sessionID: '04dfa6f512007c8525d80c9b8b715a9c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lkIwLUEf-0q_lGXySgPqW20aEhQTfOUlQF6o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 04dfa6f512007c8525d80c9b8b715a9c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: F1JXldXQpf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.173 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:22.538Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:22.708Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 171.797 ms - 544[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:23.910Z"}
  console.log
    CSRF token generation: {
      sessionID: '3a6ebd9fffdffad6924cd04d9dbea297',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MD8kT72d-wb3CQTuzWrfjVlvYKXj3xjkD9Dc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3a6ebd9fffdffad6924cd04d9dbea297

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: AXCQvtHBuN...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.668 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:24.155Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T17:39:24.253Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 97.412 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:25.050Z"}
  console.log
    CSRF token generation: {
      sessionID: '2e7cd72be5ea5c097f49343dbe120c48',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KSkIBZck-6Yn7L2UANUmXBoMjSloyZPiThOQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2e7cd72be5ea5c097f49343dbe120c48

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: C3L17sex4I...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.078 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:25.209Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"User not found","success":false,"timestamp":"2025-07-07T17:39:25.236Z","userType":"affiliate","username":"nonexistent"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 28.069 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:25.992Z"}
  console.log
    CSRF token generation: {
      sessionID: '58f2ee49328e1c408bdda652c2fd4444',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UFqhy2qq-5tjg6_PW0U81HLdblj_bXv4jpMI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 58f2ee49328e1c408bdda652c2fd4444

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: C-NkA9rYPW...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.223 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:26.257Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 156.621 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:27.181Z"}
  console.log
    CSRF token generation: {
      sessionID: '370f9892abd71d7800f9948a6c4d1ba4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: dppSkth7-3zbLTLG3--ReyrYyVv3NsrjR_SI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 370f9892abd71d7800f9948a6c4d1ba4

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: LNTtIrla1G...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.700 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:28.614Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 350.285 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:29.823Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b9eebd465bef9d983e44d8470dd700f7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gIhBRLbj-FF4i2aAbhDk8WYBzWtOzbJ8PBiw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b9eebd465bef9d983e44d8470dd700f7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3Y6g9BQ-Lx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.567 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:30.114Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 153.793 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:31.085Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cf5d8bb783e8438b1852dd8cd42c54c3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: A9RI18DG-Hjm2yJYWboh94TLyv3ACdrwNO9o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cf5d8bb783e8438b1852dd8cd42c54c3

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: G_Ns3prQRu...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.785 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:31.373Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:628:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:629:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:630:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:663:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 176.501 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:32.395Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fd19950bf0417e004b532d16445b4344',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: nSxbNVZf-lgr4GSnvtb2ChoJ68OII0QqoulY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fd19950bf0417e004b532d16445b4344

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: GWT5fSVmR0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.942 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:32.576Z"}
[0mPOST /api/v1/auth/customer/login [33m401[0m 34.028 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:33.473Z"}
  console.log
    CSRF token generation: {
      sessionID: 'abe5d3372c44ccfc1d015184f3b570fe',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: r1xHqmvG-O0H68YH9dOjohAbldrbBt04Qhtg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: abe5d3372c44ccfc1d015184f3b570fe

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 6zGSjqK8S1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 11.827 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:33.836Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:34.007Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 171.772 ms - 544[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:34.011Z"}
[0mGET /api/v1/auth/verify [32m200[0m 32.265 ms - 129[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:34.831Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c9f3262c3038da298276f3d8a0a9c403',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: W8jWPvgV-MeAPV_-XhK8xrd4vn9CjIfbEbaA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c9f3262c3038da298276f3d8a0a9c403

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bm5s-2YHwf...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.744 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:34.973Z"}
[0mGET /api/v1/auth/verify [33m401[0m 2.208 ms - 43[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:35.702Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e758617dfe889cf582e8022e8c5cf7cb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: bSEcg7FE-ggEwujSkMEUZ-H2QMZHaRurk6WI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e758617dfe889cf582e8022e8c5cf7cb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: dDurRZB5C-...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.027 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:35.853Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.654 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:36.617Z"}
  console.log
    CSRF token generation: {
      sessionID: '28efc508e8972d9ce8ef3fb25f0f279a',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 782NAPL4-Xrkajks_2NItRVt6SFCZu6-qSZY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 28efc508e8972d9ce8ef3fb25f0f279a

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3G6Ob6L_nV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.318 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:36.864Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:37.019Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 153.943 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:37.024Z"}
[0mPOST /api/v1/auth/refresh-token [32m200[0m 138.906 ms - 409[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:38.113Z"}
  console.log
    CSRF token generation: {
      sessionID: '635798a487805127abe44191101e4e3d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rMyj0aRD-6OSe318T8HDgRnl1ROYeRZIxqUE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 635798a487805127abe44191101e4e3d

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: ZybukWzFzz...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 4.788 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:38.255Z"}
[0mPOST /api/v1/auth/refresh-token [33m400[0m 2.414 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:39.027Z"}
  console.log
    CSRF token generation: {
      sessionID: '6cd3920e8460691c97131de13ac12870',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: QrZKdxJM-jiyfU1Rz-V8PVh-K7U-KYQfvWpQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6cd3920e8460691c97131de13ac12870

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: onTJTEM7Ad...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.253 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:39.387Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.394 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:40.209Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c50ab39b1b5161ca805ddd4cf477c89f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: KMm0fmt8-9KyKEbSRWusE_BqTKjpcvWNYGic

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c50ab39b1b5161ca805ddd4cf477c89f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: d42mDzDi3I...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.966 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:40.466Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:40.622Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 156.187 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:40.628Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'c50ab39b1b5161ca805ddd4cf477c89f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac50ab39b1b5161ca805ddd4cf477c89f.iMsD5YvKQ%2BAuiLvKOcvgCQD%2F9z5veqH5evGi7JHbjoU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 99.219 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:40.732Z"}
[0mGET /api/v1/auth/verify [33m401[0m 29.924 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:40.765Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 29.506 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:41.580Z"}
  console.log
    CSRF token generation: {
      sessionID: '6148708391ffa958ce2d279372c75563',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: AmgQ6YZC-qTjnLSk5AFuhAZIHlFtjezGPScY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6148708391ffa958ce2d279372c75563

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: c4ibNUi6TG...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.411 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:41.895Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:42.470Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 574.439 ms - 544[0m
  console.log
    Got refresh token: cb7f852c3448fbff66be145d2c1dc9fc51155c00a9b390635b99195ea352ab503fb4c2f9721429f0

      at Object.log (tests/integration/auth.test.js:805:15)

  console.log
    Starting concurrent requests...

      at Object.log (tests/integration/auth.test.js:819:15)

[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:42.484Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:42.487Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:42.489Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:42.490Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:42.491Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 125.184 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 121.051 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 124.802 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 147.306 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [32m200[0m 267.516 ms - 409[0m
  console.log
    Responses received: [
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 200,
        body: {
          success: true,
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NmMwNjVkMTdlZGI4MTlmYTNjYzFhZSIsImFmZmlsaWF0ZUlkIjoiQUZGMTIzIiwicm9sZSI6ImFmZmlsaWF0ZSIsImlhdCI6MTc1MTkwOTk4MiwiZXhwIjoxNzUxOTEzNTgyLCJhdWQiOiJ3YXZlbWF4LWNsaWVudCIsImlzcyI6IndhdmVtYXgtYXBpIn0.JwKCDQQVDmt_q5DhV4sv4yOMMWgm45DKFNN3grtJp44',
          refreshToken: '2e4bf1f88027929360a4cab7525ccba3b804a6842ada9777fb2493cf21622bd74d3008c7951a2265'
        }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      }
    ]

      at Object.log (tests/integration/auth.test.js:821:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:43.993Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ae2efcef68f8e1cbdc3c05838eee8cb1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EafkGagb-d0rV0OWnj9cplEDjy_YOyJINhZU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ae2efcef68f8e1cbdc3c05838eee8cb1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: OgFw3WMhHA...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.315 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:44.286Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:44.439Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 151.409 ms - 547[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.544Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:45.711Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 166.905 ms - 547[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.716Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.361 ms - 129[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.749Z"}
[0mGET /api/v1/auth/verify [32m200[0m 27.720 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.780Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'ae2efcef68f8e1cbdc3c05838eee8cb1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aae2efcef68f8e1cbdc3c05838eee8cb1.rfL3dSU6u48JE8trCGx%2FDmVhcy0TJTpFzp%2BgtjvYKZo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 109.076 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.892Z"}
[0mGET /api/v1/auth/verify [33m401[0m 30.547 ms - 56[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.927Z"}
[0mGET /api/v1/auth/verify [32m200[0m 30.462 ms - 129[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:45.963Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'ae2efcef68f8e1cbdc3c05838eee8cb1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aae2efcef68f8e1cbdc3c05838eee8cb1.rfL3dSU6u48JE8trCGx%2FDmVhcy0TJTpFzp%2BgtjvYKZo',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/auth/logout [32m200[0m 104.339 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:46.072Z"}
[0mGET /api/v1/auth/verify [33m401[0m 29.661 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:46.904Z"}
  console.log
    CSRF token generation: {
      sessionID: '6c7efd55266d747e30d0fd8059c41b26',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: gIy9TtFf-C3eqs1PPwezGEbdEKYGHaw4Q8F8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6c7efd55266d747e30d0fd8059c41b26

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: PH4jqMBbDq...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.699 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:47.131Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:47.292Z","userType":"administrator","username":"admin@example.com"}
info: undefined {"adminId":"ADM001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-07-07T17:39:47.292Z","userId":"686c066317edb819fa3cc216","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.660 ms - 684[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:48.108Z"}
  console.log
    CSRF token generation: {
      sessionID: '72000a0f9932a0d51b40d465989aec15',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eysLrUeC-ti-FuSw8-pVKsqQ28JLZ_jcZCYM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 72000a0f9932a0d51b40d465989aec15

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oVRdKyiUAF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.473 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:48.352Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T17:39:48.480Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 128.420 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:50.264Z"}
  console.log
    CSRF token generation: {
      sessionID: '6154dd24d3e6a6943b54c86af44d93ed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: T0MnJDTc--s4ZVGaly4gcprlm8Z12vS6sOhQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6154dd24d3e6a6943b54c86af44d93ed

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: SD8xeuhg28...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.472 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:50.519Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T17:39:50.551Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 31.489 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:51.334Z"}
  console.log
    CSRF token generation: {
      sessionID: '878e926c97295200b688de21fc756139',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: fFj693zT-pd-NCiPSfQg_1hah26N3nOqCjcQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 878e926c97295200b688de21fc756139

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _lFz-HMx6H...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.072 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:51.693Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-07-07T17:39:51.899Z","userType":"operator","username":"operator@example.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-07-07T17:39:51.900Z","userId":"686c066717edb819fa3cc288","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 205.960 ms - 593[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:52.712Z"}
  console.log
    CSRF token generation: {
      sessionID: '737e159f7bd77dca2531056d00e59f17',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Bdw8uNYS-t66kxbmZAKksFxK9tFFaRBhhewk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 737e159f7bd77dca2531056d00e59f17

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 10rZ8txme_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.374 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:53.110Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Invalid password","success":false,"timestamp":"2025-07-07T17:39:53.230Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m401[0m 119.605 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:54.081Z"}
  console.log
    CSRF token generation: {
      sessionID: '688beb6a7121290b3907c611b4f9f327',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hsjOlcKT-gTd7oqndds7CckBgTijcGjV-TDk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 688beb6a7121290b3907c611b4f9f327

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: EUeKE4zFbY...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.023 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:54.435Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-07-07T17:39:54.464Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 29.424 ms - 82[0m
PASS tests/integration/auth.test.js (36.051 s)
  Authentication Integration Tests
    POST /api/v1/auth/affiliate/login
      ✓ should login affiliate with valid credentials (3379 ms)
      ✓ should fail with invalid credentials (1140 ms)
      ✓ should fail with non-existent username (942 ms)
    POST /api/v1/auth/customer/login
      ✓ should login customer with valid credentials (1189 ms)
      ✓ should login customer using emailOrUsername field with email (2642 ms)
      ✓ should login customer using emailOrUsername field with username (1263 ms)
      ✓ should prioritize emailOrUsername over username field (1309 ms)
      ✓ should return error with invalid emailOrUsername (1077 ms)
    GET /api/v1/auth/verify
      ✓ should verify valid token (1358 ms)
      ✓ should fail with invalid token (871 ms)
      ✓ should fail with missing token (914 ms)
    POST /api/v1/auth/refresh-token
      ✓ should refresh token successfully (1497 ms)
      ✓ should fail with invalid refresh token (914 ms)
      ✓ should fail with expired refresh token (1181 ms)
    POST /api/v1/auth/logout
      ✓ should logout successfully and blacklist tokens (1371 ms)
    Rate limiting tests
      ○ skipped should rate limit login attempts
      ○ skipped should rate limit refresh token requests
    Concurrent refresh token usage
      ✓ should handle concurrent refresh token requests safely (2412 ms)
    Token blacklisting after logout
      ✓ should blacklist all active tokens on logout (2911 ms)
    POST /api/v1/auth/administrator/login
      ✓ should login administrator with valid credentials (1204 ms)
      ✓ should fail with invalid administrator credentials (2155 ms)
      ✓ should fail when administrator is inactive (1070 ms)
    POST /api/v1/auth/operator/login
      ✓ should login operator with valid credentials (1374 ms)
      ✓ should fail with invalid operator credentials (1373 ms)
      ✓ should fail when operator is inactive (1169 ms)

[32minfo[39m: Test payment form enabled and available at /test-payment {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:56.374Z"}
  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:41:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:56.759Z"}
  console.log
    CSRF token generation: {
      sessionID: '3bbde69d3ea61d2ce3a79dd775230478',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: N0m9gkVd-fcw0JVwwHwCzAqU4w218cYAV_r8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3bbde69d3ea61d2ce3a79dd775230478

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3coLXOnBrC...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.941 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:39:58.233Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '3bbde69d3ea61d2ce3a79dd775230478',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3bbde69d3ea61d2ce3a79dd775230478.QFT49u76Nr14v5wVMczxscVxnBwJzGV6TvyzWUh4JAg',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD505014
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD505014
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> Ring doorbell
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 525.398 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:02.380Z"}
  console.log
    CSRF token generation: {
      sessionID: '502a3a0f7c413addc94c12ec984953dc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: lG4IGmE3-Ps9tfQYQJglSzjCan-5kxFJE154

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 502a3a0f7c413addc94c12ec984953dc

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: h2VinM9Rb3...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.353 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:02.856Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '502a3a0f7c413addc94c12ec984953dc',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A502a3a0f7c413addc94c12ec984953dc.yIw2E2v80w1uusikhm8d9D2Zxc21tTjMuZ0EOM0PvGQ',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD427499
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $43.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD427499
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 252.855 ms - 125[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:03.869Z"}
  console.log
    CSRF token generation: {
      sessionID: '6dbc780a9a6d01e64bd1852a9e226d7f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YN558Fin-52Hl95wVUF5y2pV-XsJXT_TzDaE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6dbc780a9a6d01e64bd1852a9e226d7f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: logum52ccK...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.281 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:04.148Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '6dbc780a9a6d01e64bd1852a9e226d7f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6dbc780a9a6d01e64bd1852a9e226d7f.B10vArkEIMDVfLizAeVtwWOhCsPBT6Zb5KoBZldkNdw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'INVALID',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: INVALID

      at log (server/controllers/orderController.js:126:13)

  console.log
    Customer not found with ID: INVALID

      at log (server/controllers/orderController.js:130:15)

[0mPOST /api/v1/orders [33m400[0m 79.366 ms - 49[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:05.153Z"}
  console.log
    CSRF token generation: {
      sessionID: '29c53d5b4c5fff48967aa1d119f21ada',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MUuQFPOb-JBwPWL9joL7SoIgQMYBYveYcK64

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 29c53d5b4c5fff48967aa1d119f21ada

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: aQE0WATRNv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.553 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:05.452Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '29c53d5b4c5fff48967aa1d119f21ada',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A29c53d5b4c5fff48967aa1d119f21ada.pPC4Xamc%2BtGc1rNGEWCJLuPwGugcL7WTAedlsMl1v6E',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'INVALID',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: INVALID

      at log (server/controllers/orderController.js:155:13)

  console.log
    Affiliate not found with ID: INVALID

      at log (server/controllers/orderController.js:159:15)

[0mPOST /api/v1/orders [33m400[0m 117.624 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:06.386Z"}
  console.log
    CSRF token generation: {
      sessionID: '6f4196401608e82c6d2b4a6ece6e1bcb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: UmNgJgkl-2q3FSKdwfK2DHIiKWJ1kCqSvEvc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 6f4196401608e82c6d2b4a6ece6e1bcb

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: _aQ-1lZE8s...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.674 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:06.763Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '6f4196401608e82c6d2b4a6ece6e1bcb',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6f4196401608e82c6d2b4a6ece6e1bcb.V9YuticLt6Lrf7UDDA2uG5x72Pfjk6Gjw5tDC4kcYbI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST999',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST999

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Bob Jones

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

[0mPOST /api/v1/orders [33m403[0m 277.692 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:08.578Z"}
  console.log
    CSRF token generation: {
      sessionID: '99358d45fc12badbe72916eac1f2aba2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 3fCd1gF4-oeedWuUXeOPprJIc4iCM8WtLiYo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 99358d45fc12badbe72916eac1f2aba2

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: -JmyuV2FTM...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.553 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:08.875Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '99358d45fc12badbe72916eac1f2aba2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A99358d45fc12badbe72916eac1f2aba2.3oY5%2FiquseS%2FWpcQ3VzB%2Bput2E4FB5lBA%2FyHvcOKSTU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Validation errors: [
      {
        type: 'field',
        value: undefined,
        msg: 'Valid pickup date is required',
        path: 'pickupDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid pickup time',
        path: 'pickupTime',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Number of bags must be at least 1',
        path: 'numberOfBags',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Estimated weight must be a positive number',
        path: 'estimatedWeight',
        location: 'body'
      }
    ]

      at log (server/controllers/orderController.js:105:15)

[0mPOST /api/v1/orders [33m400[0m 32.313 ms - 444[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:10.301Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c2ceeb39bce26c61b6b39d3e0d3ae1be',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 6unoXhvs-AQbt48jnR0juq5QKm8ai1cXd2EA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: c2ceeb39bce26c61b6b39d3e0d3ae1be

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 0ejXIdNycn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.566 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:11.385Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 210.948 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:12.588Z"}
  console.log
    CSRF token generation: {
      sessionID: 'febe881cba62cfe9442236463b7f4a7e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: h2ahKxzB-UsE5fi9uY3d60KDn5-Oal6jAy4o

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: febe881cba62cfe9442236463b7f4a7e

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: r3n2e6NJYv...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.970 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:12.926Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 113.100 ms - 670[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:13.824Z"}
  console.log
    CSRF token generation: {
      sessionID: 'db1cd5ae709af787208fb45427765639',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 5v6IUvGh-tqhm7SLeCLg-9m4H1ZnXzVsDsoE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: db1cd5ae709af787208fb45427765639

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Leo-wEiQTx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.909 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:14.134Z"}
[0mGET /api/v1/orders/ORD123456 [33m403[0m 55.670 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:14.967Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aecdcc47415e5beb0d79e1333b1962db',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: i0oP0NFn-DVHHS1lr_tKUYqxwg0gClzbfH34

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: aecdcc47415e5beb0d79e1333b1962db

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xIA-PGdACV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.904 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/NONEXISTENT {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:15.291Z"}
[0mGET /api/v1/orders/NONEXISTENT [33m404[0m 54.313 ms - 45[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:16.118Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cb738bfbf96d15412e63daf098defb48',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: GzdT52DR-XMR4huVDl68rIhx7y-44MGePeBg

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: cb738bfbf96d15412e63daf098defb48

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jDnVx3i-Vn...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.352 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:16.428Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'cb738bfbf96d15412e63daf098defb48',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Acb738bfbf96d15412e63daf098defb48.328WNkiz7IJBrVo4UC6owqG9FTSZHiBq654z35iwlNU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Laundry Processing

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry has been received and is being processed
                    </div>
                    
                    
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 176.417 ms - 131[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:17.516Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dc2000d573857feaccb71dfdc7d1f611',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: ddnOFJ3i-ReLeqrg54JJQi1iCn63VAIDY4Wo

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dc2000d573857feaccb71dfdc7d1f611

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: e1QxuWCAS7...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.896 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:17.897Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'dc2000d573857feaccb71dfdc7d1f611',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adc2000d573857feaccb71dfdc7d1f611.rHiNjK3Mrs5KYUWk3iSuAmxeyx57JFfLWdOHjQg2780',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-status, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Update: Ready for Pickup

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Status Update</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .status-update { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #2196f3; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Status Update</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>We have an update on your laundry order!</p>
                
                <div class="status-update">
                    <h2 style="color: #1976d2; margin-bottom: 15px;">Status Update</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row" style="font-size: 18px; color: #1976d2;">
                        <span class="detail-label">Status:</span> Your laundry is ready for pickup by the affiliate
                    </div>
                    <div class="detail-row"><span class="detail-label">Weight:</span> 25.5 lbs</div>
                    <div class="detail-row"><span class="detail-label">Final Total:</span> $48.20</div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Order Details</a>
                </p>
                
                <p>Thank you for choosing WaveMAX Laundry!</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 151.391 ms - 172[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:18.970Z"}
  console.log
    CSRF token generation: {
      sessionID: '0f35e5ebca4c6cfc85000af81c4e7154',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: rV3vpmc9-PjIBvaV2BZSyyRiiy0EOevVV8hI

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0f35e5ebca4c6cfc85000af81c4e7154

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: vHfNE6dd5_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.194 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:19.347Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '0f35e5ebca4c6cfc85000af81c4e7154',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0f35e5ebca4c6cfc85000af81c4e7154.jT37q%2Fm6GHxw4b3%2FiGx6n0MRqnEpmFWmq21DHlQ1lFE',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m400[0m 57.527 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:20.211Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd4f6d75b82455c8e25bfecfd01540ec5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: pHfxn5Ra-2tNHft0NA7a-ZTvIsPvB3jT4Xa8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: d4f6d75b82455c8e25bfecfd01540ec5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 14yswKijKk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 13.328 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:20.545Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'd4f6d75b82455c8e25bfecfd01540ec5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ad4f6d75b82455c8e25bfecfd01540ec5.02fw04xOpHfZMPQQRTcZuSpi3aAz3%2Fa1jWU9vJkqCNY',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 60.459 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:21.476Z"}
  console.log
    CSRF token generation: {
      sessionID: '548306043ee539b1ccfd53c5dbf6a45f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 79PPhZ0o-a7Gzx6n3LPXIZXEJwmT85_EeqOs

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 548306043ee539b1ccfd53c5dbf6a45f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: W3RnIaYMuH...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 30.569 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:21.807Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '548306043ee539b1ccfd53c5dbf6a45f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A548306043ee539b1ccfd53c5dbf6a45f.VuKs7wdjDM%2Bao13URkJSjzc4%2BPFx8dW2zLkBLZs43Mw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 58.177 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:22.688Z"}
  console.log
    CSRF token generation: {
      sessionID: '4106cb455af3d34d098fab0696e8d31b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EhJmT4N2-x7NKHQl4JRtRTbwWnodhTM__gD4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 4106cb455af3d34d098fab0696e8d31b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2nl2Zfc6OL...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.734 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:23.008Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '4106cb455af3d34d098fab0696e8d31b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4106cb455af3d34d098fab0696e8d31b.Ff6W%2BwcF3tUeM3qOpqqPdY80jL7bKDY6oVTUo8bmfBI',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 5:40:23 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 5:40:23 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 171.291 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:23.961Z"}
  console.log
    CSRF token generation: {
      sessionID: '17a22e2e6a8da84b9927a2eaa702e93c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: EJcU7nSK-wTmz2S5CHltWgz9jaGfIZpiROho

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 17a22e2e6a8da84b9927a2eaa702e93c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3L0jbl-OuS...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.475 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:24.299Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '17a22e2e6a8da84b9927a2eaa702e93c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A17a22e2e6a8da84b9927a2eaa702e93c.T4fXOeIz9QKwSu6JEAWtt9smploiu1xKrIKCLR9FmNA',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Language-specific template not found for en/customer-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Order Has Been Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Order Has Been Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Your laundry pickup order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 5:40:24 PM
                    </div>
                </div>
                
                <p>If you'd like to schedule a new pickup, you can do so at any time:</p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer&pickup=true" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Schedule New Pickup</a>
                </p>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" style="color: #3b82f6;">View Your Dashboard</a>
                </p>
                
                <p>We're sorry for any inconvenience. If you have any questions, please contact your affiliate partner.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-order-cancelled, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Order Cancelled

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Cancelled</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #dc2626; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .cancellation-details { background-color: #fee2e2; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #f87171; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Order Cancelled</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>We wanted to inform you that an order has been cancelled.</p>
                
                <div class="cancellation-details">
                    <h2 style="color: #dc2626; margin-bottom: 15px;">Cancellation Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD123456
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Original Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Cancelled At:</span> 5:40:24 PM
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View Dashboard</a>
                </p>
                
                <p>Please do not proceed with this pickup. The customer may reschedule at a later time.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 158.609 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:25.247Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dbee91a42f300023802e61efea5ed958',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: aCfWnXs9-MGoG505YonQL_AddBsIWApq9WsQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: dbee91a42f300023802e61efea5ed958

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: xej65OV2rF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.498 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:25.693Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'dbee91a42f300023802e61efea5ed958',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adbee91a42f300023802e61efea5ed958.5Jnn5S61yqzXqNkY0o8YNS48yK2Io9B9brVm2RYi70I',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m400[0m 78.647 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:26.651Z"}
  console.log
    CSRF token generation: {
      sessionID: '3af2d22d1b2a7e7546892172454c7d0f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: Vkr2elmx-pQZhCfcvjA0wjLscpM2kxpD7UTk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3af2d22d1b2a7e7546892172454c7d0f

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: XtSC2M-hwV...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 35.733 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:26.991Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '3af2d22d1b2a7e7546892172454c7d0f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3af2d22d1b2a7e7546892172454c7d0f.t45soDSS2OWD0a6rrYp7Q%2FST8D9odPDnQDpp1gPu1Pc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m403[0m 55.701 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:27.861Z"}
  console.log
    CSRF token generation: {
      sessionID: '3553f54989154957c32a4dcd0c1266c0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: D4KcwqCb-w8rzjPkL7uyRMPp0Vyx-dZwVrkE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 3553f54989154957c32a4dcd0c1266c0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: H6nICYmF6Z...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.050 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:28.196Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '3553f54989154957c32a4dcd0c1266c0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3553f54989154957c32a4dcd0c1266c0.0A4bbPQiPHXHTqu%2BMwnSnL8HrvZrc%2B3b8gr9P3Drupk',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 167.959 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:29.182Z"}
  console.log
    CSRF token generation: {
      sessionID: '1b1af450c03ccc30b9d039ea425ccef0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: 8Or3OWvY-ck9s-JlvoDiN47qxtEwpOfL2mf8

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 1b1af450c03ccc30b9d039ea425ccef0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hRjjBT0Hib...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.692 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:29.540Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '1b1af450c03ccc30b9d039ea425ccef0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A1b1af450c03ccc30b9d039ea425ccef0.JPR1XcF1xw9PEHSTebnuefG1w6ukdqVud8Hpnq7%2BeMU',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 129.520 ms - 296[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:30.729Z"}
  console.log
    CSRF token generation: {
      sessionID: '14a761b89f414316a603d4cbc802eb2c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: jHmnwwEV-wYd4za0vdMncI3m-_zCQwyZ-C1w

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 14a761b89f414316a603d4cbc802eb2c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 2nsD7-Wm3E...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.650 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/bulk/cancel {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:31.071Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/cancel {
      sessionID: '14a761b89f414316a603d4cbc802eb2c',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A14a761b89f414316a603d4cbc802eb2c.VthSgnNOyGfRK%2Fm%2BAaqkkHrdWhIq24a1s49ZBuifnwc',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPOST /api/v1/orders/bulk/cancel [32m200[0m 158.328 ms - 161[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:32.045Z"}
  console.log
    CSRF token generation: {
      sessionID: '0253beb32e720fe299f11ddee8f68945',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: SDUWPOxe-b8hxFWTeozFkPaSCXi8DMaAG0GA

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 0253beb32e720fe299f11ddee8f68945

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: BqLZO2_7o0...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.220 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:32.374Z"}
[0mGET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 [32m200[0m 96.141 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:33.288Z"}
  console.log
    CSRF token generation: {
      sessionID: '91e63d9fa5b4d2ffd2f44e788ba07627',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: INJAHcTT-PK142Qy07JN0GpUnrhVZayiArZk

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 91e63d9fa5b4d2ffd2f44e788ba07627

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: thwDlKG9dF...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.256 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:33.619Z"}
[0mGET /api/v1/orders/export?format=json&status=complete&affiliateId=AFF123 [32m200[0m 82.163 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:34.482Z"}
  console.log
    CSRF token generation: {
      sessionID: '9ddd9d88d77b55d489f39e2df5568ad1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: W3WYt6Jk-KXbqWg4UEUjqtMmfB6iEUfS6zf4

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9ddd9d88d77b55d489f39e2df5568ad1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: H_l-a4eOXo...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.078 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=excel&customerId=CUST123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:34.855Z"}
[0mGET /api/v1/orders/export?format=excel&customerId=CUST123 [31m501[0m 98.237 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:35.978Z"}
  console.log
    CSRF token generation: {
      sessionID: 'b60873b72b086085dd88584049e0c0d5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: WCkeEz6d-cgqWZP7A2AuxFSjtKDcf3jOJS1U

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: b60873b72b086085dd88584049e0c0d5

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: okFLkDVzSh...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 10.956 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:36.606Z"}
[0mGET /api/v1/orders/export?format=csv [33m403[0m 61.863 ms - 70[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:37.637Z"}
  console.log
    CSRF token generation: {
      sessionID: 'e7be2aa09a30b9d2b67cc00883ed6453',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: FGc7xE4S-F6I2YIl728ZXw3e5EtA3JYzzjIE

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: e7be2aa09a30b9d2b67cc00883ed6453

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: bYQSAZP3Fs...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.602 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:37.942Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'e7be2aa09a30b9d2b67cc00883ed6453',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ae7be2aa09a30b9d2b67cc00883ed6453.U66DxysEPXkHOQ%2B4OGy3L3Y5tWOxRhDR6DqXxwy1KlM',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 110.156 ms - 223[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:38.845Z"}
  console.log
    CSRF token generation: {
      sessionID: '9981f62c3318c5a8fb268fd8fdc5819b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: b3GPQsFB-iJ0z5L_XV0cNF2mcAFl4kP3L0OM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 9981f62c3318c5a8fb268fd8fdc5819b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: jsZOb2Mr1S...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.014 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:39.157Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '9981f62c3318c5a8fb268fd8fdc5819b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9981f62c3318c5a8fb268fd8fdc5819b.UmYRp1KrEdlg%2B6uE0GmbOOdDw%2BO8WcQrNlXx%2Flb%2FqXs',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 100.116 ms - 180[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:40.352Z"}
  console.log
    CSRF token generation: {
      sessionID: '2908253e1837e6e342dfe942e4ce5b92',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: XWHkaWPi-3gDXCdhqW94vqk8qRBfevbsVoco

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 2908253e1837e6e342dfe942e4ce5b92

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: d2gLJmDllx...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 28.673 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:40.897Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '2908253e1837e6e342dfe942e4ce5b92',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2908253e1837e6e342dfe942e4ce5b92.95IyEY3qSAz6cay4nKKsg%2ByV7VNPFxZVMyCT7pu8T7U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [33m400[0m 58.249 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:41.931Z"}
  console.log
    CSRF token generation: {
      sessionID: '87c5f9aa24de013c8326e2ddc74b44c7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: hR4Xdmam-1_QKhTBxV9PpS9cMBfvBF-dc14k

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 87c5f9aa24de013c8326e2ddc74b44c7

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 9lFocUgFKI...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 7.322 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:42.329Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: '87c5f9aa24de013c8326e2ddc74b44c7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A87c5f9aa24de013c8326e2ddc74b44c7.%2FwYW0J9O3CY2%2BNUxNfBfDTznjRXUFXNKGzZ7lXB94Uw',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 93.251 ms - 319[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:43.466Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fdef2ed314ee1898f25956be86371740',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: MOPoJbbe-GJ_9febE026M8DLJAgJWv55c8x0

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: fdef2ed314ee1898f25956be86371740

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4o1QayOLyD...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 8.165 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/search?search=alice&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:43.844Z"}
[0mGET /api/v1/orders/search?search=alice&affiliateId=AFF123 [32m200[0m 141.874 ms - 552[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:44.859Z"}
  console.log
    CSRF token generation: {
      sessionID: '5fbbad7e42cc9cfbb0a2daccbb539110',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: YmcTRhlH-kTTEKhvq6oRQpflJWH4ndP9WkKc

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 5fbbad7e42cc9cfbb0a2daccbb539110

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: gSVFqhRixP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.451 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=complete&date=month {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:45.231Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=complete&date=month [32m200[0m 133.794 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:46.164Z"}
  console.log
    CSRF token generation: {
      sessionID: '29ea27fb9d45dbe52fe4a21689c308ad',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: szGehCHK-RGtZjknRzPFHnc_cLW85svfQuEM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 29ea27fb9d45dbe52fe4a21689c308ad

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 4qTBmQyJ8E...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.733 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=all {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:46.690Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=all [32m200[0m 110.652 ms - 945[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:47.657Z"}
  console.log
    CSRF token generation: {
      sessionID: '60d90911b9b36d429b16b19298b8623c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eMYxS2JI-SrlQY7lm0AqEgkG7o4AJvC_jTPw

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 60d90911b9b36d429b16b19298b8623c

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Jc6zkFL-A_...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.677 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:48.039Z"}
[0mGET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true [32m200[0m 55.554 ms - 239[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:48.908Z"}
  console.log
    CSRF token generation: {
      sessionID: '8e5a9000e3cd9ba8208b99e1de1dfd8b',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: HmMgH5da-no37KuRb002kqUU0Ed2_WAGI8ZY

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 8e5a9000e3cd9ba8208b99e1de1dfd8b

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: oiyiP2IXaP...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 5.827 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:50.884Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '8e5a9000e3cd9ba8208b99e1de1dfd8b',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8e5a9000e3cd9ba8208b99e1de1dfd8b.rIF2oNm%2F6uDsl8zXvpC%2FwSWymESDhjV2dB5UuAFCP5U',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD918234
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD918234
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 287.117 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:52.078Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ab79198f0d7f7b6e2db3a99d7ddccdc1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: O8Nr9nG2-H8WR60y9Ye1nTLbkimF2dcbGHwM

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ab79198f0d7f7b6e2db3a99d7ddccdc1

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: 3oJhd7_PJk...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 18.339 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:52.985Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'ab79198f0d7f7b6e2db3a99d7ddccdc1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aab79198f0d7f7b6e2db3a99d7ddccdc1.97%2F1WgERRqNuTX%2F%2FhV5DkhZrZSFrOM9Ql%2FJt3V228%2F0',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 50,
      numberOfBags: 3
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD174217
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $125.00
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD174217
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 50 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 3
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 269.462 ms - 123[0m
  console.log
    Order baseRate: 2 Expected: 2.00

      at Object.log (tests/integration/order.test.js:1139:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:54.687Z"}
  console.log
    CSRF token generation: {
      sessionID: '45f3f71145ccc4a2e4d799ab614d4b85',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: l884Imn5-ucQO7s7OHOPqaqNLPP9JOxbCrbQ

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: 45f3f71145ccc4a2e4d799ab614d4b85

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: Kwhfxx1dU1...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 9.386 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:55.986Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '45f3f71145ccc4a2e4d799ab614d4b85',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A45f3f71145ccc4a2e4d799ab614d4b85.otJq4YcINiGfDCI24rl30qqrVwhEd2BjyjtbWI5GH0Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-0',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-0

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test0 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test0@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test0,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD534451
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD534451
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test0 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 534.481 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:56.711Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '45f3f71145ccc4a2e4d799ab614d4b85',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A45f3f71145ccc4a2e4d799ab614d4b85.otJq4YcINiGfDCI24rl30qqrVwhEd2BjyjtbWI5GH0Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-1',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-1

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test1 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test1@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test1,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD548275
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD548275
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test1 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 479.191 ms - 124[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:57.276Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '45f3f71145ccc4a2e4d799ab614d4b85',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A45f3f71145ccc4a2e4d799ab614d4b85.otJq4YcINiGfDCI24rl30qqrVwhEd2BjyjtbWI5GH0Y',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST-COMM-2',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST-COMM-2

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Test2 Customer

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: test2@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Test2,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD362600
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $62.50
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD362600
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Test2 Customer
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-0123
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 123 Test St, Austin, TX 78701
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/25/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 30 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 2
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 243.116 ms - 124[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:58.494Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ae8bddf40a3e6f4b4cb2e24ce71146f0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:301:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:318:13)

  console.log
    Token: eRDAPe5j-iY_-tDeJ-OJ7KXsWrJussdgjDDU

      at log (server/config/csrf-config.js:319:13)

  console.log
    Session ID: ae8bddf40a3e6f4b4cb2e24ce71146f0

      at log (server/config/csrf-config.js:320:13)

  console.log
    CSRF Secret: hn_TEJOnZ6...

      at log (server/config/csrf-config.js:321:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:322:13)

[0mGET /api/csrf-token [32m200[0m 6.207 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-07-07T17:40:59.292Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'ae8bddf40a3e6f4b4cb2e24ce71146f0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aae8bddf40a3e6f4b4cb2e24ce71146f0.g%2FWRrHCrpv7wIvy835d1mIVDEfmqhOMe675zdxWUI1A',
      hasCsrfSecret: true,
      hasAuth: true,
      origin: undefined,
      referer: undefined,
      userAgent: undefined
    }

      at log (server/config/csrf-config.js:230:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1
    }

      at log (server/controllers/orderController.js:113:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:126:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:136:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:155:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:165:13)

  console.log
    Language-specific template not found for en/customer-order-confirmation, using default

      at log (server/utils/emailService.js:55:15)

  console.warn
    Email template placeholder [DELIVERY_DATE] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.warn
    Email template placeholder [DELIVERY_TIME] not found in data

      112 |     } else {
      113 |       // If not found, return empty string for cleaner emails
    > 114 |       console.warn(`Email template placeholder [${placeholder}] not found in data`);
          |               ^
      115 |       return '';
      116 |     }
      117 |   });

      at warn (server/utils/emailService.js:114:15)
          at String.replace (<anonymous>)
      at replace (server/utils/emailService.js:100:19)
      at Object.fillTemplate [as sendCustomerOrderConfirmationEmail] (server/utils/emailService.js:1232:18)
      at Object.<anonymous>.exports.createOrder (server/controllers/orderController.js:230:7)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: jane@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: Your Laundry Pickup Confirmation

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Your Laundry Pickup Confirmation</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
            .affiliate-info { background-color: #e3f2fd; padding: 15px; margin: 15px 0; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Your Laundry Pickup is Confirmed!</h1>
            </div>
            <div class="content">
                <p>Hello Jane,</p>
                
                <p>Thank you for scheduling your laundry pickup with WaveMAX Laundry. Your order has been confirmed and your affiliate partner has been notified.</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Summary</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD605393
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Date:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Delivery Time:</span> 
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Total:</span> $68.75
                    </div>
                </div>
                
                <div class="affiliate-info">
                    <h3 style="margin-top: 0;">Your Affiliate Partner</h3>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span> John Doe
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-123-4567
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span> john@example.com
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=customer" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">Login to View Your Order</a>
                </p>
                
                <p><strong>What happens next?</strong></p>
                <ul><li>Your affiliate partner will arrive during your selected pickup window</li><li>Please have your laundry ready in bags</li><li>You'll receive updates as your order progresses</li><li>Final pricing will be based on the actual weight of your laundry</li></ul>
                
                <p>If you need to make any changes to your order, please contact your affiliate partner directly.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

  console.log
    Language-specific template not found for en/affiliate-new-order, using default

      at log (server/utils/emailService.js:55:15)

  console.log
    === EMAIL CONSOLE LOG ===

      at Object.log [as sendMail] (server/utils/emailService.js:17:17)

  console.log
    From: "WaveMAX Laundry" <test@wavemax.promo>

      at Object.log [as sendMail] (server/utils/emailService.js:18:17)

  console.log
    To: john@example.com

      at Object.log [as sendMail] (server/utils/emailService.js:19:17)

  console.log
    Subject: New Laundry Pickup Order

      at Object.log [as sendMail] (server/utils/emailService.js:20:17)

  console.log
    HTML: <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Laundry Pickup Order</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #1e3a8a; color: #ffffff !important; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
            .content { background-color: #f9f9f9; padding: 20px; border: 1px solid #ddd; }
            .order-details { background-color: #ffffff !important; padding: 15px; margin: 15px 0; border-radius: 5px; border: 1px solid #e0e0e0; }
            .footer { background-color: #f5f5f5; padding: 15px; text-align: center; font-size: 12px; border-radius: 0 0 5px 5px; }
            .button { display: inline-block; padding: 12px 30px; background-color: #ffffff !important; color: #ffffff !important; text-decoration: none !important; border-radius: 5px; margin: 15px 0; }
            .detail-row { margin: 10px 0; }
            .detail-label { font-weight: bold; color: #555; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>New Laundry Pickup Order</h1>
            </div>
            <div class="content">
                <p>Hello John,</p>
                
                <p>You have a new laundry pickup order to process!</p>
                
                <div class="order-details">
                    <h2 style="color: #1e3a8a; margin-bottom: 15px;">Order Details</h2>
                    <div class="detail-row">
                        <span class="detail-label">Order ID:</span> ORD605393
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer:</span> Jane Smith
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span> 555-987-6543
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Address:</span> 456 Oak Ave, Austin, TX 78702
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Date:</span> 5/26/2025
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Pickup Time:</span> Morning (8am - 12pm)
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Estimated Weight:</span> 15 lbs
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Number of Bags:</span> 1
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Special Instructions:</span> None
                    </div>
                </div>
                
                <p style="text-align: center;">
                    <a href="https://www.wavemaxlaundry.com/austin-tx/wavemax-austin-affiliate-program?login=affiliate" class="button" style="display: inline-block; background-color: #1e3a8a !important; color: #ffffff !important; padding: 12px 20px; text-decoration: none !important; border-radius: 4px; font-weight: bold; text-align: center;">View in Dashboard</a>
                </p>
                
                <p>Please ensure you pick up the laundry during the specified time window. The customer will be expecting you.</p>
                
                <p>Best regards,<br>The WaveMAX Laundry Team</p>
            </div>
            <div class="footer">
                <p>&copy; 2025 CRHS Enterprises, LLC. All rights reserved.</p>
                <p>This is an automated message. Please do not reply to this email.</p>
            </div>
        </div>
    </body>
    </html>

      at Object.log [as sendMail] (server/utils/emailService.js:21:17)

  console.log
    =========================

      at Object.log [as sendMail] (server/utils/emailService.js:22:17)

  console.log
    Email sent: console-message-id

      at log (server/utils/emailService.js:135:13)

[0mPOST /api/v1/orders [32m201[0m 782.636 ms - 125[0m
PASS tests/integration/order.test.js (66.172 s)
  Order Integration Tests
    POST /api/v1/orders
      ✓ should create order as customer (5636 ms)
      ✓ should create order as affiliate for their customer (1489 ms)
      ✓ should fail with invalid customer ID (1285 ms)
      ✓ should fail with invalid affiliate ID (1231 ms)
      ✓ should fail when customer tries to create order for another customer (2192 ms)
      ✓ should validate required fields (1723 ms)
    GET /api/v1/orders/:orderId
      ✓ should return order details for customer (2287 ms)
      ✓ should return order details for affiliate (1236 ms)
      ✓ should fail for unauthorized customer (1142 ms)
      ✓ should return 404 for non-existent order (1151 ms)
    PUT /api/v1/orders/:orderId/status
      ✓ should update order status as affiliate (1397 ms)
      ✓ should update weight when processing (1453 ms)
      ✓ should prevent invalid status transitions (1241 ms)
      ✓ should fail for unauthorized affiliate (1265 ms)
      ✓ should fail for customers (1210 ms)
    POST /api/v1/orders/:orderId/cancel
      ✓ should cancel order as customer (1273 ms)
      ✓ should cancel order as affiliate (1284 ms)
      ✓ should prevent cancelling non-cancellable orders (1405 ms)
      ✓ should fail for unauthorized user (1210 ms)
    Bulk order operations
      ✓ should update multiple orders status in bulk (1320 ms)
      ✓ should handle partial bulk update failures (1547 ms)
      ✓ should cancel multiple orders in bulk (1315 ms)
    Order export functionality
      ✓ should export orders as CSV (1243 ms)
      ✓ should export orders as JSON (1193 ms)
      ✓ should export orders as Excel (1497 ms)
      ✓ should respect export permissions (1658 ms)
    Payment status updates
      ✓ should update payment status (1208 ms)
      ✓ should handle payment failure (1506 ms)
      ✓ should prevent payment status update on non-complete orders (1579 ms)
      ✓ should record refund (1534 ms)
    Order filtering and search
      ✓ should search orders by customer name (1393 ms)
      ✓ should filter orders by multiple criteria (1305 ms)
      ✓ should filter by pickup time slots (1494 ms)
      ✓ should provide aggregated statistics with filters (1250 ms)
    Commission Calculation Tests
      ✓ should calculate commission correctly when order is completed (3170 ms)
      ✓ should use dynamic WDF rate from SystemConfig (2609 ms)
      ✓ should calculate commission for multiple orders (3807 ms)
      ✓ should handle high delivery fee scenarios (3074 ms)

-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                                                                                                                                                                                                         
-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                    |    88.3 |    78.61 |   92.08 |   88.36 |                                                                                                                                                                                                                                                                                                                                                           
 config                      |   96.68 |    87.17 |     100 |   96.53 |                                                                                                                                                                                                                                                                                                                                                           
  csrf-config.js             |    86.2 |    72.72 |     100 |    86.2 | 245-269,279-280,295,310-311                                                                                                                                                                                                                                                                                                                               
  passport-config.js         |     100 |    86.66 |     100 |     100 | 19,210,225,250-251,304,330-331                                                                                                                                                                                                                                                                                                                            
  paygistix.config.js        |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  storeIPs.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 controllers                 |   86.39 |    77.43 |   92.46 |    86.6 |                                                                                                                                                                                                                                                                                                                                                           
  administratorController.js |   89.35 |       84 |   85.96 |   89.77 | 208,225,332,405,453-454,471,481,506,586-587,674-692,726,786-787,870,928-929,989-990,1212-1221,1383-1384,1650-1651,1710,1752,1763-1764,1795-1796,1836-1837,1846-1847,1981-1995,2020,2227,2295-2296,2419-2420                                                                                                                                               
  affiliateController.js     |   86.51 |    79.01 |   96.96 |   86.24 | 207,217,248-250,284-285,302,312,327,386-387,439-440,445,505-506,529,560-563,578,667,725-726,742,825-826,861,943-944,953-986                                                                                                                                                                                                                               
  authController.js          |   74.95 |    62.03 |     100 |   74.95 | 143-144,156,189-194,198,228-229,247-248,292-301,353-354,375,461-462,477-478,486-487,516-517,567-568,615-616,666-667,682,694-699,734-742,750-751,766,790-801,817,820,842-843,868,909,933,943,953-954,1011-1028,1104-1132,1160,1284-1341,1353,1486,1533-1534,1550,1604,1635-1665,1794,1883-1914,2036,2072-2110,2122,2158,2172-2173,2185,2198,2255,2304-2305 
  customerController.js      |   91.52 |    83.85 |     100 |    91.3 | 135,214-215,234,247,270-286,296-297,316,329,341,343,345,379-380                                                                                                                                                                                                                                                                                           
  operatorController.js      |   83.78 |     75.1 |   76.31 |   85.02 | 560,634,711,727,744-745,826,922-923,1022,1049,1058-1072,1090-1166,1192,1275-1369                                                                                                                                                                                                                                                                          
  orderController.js         |   89.63 |    83.18 |     100 |   89.82 | 145-146,341-342,361,429-430,498-499,524,534,587-592,603-604,619,629,642,655-660,683-684,823,869,886,928-929,949-951,956,969,1064,1126-1127                                                                                                                                                                                                                
  paymentController.js       |   94.84 |    80.85 |     100 |   94.84 | 192-193,212,249-250                                                                                                                                                                                                                                                                                                                                       
  quickbooksController.js    |   94.73 |    81.81 |     100 |   94.35 | 269-270,332,408-409,438-439                                                                                                                                                                                                                                                                                                                               
  w9ControllerDocuSign.js    |   93.96 |    84.78 |     100 |   93.96 | 207,222,280,285-286,334-336,421-422,475,676                                                                                                                                                                                                                                                                                                               
 middleware                  |   89.01 |    81.92 |   89.36 |   88.52 |                                                                                                                                                                                                                                                                                                                                                           
  auth.js                    |   86.07 |    90.62 |     100 |   86.07 | 57-90                                                                                                                                                                                                                                                                                                                                                     
  cspNonce.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  errorHandler.js            |    72.3 |    63.26 |     100 |    72.3 | 10,81-96,102-103                                                                                                                                                                                                                                                                                                                                          
  rateLimiting.js            |   66.66 |       24 |    37.5 |   65.51 | 24-33,117,135,166,183,190-200                                                                                                                                                                                                                                                                                                                             
  rbac.js                    |     100 |    95.45 |     100 |     100 | 248,268,274,301                                                                                                                                                                                                                                                                                                                                           
  sanitization.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 models                      |   93.88 |    86.11 |   96.39 |    94.1 |                                                                                                                                                                                                                                                                                                                                                           
  Administrator.js           |   85.89 |    72.22 |   94.11 |   87.67 | 137-159                                                                                                                                                                                                                                                                                                                                                   
  Affiliate.js               |   83.72 |    70.45 |     100 |   83.72 | 89,201-204,213,217                                                                                                                                                                                                                                                                                                                                        
  CallbackPool.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Customer.js                |     100 |       50 |     100 |     100 | 30-36                                                                                                                                                                                                                                                                                                                                                     
  DocuSignToken.js           |   86.36 |    81.81 |     100 |   86.36 | 101,126-127                                                                                                                                                                                                                                                                                                                                               
  OAuthSession.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Operator.js                |   91.66 |    85.36 |   89.47 |   91.48 | 168,179,199-207                                                                                                                                                                                                                                                                                                                                           
  Order.js                   |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Payment.js                 |   88.09 |    55.55 |   88.88 |   88.09 | 237-245                                                                                                                                                                                                                                                                                                                                                   
  PaymentExport.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  PaymentMethod.js           |   96.96 |    95.65 |     100 |   96.92 | 229,233                                                                                                                                                                                                                                                                                                                                                   
  PaymentToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  RefreshToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  SystemConfig.js            |     100 |     98.3 |     100 |     100 | 70                                                                                                                                                                                                                                                                                                                                                        
  TokenBlacklist.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  Transaction.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 routes                      |   84.52 |    75.26 |   67.21 |   84.49 |                                                                                                                                                                                                                                                                                                                                                           
  administratorRoutes.js     |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  affiliateRoutes.js         |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  authRoutes.js              |   91.66 |    83.33 |      75 |   91.66 | 66,189-190                                                                                                                                                                                                                                                                                                                                                
  coverageRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  customerRoutes.js          |   95.83 |    83.33 |     100 |   95.83 | 43                                                                                                                                                                                                                                                                                                                                                        
  docsRoutes.js              |   34.61 |        0 |       0 |   34.61 | 10-45                                                                                                                                                                                                                                                                                                                                                     
  embedRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  generalPaymentCallback.js  |   93.02 |    95.83 |     100 |   93.02 | 45-46,82-83,303-304                                                                                                                                                                                                                                                                                                                                       
  monitoringRoutes.js        |      40 |      100 |       0 |      40 | 9-11,19-115,128                                                                                                                                                                                                                                                                                                                                           
  operatorRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  orderRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  paymentCallbackRoute.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  paymentRoutes.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  quickbooksRoutes.js        |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  routingRoutes.js           |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  socialAuthRoutes.js        |   83.05 |       80 |   69.23 |   83.05 | 50-51,86-91,103,120-125,159                                                                                                                                                                                                                                                                                                                               
  systemConfigRoutes.js      |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  testRoutes.js              |   20.63 |        0 |       0 |   20.63 | 11-14,21-31,37-109,115-167,173-183                                                                                                                                                                                                                                                                                                                        
  w9Routes.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 services                    |   91.07 |    76.36 |     100 |   90.99 |                                                                                                                                                                                                                                                                                                                                                           
  callbackPoolManager.js     |   94.44 |    61.11 |     100 |   94.44 | 13-17                                                                                                                                                                                                                                                                                                                                                     
  docusignService.js         |      90 |    79.34 |     100 |   89.88 | 67-75,172,231-232,265,360,453-454,509-510,572-573,595-596,625-626                                                                                                                                                                                                                                                                                         
 services/paygistix          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  index.js                   |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
 utils                       |   91.11 |    74.78 |   97.75 |   91.04 |                                                                                                                                                                                                                                                                                                                                                           
  auditLogger.js             |     100 |    97.14 |     100 |     100 | 101                                                                                                                                                                                                                                                                                                                                                       
  cspHelper.js               |   66.66 |       50 |     100 |   65.51 | 15-42,56-57,77-78                                                                                                                                                                                                                                                                                                                                         
  emailService.js            |   91.48 |    62.81 |   96.42 |   91.48 | 334,482,617,843,870,1103-1104,1249,1409,1523,1550,1672,1699,1822,1938,2084-2088,2096-2104                                                                                                                                                                                                                                                                 
  encryption.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  fieldFilter.js             |   85.71 |    72.41 |     100 |   87.71 | 146,207-212                                                                                                                                                                                                                                                                                                                                               
  helpers.js                 |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  logger.js                  |     100 |       50 |     100 |     100 | 11-30                                                                                                                                                                                                                                                                                                                                                     
  paginationMiddleware.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
  passwordValidator.js       |   90.83 |    89.71 |     100 |   89.81 | 141-145,193,231-232,234-235,246-247                                                                                                                                                                                                                                                                                                                       
  qrCodeGenerator.js         |   28.57 |        0 |       0 |   28.57 | 11-17                                                                                                                                                                                                                                                                                                                                                     
  validators.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                           
-----------------------------|---------|----------|---------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for branches (80%) not met: 78.61%
Summary of all failing tests
FAIL tests/unit/customerDashboardWdfCredit.test.js (17.062 s)
  ● Customer Dashboard WDF Credit Display › Dashboard Stats with WDF Credit › should show zero WDF credit for new customers

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      121 |       const responseData = JSON.parse(res._getData());
      122 |       
    > 123 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      124 |         amount: 0,
      125 |         updatedAt: null,
      126 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:123:48)

  ● Customer Dashboard WDF Credit Display › Edge Cases › should handle null WDF credit fields gracefully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 0

      Object {
        "amount": 0,
    -   "fromOrderId": null,
    -   "updatedAt": null,
      }

      314 |       const responseData = JSON.parse(res._getData());
      315 |       
    > 316 |       expect(responseData.dashboard.wdfCredit).toEqual({
          |                                                ^
      317 |         amount: 0,
      318 |         updatedAt: null,
      319 |         fromOrderId: null

      at Object.toEqual (tests/unit/customerDashboardWdfCredit.test.js:316:48)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

FAIL tests/unit/coverageRoutes.test.js
  ● Coverage Routes › Edge Cases › should handle root path without trailing slash

    expected 301 "Moved Permanently", got 200 "OK"

      314 |       const response = await request(app)
      315 |         .get('/coverage')
    > 316 |         .expect(301); // Redirect to /coverage/
          |          ^
      317 |
      318 |       expect(response.headers.location).toBe('/coverage/');
      319 |     });

      at Object.expect (tests/unit/coverageRoutes.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/wdfCredit.test.js (8.6 s)
  ● WDF Credit System › WDF Credit Application › should apply positive WDF credit to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      224 |
      225 |       // Check response
    > 226 |       expect(res.statusCode).toBe(201);
          |                              ^
      227 |       const responseData = JSON.parse(res._getData());
      228 |       expect(responseData.success).toBe(true);
      229 |       expect(responseData.wdfCreditApplied).toBe(10.00);

      at Object.toBe (tests/unit/wdfCredit.test.js:226:30)

  ● WDF Credit System › WDF Credit Application › should apply negative WDF credit (debit) to new order

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 400

      266 |
      267 |       // Check response
    > 268 |       expect(res.statusCode).toBe(201);
          |                              ^
      269 |       const responseData = JSON.parse(res._getData());
      270 |       expect(responseData.wdfCreditApplied).toBe(-5.00);
      271 |

      at Object.toBe (tests/unit/wdfCredit.test.js:268:30)

  ● WDF Credit System › WDF Credit Application › should not apply credit if customer has zero credit

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      305 |       // Verify no credit was applied
      306 |       const responseData = JSON.parse(res._getData());
    > 307 |       expect(responseData.wdfCreditApplied).toBe(0);
          |                                             ^
      308 |
      309 |       const newOrder = await Order.findOne({ orderId: responseData.orderId });
      310 |       expect(newOrder.wdfCreditApplied).toBe(0);

      at Object.toBe (tests/unit/wdfCredit.test.js:307:45)

  ● WDF Credit System › Edge Cases › should handle concurrent bag weighing correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      436 |       // Verify final state
      437 |       const updatedOrder = await Order.findOne({ orderId: order.orderId });
    > 438 |       expect(updatedOrder.bagsWeighed).toBe(2);
          |                                        ^
      439 |       expect(updatedOrder.actualWeight).toBe(45);
      440 |       expect(updatedOrder.wdfCreditGenerated).toBe(6.25); // (45-40) * 1.25
      441 |     });

      at Object.toBe (tests/unit/wdfCredit.test.js:438:40)


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)

FAIL tests/unit/bagTracking.test.js
  ● Bag Tracking System › scanProcessed › should update bag status to processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -     "weight": 5,
    -   },
    -   "message": "Bag 1 marked as processed",
    -   "order": Any<Object>,
    -   "orderProgress": Object {
    -     "bagsCompleted": 0,
    -     "bagsProcessed": 1,
    -     "bagsWeighed": 2,
    -     "totalBags": 2,
    -   },
    -   "success": true,
    +   "error": "Failed to scan processed bag",
    +   "message": "Cannot set properties of undefined (setting 'processed')",
    +   "success": false,
      },

    Number of calls: 1

      294 |       await operatorController.scanProcessed(req, res);
      295 |
    > 296 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      297 |         success: true,
      298 |         order: expect.any(Object),
      299 |         bag: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:296:24)

  ● Bag Tracking System › scanProcessed › should show warning for already processed bag

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "bag": ObjectContaining {
    -     "bagId": "bag-001",
    -     "bagNumber": 1,
    -     "status": "processed",
    -   },
    -   "message": "This bag has already been processed. 1 bags still need processing.",
    -   "remainingCount": 1,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
        "success": false,
    -   "warning": "duplicate_scan",
      },

    Number of calls: 1

      357 |       await operatorController.scanProcessed(req, res);
      358 |
    > 359 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      360 |         success: false,
      361 |         warning: 'duplicate_scan',
      362 |         message: 'This bag has already been processed. 1 bags still need processing.',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:359:24)

  ● Bag Tracking System › scanProcessed › should trigger completion actions when all bags processed

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "action": "show_pickup_modal",
    -   "allBagsProcessed": true,
    -   "message": "All bags processed - ready for pickup",
    -   "order": ObjectContaining {
    -     "status": "processed",
    -   },
    -   "success": true,
    +   "error": "Bag not found",
    +   "message": "This bag is not associated with any active order",
    +   "success": false,
      },

    Number of calls: 1

      433 |       await operatorController.scanProcessed(req, res);
      434 |
    > 435 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      436 |         success: true,
      437 |         action: 'show_pickup_modal',
      438 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:435:24)

  ● Bag Tracking System › completePickup › should complete order when all bags scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "message": "Order pickup completed successfully",
    -   "order": ObjectContaining {
    -     "bags": ArrayContaining [
    -       ObjectContaining {
    -         "bagId": "bag-001",
    -         "status": "completed",
    -       },
    -       ObjectContaining {
    -         "bagId": "bag-002",
    -         "status": "completed",
    -       },
    -     ],
    -     "status": "complete",
    -   },
    -   "success": true,
    +   "error": "Order not found",
    +   "success": false,
      },

    Number of calls: 1

      506 |       await operatorController.completePickup(req, res);
      507 |
    > 508 |       expect(res.json).toHaveBeenCalledWith({
          |                        ^
      509 |         success: true,
      510 |         message: 'Order pickup completed successfully',
      511 |         order: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:508:24)

  ● Bag Tracking System › completePickup › should reject if bag count mismatch

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      567 |       await operatorController.completePickup(req, res);
      568 |
    > 569 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      570 |       expect(res.json).toHaveBeenCalledWith({
      571 |         success: false,
      572 |         error: 'Bag count mismatch',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:569:26)

  ● Bag Tracking System › completePickup › should reject if wrong bag scanned

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 400
    Received: 404

    Number of calls: 1

      617 |       await operatorController.completePickup(req, res);
      618 |
    > 619 |       expect(res.status).toHaveBeenCalledWith(400);
          |                          ^
      620 |       expect(res.json).toHaveBeenCalledWith({
      621 |         success: false,
      622 |         error: 'Invalid bag',

      at Object.toHaveBeenCalledWith (tests/unit/bagTracking.test.js:619:26)

FAIL tests/integration/wdfCreditIntegration.test.js (9.989 s)
  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should complete full credit cycle: create order → weigh bags → generate credit → apply to next order

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › End-to-End WDF Credit Flow › should handle debit scenario when actual weight is less than estimated

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit fields in customer profile

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › API Response Validation › should include WDF credit in order search results

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should handle order not found error when weighing bags

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Error Handling › should prevent duplicate bag weighing

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9

  ● WDF Credit System Integration Tests › Concurrent Operations › should handle concurrent credit updates correctly

    ValidationError: Operator validation failed: createdBy: Path `createdBy` is required., password: Path `password` is required., username: Path `username` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3343:32)
      at node_modules/mongoose/lib/document.js:3104:17
      at node_modules/mongoose/lib/schemaType.js:1407:9


  ● Test suite failed to run

    MongoNotConnectedError: Client must be connected before running operations

      64 |     const collections = mongoose.connection.collections;
      65 |     for (const key in collections) {
    > 66 |       await collections[key].deleteMany({});
         |                              ^
      67 |     }
      68 |   }
      69 |   await mongoose.disconnect();

      at autoConnect (node_modules/mongodb/src/operations/execute_operation.ts:135:13)
      at executeOperation (node_modules/mongodb/src/operations/execute_operation.ts:69:25)
      at Collection.deleteMany (node_modules/mongodb/src/collection.ts:457:34)
      at NativeCollection.<computed> [as deleteMany] (node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
      at Object.deleteMany (tests/setup.js:66:30)


Test Suites: 5 failed, 100 passed, 105 total
Tests:       20 failed, 4 skipped, 2095 passed, 2119 total
Snapshots:   0 total
Time:        699.25 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
