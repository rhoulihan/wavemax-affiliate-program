
> wavemax-affiliate-program@1.0.0 test
> jest --runInBand --forceExit --coverage --coverageReporters=text --coverageReporters=lcov --coverageReporters=json-summary

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/logger.test.js
  Logger Utility
    ✓ should export logger methods (882 ms)
    ✓ should be a winston logger instance (17 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/encryption.test.js
  Encryption Utility
    ✓ should hash password correctly (57 ms)
    ✓ should verify password correctly (162 ms)
    ✓ should encrypt and decrypt data correctly (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/paginationMiddleware.test.js
  Pagination Middleware
    ✓ should set default pagination values when no query params provided (2 ms)
    ✓ should parse page and limit from query params
    ✓ should enforce minimum values (1 ms)
    ✓ should enforce maximum limit (1 ms)
    ✓ should handle non-numeric values
    ✓ should calculate skip correctly for different pages (1 ms)
    ✓ should handle floating point numbers (1 ms)
    ✓ should preserve other query parameters (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportGoogleOnly.test.js
  Google OAuth Passport Configuration - Isolated
    ✓ should handle Google OAuth callback correctly (1 ms)
    ✓ should configure Google strategy with correct parameters (1 ms)
    ✓ should support state parameter for context detection

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportFacebookOnly.test.js
  Facebook OAuth Passport Configuration - Isolated
    ✓ should handle Facebook OAuth callback correctly (1 ms)
    ✓ should configure Facebook strategy with profile fields
    ✓ should configure Facebook strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportLinkedInOnly.test.js
  LinkedIn OAuth Passport Configuration - Isolated
    ✓ should handle LinkedIn OAuth callback correctly (1 ms)
    ✓ should configure LinkedIn strategy with correct scope (1 ms)
    ✓ should configure LinkedIn strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/affiliateLoginInit.test.js
  Affiliate Login Initialization
    Module Loading
      ✓ should initialize when form is found (4 ms)
      ✓ should handle missing form gracefully (1 ms)
    URL Parameter Handling Logic
      ✓ should correctly parse customer parameter from URL
      ✓ should handle URL without customer parameter (1 ms)
      ✓ should construct redirect URL correctly with customer parameter
      ✓ should construct redirect URL correctly without customer parameter
    URL Validation
      ✓ should validate customer ID format
      ✓ should handle URL encoding correctly
    Integration with Email URLs
      ✓ should parse email-generated URLs correctly (1 ms)
      ✓ should handle both login and customer parameters together (1 ms)
    Parameter Preservation Logic
      ✓ should preserve customer parameter through login flow
      ✓ should handle multiple URL parameters correctly

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/administratorEmailService.test.js
  Administrator Email Service Tests
    sendAdministratorWelcomeEmail
      ✓ should call sendAdministratorWelcomeEmail function (1 ms)
      ✓ should handle admin with different permission sets (1 ms)
      ✓ should handle admin with single permission
      ✓ should handle admin with no permissions
    sendAdministratorPasswordResetEmail
      ✓ should call sendAdministratorPasswordResetEmail function (1 ms)
      ✓ should handle different reset URLs
    Email template data processing
      ✓ should replace uppercase placeholders correctly
      ✓ should handle missing placeholders gracefully (1 ms)
      ✓ should include current year in template data
      ✓ should format permissions correctly as comma-separated string
      ✓ should handle empty permissions array
      ✓ should handle single permission (1 ms)
    Email service integration
      ✓ should be available as a module export
      ✓ should not throw error when sending welcome email
      ✓ should not throw error when sending password reset email
    Admin data validation
      ✓ should handle admin with required fields (1 ms)
      ✓ should handle admin with different adminId formats
      ✓ should handle admin with different email formats

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/authMiddleware.test.js
  Auth Middleware
    authenticate
      ✓ should authenticate valid Bearer token (357 ms)
      ✓ should authenticate valid x-auth-token header (254 ms)
      ✓ should reject request with no token (239 ms)
      ✓ should reject request with invalid token (211 ms)
      ✓ should reject request with expired token (207 ms)
      ✓ should handle malformed Authorization header (210 ms)
      ✓ should reject blacklisted token (210 ms)
    authorize
      ✓ should authorize user with correct role (208 ms)
      ✓ should authorize user with one of multiple roles (221 ms)
      ✓ should reject user with incorrect role (209 ms)
      ✓ should reject user with no role (204 ms)
      ✓ should reject when user is not set (211 ms)
    authLimiter
      ✓ should be a function (204 ms)
      ✓ should have rate limit configuration (206 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/createAdminDirectly.test.js
  Create Admin Directly Script Unit Tests
    generateAdminId function
      ✓ should generate ADM001 when no administrators exist (2 ms)
      ✓ should generate next sequential ID when administrators exist
      ✓ should handle double-digit admin IDs correctly (1 ms)
    Permission selection
      ✓ should handle "all" permission selection
      ✓ should handle specific permission selection (1 ms)
      ✓ should filter out invalid permission numbers
    Database operations
      ✓ should connect to MongoDB successfully
      ✓ should create administrator with correct data (1 ms)
      ✓ should handle database save errors (1 ms)
    Email functionality
      ✓ should send welcome email after admin creation
      ✓ should handle email sending errors gracefully
    Input validation
      ✓ should handle empty input fields
      ✓ should handle whitespace in permission input (1 ms)
    Error handling
      ✓ should handle MongoDB connection errors
      ✓ should close database connection in finally block
      ✓ should close readline interface in finally block (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"127.0.0.1","reason":null,"success":true,"timestamp":"2025-06-06T15:01:28.255Z","userAgent":"User-Agent","userType":"affiliate","username":"testaffiliate"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"127.0.0.1","reason":"User not found","success":false,"timestamp":"2025-06-06T15:01:28.520Z","userAgent":"User-Agent","userType":"affiliate","username":"nonexistent"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"127.0.0.1","reason":"Invalid password","success":false,"timestamp":"2025-06-06T15:01:28.734Z","userAgent":"User-Agent","userType":"affiliate","username":"testaffiliate"}
  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:466:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:467:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:468:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:501:13)

  console.error
    Token verification error: Error: User data not found in request
        at Object.<anonymous>.exports.verifyToken (/var/www/wavemax/wavemax-affiliate-program/server/controllers/authController.js:686:13)
        at Object.verifyToken (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authController.test.js:220:28)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      697 |     });
      698 |   } catch (error) {
    > 699 |     console.error('Token verification error:', error);
          |             ^
      700 |     res.status(500).json({
      701 |       success: false,
      702 |       message: 'An error occurred during token verification'

      at Object.error [as verifyToken] (server/controllers/authController.js:699:13)
      at Object.verifyToken (tests/unit/authController.test.js:220:28)

PASS tests/unit/authController.test.js
  Auth Controller
    affiliateLogin
      ✓ should successfully login an affiliate with valid credentials (266 ms)
      ✓ should return 401 for non-existent affiliate (213 ms)
      ✓ should return 401 for incorrect password (202 ms)
    customerLogin
      ✓ should successfully login a customer with valid credentials (210 ms)
      ✓ should return 401 for non-existent customer (171 ms)
    verifyToken
      ✓ should verify a valid JWT token (158 ms)
      ✓ should handle missing user data (207 ms)
      ✓ should return customer user data (158 ms)
    refreshToken
      ✓ should refresh token successfully (159 ms)
      ✓ should return error for invalid refresh token (158 ms)
      ✓ should return error for expired refresh token (162 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/affiliateDashboardInit.test.js
  Affiliate Dashboard Customer Filtering
    URL Parameter Detection Logic
      ✓ should detect customer parameter from URL search params (1 ms)
      ✓ should handle URL without customer parameter (1 ms)
      ✓ should parse customer parameter from complex URL
      ✓ should handle regex pattern matching for customer parameter (1 ms)
    Customer Highlighting Logic
      ✓ should identify highlighted customer correctly
      ✓ should generate correct CSS classes for highlighted customer (1 ms)
      ✓ should generate correct HTML content for highlighted customer
      ✓ should not highlight non-matching customers
    Tab Switching Logic
      ✓ should determine correct tab activation based on customer parameter
      ✓ should not switch tabs when no customer parameter
      ✓ should handle empty string customer parameter
    Authentication Check Logic
      ✓ should identify authenticated state correctly (1 ms)
      ✓ should identify unauthenticated state when missing token
      ✓ should identify unauthenticated state when missing affiliate
    Customer Data Processing
      ✓ should handle empty customer list (1 ms)
      ✓ should process customer list without filtering (1 ms)
      ✓ should filter customer list by customer ID
    URL Construction and Validation
      ✓ should construct API URLs correctly
      ✓ should validate customer ID format
    Timing and Delays
      ✓ should calculate correct delay for tab switching
      ✓ should handle immediate execution when no customer parameter (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/errorHandler.test.js
  Error Handler Middleware
    errorHandler
      ✓ should handle generic errors with 500 status (9 ms)
      ✓ should handle custom status codes (1 ms)
      ✓ should handle Mongoose validation errors (1 ms)
      ✓ should handle MongoDB duplicate key errors
      ✓ should handle JWT errors (1 ms)
      ✓ should handle JWT token expiration errors (1 ms)
      ✓ should handle rate limiting errors
      ✓ should handle CastError (invalid MongoDB ObjectId) (1 ms)
      ✓ should include user context when available (1 ms)
      ✓ should handle errors with customer context
      ✓ should hide error details in production (1 ms)
      ✓ should show error details in development
      ✓ should use original message for non-500 errors in production (1 ms)
      ✓ should handle errors without message (1 ms)
      ✓ should handle errors with code property
      ✓ should log all console error sections (1 ms)
    AppError
      ✓ should create custom error with status code (1 ms)
      ✓ should have stack trace
      ✓ should work with error handler (1 ms)
    Edge cases
      ✓ should handle null error (7 ms)
      ✓ should handle undefined error
      ✓ should handle non-error objects (1 ms)
      ✓ should handle errors thrown from within error handler

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/orderWithSystemConfig.test.js (9.984 s)
  Order Model with SystemConfig Integration
    Dynamic WDF Pricing
      ✓ should fetch base rate from SystemConfig on order creation (848 ms)
      ✓ should use default rate when SystemConfig is not available (908 ms)
      ✓ should calculate estimated total using SystemConfig rate (643 ms)
      ✓ should calculate actual total using SystemConfig rate (645 ms)
    Commission Calculations
      ✓ should calculate affiliate commission correctly with custom WDF rate (645 ms)
      ✓ should calculate commission for zero delivery fee (651 ms)
      ✓ should handle commission calculation for large orders (652 ms)
    Edge Cases
      ✓ should handle commission when only estimated size is available (656 ms)
      ✓ should update calculations when base rate changes (1044 ms)
      ✓ should validate minimum and maximum base rates (910 ms)
    Revenue Calculator Scenarios
      ✓ should match revenue calculator example - 10 customers scenario (1168 ms)
      ✓ should match revenue calculator with different parameters (645 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/tokenBlacklist.test.js
  TokenBlacklist Model
    Schema Validation
      ✓ should create a valid token blacklist entry (294 ms)
      ✓ should use default values for blacklistedAt and reason (119 ms)
      ✓ should require all mandatory fields (77 ms)
      ✓ should enforce unique token constraint (231 ms)
      ✓ should validate userType enum (77 ms)
      ✓ should accept all valid userTypes (200 ms)
    Static Methods
      blacklistToken
        ✓ should successfully blacklist a token (112 ms)
        ✓ should use default reason when not provided (114 ms)
        ✓ should return null when token already blacklisted (244 ms)
        ✓ should handle custom reasons (114 ms)
        ✓ should propagate non-duplicate errors (77 ms)
      isBlacklisted
        ✓ should return true for blacklisted token (139 ms)
        ✓ should return false for non-blacklisted token (103 ms)
        ✓ should handle empty token (103 ms)
        ✓ should handle null token (106 ms)
      cleanupExpired
        ✓ should delete expired tokens (229 ms)
        ✓ should return 0 when no expired tokens (218 ms)
        ✓ should handle empty collection (120 ms)
    Index Configuration
      ○ skipped should have required indexes
    TTL Behavior
      ○ skipped should have TTL index configured for 24 hours

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/adminIdGeneration.test.js
  Admin ID Generation Logic Tests
    generateAdminId function logic
      ✓ should generate ADM001 when no administrators exist (327 ms)
      ✓ should generate ADM002 when ADM001 exists (230 ms)
      ✓ should generate ADM003 when ADM001 and ADM002 exist (286 ms)
      ✓ should handle non-sequential admin IDs correctly (306 ms)
      ✓ should handle double-digit admin IDs (219 ms)
      ✓ should handle triple-digit admin IDs (227 ms)
      ✓ should handle large admin ID numbers (216 ms)
    Admin ID format validation
      ✓ should maintain three-digit padding for numbers below 100 (103 ms)
      ✓ should handle numbers above 999 without padding issues (103 ms)
    Admin ID parsing logic
      ✓ should correctly parse admin ID numbers (104 ms)
      ✓ should handle edge cases in admin ID parsing (105 ms)
    Admin ID generation with mixed data
      ✓ should work correctly with inactive administrators (280 ms)
      ✓ should work correctly with different creation dates (278 ms)
      ✓ should work correctly with different permissions (280 ms)
    Performance and reliability
      ✓ should handle database query efficiently (221 ms)
      ✓ should handle concurrent admin creation scenario (393 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/encryptionEnhanced.test.js
  Encryption Utility - Enhanced Coverage
    Encryption Error Paths
      ✓ should return null for falsy inputs (2 ms)
      ✓ should throw error with invalid encryption key length (20 ms)
      ✓ should throw error when encryption key is missing (1 ms)
      ✓ should handle crypto errors gracefully (1 ms)
    Decryption Error Paths
      ✓ should return null for falsy inputs (1 ms)
      ✓ should throw error with invalid encrypted object structure (2 ms)
      ✓ should throw error with tampered data (1 ms)
      ✓ should throw error with wrong encryption key
      ✓ should handle corrupted encrypted data (1 ms)
    Password Hashing Error Paths
      ✓ should handle crypto.randomBytes failure (1 ms)
      ✓ should handle crypto.pbkdf2Sync failure (11 ms)
      ✓ should handle empty password (67 ms)
    Password Verification Error Paths
      ✓ should throw error when pbkdf2Sync fails (1 ms)
      ✓ should handle invalid inputs gracefully (168 ms)
      ✓ should return false for invalid salt format (51 ms)
    Token and Barcode Generation
      ✓ should generate tokens of correct length (1 ms)
      ✓ should generate unique tokens (1 ms)
      ✓ should handle token generation errors (1 ms)
      ✓ should generate barcodes with correct format
      ✓ should generate unique barcodes (1 ms)
      ✓ should handle barcode generation errors (1 ms)
    Edge Cases and Security Tests
      ✓ should handle large data encryption/decryption (14 ms)
      ✓ should handle unicode and special characters (1 ms)
      ✓ should produce different IVs for same input (2 ms)
      ✓ should validate encryption output structure (1 ms)
      ✓ should handle password edge cases (1302 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/models.test.js (6.861 s)
  Model Tests
    Affiliate Model
      ✓ should create a valid affiliate (787 ms)
      ✓ should require required fields (304 ms)
      ✓ should enforce unique constraints (586 ms)
      ✓ should handle payment information correctly (361 ms)
    Customer Model
      ✓ should create a valid customer (343 ms)
    Order Model
      ✓ should create a valid order (370 ms)
      ✓ should calculate estimated total correctly (362 ms)
      ✓ should calculate actual total and commission when weight is set (369 ms)
      ✓ should update timestamps for status changes (496 ms)
    Transaction Model
      ✓ should create a valid transaction (340 ms)
      ✓ should validate transaction type (561 ms)
      ✓ should validate transaction status (303 ms)
    RefreshToken Model
      ✓ should create a valid refresh token (333 ms)
      ✓ should validate user type (315 ms)
      ✓ should check if token is expired (369 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/operatorController.test.js
  Operator Controller
    getDashboard
      ✓ should return operator dashboard data (1 ms)
    getOrderQueue
      ✓ should return available orders for operator workstation (1 ms)
    claimOrder
      ✓ should allow operator to claim an order (1 ms)
      ✓ should fail if order is already claimed (1 ms)
    updateOrderStatus
      ✓ should update order status (1 ms)
    performQualityCheck
      ✓ should record quality check results (1 ms)
    getMyOrders
      ✓ should return orders assigned to operator
    updateShiftStatus
      ✓ should update operator shift status (1 ms)
    getPerformanceStats
      ✓ should return operator performance statistics (1 ms)
    getCustomerDetails
      ✓ should return customer details for an order
    addCustomerNote
      ✓ should add a note to an order (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/csrfConfig.test.js
  CSRF Configuration
    CSRF_CONFIG
      ✓ should define all endpoint categories (1 ms)
      ✓ should have valid endpoint patterns (6 ms)
      ✓ should not have duplicate endpoints across categories
      ✓ should include critical security endpoints (1 ms)
      ✓ should exclude authentication endpoints from CSRF
      ✓ should exclude registration endpoints from CSRF (1 ms)
    shouldEnforceCsrf
      HTTP method checks
        ✓ should not enforce CSRF for GET requests
        ✓ should not enforce CSRF for HEAD requests
        ✓ should not enforce CSRF for OPTIONS requests (7 ms)
        ✓ should consider CSRF for POST requests (1 ms)
        ✓ should consider CSRF for PUT requests
        ✓ should consider CSRF for DELETE requests
        ✓ should consider CSRF for PATCH requests
      Public endpoints
        ✓ should not enforce CSRF for public endpoints
        ✓ should not enforce CSRF for health check endpoints
      Authentication endpoints
        ✓ should not enforce CSRF for login endpoints (1 ms)
        ✓ should not enforce CSRF for forgot password
        ✓ should not enforce CSRF for refresh token
      Registration endpoints
        ✓ should not enforce CSRF for affiliate registration
        ✓ should not enforce CSRF for customer registration
      Critical endpoints
        ✓ should enforce CSRF for logout
        ✓ should enforce CSRF for order creation
        ✓ should enforce CSRF for order cancellation
        ✓ should enforce CSRF for password changes
        ✓ should enforce CSRF for data deletion
        ✓ should enforce CSRF for admin operations
        ✓ should enforce CSRF for operator shift changes
        ✓ should enforce CSRF for order status updates (1 ms)
      High priority endpoints
        ✓ should not enforce CSRF for high priority endpoints when CSRF_PHASE < 2
        ✓ should enforce CSRF for high priority endpoints when CSRF_PHASE >= 2
        ✓ should handle bag management endpoints based on phase
        ✓ should handle payment updates based on phase
      Read-only endpoints
        ✓ should not enforce CSRF for dashboard endpoints (1 ms)
        ✓ should enforce CSRF for search endpoints with state-changing methods
        ✓ should enforce CSRF for export endpoints with state-changing methods
      Pattern matching
        ✓ should match parameterized routes
        ✓ should match nested parameterized routes
        ✓ should not match partial paths
        ✓ should handle complex IDs in paths (1 ms)
      Default behavior
        ✓ should enforce CSRF for unknown state-changing endpoints
        ✓ should enforce CSRF for unmatched PUT requests
        ✓ should not enforce CSRF for unknown GET endpoints
      Edge cases
        ✓ should handle missing CSRF_PHASE environment variable
        ✓ should handle non-numeric CSRF_PHASE
        ✓ should handle paths with query parameters
        ✓ should handle paths with trailing slashes (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/fieldFilter.test.js
  Field Filter Utility
    filterFields
      ✓ should filter object to include only allowed fields (1 ms)
      ✓ should handle empty allowed fields array
      ✓ should handle null or undefined objects
      ✓ should handle non-object inputs (1 ms)
      ✓ should handle missing fields gracefully
      ✓ should not include inherited properties
      ✓ should handle nested objects without deep filtering (1 ms)
    filterArray
      ✓ should filter array of objects
      ✓ should handle empty array
      ✓ should handle non-array inputs
      ✓ should handle arrays with mixed types
    fieldDefinitions
      ✓ should have definitions for all data types (1 ms)
      ✓ should have different field sets for different roles (1 ms)
      ✓ should not expose sensitive fields in public view
      ✓ should include appropriate fields for each role (1 ms)
    getFilteredData
      ✓ should filter data based on admin role
      ✓ should filter data based on public role
      ✓ should handle self context for customers (1 ms)
      ✓ should handle arrays of data
      ✓ should return data as-is for unknown data types (1 ms)
      ✓ should handle null or undefined data
      ✓ should use fallback field definitions
    responseFilter middleware
      ✓ should create filtered json method
      ✓ should filter response data when _filterType is provided
      ✓ should not filter when _filterType is not provided
      ✓ should handle public role when user is not authenticated
      ✓ should extract user ID from different user types
      ✓ should preserve other response properties (1 ms)
      ✓ should handle responses without data property
      ✓ should maintain this context in json method (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.error
    Error updating system config: Error: Configuration not found
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:385:61)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1542 |
      1543 |   } catch (error) {
    > 1544 |     console.error('Error updating system config:', error);
           |             ^
      1545 |     res.status(500).json({
      1546 |       success: false,
      1547 |       message: error.message || 'Failed to update system configuration'

      at error (server/controllers/administratorController.js:1544:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:387:9)

PASS tests/unit/administratorController.test.js
  Administrator Controller
    Operator Management
      createOperator
        ✓ should create a new operator (60 ms)
      getOperators
        ✓ should return list of operators with pagination (52 ms)
      updateOperator
        ✓ should update operator details (53 ms)
    Analytics
      getDashboard
        ✓ should return dashboard analytics (52 ms)
      getOrderAnalytics
        ✓ should return order analytics (56 ms)
    System Configuration
      getSystemConfig
        ✓ should return all system configurations (52 ms)
      updateSystemConfig
        ✓ should update system configuration (52 ms)
        ✓ should return 404 if configuration not found (85 ms)
    System Health
      getSystemHealth
        ✓ should return system health status (77 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/sanitization.test.js
  Sanitization Middleware
    sanitizeInput
      ✓ should sanitize string input (1 ms)
      ✓ should sanitize arrays recursively
      ✓ should sanitize objects recursively (1 ms)
      ✓ should handle null values
      ✓ should handle undefined values
      ✓ should handle numbers
      ✓ should handle booleans
      ✓ should handle deeply nested objects
      ✓ should handle arrays of objects (1 ms)
      ✓ should not modify prototype properties
    sanitizeRequest
      ✓ should sanitize request body (1 ms)
      ✓ should sanitize query parameters
      ✓ should sanitize URL parameters (1 ms)
      ✓ should handle missing request properties
      ✓ should handle all properties in one request (1 ms)
    sanitizeEmail
      ✓ should sanitize and validate email
      ✓ should remove HTML from email (1 ms)
      ✓ should return empty string for invalid email
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (1 ms)
      ✓ should handle empty string
      ✓ should validate complex email formats
    sanitizePhone
      ✓ should keep only allowed characters
      ✓ should remove invalid characters (1 ms)
      ✓ should handle international format
      ✓ should remove HTML and special characters
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
    sanitizeId
      ✓ should keep alphanumeric characters and hyphens
      ✓ should remove special characters
      ✓ should remove spaces
      ✓ should handle script injection attempts (6 ms)
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (1 ms)
      ✓ should trim whitespace
      ✓ should handle empty string
      ✓ should handle MongoDB ObjectId format (1 ms)
    sanitizePath
      ✓ should allow valid file paths
      ✓ should remove directory traversal attempts
      ✓ should remove multiple directory traversal attempts
      ✓ should allow valid characters in paths (1 ms)
      ✓ should remove invalid characters
      ✓ should handle Windows-style paths
      ✓ should handle null and undefined
      ✓ should handle non-string inputs (1 ms)
      ✓ should handle empty string
      ✓ should handle complex path traversal attempts
      ✓ should preserve forward slashes
    Integration tests
      ✓ should work with express middleware chain (1 ms)
      ✓ should handle complex nested structures (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passwordValidator.test.js
  Password Validator Utility
    validatePasswordStrength
      Basic Requirements
        ✓ should validate minimum length requirement (2 ms)
        ✓ should require uppercase letters
        ✓ should require lowercase letters (1 ms)
        ✓ should require numbers
        ✓ should require special characters (1 ms)
      Security Validations
        ✓ should reject common passwords (1 ms)
        ✓ should reject passwords containing username
        ✓ should reject passwords containing email (1 ms)
        ✓ should reject sequential characters
        ✓ should reject repeated characters (1 ms)
      Valid Passwords
        ✓ should accept strong valid passwords (1 ms)
      Edge Cases
        ✓ should handle empty password
        ✓ should handle null/undefined password
        ✓ should handle case-insensitive username/email checks (1 ms)
    customPasswordValidator
      ✓ should work as express-validator custom validator (14 ms)
      ✓ should include validation errors in thrown message (1 ms)
    passwordValidationMiddleware
      ✓ should create middleware function
      ✓ should validate password and call next on success (1 ms)
      ✓ should return error response on validation failure (1 ms)
    isPasswordInHistory
      ✓ should return false for empty history
      ✓ should return false for password not in history (55 ms)
      ✓ should handle null/undefined history
    getPasswordStrength
      ✓ should return higher scores for stronger passwords
      ✓ should score length appropriately (1 ms)
      ✓ should score character variety
      ✓ should penalize common patterns
    commonPasswords array
      ✓ should contain common passwords (5 ms)
      ✓ should contain domain-specific passwords

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2,
      serviceNotes: 'Handle with care',
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon',
      specialDeliveryInstructions: 'Leave at door'
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

  console.error
    Failed to send notification emails: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderController.test.js:114:73)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      152 |       await emailService.sendAffiliateNewOrderEmail(affiliate, customer, newOrder);
      153 |     } catch (emailError) {
    > 154 |       console.error('Failed to send notification emails:', emailError);
          |               ^
      155 |       // Continue with the response even if emails fail
      156 |     }
      157 |

      at Object.error [as createOrder] (server/controllers/orderController.js:154:15)
      at Object.<anonymous> (tests/unit/orderController.test.js:117:7)

  console.log
    Creating order with data: { customerId: 'INVALID', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Customer not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:86:15)

  console.log
    Creating order with data: { customerId: 'CUST123', affiliateId: 'INVALID' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Affiliate not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:99:15)

  console.log
    Creating order with data: { customerId: 'CUST456', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST456

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

PASS tests/unit/orderController.test.js
  Order Controller
    createOrder
      ✓ should successfully create a new order (319 ms)
      ✓ should handle email sending failures gracefully (121 ms)
      ✓ should return error for invalid customer (54 ms)
      ✓ should return error for invalid affiliate (60 ms)
      ✓ should enforce authorization (54 ms)
    getOrderDetails
      ✓ should return order details for authorized user (55 ms)
      ✓ should return 404 for non-existent order (51 ms)
      ✓ should enforce authorization for customers (51 ms)
    updateOrderStatus
      ✓ should successfully update order status (52 ms)
      ✓ should update actual weight when processing (51 ms)
      ✓ should validate status transitions (52 ms)
      ✓ should send commission email when delivered (52 ms)
    cancelOrder
      ✓ should successfully cancel an order (53 ms)
      ✓ should prevent cancelling non-cancellable orders (54 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/auditLogger.test.js
  Audit Logger
    AuditEvents
      ✓ should define all audit event types (2 ms)
      ✓ should have unique event names
    logAuditEvent
      ✓ should log basic audit event (1 ms)
      ✓ should add request context when provided
      ✓ should handle customer context
      ✓ should use error level for critical events (1 ms)
      ✓ should use info level for non-critical events
      ✓ should handle missing user context
      ✓ should handle connection.remoteAddress fallback
    auditMiddleware
      ✓ should create middleware that logs on response finish (1 ms)
      ✓ should log successful responses
      ✓ should not log failed responses (1 ms)
      ✓ should include request context in logs
    logLoginAttempt
      ✓ should log successful login (1 ms)
      ✓ should log failed login with reason
      ✓ should handle null reason
    logSensitiveDataAccess
      ✓ should log sensitive data access (1 ms)
      ✓ should handle different data types and actions
    logPaymentActivity
      ✓ should log payment info access
      ✓ should log payment info update (1 ms)
      ✓ should handle additional details
    logSuspiciousActivity
      ✓ should log suspicious activity with error level (1 ms)
      ✓ should include request context (1 ms)
      ✓ should merge all details (1 ms)
    Logger configuration
      ✓ should export audit logger with required methods
      ✓ should not add console transport in production (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.error
    Delete customer data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:460:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      603 |     });
      604 |   } catch (error) {
    > 605 |     console.error('Delete customer data error:', error);
          |             ^
      606 |     res.status(500).json({
      607 |       success: false,
      608 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteCustomerData] (server/controllers/customerController.js:605:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:462:7)

PASS tests/unit/customerController.test.js
  Customer Controller
    registerCustomer
      ✓ should successfully register a new customer (3 ms)
      ✓ should return error for invalid affiliate (1 ms)
      ✓ should return error for duplicate email
    getCustomerProfile
      ✓ should return customer profile for authorized customer (2 ms)
      ✓ should return 403 for unauthorized access
      ✓ should return 404 for non-existent customer
    updateCustomerProfile
      ✓ should successfully update customer profile
      ✓ should prevent updating protected fields (1 ms)
    getCustomerOrders
      ✓ should return customer orders with pagination (1 ms)
    deleteCustomerData
      ✓ should delete all customer data in development environment (1 ms)
      ✓ should reject deletion in production environment (1 ms)
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (32 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/createAdminScript.test.js (10.457 s)
  Create Admin Script Tests
    Script File Structure
      ✓ should exist and be readable (516 ms)
      ✓ should contain required functionality markers (371 ms)
    Admin ID Generation Logic
      ✓ should generate sequential admin IDs starting from ADM001 (575 ms)
      ✓ should calculate next admin ID correctly (691 ms)
    Password Security Requirements
      ✓ should enforce strong password requirements for admins (380 ms)
      ✓ should accept strong passwords for admins (717 ms)
    Permission System Validation
      ✓ should validate all permission types (466 ms)
      ✓ should handle partial permission sets (488 ms)
    Unique Constraint Validation
      ✓ should prevent duplicate administrator IDs (548 ms)
      ✓ should prevent duplicate emails (535 ms)
    Email Integration
      ✓ should handle admin creation with welcome email sending (454 ms)
    Data Validation and Sanitization
      ✓ should handle special characters in names correctly (457 ms)
      ✓ should normalize email addresses (458 ms)
      ✓ should validate email format (385 ms)
    Administrator Model Integration
      ✓ should integrate with existing administrator model schema (473 ms)
      ✓ should work with password hashing middleware (481 ms)
    Script Error Handling
      ✓ should handle database connection errors gracefully (366 ms)
      ✓ should handle invalid input gracefully (362 ms)
    Security Considerations
      ✓ should not log or expose passwords (373 ms)
      ✓ should generate secure random passwords when needed (359 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/oAuthSession.test.js (7.011 s)
  OAuthSession Model
    Schema Validation
      ✓ should create a valid OAuth session with all required fields (454 ms)
      ✓ should require sessionId field (204 ms)
      ✓ should require result field (203 ms)
      ✓ should automatically set createdAt (230 ms)
      ✓ should automatically set expiresAt to 5 minutes from now (235 ms)
      ✓ should enforce unique sessionId (279 ms)
      ✓ should allow complex result objects (258 ms)
    Static Methods
      createSession
        ✓ should create and save a new OAuth session (258 ms)
        ✓ should throw error for duplicate session IDs (284 ms)
        ✓ should handle database errors (210 ms)
      getSession
        ✓ should retrieve existing session result by sessionId (284 ms)
        ✓ should return null for non-existent session (220 ms)
      consumeSession
        ✓ should retrieve and delete session in one operation (285 ms)
        ✓ should return null when consuming non-existent session (231 ms)
        ✓ should handle race conditions safely (300 ms)
      cleanupExpired
        ✓ should manually delete expired sessions (450 ms)
        ✓ should return zero deletions when no expired sessions exist (281 ms)
    TTL Behavior
      ✓ should have TTL index configured on expiresAt field (226 ms)
      ✓ should respect custom expiresAt when provided (228 ms)
    Data Integrity
      ✓ should preserve all data types in result field (231 ms)
      ✓ should handle empty and minimal result objects (362 ms)
    Error Handling
      ✓ should handle MongoDB connection errors gracefully (200 ms)
      ✓ should handle very large result objects (292 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/administrator.test.js (7.81 s)
  Administrator Model
    Schema Validation
      ✓ should create a valid administrator (357 ms)
      ✓ should require all mandatory fields (79 ms)
      ✓ should enforce email format validation (83 ms)
      ✓ should enforce unique email constraint (508 ms)
      ✓ should enforce unique adminId constraint (519 ms)
      ✓ should validate permission enum values (78 ms)
      ✓ should accept valid permissions (174 ms)
      ✓ should trim whitespace from string fields (163 ms)
      ✓ should convert email to lowercase (164 ms)
      ✓ should not allow role to be changed after creation (233 ms)
    Password Handling
      ✓ should hash password on save (207 ms)
      ✓ should verify correct password (246 ms)
      ✓ should reject incorrect password (262 ms)
      ✓ should not expose password in JSON output (168 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (225 ms)
      ✓ should lock account after 5 failed attempts (225 ms)
      ✓ should reset login attempts on successful login (226 ms)
      ✓ should reset attempts if lock has expired (230 ms)
      ✓ should correctly identify locked accounts (164 ms)
    Password Reset
      ✓ should generate password reset token (169 ms)
      ✓ should set password reset expiry to 30 minutes (169 ms)
    Permissions
      ✓ should check single permission correctly (167 ms)
      ✓ should check multiple permissions with AND operation (166 ms)
      ✓ should check multiple permissions with OR operation (163 ms)
      ✓ should set default permissions if none provided (171 ms)
    Static Methods
      ✓ should find active administrators (459 ms)
      ✓ should find administrator by email with password (194 ms)
      ✓ should handle case-insensitive email search (209 ms)
      ✓ should return null for non-existent email (103 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (165 ms)
      ✓ should update updatedAt on modification (295 ms)
    Admin ID Generation
      ✓ should auto-generate unique admin ID (262 ms)
      ✓ should not override provided admin ID (165 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passwordValidatorEnhanced.test.js
  Enhanced Password Validator
    validatePasswordStrength
      Length Requirements
        ✓ should reject passwords shorter than 8 characters (1 ms)
        ✓ should accept passwords with 8 or more characters (1 ms)
      Character Type Requirements
        ✓ should require at least one uppercase letter (1 ms)
        ✓ should require at least one lowercase letter
        ✓ should require at least one number (2 ms)
        ✓ should require at least one special character
        ✓ should accept passwords with all required character types (1 ms)
      Common Password Detection
        ✓ should reject common passwords (1 ms)
        ✓ should accept non-common passwords
      Sequential Character Detection
        ✓ should reject passwords with sequential numbers (1 ms)
        ✓ should reject passwords with sequential letters
        ✓ should accept passwords without sequential characters (1 ms)
      Repeated Character Detection
        ✓ should reject passwords with too many repeated characters (1 ms)
        ✓ should accept passwords with acceptable repeated characters
      Username/Email Inclusion Check
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email
        ✓ should accept passwords not containing username or email (1 ms)
      Password History Check
        ✓ should reject passwords in history
        ✓ should accept passwords not in history
      Complete Valid Passwords
        ✓ should accept completely valid passwords (1 ms)
    getPasswordStrength
      ✓ should return correct strength scores (1 ms)
      ✓ should return correct strength labels
    isPasswordInHistory
      ✓ should return true for passwords in history (1 ms)
      ✓ should return false for passwords not in history
      ✓ should handle empty history
    customPasswordValidator
      ✓ should return custom validator function
      ✓ should validate passwords correctly in express-validator context (1 ms)
      ✓ should throw for invalid passwords in express-validator context (15 ms)
      ✓ should include admin-specific validation when userType is admin (1 ms)
      ✓ should include admin-specific validation when userType is operator (2 ms)
    passwordValidationMiddleware
      ✓ should call next() for valid passwords
      ✓ should return 400 error for invalid passwords (1 ms)
      ✓ should skip validation if no password in request
      ✓ should include strength assessment in response for invalid passwords
    Edge Cases and Security
      ✓ should handle null and undefined inputs gracefully
      ✓ should handle very long passwords
      ✓ should handle special Unicode characters (1 ms)
      ✓ should be case-sensitive for username/email checks

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/rbac.test.js
  RBAC Middleware
    Role Hierarchy
      ✓ should define correct role hierarchy (1 ms)
      ✓ should define allowed roles (1 ms)
    checkRole Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should reject when user has no role (1 ms)
      ✓ should reject when user has invalid role
      ✓ should accept when user has exact required role (1 ms)
      ✓ should accept when user has higher role in hierarchy
      ✓ should reject when user has lower role in hierarchy
      ✓ should handle array of required roles (1 ms)
      ✓ should accept administrator accessing operator resources
      ✓ should reject operator accessing administrator resources (1 ms)
    checkAllRoles Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should accept when user has access to all required roles (6 ms)
      ✓ should reject when user lacks access to any required role
      ✓ should accept admin for any combination of roles
    checkResourceOwnership Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should allow admin access to any resource
      ✓ should allow administrator access to any resource
      ✓ should allow affiliate access to own resource via params (1 ms)
      ✓ should allow customer access to own resource via body
      ✓ should allow operator access to own resource
      ✓ should reject affiliate access to another affiliate resource (1 ms)
      ✓ should prefer params over body for resource ID
    checkAdminPermission Middleware
      ✓ should reject when user is not administrator (1 ms)
      ✓ should reject when administrator not found
      ✓ should reject when administrator is not active
      ✓ should accept when administrator has required permission
      ✓ should handle array of required permissions
      ✓ should reject when administrator lacks any required permission (1 ms)
      ✓ should handle database errors
    checkOperatorStatus Middleware
      ✓ should skip check for non-operators (1 ms)
      ✓ should reject when operator not found
      ✓ should reject when operator is not active (1 ms)
      ✓ should reject when operator is not on shift
      ✓ should accept active operator on shift (1 ms)
      ✓ should handle database errors
    filterResponseFields Middleware
      ✓ should pass through data when no user present (1 ms)
      ✓ should pass through data when user has no role (1 ms)
      ✓ should pass through all fields when role has wildcard permission
      ✓ should filter fields based on role permissions
      ✓ should handle nested field permissions (1 ms)
      ✓ should handle array data
      ✓ should handle standard response format with data property (1 ms)
      ✓ should use default permissions when role not specified
      ✓ should handle deeply nested fields (1 ms)
      ✓ should handle non-object data gracefully
      ✓ should handle empty allowed fields

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportConfig.test.js
  Passport Configuration Tests
    Strategy Configuration
      ✓ should configure Google strategy when credentials are present (5 ms)
      ✓ should not configure Google strategy without credentials (1 ms)
      ✓ should configure Facebook strategy when credentials are present (1 ms)
      ✓ should not configure Facebook strategy without credentials (1 ms)
      ✓ should configure LinkedIn strategy when credentials are present (2 ms)
    Google OAuth Strategy
      ✓ should handle database errors (1 ms)
      Customer Context
        ✓ should handle existing customer with Google account (1 ms)
        ✓ should link Google account to existing customer (1 ms)
        ✓ should handle existing affiliate conflict (1 ms)
        ✓ should return new user data (1 ms)
      Affiliate Context
        ✓ should handle existing affiliate with Google account (2 ms)
        ✓ should handle customer conflict (1 ms)
        ✓ should link Google account to existing affiliate with email (1 ms)
        ✓ should return new affiliate user data (1 ms)
    Facebook OAuth Strategy
      ✓ should handle existing affiliate (2 ms)
      ✓ should return new user data for registration (1 ms)
      ✓ should link Facebook account to existing affiliate (1 ms)
      ✓ should handle Facebook error (2 ms)
    LinkedIn OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should link LinkedIn account to existing affiliate (2 ms)
      ✓ should return new LinkedIn user data (1 ms)
      ✓ should handle LinkedIn error (1 ms)
    Serialization
      ✓ should serialize user with _id (2 ms)
      ✓ should serialize user with socialId (1 ms)
      ✓ should deserialize user (1 ms)
      ✓ should handle deserialization errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/systemConfig.test.js (8.303 s)
  SystemConfig Model
    Schema Validation
      ✓ should create a valid system config (284 ms)
      ✓ should require mandatory fields (85 ms)
      ✓ should enforce unique key constraint (283 ms)
      ✓ should validate category enum (79 ms)
      ✓ should validate dataType enum (82 ms)
      ✓ should accept all valid categories (394 ms)
      ✓ should accept all valid data types (224 ms)
      ✓ should trim string fields (118 ms)
    Value Validation
      Number validation
        ✓ should reject non-number values for number dataType (79 ms)
        ✓ should enforce minimum value validation (79 ms)
        ✓ should enforce maximum value validation (80 ms)
        ✓ should accept valid number within range (114 ms)
      Boolean validation
        ✓ should reject non-boolean values for boolean dataType (79 ms)
        ✓ should accept boolean values (115 ms)
      String validation
        ✓ should reject non-string values for string dataType (79 ms)
        ✓ should enforce regex validation (79 ms)
        ✓ should accept valid string matching regex (121 ms)
      Array validation
        ✓ should reject non-array values for array dataType (79 ms)
        ✓ should accept array values (113 ms)
      Object validation
        ✓ should reject non-object values for object dataType (79 ms)
        ✓ should reject arrays for object dataType (79 ms)
        ✓ should accept object values (111 ms)
      Allowed values validation
        ✓ should enforce allowed values (79 ms)
        ✓ should accept allowed values (113 ms)
    Static Methods
      getValue
        ✓ should return config value (141 ms)
        ✓ should return defaultValue when value is undefined (149 ms)
        ✓ should return provided default when config not found (111 ms)
        ✓ should return null when config not found and no default provided (105 ms)
      setValue
        ✓ should update config value (174 ms)
        ✓ should throw error for non-existent config (105 ms)
        ✓ should throw error for non-editable config (144 ms)
        ✓ should update updatedBy when provided (175 ms)
        ✓ should validate new value according to dataType (143 ms)
      getByCategory
        ✓ should return all configs for a category (301 ms)
        ✓ should return only public configs when specified (150 ms)
        ✓ should return empty array for non-existent category (145 ms)
        ✓ should sort by key (188 ms)
      getPublicConfigs
        ✓ should return only public configs (152 ms)
        ✓ should sort by category then key (149 ms)
      initializeDefaults
        ✓ should create default configurations (506 ms)
        ✓ should not overwrite existing configurations (498 ms)
        ✓ should add missing configurations (477 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (112 ms)
      ✓ should update updatedAt on modification (244 ms)
    toJSON transformation
      ✓ should include currentValue in JSON output (119 ms)
      ✓ should use defaultValue when value is undefined (115 ms)
    Edge Cases
      ✓ should handle mixed types for value and defaultValue (119 ms)
      ✓ should handle empty validation object (116 ms)
      ✓ should skip validation when value is not modified (146 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:804:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:869:13)

  console.log
    OAuth Callback State Parameter Debug: { state: undefined, sessionId: null, allParams: {} }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:804:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:804:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:869:13)

info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:02:44.844Z","userType":"affiliate","username":"johndoe"}
  console.error
    Error storing OAuth session: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:127:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      914 |             await OAuthSession.createSession(sessionId, message);
      915 |           } catch (dbError) {
    > 916 |             console.error('Error storing OAuth session:', dbError);
          |                     ^
      917 |           }
      918 |         }
      919 |         

      at Object.error [as handleSocialCallback] (server/controllers/authController.js:916:21)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:129:7)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:804:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:869:13)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1591:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1653:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-06T15:02:45.395Z","userType":"affiliate"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-06T15:02:46.018Z","userType":"affiliate"}
info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-06T15:02:46.383Z","userType":"customer"}
info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:02:46.848Z","userType":"affiliate"}
info: undefined {"affiliateId":"AFF123456","loginMethod":"social","provider":"google","timestamp":"2025-06-06T15:02:46.848Z","userType":"affiliate"}
info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:02:47.157Z","userType":"customer"}
info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"linkedin","socialAccountId":"linkedin789"},"eventType":"ACCOUNT_UPDATED","timestamp":"2025-06-06T15:02:47.315Z","userId":"507f1f77bcf86cd799439011","userType":"affiliate"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1561:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1561:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1561:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1561:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1561:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'not found',
      resultData: null
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1542:13)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:752:65)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1563 |     
      1564 |   } catch (error) {
    > 1565 |     console.error('OAuth session polling error:', error);
           |             ^
      1566 |     res.status(500).json({
      1567 |       success: false,
      1568 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1565:13)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:754:7)

PASS tests/unit/authControllerEnhanced.test.js (6.834 s)
  Enhanced Auth Controller - OAuth Methods
    handleSocialCallback
      ✓ should create OAuth session and redirect for affiliate context (451 ms)
      ✓ should handle customer context from state parameter (183 ms)
      ✓ should handle missing user data gracefully (163 ms)
      ✓ should handle OAuth session creation errors (174 ms)
      ✓ should extract profile data correctly for different providers (155 ms)
    handleCustomerSocialCallback
      ✓ should create customer OAuth session (174 ms)
    completeSocialRegistration
      ✓ should complete social registration successfully (208 ms)
      ✓ should sanitize social data and reject if fields become empty (155 ms)
      ✓ should check for existing email and username (155 ms)
      ✓ should check for existing social account (154 ms)
      ✓ should generate unique username from social data (157 ms)
      ✓ should handle JWT verification errors (152 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration successfully (210 ms)
      ✓ should validate affiliate existence (155 ms)
      ✓ should sanitize customer social data (154 ms)
    socialLogin
      ✓ should login existing affiliate with social account (155 ms)
      ✓ should return error for non-existent social account (153 ms)
      ✓ should login existing customer with social account (156 ms)
    linkSocialAccount
      ✓ should link social account to existing affiliate (165 ms)
      ✓ should prevent linking already existing social account (157 ms)
      ✓ should handle user not found error (153 ms)
    pollOAuthSession
      ✓ should return complete session data when available (154 ms)
      ✓ should return social-auth-login session data (154 ms)
      ✓ should return social-auth-error session data (157 ms)
      ✓ should return social-auth-account-conflict session data for affiliate conflict (402 ms)
      ✓ should return social-auth-account-conflict session data for customer conflict (156 ms)
      ✓ should return pending status when session not ready (154 ms)
      ✓ should handle database errors gracefully (157 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed JWT tokens (156 ms)
      ✓ should handle database connection errors (168 ms)
      ✓ should handle missing required fields in social data (156 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/operator.test.js (11.276 s)
  Operator Model
    Schema Validation
      ✓ should create a valid operator (366 ms)
      ✓ should require all mandatory fields (94 ms)
      ✓ should enforce email format validation (84 ms)
      ✓ should enforce unique email constraint (742 ms)
      ✓ should enforce unique operatorId constraint (719 ms)
      ✓ should validate shift time format (77 ms)
      ✓ should accept valid shift times (167 ms)
      ✓ should enforce quality score range (79 ms)
      ✓ should trim whitespace from string fields (161 ms)
      ✓ should convert email to lowercase (165 ms)
      ✓ should not allow role to be changed after creation (234 ms)
    Password Handling
      ✓ should hash password on save (191 ms)
      ✓ should verify correct password (259 ms)
      ✓ should reject incorrect password (265 ms)
      ✓ should not expose password in JSON output (167 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (227 ms)
      ✓ should lock account after 5 failed attempts (232 ms)
      ✓ should lock for 30 minutes (222 ms)
      ✓ should reset login attempts on successful login (220 ms)
      ✓ should reset attempts if lock has expired (220 ms)
      ✓ should correctly identify locked accounts (170 ms)
    Password Reset
      ✓ should generate password reset token (164 ms)
      ✓ should set password reset expiry to 30 minutes (164 ms)
    Shift Management
      isOnShift virtual
        ✓ should return true when no shift times are set (174 ms)
        ✓ should correctly identify operator on shift during normal hours (178 ms)
        ✓ should correctly identify operator off shift (163 ms)
        ✓ should handle overnight shifts correctly (173 ms)
    Processing Statistics
      ✓ should update processing stats correctly (198 ms)
      ✓ should handle first order processing (201 ms)
      ✓ should update quality score with passing result (190 ms)
      ✓ should update quality score with failing result (205 ms)
    Static Methods
      findActive
        ✓ should find only active operators (458 ms)
      findOnShift
        ✓ should find only operators on shift (322 ms)
      findByEmailWithPassword
        ✓ should find operator by email with password (204 ms)
        ✓ should handle case-insensitive email search (192 ms)
        ✓ should return null for non-existent email (111 ms)
      findAvailableOperators
        ✓ should find operators with low order count (534 ms)
        ✓ should sort by current order count (344 ms)
        ✓ should respect limit parameter (860 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (178 ms)
      ✓ should update updatedAt on modification (300 ms)
    Operator ID Generation
      ✓ should auto-generate unique operator ID (254 ms)
      ✓ should not override provided operator ID (165 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.warn
    Welcome email could not be sent: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:159:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

       99 |       // Email sent successfully - no need to check result
      100 |     } catch (emailError) {
    > 101 |       console.warn('Welcome email could not be sent:', emailError);
          |               ^
      102 |       // Continue with registration process even if email fails
      103 |     }
      104 |

      at Object.warn [as registerAffiliate] (server/controllers/affiliateController.js:101:15)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:161:7)

  console.error
    Affiliate registration error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:176:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      109 |     });
      110 |   } catch (error) {
    > 111 |     console.error('Affiliate registration error:', error);
          |             ^
      112 |     res.status(500).json({
      113 |       success: false,
      114 |       message: 'An error occurred during registration'

      at Object.error [as registerAffiliate] (server/controllers/affiliateController.js:111:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:178:7)

  console.error
    Error decrypting PayPal email: Error: Decryption failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:273:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as decrypt] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at Object.decrypt [as getAffiliateProfile] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:172:28)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:276:7)

      173 |           : affiliate.paypalEmail;
      174 |       } catch (error) {
    > 175 |         console.error('Error decrypting PayPal email:', error);
          |                 ^
      176 |         // Don't include if decryption fails
      177 |       }
      178 |     }

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:175:17)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:276:7)

  console.error
    Get affiliate orders error: TypeError: Cannot read properties of undefined (reading 'forEach')
        at Object.forEach [as getAffiliateOrders] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:596:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:695:7)

      644 |     });
      645 |   } catch (error) {
    > 646 |     console.error('Get affiliate orders error:', error);
          |             ^
      647 |     res.status(500).json({
      648 |       success: false,
      649 |       message: 'An error occurred while retrieving orders'

      at Object.error [as getAffiliateOrders] (server/controllers/affiliateController.js:646:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:695:7)

  console.error
    Get affiliate profile error: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:904:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      184 |     });
      185 |   } catch (error) {
    > 186 |     console.error('Get affiliate profile error:', error);
          |             ^
      187 |     res.status(500).json({
      188 |       success: false,
      189 |       message: 'An error occurred while retrieving affiliate profile'

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:186:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:906:7)

  console.error
    Delete affiliate data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:993:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      896 |     });
      897 |   } catch (error) {
    > 898 |     console.error('Delete affiliate data error:', error);
          |             ^
      899 |     res.status(500).json({
      900 |       success: false,
      901 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteAffiliateData] (server/controllers/affiliateController.js:898:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:995:7)

PASS tests/unit/affiliateController.test.js
  Affiliate Controller
    registerAffiliate
      ✓ should successfully register a new affiliate (3 ms)
      ✓ should return validation errors (1 ms)
      ✓ should handle duplicate email or username (1 ms)
      ✓ should handle email service failure gracefully (49 ms)
      ✓ should handle database errors (2 ms)
    getAffiliateProfile
      ✓ should return affiliate profile for authorized user (1 ms)
      ✓ should return 404 for non-existent affiliate
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should handle decryption errors gracefully (12 ms)
    updateAffiliateProfile
      ✓ should successfully update affiliate profile (2 ms)
      ✓ should handle password change
      ✓ should reject incorrect current password
      ✓ should update payment method (1 ms)
    getAffiliateEarnings
      ✓ should return earnings for specified period (1 ms)
      ✓ should handle different time periods
      ✓ should handle missing customers gracefully
    getAffiliateCustomers
      ✓ should return paginated customers with search (1 ms)
      ✓ should handle different sort options (1 ms)
    getAffiliateOrders
      ✓ should return filtered orders (1 ms)
      ✓ should handle date filters correctly (2 ms)
    getAffiliateTransactions
      ✓ should return paginated transactions (1 ms)
    getAffiliateDashboardStats
      ✓ should return comprehensive dashboard statistics (1 ms)
      ✓ should handle empty data gracefully (1 ms)
    getPublicAffiliateInfo
      ✓ should return only public affiliate information (11 ms)
      ✓ should return 404 for non-existent affiliate (1 ms)
    Error handling
      ✓ should handle database connection errors (2 ms)
    deleteAffiliateData
      ✓ should delete all affiliate data in development environment (1 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion (1 ms)
      ✓ should handle deletion errors (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:03.816Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:03.987Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 172.079 ms - 594[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:04.746Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:04.884Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 139.031 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-c6a820c5-d27d-4524-9840-e292dc1571e6/customers {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:04.897Z"}
[0mGET /api/v1/affiliates/AFF-c6a820c5-d27d-4524-9840-e292dc1571e6/customers [32m200[0m 112.447 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:05.664Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:05.850Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 186.494 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-bff009bb-6869-4805-960b-b64fd29028af/customers?customerId=CUST-e71a5159-9f37-49cb-86a9-974d7ab042ff {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:05.943Z"}
[0mGET /api/v1/affiliates/AFF-bff009bb-6869-4805-960b-b64fd29028af/customers?customerId=CUST-e71a5159-9f37-49cb-86a9-974d7ab042ff [32m200[0m 107.820 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:06.703Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:06.846Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 143.372 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-ffc7d3c7-0a99-4fde-9e18-e60a56b31923/customers?customerId=NONEXISTENT123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:06.850Z"}
[0mGET /api/v1/affiliates/AFF-ffc7d3c7-0a99-4fde-9e18-e60a56b31923/customers?customerId=NONEXISTENT123 [32m200[0m 105.561 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:07.626Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:07.800Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 174.170 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-65c3ac20-80b6-48b7-91d8-d8f63d4fa862/customers {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:07.804Z"}
[0mGET /api/v1/affiliates/AFF-65c3ac20-80b6-48b7-91d8-d8f63d4fa862/customers [33m401[0m 0.980 ms - 47[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:08.477Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:08.624Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 147.177 ms - 594[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:08.629Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:08.770Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 141.613 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-b55bfadb-317b-402f-adfa-5f4eac24ff5f/customers {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:08.774Z"}
[0mGET /api/v1/affiliates/AFF-b55bfadb-317b-402f-adfa-5f4eac24ff5f/customers [32m200[0m 110.933 ms - 437[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-b55bfadb-317b-402f-adfa-5f4eac24ff5f/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:08.890Z"}
[0mGET /api/v1/affiliates/AFF-b55bfadb-317b-402f-adfa-5f4eac24ff5f/dashboard [32m200[0m 136.013 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:09.689Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:09.834Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 145.606 ms - 594[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:10.494Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:10.642Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 147.766 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-324ad6d3-546c-4d83-aa57-f8d07a5ee6bf {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:10.645Z"}
[0mGET /api/v1/affiliates/AFF-324ad6d3-546c-4d83-aa57-f8d07a5ee6bf [32m200[0m 54.089 ms - 538[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:11.339Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:11.481Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 142.289 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-8348e769-2d3c-40b5-a491-49fadfba8c17/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:11.485Z"}
[0mGET /api/v1/affiliates/AFF-8348e769-2d3c-40b5-a491-49fadfba8c17/dashboard [32m200[0m 134.199 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:12.289Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:12.432Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 142.907 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-dd80b53c-e0b3-4584-919e-586068efd670/customers?customerId=INVALID_ID {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:12.435Z"}
[0mGET /api/v1/affiliates/AFF-dd80b53c-e0b3-4584-919e-586068efd670/customers?customerId=INVALID_ID [32m200[0m 106.345 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:13.260Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:13.402Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 141.903 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/INVALID_AFFILIATE/customers {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:13.405Z"}
[0mGET /api/v1/affiliates/INVALID_AFFILIATE/customers [33m403[0m 30.228 ms - 42[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:14.093Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:14.246Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 153.384 ms - 594[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-2dc013b7-2657-46ba-a971-f0fd470bed38/customers {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:14.249Z"}
[0mGET /api/v1/affiliates/AFF-2dc013b7-2657-46ba-a971-f0fd470bed38/customers [32m200[0m 116.101 ms - 437[0m
PASS tests/integration/affiliateCustomerFiltering.test.js (12.769 s)
  Affiliate Customer Filtering Integration Tests
    Email URL Generation for Customer Filtering
      ✓ should generate correct dashboard URL with customer parameter (1291 ms)
    Affiliate Dashboard Customer Filtering API
      ✓ should return customers for authenticated affiliate (910 ms)
      ✓ should filter customers by customerId when provided (1036 ms)
      ✓ should return empty array when filtering by non-existent customerId (925 ms)
      ✓ should require authentication to access customer list (846 ms)
    Complete Email-to-Dashboard Flow Simulation
      ✓ should handle complete flow from email generation to dashboard access (1214 ms)
      ✓ should handle URL parameters correctly throughout the flow (796 ms)
    Dashboard Data Loading for Customer Highlighting
      ✓ should load affiliate profile data correctly (860 ms)
      ✓ should load dashboard statistics correctly (921 ms)
    Error Handling in Customer Filtering Flow
      ✓ should handle invalid customer ID gracefully (931 ms)
      ✓ should handle invalid affiliate ID (895 ms)
      ✓ should handle database connection issues gracefully (928 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/integration/adminCreation.test.js (5.166 s)
  Admin Creation Integration Tests
    Direct Database Admin Creation
      ✓ should create admin with sequential ID when no admins exist (367 ms)
      ✓ should create admin with next sequential ID when admins exist (338 ms)
      ✓ should handle admin creation with all permissions (189 ms)
      ✓ should handle admin creation with partial permissions (197 ms)
    Admin Model Validation
      ✓ should require email field (114 ms)
      ✓ should save admins with different adminIds successfully (279 ms)
      ✓ should save admins with different emails successfully (295 ms)
    Password Handling
      ✓ should hash password before saving (196 ms)
      ✓ should validate password with verifyPassword method (306 ms)
    Admin Query Operations
      ✓ should find admin by adminId (488 ms)
      ✓ should find admin by email (340 ms)
      ✓ should find active admins only (348 ms)
      ✓ should find admins with specific permissions (351 ms)
      ✓ should get last admin for ID generation (336 ms)
    Email Integration
      ✓ should call email service after admin creation (214 ms)
      ✓ should handle email service failures gracefully (217 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:21.114Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NttgsK7Vban3RUvg7HHAK2Ec01gYGMw5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: JuwcQ8BA-cxYkCa20-_23SA5j26wKxSnGtH4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NttgsK7Vban3RUvg7HHAK2Ec01gYGMw5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: s0wJzwwBAL...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 11.777 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:21.490Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 156.921 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:22.221Z"}
  console.log
    CSRF token generation: {
      sessionID: 'B4gecdZow7KSo5ZzJIm_CphxORQnUK1X',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: XATjAIgY-mBlq57EuTK6XaJFS6gEwgk6jjNM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: B4gecdZow7KSo5ZzJIm_CphxORQnUK1X

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LLKDpLgyNy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.995 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-60097fea-be5b-4bad-95ac-089a1fc2ec9a {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:22.264Z"}
[0mGET /api/v1/affiliates/AFF-60097fea-be5b-4bad-95ac-089a1fc2ec9a [32m200[0m 54.673 ms - 460[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:22.789Z"}
  console.log
    CSRF token generation: {
      sessionID: '2Wi1TiqyFAo3fEpkVJNCt-AEOzZ4HyAQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qqXFCdAZ-yZtaJ7M2V6uVpAhCtkZ9E-fdZn0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2Wi1TiqyFAo3fEpkVJNCt-AEOzZ4HyAQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: yxT7S0TzHB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.306 ms - 67[0m
[34mdebug[39m: PUT /api/v1/affiliates/AFF-892b52fe-5494-4cb1-aac9-ee0b5a31d488 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:22.834Z"}
[0mPUT /api/v1/affiliates/AFF-892b52fe-5494-4cb1-aac9-ee0b5a31d488 [32m200[0m 85.348 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:23.412Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qKew5UdZ6vMeUZkeyWs4nvumulH5s5dB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kXrdBzjl-zj3_J4eIXmjb9hR5tILrPSM6qzU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qKew5UdZ6vMeUZkeyWs4nvumulH5s5dB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: VwX90CNdoY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.750 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:23.540Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:03:23.681Z","userType":"affiliate","username":"testaffiliate"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 141.973 ms - 594[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:24.154Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E5FCg_IwhjPbyNck27WmAFvyqFKaAM9J',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: CZQUKb38-QaCPX_hfO0TMcD6sOYc09LemHXE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E5FCg_IwhjPbyNck27WmAFvyqFKaAM9J

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: K8Eibvh3Cz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.821 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-df49c194-8831-4afd-9d03-2fafbc3cdb31/customers?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:24.238Z"}
[0mGET /api/v1/affiliates/AFF-df49c194-8831-4afd-9d03-2fafbc3cdb31/customers?page=1&limit=10 [32m200[0m 110.984 ms - 689[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:24.833Z"}
  console.log
    CSRF token generation: {
      sessionID: 'acAhNBd9QpzFD9QFG3bwlTRM5ji56J4T',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: JVWlL1Dz-b8ZMghWYBxg2WSQBAKgS9A0UYZ0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: acAhNBd9QpzFD9QFG3bwlTRM5ji56J4T

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: bklZhfZb1a...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.084 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-50fb5ea2-95d9-496c-8669-d292969adcd9/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:24.943Z"}
[0mGET /api/v1/affiliates/AFF-50fb5ea2-95d9-496c-8669-d292969adcd9/orders?page=1&limit=10 [32m200[0m 110.384 ms - 713[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:25.535Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gTdvcdRsx2KJ3GFJr_tTcWJ9YyoN0s9w',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 4kLgRF10-2qe4bnEgAnGrcwMnbktVQCcO8kk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gTdvcdRsx2KJ3GFJr_tTcWJ9YyoN0s9w

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: S8HLJ2vf4Q...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.611 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-e9b6484c-e1b0-4a81-9931-4ce92e0aca16/transactions?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:25.611Z"}
[0mGET /api/v1/affiliates/AFF-e9b6484c-e1b0-4a81-9931-4ce92e0aca16/transactions?page=1&limit=10 [32m200[0m 117.784 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:26.212Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Ya73xrYDd3onYCViyyLLbe0MfJlStqTP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: YFqyCiBU-kM3ppYCZeAojKPV3ljheE41DSnI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Ya73xrYDd3onYCViyyLLbe0MfJlStqTP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0ahd0-1Qzk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.870 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-0987d27d-69f8-4af4-a8cd-ec9d3008a394/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:26.380Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-0987d27d-69f8-4af4-a8cd-ec9d3008a394/delete-all-data {
      sessionID: 'Ya73xrYDd3onYCViyyLLbe0MfJlStqTP',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYa73xrYDd3onYCViyyLLbe0MfJlStqTP.wnt1oSWxDjY948EkrC8JASPZHkNhOgl71XS6vFKBOus',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/affiliates/AFF-0987d27d-69f8-4af4-a8cd-ec9d3008a394/delete-all-data [32m200[0m 206.272 ms - 191[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:27.187Z"}
  console.log
    CSRF token generation: {
      sessionID: 'g7CTpp5uxC9CHvQOJ09yajRlmJ1I1fkC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SjdNStE8-5FMU5D47DHWi74c3Isu14XbRmQY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: g7CTpp5uxC9CHvQOJ09yajRlmJ1I1fkC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9lUo30XA8F...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.417 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-a9761f9d-6102-49ce-812f-8ccff500a76e/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:27.228Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-a9761f9d-6102-49ce-812f-8ccff500a76e/delete-all-data {
      sessionID: 'g7CTpp5uxC9CHvQOJ09yajRlmJ1I1fkC',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ag7CTpp5uxC9CHvQOJ09yajRlmJ1I1fkC.pMn27moIK2UJZY1HBcol%2BCaHJJwRPv8zi1eeyj9mFS0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/affiliates/AFF-a9761f9d-6102-49ce-812f-8ccff500a76e/delete-all-data [33m403[0m 30.260 ms - 59[0m
PASS tests/integration/affiliate.test.js (7.666 s)
  Affiliate API
    ✓ should register a new affiliate (1119 ms)
    ✓ should get affiliate profile (563 ms)
    ✓ should update affiliate profile (629 ms)
    ✓ should login affiliate (741 ms)
    ✓ should get affiliate's customers list (679 ms)
    ✓ should get affiliate's orders (702 ms)
    ✓ should get affiliate's earnings/transactions (677 ms)
    ✓ Delete all affiliate data (development only) (975 ms)
    ✓ Reject delete in production environment (557 ms)
    ○ skipped should update payment information
    ○ skipped should handle commission-related endpoints

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:29.591Z"}
[0mGET /api/v1/system/config/public [32m200[0m 30.185 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:30.555Z"}
[0mGET /api/v1/system/config/public [32m200[0m 28.139 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:31.446Z"}
[0mGET /api/v1/system/config/public/wdf_base_rate_per_pound [32m200[0m 27.692 ms - 172[0m
[34mdebug[39m: GET /api/v1/system/config/public/non_existent_key {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:32.297Z"}
[0mGET /api/v1/system/config/public/non_existent_key [33m404[0m 27.017 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config/public/private_key {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:33.173Z"}
[0mGET /api/v1/system/config/public/private_key [33m404[0m 27.245 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:34.077Z"}
[0mGET /api/v1/system/config [32m200[0m 57.460 ms - -[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:34.972Z"}
[0mGET /api/v1/system/config [33m401[0m 0.737 ms - 47[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:35.827Z"}
[0mGET /api/v1/system/config [33m403[0m 27.531 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:36.700Z"}
  console.log
    CSRF token generation: {
      sessionID: 'h7CvwuJ4L5UWLOWSMKFSJLroKEwPw5FW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dhVjTWmg-J6vrCqliEoZRKQpVlJM_G0tuaqg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: h7CvwuJ4L5UWLOWSMKFSJLroKEwPw5FW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: f20jIiNYpu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 11.148 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:36.828Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'h7CvwuJ4L5UWLOWSMKFSJLroKEwPw5FW',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ah7CvwuJ4L5UWLOWSMKFSJLroKEwPw5FW.F%2FdYbjCfgrxY4xTq1wlWyecMmFlDlNP6lBHen3DVvIE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [32m200[0m 118.364 ms - 149[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:37.884Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OQ6z99xvD6dOyY22iekUVBywv8tDH0da',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ozfuLVXd-gJ7eCN-kvbsSG77sYlLzolnQOew

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OQ6z99xvD6dOyY22iekUVBywv8tDH0da

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JJHM83bbVy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.065 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:38.003Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'OQ6z99xvD6dOyY22iekUVBywv8tDH0da',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOQ6z99xvD6dOyY22iekUVBywv8tDH0da.KaUk4SNj%2BY5DwdXouK8AyeTpFLxaKbYORZDkrTfhWjQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Value must be a number for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:67:21)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 88.608 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:38.934Z"}
  console.log
    CSRF token generation: {
      sessionID: 'anvOK37zP3GnNR6D_5ceiVOgxkdzhoWd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ns9tgF2N-YQzWv1XE4kUzQQIv6GX3PGJoMuw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: anvOK37zP3GnNR6D_5ceiVOgxkdzhoWd

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dIU8ZO5a3x...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.385 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:39.072Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'anvOK37zP3GnNR6D_5ceiVOgxkdzhoWd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AanvOK37zP3GnNR6D_5ceiVOgxkdzhoWd.SlgrJ5xZGa77Ze7fgsXPNNzPjhDcv1tYQxRyaZItrnQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Value must be at least 0.5 for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:72:23)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 84.421 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:39.996Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wPvqF1XruF-jPPOpWFf-51rFknNVvjx2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QuPvpfS9-_cFAPrVBls88dD9GwmEtX2ty4iM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wPvqF1XruF-jPPOpWFf-51rFknNVvjx2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 298rgcyaE7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.002 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/non_editable_config {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:40.149Z"}
  console.log
    CSRF check for: /api/v1/system/config/non_editable_config {
      sessionID: 'wPvqF1XruF-jPPOpWFf-51rFknNVvjx2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwPvqF1XruF-jPPOpWFf-51rFknNVvjx2.XTDXnKUwiIi13B4SNp%2F5FSx6tzzI1ixS08jScJ38ooQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Configuration is not editable: non_editable_config
        at Function.Object.<anonymous>.systemConfigSchema.statics.setValue (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:140:11)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /var/www/wavemax/wavemax-affiliate-program/server/routes/systemConfigRoutes.js:83:20

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/non_editable_config [33m400[0m 84.075 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:41.100Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bl0Xs7peusJ9eX4EY-PHCdOks6oAJ_t9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: CVFUgfaS-5Q9Th4t2gi4J-1qMRbw3DfVMq0M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bl0Xs7peusJ9eX4EY-PHCdOks6oAJ_t9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2ZxUPdKkgi...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.150 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:41.313Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fJFO9HApQ7KAdH6ABU1cAzCZe3pz0CMb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 18woNe9G-iO2GLl7c2Jtik1pTyr-Elm56_Pw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fJFO9HApQ7KAdH6ABU1cAzCZe3pz0CMb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _3OZS-jEGu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.104 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:41.321Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'fJFO9HApQ7KAdH6ABU1cAzCZe3pz0CMb',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AfJFO9HApQ7KAdH6ABU1cAzCZe3pz0CMb.%2FXNvMsYWkvj%2FgybUz83nN%2FTfXY0bDeCAcFI6YFbBUmw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m403[0m 55.032 ms - 78[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:42.234Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Zd771Y6zdRGrEOcMkXK4X9Maq6BVz--v',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3lLuwG8g-IbueyI_YqcOHP8MppVmWqsWq1ww

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Zd771Y6zdRGrEOcMkXK4X9Maq6BVz--v

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rb1vISfrrK...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.940 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:42.272Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'Zd771Y6zdRGrEOcMkXK4X9Maq6BVz--v',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AZd771Y6zdRGrEOcMkXK4X9Maq6BVz--v.5D29u3TojlDiHoc5TBiJ7U52zz893i4uW9gDHwQFD2w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 331.551 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:43.460Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bjILqsRxXUiWGoghv64Xbb3bCbFyFpcX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: DwKgTap3-5GnJxVurN5o5ZKY5hynq5a2PmGA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bjILqsRxXUiWGoghv64Xbb3bCbFyFpcX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7cbrbJ2NqB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.166 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:43.544Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'bjILqsRxXUiWGoghv64Xbb3bCbFyFpcX',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AbjILqsRxXUiWGoghv64Xbb3bCbFyFpcX.eW%2FHdeKZ4gl5KWcyhLTp5cmS0g5Hlrzj%2BHYMYJDSPuM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 373.569 ms - 48[0m
PASS tests/integration/systemConfig.test.js (17.75 s)
  System Config API Tests
    Public Endpoints
      GET /api/v1/system/config/public
        ✓ should return all public configurations (1020 ms)
        ✓ should not return private configurations (914 ms)
      GET /api/v1/system/config/public/:key
        ✓ should return a specific public configuration (855 ms)
        ✓ should return 404 for non-existent config (857 ms)
        ✓ should return 404 for private config accessed via public endpoint (919 ms)
    Admin Endpoints
      GET /api/v1/system/config
        ✓ should return all configurations for admin (891 ms)
        ✓ should return 401 without authentication (852 ms)
        ✓ should return 403 for non-admin users (872 ms)
      PUT /api/v1/system/config/:key
        ✓ should update a configuration value (1183 ms)
        ✓ should validate value based on data type (1058 ms)
        ✓ should validate value against min/max constraints (1071 ms)
        ✓ should not allow updating non-editable configs (1098 ms)
        ✓ should require system_config permission (1136 ms)
      POST /api/v1/system/config/initialize
        ✓ should initialize default configurations (1223 ms)
        ✓ should not overwrite existing configurations (1372 ms)
    Integration with Order Model
      ✓ should use SystemConfig WDF rate in new orders (1051 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:46.895Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bXnGCrrTPEH7iMiiRt8K0GQRklAN1r4E',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GIiqKPoO-a_kiXUB2Gi_eye4o2KKXBijE-uw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bXnGCrrTPEH7iMiiRt8K0GQRklAN1r4E

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FGH0sunQrP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.166 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/google {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:46.908Z"}
[0mGET /api/v1/auth/google [36m302[0m 1.968 ms - 0[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:47.520Z"}
  console.log
    CSRF token generation: {
      sessionID: '9hb67MT80KJxmyzqTrwxZGAmvlaMZ8m9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Lwe8lNNo-hraPz-syTa6QzPS3sw6Brp_6lUI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9hb67MT80KJxmyzqTrwxZGAmvlaMZ8m9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Su4alKHgbg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.785 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:48.022Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hyo767-DOJtpt4SZXk-QJJEU_I7XQ_fB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 64WEyEzf-Fc3j0x06QpyyNZzI-RRrGtGbNPY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hyo767-DOJtpt4SZXk-QJJEU_I7XQ_fB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dk0a2JHQNi...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.259 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:48.516Z"}
  console.log
    CSRF token generation: {
      sessionID: '7PTRXa3qXP0FQD9Exmn6tyBjZEFJCA_x',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: e3Lk92tY-3hvPXf-zc77Hvsf_iuP3fODLB7w

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7PTRXa3qXP0FQD9Exmn6tyBjZEFJCA_x

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kxZi5FtxNx...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.317 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/google {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:48.525Z"}
[0mGET /api/v1/auth/google [33m404[0m 1.344 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:49.022Z"}
  console.log
    CSRF token generation: {
      sessionID: '6JEMQTDfoq1yN_KTY24OUE0WrdFxBZiI',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kpFrIAMf-jyVsVaKmV1kg6KK2XxnYNGTACn4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6JEMQTDfoq1yN_KTY24OUE0WrdFxBZiI

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jhIwoyjPGI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.523 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:49.033Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-0ffeb439-bf7f-4c13-802a-d6124fa56be2","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:03:49.234Z","userId":"68430355279923e2ff797ac8","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 201.930 ms - 785[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:49.771Z"}
  console.log
    CSRF token generation: {
      sessionID: 'S4jdptM_vTsWL0q-fynj18avTDefLC9P',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ne5rgT6Z-yRsg_FLMJkj_AjTpPs2D-c0fC9k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: S4jdptM_vTsWL0q-fynj18avTDefLC9P

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gqtHBkdM0K...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.737 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:49.786Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.581 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:50.540Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OjNX2lLtCnMoHhWIk0KhWzvPnkSPI74C',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VKSdQkPX-WDnVhpEC_F9n7mYVHEuYvx0JIW8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OjNX2lLtCnMoHhWIk0KhWzvPnkSPI74C

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XEYy9Er7s7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.379 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:50.548Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.569 ms - 511[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:51.063Z"}
  console.log
    CSRF token generation: {
      sessionID: '4DJxjLFR7o7pc5OGAslK22VZKL3roHI8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8j2uDSb0-CtZ12AtiL8AnoGMURVd_-QcV4HY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4DJxjLFR7o7pc5OGAslK22VZKL3roHI8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fJNgx806Nt...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.994 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:51.160Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.559 ms - 661[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:51.681Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tbxdugeVGuokemhLPBRfymgU4nV-Y8rB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: r9a2zYKK-bQ3YSKK8BMZBuZbBFnwH9V6Zxtw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tbxdugeVGuokemhLPBRfymgU4nV-Y8rB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: nBSrQ-omjZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.509 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:51.691Z"}
  console.log
    CSRF token generation: {
      sessionID: 'slS-QyVT4NI5b0cTACHrCvSfG7UwU-dd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: q38SYIni-jGoZPhucKHngyfS7I_DkHXbfKdQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: slS-QyVT4NI5b0cTACHrCvSfG7UwU-dd

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FhN2VDwHmC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.865 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:51.785Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: 'slS-QyVT4NI5b0cTACHrCvSfG7UwU-dd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AslS-QyVT4NI5b0cTACHrCvSfG7UwU-dd.x534PtDcACL6Yt8TTy5F2ngTHCZdvUpKvPm4eQFil0M',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"facebook","socialAccountId":"facebook456"},"eventType":"ACCOUNT_UPDATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/link","timestamp":"2025-06-06T15:03:51.875Z","userId":"68430357279923e2ff797b1b","userType":"affiliate"}
[0mPOST /api/v1/auth/social/link [32m200[0m 91.042 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:52.418Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bQVehEXR7ALl1Hfa0Jku_ZlXqVxzxhGC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rf6oSRfT-Y8zqM_awxPi3ZqPMZsQNexEcbKo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bQVehEXR7ALl1Hfa0Jku_ZlXqVxzxhGC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: w1Tjgomp7-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.290 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:52.427Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OeCxpTf5nFqZpdpnPZJOVh9WBqDkmhdA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: zlWRqRNW-vpNMqKQkV4zlgarcnzdNdU_yq4Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OeCxpTf5nFqZpdpnPZJOVh9WBqDkmhdA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YLesNRNlpK...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.718 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:52.593Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: 'OeCxpTf5nFqZpdpnPZJOVh9WBqDkmhdA',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOeCxpTf5nFqZpdpnPZJOVh9WBqDkmhdA.ffEiJBP0oqnjypxErVl0%2BMG6UxXkODxR4szdS73%2BctM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/social/link [33m400[0m 45.153 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:53.156Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ePhdcjPlKfpc0prk34WkASUKsxj_5siN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rJkNsD4F-va08jnACFl2V0L4STCD1NVa9DNo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ePhdcjPlKfpc0prk34WkASUKsxj_5siN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RLY34ouKWl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.071 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:53.167Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OGrkxvBUOmYPLPgW458DgaHOlB56XB93',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Aqrq3Y0a-1jnNaiQYfo4aIh-4UuWUdvt9WbA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OGrkxvBUOmYPLPgW458DgaHOlB56XB93

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 47rSxz6jM2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.024 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:53.274Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'OGrkxvBUOmYPLPgW458DgaHOlB56XB93',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOGrkxvBUOmYPLPgW458DgaHOlB56XB93.ICHjrloPoN%2BxPOQ74v5UIJBlMtZei%2F4u6Z%2FgO1q892M',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:03:53.370Z","userType":"affiliate","username":"socialuser"}
info: undefined {"affiliateId":"AFF-e54e7bb8-e9d7-46f2-949c-aa8562dae57f","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"linkedin","timestamp":"2025-06-06T15:03:53.370Z","userId":"68430359279923e2ff797b4c","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 96.115 ms - 592[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:53.899Z"}
  console.log
    CSRF token generation: {
      sessionID: 'g-5i-7PheimoPRzJrE8IfC6vQE6dOvLJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: eLZY1NUy-IdFKgMto5dfzGgxp0TugZFJ7zFA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: g-5i-7PheimoPRzJrE8IfC6vQE6dOvLJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jDVC0dSLve...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.051 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:53.911Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LLsjEzIkNsvCe-MQrtNIeXUCzp7kEiqs',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: r0PMCsYa-Qf2xDGLw4Ed7kr1jBzSVE-_COCY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LLsjEzIkNsvCe-MQrtNIeXUCzp7kEiqs

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qXyGOs7RMw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.755 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:54.030Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'LLsjEzIkNsvCe-MQrtNIeXUCzp7kEiqs',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ALLsjEzIkNsvCe-MQrtNIeXUCzp7kEiqs.huKoK3IqOn7ENXaG4UbzE3%2FUmcI1lvFEZ8nBVNglG90',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:03:54.162Z","userType":"affiliate","username":"socialuser"}
info: undefined {"affiliateId":"AFF-e955606a-790a-4d5f-a735-46d57c38b57d","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"linkedin","timestamp":"2025-06-06T15:03:54.163Z","userId":"68430359279923e2ff797b66","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 133.096 ms - 592[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:54.689Z"}
  console.log
    CSRF token generation: {
      sessionID: '3_9WdtO2y46gF2kkanDohEMnBmW6aF1A',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ot0XYEYt-4J27EL-WfwOJ6EY43xCOTIl72uo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3_9WdtO2y46gF2kkanDohEMnBmW6aF1A

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: EyBCG48y6j...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.639 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:54.699Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.205 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:55.192Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qVFepM6PDDJwGRgRuVWGICHJRB4qTqLv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3Y9r5jXL-OnqTbp-w4b4MfAFS4Q01uAnzIzA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qVFepM6PDDJwGRgRuVWGICHJRB4qTqLv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Vio3jOnIn0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.859 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:55.203Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.637 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:55.689Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nEE50petWPV-bAiegwoIxVx3oU_s8zZg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dtYnOaRg-LuZEkFNNrw3MiM0_TX5ohke8NMY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nEE50petWPV-bAiegwoIxVx3oU_s8zZg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AZvBJV_uOy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.550 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:55.700Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 3.525 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:56.193Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aIPpmGD19bEKz8cit0oWR1wLmMMEkaEx',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3uh89NMc-q1xpzmZZbUcafrOctVif6bcXiaQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: aIPpmGD19bEKz8cit0oWR1wLmMMEkaEx

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JoD91y-4IO...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.038 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:56.204Z"}
  console.error
    Social registration error: Error: Database connection failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/socialAuth.test.js:583:62)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1296 |     
      1297 |   } catch (error) {
    > 1298 |     console.error('Social registration error:', error);
           |             ^
      1299 |     res.status(500).json({
      1300 |       success: false,
      1301 |       message: 'Registration failed'

      at error (server/controllers/authController.js:1298:13)

[0mPOST /api/v1/auth/social/register [31m500[0m 83.930 ms - 49[0m
PASS tests/integration/socialAuth.test.js (11.108 s)
  Social Authentication Integration Tests
    OAuth Initiation Endpoints
      ✓ should redirect to Google OAuth when Google auth is configured (956 ms)
      ✓ should redirect to Facebook OAuth when Facebook auth is configured (499 ms)
      ✓ should redirect to LinkedIn OAuth when LinkedIn auth is configured (496 ms)
      ✓ should return 404 for unconfigured OAuth providers (506 ms)
    Social Registration Flow
      ✓ should complete social registration with all required fields (748 ms)
      ✓ should reject social registration with invalid social token (770 ms)
      ✓ should reject social registration with missing required fields (522 ms)
      ✓ should prevent duplicate social registrations (613 ms)
    Account Linking Flow
      ✓ should link social account to existing affiliate by email (743 ms)
      ✓ should reject linking if social account already exists (737 ms)
    Social Login Flow
      ✓ should successfully login with existing social account (742 ms)
      ✓ should update social account tokens on login (791 ms)
    Security and Edge Cases
      ✓ should handle malformed social tokens gracefully (503 ms)
      ✓ should handle expired social tokens (497 ms)
      ✓ should sanitize social profile data (503 ms)
      ✓ should handle database errors during social registration (585 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:57.822Z"}
  console.log
    CSRF token generation: {
      sessionID: 'EWnufv8-8-u9s7L4Bqwsam1QT1-B2jfA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OR6cAt7u-opSFGYRi3ZlMaoxK9vXRi7yYprY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: EWnufv8-8-u9s7L4Bqwsam1QT1-B2jfA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: y-BneOQifM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.754 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:58.483Z"}
[0mPOST /api/v1/customers/register [32m201[0m 191.737 ms - 297[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:59.248Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NRxhcyxsrkOeVFI5227mEAz945a36UCY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3wWBujnW-v4MDYTNrzQL-jQgiEvbDEa24TFY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NRxhcyxsrkOeVFI5227mEAz945a36UCY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Lp-nTkIc2_...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.666 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:03:59.515Z"}
[0mPOST /api/v1/customers/register [33m400[0m 29.527 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:00.022Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rWGamn-S6iFzkeed7Cif0XIdHJ4PZD8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: cYtcXXnN-ABaAjFIofPgXFJls0P7FXEYKLYI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rWGamn-S6iFzkeed7Cif0XIdHJ4PZD8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Y-J0_C_aeW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.703 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:00.307Z"}
[0mPOST /api/v1/customers/register [33m400[0m 56.187 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:00.835Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ZrpkHmLdfXkcdAspxFSObYUb2OzNu-7M',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dDkZ4nnd-SYQykTTxnBMHmLLY_g9szXBHuWE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ZrpkHmLdfXkcdAspxFSObYUb2OzNu-7M

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: wcUJitHTWq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.108 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:01.112Z"}
[0mPOST /api/v1/customers/register [33m400[0m 55.857 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:01.638Z"}
  console.log
    CSRF token generation: {
      sessionID: 'vOqXnVGgbQfH30yEKHW1RSHtIgayx1og',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: jVZk3PxG-NlxNvTx0A2HxanFSX0-jMzjC4hM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: vOqXnVGgbQfH30yEKHW1RSHtIgayx1og

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2onYRpwbyz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.387 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:01.894Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 83.691 ms - 472[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:02.459Z"}
  console.log
    CSRF token generation: {
      sessionID: '-TJt5mYmw6HYx1vmvzr9UTLnxT6YFe-S',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: YywUzFpp-brPqi2jUfTJUpvKEnRl-_pz4Tfo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -TJt5mYmw6HYx1vmvzr9UTLnxT6YFe-S

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: O4gyJvrCg3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.155 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:02.740Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 82.969 ms - 448[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:03.295Z"}
  console.log
    CSRF token generation: {
      sessionID: '7IsZ0mPAcuvUrH2claiSHpvlupiVzsiO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: BJpAdSxD-V_9TLxruihQeNS-NQfU2Xh74RYI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7IsZ0mPAcuvUrH2claiSHpvlupiVzsiO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: neSyrg3urq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.088 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:03.581Z"}
[0mGET /api/v1/customers/CUST123/profile [33m403[0m 54.782 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:04.111Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dZJnQbFv02mb3ceZ_X8KVhSNui2TTwUZ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PuXisf7M-nDBU-cU_0eBPB1M3hTMo2VlO-7s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dZJnQbFv02mb3ceZ_X8KVhSNui2TTwUZ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: nNpUg3tYPw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.906 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:04.390Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 54.710 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:04.920Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CgXHw04YV1bNSSJvNPmE8cECbuTfI_Es',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9HPiLpjC-yWGrlB03zwpBTucfyRVZ3O1Mni4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CgXHw04YV1bNSSJvNPmE8cECbuTfI_Es

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Yd3cyrwRxv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 13.278 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:05.193Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 119.155 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:05.826Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ZDxPOLZndGzSQnD-kMZAcTREfzkeOMwt',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: egK9pZMy-pWIIH9kYM7mHT7-FENoIhVa1thk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ZDxPOLZndGzSQnD-kMZAcTREfzkeOMwt

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -HwSRjG82p...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.628 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:06.095Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 83.730 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:06.751Z"}
  console.log
    CSRF token generation: {
      sessionID: 'KRyRr6QFbqgd0VTy3kYZdxibGXwOfpal',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VQDjGa2e-Tx-EciF6LurJBCpNu96gSI0f-og

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: KRyRr6QFbqgd0VTy3kYZdxibGXwOfpal

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2UJdyf5XeM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.512 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:07.043Z"}
[0mGET /api/v1/customers/CUST123/orders?page=1&limit=10 [32m200[0m 109.006 ms - 610[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:07.625Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VGKOzP-jINIUZA3XOQobh6abSxjBF3ww',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HxDb0BRc-9OHer16XTv5ilosUJ5kVsvVQ7Fw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VGKOzP-jINIUZA3XOQobh6abSxjBF3ww

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: nMaggwb8Po...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.644 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?status=delivered {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:07.948Z"}
[0mGET /api/v1/customers/CUST123/orders?status=delivered [32m200[0m 108.660 ms - 370[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:08.547Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mqe4wrO8EZFZEMCLvSDWqrSC9E0IgbCo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 34eRBoNZ-kcGKMawGPT3VegUo-I2vV7ekDuM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mqe4wrO8EZFZEMCLvSDWqrSC9E0IgbCo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: lgXhss7rgv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.724 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:08.805Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'mqe4wrO8EZFZEMCLvSDWqrSC9E0IgbCo',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Amqe4wrO8EZFZEMCLvSDWqrSC9E0IgbCo.wnSTBYt%2BbVRkoaSUSmLSBBAE6uqpaid%2BOg2B4uADQlA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [32m200[0m 198.576 ms - 58[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:09.006Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:466:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:467:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:468:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:501:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 142.144 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:09.622Z"}
  console.log
    CSRF token generation: {
      sessionID: 'WWM_xl67y6egJ6UvbqGvEcWt2blS_zeK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: DnvHDKck-FFiRJ5GIdWrNjUxYLHmffTp1LgA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: WWM_xl67y6egJ6UvbqGvEcWt2blS_zeK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LUN8Cn359U...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.405 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:09.897Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'WWM_xl67y6egJ6UvbqGvEcWt2blS_zeK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AWWM_xl67y6egJ6UvbqGvEcWt2blS_zeK.Y8ZJjhraa%2F28HafxquyTj8xGNGkJpMjwEsn4J1zzXwI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [33m401[0m 109.595 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:10.490Z"}
  console.log
    CSRF token generation: {
      sessionID: '235Ro4qIIiWEsTPMyavkRwAFrKoeE6jl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qLOq6hjs-QRU-EZJwwsKzsfsEyT27tLHXVhY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 235Ro4qIIiWEsTPMyavkRwAFrKoeE6jl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Uo0Mr5Rmah...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.524 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:10.749Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: '235Ro4qIIiWEsTPMyavkRwAFrKoeE6jl',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A235Ro4qIIiWEsTPMyavkRwAFrKoeE6jl.es%2BGkKcQVrki11mpJicH0Mf%2BpXjx8%2BXYGwJZXBx%2BIt0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [33m400[0m 112.642 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:11.336Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lTLWraHK44ESPmpH0Uz5smzw_aJoICsA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ycgS5yYR-x3Xx1zpGm0Z_xiWkhuTTNM8QyEk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lTLWraHK44ESPmpH0Uz5smzw_aJoICsA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5bKY3wyf4j...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.279 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:11.631Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 134.061 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:12.251Z"}
  console.log
    CSRF token generation: {
      sessionID: 'op3X2Y4chmxfw7OyqzB-9jG-RD10PfR9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LtyruzNR-jUDqr0oPlP8yREoux_0pAjVT4Z4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: op3X2Y4chmxfw7OyqzB-9jG-RD10PfR9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0ObX819Jo9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.020 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:12.551Z"}
[0mGET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true [32m200[0m 135.308 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:13.164Z"}
  console.log
    CSRF token generation: {
      sessionID: 'IrQAQI3xjyWSfSlkCs-ONc6ForH2H6GV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FRPapO2M-VbHxlU1ycwR5zVpHO-UeHFL0gdE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: IrQAQI3xjyWSfSlkCs-ONc6ForH2H6GV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: f_Tvjv-2vi...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.435 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:13.486Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 133.774 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:14.096Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YuGwBJ83yEXLztk5bcuE6CopbWn5hFrt',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pV01Lbvw-b8xe50-FCwx1zITsA4TzxvIbZZA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YuGwBJ83yEXLztk5bcuE6CopbWn5hFrt

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: D0zHXbns-3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.186 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:14.435Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'YuGwBJ83yEXLztk5bcuE6CopbWn5hFrt',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYuGwBJ83yEXLztk5bcuE6CopbWn5hFrt.Q7eIRX2VZB5zWJRvT%2F%2F%2BBCIRyyrA8DrMe5hmqkbaBb0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [32m200[0m 116.486 ms - 107[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:15.079Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Z1EsE2TxPb9L53wZu81JUIB01b7AdyCw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5guda1gi-ORVBvzUdjKfHdhGLq5t9aPcn63s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Z1EsE2TxPb9L53wZu81JUIB01b7AdyCw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5424_nsOFU...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.128 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:15.379Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'Z1EsE2TxPb9L53wZu81JUIB01b7AdyCw',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AZ1EsE2TxPb9L53wZu81JUIB01b7AdyCw.XFrTMppShcuJL%2FfI4lmWYuX25wzyHFlqJaQ%2F5LXTs8Y',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 28.745 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:15.881Z"}
  console.log
    CSRF token generation: {
      sessionID: '07A4mu_z1rpOSU5oGQzWmCu7SQBbOILf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TqSdtGTU-ozvwNm4Js4CswrowxSve0Vq64IQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 07A4mu_z1rpOSU5oGQzWmCu7SQBbOILf

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: V7YyiBodJT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.862 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:16.236Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: '07A4mu_z1rpOSU5oGQzWmCu7SQBbOILf',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A07A4mu_z1rpOSU5oGQzWmCu7SQBbOILf.aXYpxHZ7QoAJMrKVrSFIMsRPCqwz5bv9FWV2frfjz6Q',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 29.760 ms - 63[0m
PASS tests/integration/customer.test.js (19.959 s)
  Customer Integration Tests
    POST /api/v1/customers/register
      ✓ should register a new customer (1443 ms)
      ✓ should fail with invalid affiliate ID (769 ms)
      ✓ should fail with duplicate email (817 ms)
      ✓ should fail with duplicate username (803 ms)
    GET /api/v1/customers/:customerId/profile
      ✓ should return customer profile for authenticated customer (821 ms)
      ✓ should return customer profile for affiliate (836 ms)
      ✓ should fail for unauthorized customer (816 ms)
      ✓ should return limited data without authentication (808 ms)
    PUT /api/v1/customers/:customerId/profile
      ✓ should update customer profile (906 ms)
      ✓ should not update protected fields (926 ms)
    GET /api/v1/customers/:customerId/orders
      ✓ should return customer orders with pagination (873 ms)
      ✓ should filter orders by status (921 ms)
    PUT /api/v1/customers/:customerId/password
      ✓ should update customer password (1075 ms)
      ✓ should fail with incorrect current password (868 ms)
      ✓ should fail with weak new password (845 ms)
    GET /api/v1/customers/:customerId/dashboard
      ✓ should return customer dashboard statistics (915 ms)
      ✓ should return monthly statistics (913 ms)
      ✓ should allow affiliate to view customer dashboard (933 ms)
    DELETE /api/v1/customers/:customerId/delete-all-data
      ✓ should delete all customer data in development environment (981 ms)
      ✓ should reject deletion in production environment (802 ms)
      ✓ should reject unauthorized deletion (913 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:18.342Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Edic88kQ4AqcXfuE97UpiWrojBU6KlMi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TlZIRQHh-bUHkXc-7AF8jClEbOIf05rR3D_o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Edic88kQ4AqcXfuE97UpiWrojBU6KlMi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FEl-RZ26RX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.622 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:18.440Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 182.715 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:18.798Z"}
[0mGET /api/v1/administrators [32m200[0m 110.721 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:19.586Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dYh3fPaR6DUgBo4BWyTFoqM6oJci8ZV7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VnNuMwl7-1F8TaC3sUOcRlThEg_3uTXsvG-g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dYh3fPaR6DUgBo4BWyTFoqM6oJci8ZV7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: frJNB9hN2l...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.937 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:19.679Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.317 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?active=true {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:19.911Z"}
[0mGET /api/v1/administrators?active=true [32m200[0m 111.096 ms - 376[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:20.609Z"}
  console.log
    CSRF token generation: {
      sessionID: '1E3h6QU6RhhSSkSi78T-pqy16hYaaGzU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: BUJdgbjQ-xdiztvjtUdnQRQCS5tdxGekr06Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 1E3h6QU6RhhSSkSi78T-pqy16hYaaGzU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: x-P2VRi1c1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.481 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:20.718Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.809 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:21.966Z"}
[0mGET /api/v1/administrators?page=2&limit=5 [32m200[0m 110.728 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:22.685Z"}
  console.log
    CSRF token generation: {
      sessionID: 'snRX6xJ-nkHKEklVhLePdKgOsr6bzzJU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LFoVrKDW-vLCJcH9nOZzVaY4ac_BsPm8Vj1Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: snRX6xJ-nkHKEklVhLePdKgOsr6bzzJU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YSaoyyU-0Y...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.460 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:22.790Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.065 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:22.941Z"}
[0mGET /api/v1/administrators [33m401[0m 1.049 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:23.518Z"}
  console.log
    CSRF token generation: {
      sessionID: '6pdqTiFFg7s7pO8rmjydvkcXh-g1DKyy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dXQUXrVd-mnGg1sRzLL-xM4L27Zl7tXZhbm8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6pdqTiFFg7s7pO8rmjydvkcXh-g1DKyy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: st_3bjoIpJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.646 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:23.610Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.393 ms - 615[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:23.923Z"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 163.843 ms - 555[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:24.089Z"}
[0mGET /api/v1/administrators [33m403[0m 30.046 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:24.712Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gzgGiLyLppbQyiHxD_UpwrFlh79eznSV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: l7mh35HG-ErWUBd8N30JiHOqZ_9-ZZJ-vJ6E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gzgGiLyLppbQyiHxD_UpwrFlh79eznSV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: vUIi1L_B5U...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.371 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:24.807Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.760 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/684303781b7b9dfea5a4c912 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:25.057Z"}
[0mGET /api/v1/administrators/684303781b7b9dfea5a4c912 [32m200[0m 80.484 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:25.714Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wPEd1BUJP1VB1UhbxgKB9obOVhquaMuO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: eJ0aNvp8-mYt0y9El6NLm9NdnQYsLIZb0vHg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wPEd1BUJP1VB1UhbxgKB9obOVhquaMuO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -Zp48RnQPe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.538 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:25.841Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.820 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/684303791b7b9dfea5a4c933 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:25.992Z"}
[0mGET /api/v1/administrators/684303791b7b9dfea5a4c933 [33m404[0m 79.253 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:26.653Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Qvd7J46YEvs_jPUMx_QpxguWPe6Sn7wr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2wfhvSu7-FumLZgWJEt76rxYf6ahFQEJWN4c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Qvd7J46YEvs_jPUMx_QpxguWPe6Sn7wr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8146c7iyq3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.179 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:26.750Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.686 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/invalid-id {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:26.894Z"}
[0mGET /api/v1/administrators/invalid-id [33m400[0m 56.500 ms - 54[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:27.555Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JYk17XmtSwN4AL3cZN-6lhM3flm-HMst',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5pBqQOfL-XucWaWa09IktXn-_c_nSpbTNHRA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JYk17XmtSwN4AL3cZN-6lhM3flm-HMst

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RnNPb8GvRA...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.113 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:27.649Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.160 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:27.792Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'JYk17XmtSwN4AL3cZN-6lhM3flm-HMst',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AJYk17XmtSwN4AL3cZN-6lhM3flm-HMst.vO7i67iR77qmM37StYQZ9pSV4o57JTOmde5IDkH0cGA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [32m201[0m 193.535 ms - 329[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:27.989Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.191 ms - 677[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:28.735Z"}
  console.log
    CSRF token generation: {
      sessionID: 'vS_BlcsFF8PL9VEcxtk5E8j3Lp5UArw1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Iy2QqfA5-BPI57KpZRzj3ywlMSd7wAAZ5x4I

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: vS_BlcsFF8PL9VEcxtk5E8j3Lp5UArw1

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: SZG7hn92St...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.457 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:28.832Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.414 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:28.976Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'vS_BlcsFF8PL9VEcxtk5E8j3Lp5UArw1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AvS_BlcsFF8PL9VEcxtk5E8j3Lp5UArw1.%2BJewi8fBDUg2nxpQ%2BuDa2KRroHvAy6YS5PdW1aV%2Fc5A',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 56.046 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:29.611Z"}
  console.log
    CSRF token generation: {
      sessionID: '23DtmyDfZ60eQDZUEeC_CytGlNCMPhRC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bMCT5XJZ-1pRt7bABXYLtEfbYgr0GwcwaD7Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 23DtmyDfZ60eQDZUEeC_CytGlNCMPhRC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: tgpCbQOtSy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.248 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:29.699Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.600 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:29.844Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '23DtmyDfZ60eQDZUEeC_CytGlNCMPhRC',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A23DtmyDfZ60eQDZUEeC_CytGlNCMPhRC.eJcM%2BZ5sAkLYEG0DQ4rV2EIFAyZbbipVamDhZ3O7nl0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 55.977 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:30.472Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LVPJPsfYaYvLkEhL9C5iw3uLcFlg62Lm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: eLU6MVWo-VekuDroTvtQBWDQiFDL6tFL-HUU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LVPJPsfYaYvLkEhL9C5iw3uLcFlg62Lm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TRp4Hr1P4b...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.434 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:30.567Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.472 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:30.710Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'LVPJPsfYaYvLkEhL9C5iw3uLcFlg62Lm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ALVPJPsfYaYvLkEhL9C5iw3uLcFlg62Lm.BWcoFZz4TXjAdRp9cnieanhmFgQ1neAKLSNK1HlqbEs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 56.283 ms - 204[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:31.343Z"}
  console.log
    CSRF token generation: {
      sessionID: '948QV6YQwD2bKCHYfi9OC7SSrlmbmu83',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PEiANN2h-8olXNRsDaHSaMtTSF6LApDRcA7k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 948QV6YQwD2bKCHYfi9OC7SSrlmbmu83

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Hh2EZsaaXK...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.702 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:31.447Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.713 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:31.601Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '948QV6YQwD2bKCHYfi9OC7SSrlmbmu83',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A948QV6YQwD2bKCHYfi9OC7SSrlmbmu83.wfTnb4v%2BwggmJmlNRElTEzhQInvK7aG41Qv206%2B2DN0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m409[0m 83.535 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:32.258Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mx5NQ3wV-Kr3JOO8oj16rD7k1jhIu8Zu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: s57IjVNk-a6Efatho1d0xggwks2T1XFrFLj8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mx5NQ3wV-Kr3JOO8oj16rD7k1jhIu8Zu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: NfDo9km49j...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.851 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:32.348Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.076 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:32.574Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Vv05Zj35dc2r7JuxkhTjU_m6V2NCpGmC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZzxfRccU-mqhYTlvwNHlH3vahmKECQBGZB8M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Vv05Zj35dc2r7JuxkhTjU_m6V2NCpGmC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ldugWCGfPY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.866 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:32.582Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.478 ms - 649[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:32.725Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'Vv05Zj35dc2r7JuxkhTjU_m6V2NCpGmC',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AVv05Zj35dc2r7JuxkhTjU_m6V2NCpGmC.pFTfqWD3%2FVE8jW8zYxgdqTAf760k0eaOUClxVPnGRzw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m403[0m 55.941 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:33.357Z"}
  console.log
    CSRF token generation: {
      sessionID: 'O5hn7NoihK2J2I0AZpKa94ORSekdtsy4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UeY0PRkc-ixG0858S6-UjV0PjtxWflHH5w-k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: O5hn7NoihK2J2I0AZpKa94ORSekdtsy4

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: wgqtqUcHi-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.471 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:33.478Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 170.350 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303811b7b9dfea5a4ca34 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:33.734Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303811b7b9dfea5a4ca34 {
      sessionID: 'O5hn7NoihK2J2I0AZpKa94ORSekdtsy4',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AO5hn7NoihK2J2I0AZpKa94ORSekdtsy4.sl4ENvMZtllCIzyLTUJGsbgTX9hvoMIHrwDEq15ivL0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303811b7b9dfea5a4ca34 [32m200[0m 90.455 ms - 337[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:34.401Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FP2kYjpXOIJN0V_zOhAhJnwaOHUpn7M5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 6Pn39ryR-9Zh43jZyb1d-wAw7FIKyrsY_yIg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FP2kYjpXOIJN0V_zOhAhJnwaOHUpn7M5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cbxD5DPGGK...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.124 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:34.497Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.957 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303821b7b9dfea5a4ca55 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:34.722Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303821b7b9dfea5a4ca55 {
      sessionID: 'FP2kYjpXOIJN0V_zOhAhJnwaOHUpn7M5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AFP2kYjpXOIJN0V_zOhAhJnwaOHUpn7M5.5uRZVv3zo%2BSFn24nfc7w1BrETBMlKyz3%2BK%2FYMLjNeq8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303821b7b9dfea5a4ca55 [32m200[0m 112.900 ms - 318[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:35.425Z"}
  console.log
    CSRF token generation: {
      sessionID: '5ZDKwFytBYP9yt2qqpnq9Yk8oDRDOpA3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: COJmhM3Q-dG0kGjdmSXXg5Rk6d9c8vu0CTMU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5ZDKwFytBYP9yt2qqpnq9Yk8oDRDOpA3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eqLOORYGci...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.498 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:35.519Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.830 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303831b7b9dfea5a4ca77 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:35.762Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303831b7b9dfea5a4ca77 {
      sessionID: '5ZDKwFytBYP9yt2qqpnq9Yk8oDRDOpA3',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5ZDKwFytBYP9yt2qqpnq9Yk8oDRDOpA3.3q7J%2FqUktnGfPA9soQ9fiVU5D3bDReaoAI7uR09AQSM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303831b7b9dfea5a4ca77 [32m200[0m 199.213 ms - 316[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:35.964Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.864 ms - 645[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:36.691Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gmzubTcoKXVUGyqGPudyJU8plsvUGpgq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: s5MYBSUX-xo9CNcBKpUT0KcvhJ-ua6izAkOw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gmzubTcoKXVUGyqGPudyJU8plsvUGpgq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CIcaB9PCJ-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.662 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:36.788Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.698 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303841b7b9dfea5a4ca9e {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:37.036Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303841b7b9dfea5a4ca9e {
      sessionID: 'gmzubTcoKXVUGyqGPudyJU8plsvUGpgq',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AgmzubTcoKXVUGyqGPudyJU8plsvUGpgq.tExaCOx0n0tmPbf%2F71F%2BWPTevcTPJpv3PuTreKegaPQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303841b7b9dfea5a4ca9e [32m200[0m 87.330 ms - 317[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:37.126Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.022 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:37.743Z"}
  console.log
    CSRF token generation: {
      sessionID: 'UstbYkUNX5SG4zAJeQCqvf0VvH-0adQm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5AMRmZI1-IErGylsVGa8APZOpZPzRYpwGcsE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: UstbYkUNX5SG4zAJeQCqvf0VvH-0adQm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _g92eM1A_l...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.972 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:37.837Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.735 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303851b7b9dfea5a4cac0 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:38.074Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303851b7b9dfea5a4cac0 {
      sessionID: 'UstbYkUNX5SG4zAJeQCqvf0VvH-0adQm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AUstbYkUNX5SG4zAJeQCqvf0VvH-0adQm.qRo9VTKwWUPxLt13ddDI4Z5SQIsPK1sPVNoT3ld5DQ8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303851b7b9dfea5a4cac0 [32m200[0m 83.834 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:38.742Z"}
  console.log
    CSRF token generation: {
      sessionID: 'he2lDM_43GcMCz0V6F4u7Tu9TqT8-_y8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7CPW87Jv-y0_Y27pPPmgtydKUK-mBo97HRMk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: he2lDM_43GcMCz0V6F4u7Tu9TqT8-_y8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ozH2S30mBB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.064 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:38.838Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.097 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303861b7b9dfea5a4cae1 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:39.087Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303861b7b9dfea5a4cae1 {
      sessionID: 'he2lDM_43GcMCz0V6F4u7Tu9TqT8-_y8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ahe2lDM_43GcMCz0V6F4u7Tu9TqT8-_y8.M8SsDhm2ObPOxzBH7KjvDMZhEeW1ubOhW%2Bs9hqxOAp8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303861b7b9dfea5a4cae1 [33m409[0m 85.202 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:39.749Z"}
  console.log
    CSRF token generation: {
      sessionID: 'BQT5DDO17lXRYxD319mKcDi7FZ2cAllq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: v9aFzuOT-cWpX32tLP8cN39IOmWSIj9wQRU8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: BQT5DDO17lXRYxD319mKcDi7FZ2cAllq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Q6rMI2sVOb...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.376 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:39.844Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 164.980 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303871b7b9dfea5a4cafc {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:40.110Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303871b7b9dfea5a4cafc {
      sessionID: 'BQT5DDO17lXRYxD319mKcDi7FZ2cAllq',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ABQT5DDO17lXRYxD319mKcDi7FZ2cAllq.CFQaqTP%2BrCsaL9HlhODiW6U%2F4b0UjWcUrmMu2o8m9v0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303871b7b9dfea5a4cafc [33m400[0m 55.281 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:40.760Z"}
  console.log
    CSRF token generation: {
      sessionID: '_xYNKQ4mGz9ydQu_Cb8eQlbrQcHFBE6Q',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lPwj1SHv-lx08_NFQt3mqmVkI4ZYO1qunEU8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _xYNKQ4mGz9ydQu_Cb8eQlbrQcHFBE6Q

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mWFp3JyxZX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.359 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:40.854Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.615 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:41.167Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hIbjgBQoFKLGv9YihvECbu2YdM1KNUtL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NUJQBuOH-QjWjOn6NaACqXC7Ud7ibSmlJwe8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hIbjgBQoFKLGv9YihvECbu2YdM1KNUtL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rtuk-y3qeu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.121 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:41.175Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.713 ms - 650[0m
[34mdebug[39m: PATCH /api/v1/administrators/684303881b7b9dfea5a4cb22 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:41.318Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303881b7b9dfea5a4cb22 {
      sessionID: 'hIbjgBQoFKLGv9YihvECbu2YdM1KNUtL',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AhIbjgBQoFKLGv9YihvECbu2YdM1KNUtL.cKUBlwsFVpU%2B4D9SEhl%2FjUdgsHTKZeyKBRJEXj3Cxwo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/684303881b7b9dfea5a4cb22 [33m403[0m 71.779 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:41.959Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XxcpS9iqZP6F8bFcji8M1-VVsrun88Du',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: h7u1pdFp-ewIABjP7wZLhf6QLIWz70-Lkq0g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XxcpS9iqZP6F8bFcji8M1-VVsrun88Du

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: v9NI49EcBa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.555 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:42.055Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.861 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/6843038a1b7b9dfea5a4cb48 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:42.283Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038a1b7b9dfea5a4cb48 {
      sessionID: 'XxcpS9iqZP6F8bFcji8M1-VVsrun88Du',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AXxcpS9iqZP6F8bFcji8M1-VVsrun88Du.SDYOVtlc4QR9w1z4kiKnzfdV3LKlP4zbSKwtjXa%2B82w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/6843038a1b7b9dfea5a4cb48 [32m200[0m 116.768 ms - 63[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:42.993Z"}
  console.log
    CSRF token generation: {
      sessionID: 'AgheH9B_GZ4Coc-ZQi4JDaYJcAsarUQh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pBHHZkMr-vk4d6veH4OFth0ynaKdQ0LRrS8Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: AgheH9B_GZ4Coc-ZQi4JDaYJcAsarUQh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: V_YcsnLniU...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.706 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:43.079Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.366 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/6843038a1b7b9dfea5a4cb65 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:43.311Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038a1b7b9dfea5a4cb65 {
      sessionID: 'AgheH9B_GZ4Coc-ZQi4JDaYJcAsarUQh',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AAgheH9B_GZ4Coc-ZQi4JDaYJcAsarUQh.pa40kUJNXdTqBIJQXVU7GmWo4I1VPAXWlhP%2F8WlEVNQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/6843038a1b7b9dfea5a4cb65 [33m400[0m 55.218 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:43.947Z"}
  console.log
    CSRF token generation: {
      sessionID: '8TPLI5wd3i6QXsiRynJ5TiY7FwGwivM9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TQlzj5pj-aB-4Igv7KIO2F-Shl2qBdQ8xL4U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8TPLI5wd3i6QXsiRynJ5TiY7FwGwivM9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aWD1s42TYW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.624 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:44.039Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.584 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/6843038b1b7b9dfea5a4cb85 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:44.298Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038b1b7b9dfea5a4cb85 {
      sessionID: '8TPLI5wd3i6QXsiRynJ5TiY7FwGwivM9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8TPLI5wd3i6QXsiRynJ5TiY7FwGwivM9.iiO1VMXBbzTVwch%2FkHiJm3jOI19ri6wrQpQ3hPCWgm4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/6843038b1b7b9dfea5a4cb85 [33m400[0m 54.779 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:44.941Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ARGxsoiIXOnJiXui_Oi2oDEhC94yq7Ie',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RxCMhqfy-29pHyukMhhb1AUdyKnNCyGWdi5E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ARGxsoiIXOnJiXui_Oi2oDEhC94yq7Ie

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _WjNsVFrO3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.117 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:45.050Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 157.023 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:45.407Z"}
  console.log
    CSRF token generation: {
      sessionID: 'DUFSv9xQq4qliW2daIYVoWMcoZcDolP0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Gj1NpZWC-2nhuJsQGw1Z0nNNKebsFpT80T7s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: DUFSv9xQq4qliW2daIYVoWMcoZcDolP0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jfeJBICjth...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.010 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:45.415Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 171.643 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/administrators/6843038d1b7b9dfea5a4cbac {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:45.589Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038d1b7b9dfea5a4cbac {
      sessionID: 'DUFSv9xQq4qliW2daIYVoWMcoZcDolP0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ADUFSv9xQq4qliW2daIYVoWMcoZcDolP0.ayL%2FIqiCNaIU75RCVYAU3HbVALDlNGZtNCW11UYbPN4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/6843038d1b7b9dfea5a4cbac [33m403[0m 55.605 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:46.215Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nze-4k1XgXFTByrO0XCFjAn0FagsApkW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uNbDmyrW-EiuA7UIGxToIlpJmNVvNX4tu0aU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nze-4k1XgXFTByrO0XCFjAn0FagsApkW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: we7Omskszt...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.718 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:46.325Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.337 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/6843038e1b7b9dfea5a4cbd4 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:46.561Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038e1b7b9dfea5a4cbd4 {
      sessionID: 'nze-4k1XgXFTByrO0XCFjAn0FagsApkW',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Anze-4k1XgXFTByrO0XCFjAn0FagsApkW.%2FnI%2BmP3rNz3ZFxHeSLo81WXwc%2FzbiKHxIX82YuhupFM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/6843038e1b7b9dfea5a4cbd4 [33m404[0m 107.065 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:47.236Z"}
  console.log
    CSRF token generation: {
      sessionID: 'oCfKqSIYPI4aqIDxI101uC7JTCS8Uun7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MheyIEKV-5xJwh6S4gbXyjYbqB89VbeU2ZG0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: oCfKqSIYPI4aqIDxI101uC7JTCS8Uun7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cuVDTvLdtr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.774 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:47.325Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.106 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/6843038f1b7b9dfea5a4cbf5/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:47.581Z"}
  console.log
    CSRF check for: /api/v1/administrators/6843038f1b7b9dfea5a4cbf5/reset-password {
      sessionID: 'oCfKqSIYPI4aqIDxI101uC7JTCS8Uun7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AoCfKqSIYPI4aqIDxI101uC7JTCS8Uun7.ifVtLngnZkj9rPP%2F6ijrwqBeVaQUyMVIZDNAOKxHeeo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/6843038f1b7b9dfea5a4cbf5/reset-password [32m200[0m 171.207 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:47.754Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 137.630 ms - 644[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:47.894Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 108.934 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:48.575Z"}
  console.log
    CSRF token generation: {
      sessionID: 'razdx01aPQ9BXhM6Fg7GAY6iuUsX2YBl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rs060yWu-KL4WwuO-iWpkEYO0DpHfLScj3w0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: razdx01aPQ9BXhM6Fg7GAY6iuUsX2YBl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5NicMtCcHn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.167 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:48.683Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.035 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/684303901b7b9dfea5a4cc1d/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:48.949Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303901b7b9dfea5a4cc1d/reset-password {
      sessionID: 'razdx01aPQ9BXhM6Fg7GAY6iuUsX2YBl',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Arazdx01aPQ9BXhM6Fg7GAY6iuUsX2YBl.UpVj6GExqilICvUcF02v3ThpuxK2mzS0mW20JJv2c54',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/684303901b7b9dfea5a4cc1d/reset-password [32m200[0m 168.800 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:49.725Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hkw83kD99zXUwubDG0nyW6_Ju2xHW82K',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LXufMXM4-Bz7kVhcrIEfUcn_AHIM0mN4xw0c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hkw83kD99zXUwubDG0nyW6_Ju2xHW82K

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4XexihMFHe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.761 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:49.823Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.238 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/684303911b7b9dfea5a4cc41/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:50.066Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303911b7b9dfea5a4cc41/reset-password {
      sessionID: 'hkw83kD99zXUwubDG0nyW6_Ju2xHW82K',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ahkw83kD99zXUwubDG0nyW6_Ju2xHW82K.RyBhoAGZhFQJT2L61RhBA4zJYfTtzXY0VyG4XePPoCw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/684303911b7b9dfea5a4cc41/reset-password [33m400[0m 56.894 ms - 313[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:50.730Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gETl1Xhr5pYly4KTdWwMgBLlnlJfCSjG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: be2rMHmU-iCUBvb5F_iGfe_1zd_dP40-1oFA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gETl1Xhr5pYly4KTdWwMgBLlnlJfCSjG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _U74vYXbwA...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.864 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:50.831Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.741 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:51.155Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dj9CTVXIS1oXyqFC79bNC9XyMDKhZeeD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 42Y6g5rq-6t07cJJMKLz-0-sdC7ttsHsnfc4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dj9CTVXIS1oXyqFC79bNC9XyMDKhZeeD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0vs5RAnIGZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.503 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:51.163Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.637 ms - 650[0m
[34mdebug[39m: POST /api/v1/administrators/684303921b7b9dfea5a4cc61/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:51.309Z"}
  console.log
    CSRF check for: /api/v1/administrators/684303921b7b9dfea5a4cc61/reset-password {
      sessionID: 'dj9CTVXIS1oXyqFC79bNC9XyMDKhZeeD',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adj9CTVXIS1oXyqFC79bNC9XyMDKhZeeD.GMDzmoC2qlI6QxelfQmuxZbDGynbF6PdQ3jJ%2FvUih7w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/684303921b7b9dfea5a4cc61/reset-password [33m403[0m 57.630 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:51.942Z"}
  console.log
    CSRF token generation: {
      sessionID: '9mKdAEhk41hTwQu6RwJG6gX6UAQpVmSq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: liRfckuR-8_LSRh76GuWV4VFp-UY3Shb8zu8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9mKdAEhk41hTwQu6RwJG6gX6UAQpVmSq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8A0MA_Jxn6...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.643 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:52.037Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.951 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:52.184Z"}
[0mGET /api/v1/administrators/permissions [32m200[0m 28.004 ms - 361[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:52.785Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fGvfOXhmXJhvGyn3EfxaBlIUAD1coXHR',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0TfqIrvk-P6oGcUudGTSRCCbgSZCXjATYfUc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fGvfOXhmXJhvGyn3EfxaBlIUAD1coXHR

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HOPEmvnJ1J...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.449 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:52.879Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.706 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:53.022Z"}
[0mGET /api/v1/administrators/permissions [33m401[0m 0.731 ms - 47[0m
PASS tests/integration/administrator.test.js (36.605 s)
  Administrator Integration Tests
    GET /api/v1/administrators
      ✓ should get all administrators with admin token (1684 ms)
      ✓ should filter by active status (1023 ms)
      ✓ should support pagination (2076 ms)
      ✓ should require admin authentication (827 ms)
      ✓ should require administrator permissions (1197 ms)
    GET /api/v1/administrators/:id
      ✓ should get administrator by ID (1003 ms)
      ✓ should return 404 for non-existent administrator (939 ms)
      ✓ should handle invalid ObjectId (903 ms)
    POST /api/v1/administrators
      ✓ should create new administrator (1157 ms)
      ✓ should validate required fields (899 ms)
      ✓ should validate email format (856 ms)
      ✓ should validate password strength (867 ms)
      ✓ should prevent duplicate emails (921 ms)
      ✓ should require administrators.create permission (1099 ms)
    PATCH /api/v1/administrators/:id
      ✓ should update administrator details (1041 ms)
      ✓ should update email (1021 ms)
      ✓ should update password (1270 ms)
      ✓ should deactivate administrator (1051 ms)
      ✓ should not allow updating adminId (1000 ms)
      ✓ should validate email uniqueness on update (1007 ms)
      ✓ should prevent self-deactivation (1009 ms)
      ✓ should require administrators.update permission (1201 ms)
    DELETE /api/v1/administrators/:id
      ✓ should delete administrator (1033 ms)
      ✓ should prevent self-deletion (955 ms)
      ✓ should prevent deleting last administrator with all permissions (992 ms)
      ✓ should require administrators.delete permission (1274 ms)
      ✓ should handle non-existent administrator (1022 ms)
    POST /api/v1/administrators/:id/reset-password
      ✓ should reset administrator password (1338 ms)
      ✓ should clear login attempts on password reset (1148 ms)
      ✓ should validate password strength (1002 ms)
      ✓ should require administrators.update permission (1216 ms)
    GET /api/v1/administrators/permissions
      ✓ should get available permissions list (841 ms)
      ✓ should require authentication (815 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.116Z"}
  console.log
    CSRF token generation: {
      sessionID: '8sbI6dzP_19bus9qlXYbFV7TEGOIp7Fr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hSPRvdNw-vWQ8Aqy0Yn9gNStvwxj4A-hIEgQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8sbI6dzP_19bus9qlXYbFV7TEGOIp7Fr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gCfVi8A4xw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.133 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.126Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 5.780 ms - 148[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.134Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.926 ms - 241[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: weak, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.142Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.839 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.146Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.615 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.150Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.548 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.154Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.433 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: 12345678, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.158Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.556 ms - 191[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.161Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.716 ms - 284[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: Password1, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.165Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.694 ms - 163[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.176Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.801 ms - 256[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.182Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.473 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.186Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.326 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: ALLUPPERCASE123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.190Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.214 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.193Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.323 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: alllowercase123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.197Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.613 ms - 152[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.200Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.829 ms - 245[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoNumbers!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.206Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.627 ms - 199[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.209Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.413 ms - 292[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoSpecialChars123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.855Z"}
  console.log
    CSRF token generation: {
      sessionID: '5jnxSMZ1OsDMdwenW-gHFScpsnLXxJlO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: XT4tpRR7-FmA-n8GW6KyBStiOoTP6hJrhlIc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5jnxSMZ1OsDMdwenW-gHFScpsnLXxJlO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: m0qfK20tBo...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.956 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.865Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 120.639 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:55.988Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 115.101 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:56.111Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 108.831 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:56.222Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 117.131 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:56.341Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 116.082 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:57.026Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bkhAm6gJZZWfSvziweTEIf1p2AOMXQ3s',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: croeodKH-GUqX54O90anD0MKYNnwDlglC8dk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bkhAm6gJZZWfSvziweTEIf1p2AOMXQ3s

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2kSQvcHb7p...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.255 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:57.034Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.667 ms - 166[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:57.600Z"}
  console.log
    CSRF token generation: {
      sessionID: '2XC9WNqnbnU4a0g8csALG0WQ8tW-x0sg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FpJAzOFf-hwghaEncjtCtHrVC2MaENdZ9vnU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2XC9WNqnbnU4a0g8csALG0WQ8tW-x0sg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: tDVLgzqcw0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.089 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:57.609Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.650 ms - 167[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.346Z"}
  console.log
    CSRF token generation: {
      sessionID: 'B7ZTGl-dB0WudP1uzFTIBuc3WjxYAzAS',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: erlTQ8UA-z0lynd8fnPrS3Sa4XjJmJhmStYg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: B7ZTGl-dB0WudP1uzFTIBuc3WjxYAzAS

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9mosRbqTWI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.136 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.356Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.592 ms - 180[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.360Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.659 ms - 181[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.364Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.502 ms - 182[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.368Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.481 ms - 182[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:58.934Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f2OpfRFpBOu2Kjs1XzNZSrGrZrG32my-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: KMPuAl7J-axkZ20IesoaICIAshEIQD8K37HA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: f2OpfRFpBOu2Kjs1XzNZSrGrZrG32my-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cKrqwUZLBs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.199 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:59.076Z"}
[0mPOST /api/v1/customers/register [33m400[0m 1.876 ms - 151[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:59.652Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sTFdMgBkypaim6HiRutCc_3sT06KTUL8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: U9iy1h1s-LK98t6e7MeCNrhP5JJtpqkJyeC4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sTFdMgBkypaim6HiRutCc_3sT06KTUL8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2YGaD8gr5r...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.477 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:04:59.810Z"}
[0mPOST /api/v1/customers/register [32m201[0m 165.862 ms - 345[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:00.573Z"}
  console.log
    CSRF token generation: {
      sessionID: 'thqqP5g0xyDBUryjKqNRpSoP3YlWiQTm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: prHFBBX3-6IISiGxc5jS6f_E73_k_jP0ihpM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: thqqP5g0xyDBUryjKqNRpSoP3YlWiQTm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: nGrI34c3Be...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.204 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:00.673Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:00.820Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:00.820Z","userId":"6843039cb8a1f15a3e98b72b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.838 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:00.823Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'thqqP5g0xyDBUryjKqNRpSoP3YlWiQTm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AthqqP5g0xyDBUryjKqNRpSoP3YlWiQTm.V%2Broj0wRFRhjAshmIddjSuAYg4Wmq%2BJkkIWYb0HrKaM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 56.280 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:01.567Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TXRLpMIlRAUCLUVcQm-L7D6tdJZow_JG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lQvR5ATQ-oL9nXW9csDohLcTtAy0-afOF0oQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TXRLpMIlRAUCLUVcQm-L7D6tdJZow_JG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: s0qposW9mR...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.379 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:01.673Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:01.823Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:01.824Z","userId":"6843039db8a1f15a3e98b749","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.945 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:01.827Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'TXRLpMIlRAUCLUVcQm-L7D6tdJZow_JG',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ATXRLpMIlRAUCLUVcQm-L7D6tdJZow_JG.pIkf%2BBQCR8Urz%2BZEUWKZYTm%2BFpGWbmyaNMWjKkaQybA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_ADMINISTRATOR","details":{"adminId":"ADM002","email":"newuser@example.com"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"6843039db8a1f15a3e98b753","targetType":"administrator","timestamp":"2025-06-06T15:05:02.024Z","userId":"6843039db8a1f15a3e98b749","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/administrators [32m201[0m 198.312 ms - 341[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:02.602Z"}
  console.log
    CSRF token generation: {
      sessionID: 'RX4WulYk42BHuHpwgW16M-J0327uwToN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: EJEYZDqk-1XuvmRdetIwgAnaA78MOx9akrWk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: RX4WulYk42BHuHpwgW16M-J0327uwToN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AIu62KsJc7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.784 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:02.697Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:02.841Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:02.841Z","userId":"6843039eb8a1f15a3e98b76b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.284 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:02.844Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'RX4WulYk42BHuHpwgW16M-J0327uwToN',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ARX4WulYk42BHuHpwgW16M-J0327uwToN.7wb9kb%2FwPqKHh%2FGQH431oVEXw4LAa2iFISRTtE%2FcPs4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 57.804 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:03.480Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eeWvKk_JRj2yx7FN0cYkEzzCdAUT-omE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TSvpgPzY-BXTcbAhej5F6Q2wdgTa1nNQ9NE8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: eeWvKk_JRj2yx7FN0cYkEzzCdAUT-omE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CBLWFlK-W0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.993 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:03.575Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:03.719Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:03.719Z","userId":"6843039fb8a1f15a3e98b789","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.847 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:03.722Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'eeWvKk_JRj2yx7FN0cYkEzzCdAUT-omE',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AeeWvKk_JRj2yx7FN0cYkEzzCdAUT-omE.QtZDWdH2FanaZkPC7EamUoFx3KErHB23CBdRp4B%2BC4g',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newoperator@example.com","operatorId":"OPRMBKXSNR1B61E11"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"6843039fb8a1f15a3e98b792","targetType":"operator","timestamp":"2025-06-06T15:05:03.888Z","userId":"6843039fb8a1f15a3e98b789","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 167.064 ms - 656[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:04.484Z"}
  console.log
    CSRF token generation: {
      sessionID: '4QauTEHpDX_p6QYZQ34ZZEnEETFYFQ32',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1Kr9apCT-XjBgZbyy44leDBTayfST4ESZ71A

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4QauTEHpDX_p6QYZQ34ZZEnEETFYFQ32

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 6GCMq8pgal...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.577 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/forgot-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:04.577Z"}
[0mPOST /api/v1/auth/forgot-password [32m200[0m 59.141 ms - 54[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:04.665Z"}
[0mPOST /api/v1/auth/reset-password [33m400[0m 1.634 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:05.233Z"}
  console.log
    CSRF token generation: {
      sessionID: '3HKF58XXnYj9cu0HywVtzC0ZmJYB6CJl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qwa3Jkqd-MOLJVHX3_kcUK9SzUBdgnPbMEZg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3HKF58XXnYj9cu0HywVtzC0ZmJYB6CJl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2vz3pdXPHa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.808 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/forgot-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:05.359Z"}
[0mPOST /api/v1/auth/forgot-password [32m200[0m 59.172 ms - 54[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:05.448Z"}
[0mPOST /api/v1/auth/reset-password [32m200[0m 113.752 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:06.140Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Xlqy2nDuHGM8G4CmVN8g_qlU6qN9IFaz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: DyLtOl5Z-FBCykKYecrwAC7vVit7dZlwXspM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Xlqy2nDuHGM8G4CmVN8g_qlU6qN9IFaz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -f7mo3tRuI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.099 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:06.236Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:06.377Z","userType":"affiliate","username":"logintest"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 141.802 ms - 595[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:07.115Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wXPIdljI-q0ZZIcjMAWAIQrnLfjecmed',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FHS4vbH8-tNY_mNmwtXUSY6M0AK9jZp--Xuc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wXPIdljI-q0ZZIcjMAWAIQrnLfjecmed

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TpQ5CnhB83...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.618 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:07.123Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.645 ms - 164[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:07.689Z"}
  console.log
    CSRF token generation: {
      sessionID: 'GO7SaC3jTvnLNwox_oB120vyEFR4qcXV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Bc2XM6vD-YMKlXTwBmpI9E0nDkiPprklR6og

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: GO7SaC3jTvnLNwox_oB120vyEFR4qcXV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Td14kDqRlk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.126 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:07.698Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.617 ms - 185[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:08.436Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qnybh2igG8ifDbRl60BFw1YM7bxT_w91',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: e676VjC4-9tpvCYH0uN3Ice9cS2CbRmBTzfI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qnybh2igG8ifDbRl60BFw1YM7bxT_w91

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YTHtX_BnEx...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.528 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:08.444Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 116.454 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:09.133Z"}
  console.log
    CSRF token generation: {
      sessionID: 'AEUnset9GbRLcX2AzTcVfFx6hr-PLGMY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xZQlxvkn-s8AyJGDZCTWBK7xP6vzEligwdxs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: AEUnset9GbRLcX2AzTcVfFx6hr-PLGMY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: vB2sM32Pdj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.048 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:09.142Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 120.702 ms - 120[0m
PASS tests/integration/passwordValidation.test.js (16.169 s)
  Password Validation Integration Tests
    Affiliate Registration Password Validation
      ✓ should reject weak passwords during affiliate registration (1159 ms)
      ✓ should accept strong passwords during affiliate registration (1170 ms)
      ✓ should reject passwords containing username (574 ms)
      ✓ should reject passwords containing email (574 ms)
      ✓ should reject passwords with sequential characters (760 ms)
    Customer Registration Password Validation
      ✓ should enforce strong passwords for customer registration (718 ms)
      ✓ should accept strong passwords for customer registration (917 ms)
    Administrator Password Validation
      ✓ should enforce strong passwords for administrator creation (994 ms)
      ✓ should accept strong passwords for administrator creation (1037 ms)
    Operator Password Validation
      ✓ should enforce strong passwords for operator creation (875 ms)
      ✓ should accept strong passwords for operator creation (987 ms)
    Password Reset Validation
      ✓ should enforce strong passwords during password reset (765 ms)
      ✓ should accept strong passwords during password reset (903 ms)
    Login with Updated Passwords
      ✓ should successfully login with strong password (983 ms)
      ✓ should handle case-insensitive username/email validation during registration (570 ms)
    Password Strength Edge Cases
      ✓ should reject passwords with only special characters at the end (575 ms)
      ✓ should accept passwords with mixed character distribution (870 ms)
      ✓ should handle Unicode characters in passwords appropriately (709 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:10.728Z"}
  console.log
    CSRF token generation: {
      sessionID: '5WQTwINKiyd4TpRTlCbaaxyAd9NkqvNg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: L3mutzmI-KJYxOoNYS2SL7aMOplGUleJJGvo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5WQTwINKiyd4TpRTlCbaaxyAd9NkqvNg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xk_9Vrhyar...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.122 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:11.376Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:11.551Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 175.193 ms - 509[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:12.110Z"}
  console.log
    CSRF token generation: {
      sessionID: 'H64Pes5--TbHxUeExjYaOx8KjCTBG_H-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0HeBbTJy-a3fKK-WQGeUJ46s96urVCDM6FVQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: H64Pes5--TbHxUeExjYaOx8KjCTBG_H-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XQhGrNxgrv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.777 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:12.365Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"Invalid password","success":false,"timestamp":"2025-06-06T15:05:12.467Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 102.419 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:12.943Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fzbcrdzH4rNjV_1ZFfrBa0-uUQHr_XzX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xOpS75gT-3Cl8y7eefZoZL4vHt-8x5SjsgjE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fzbcrdzH4rNjV_1ZFfrBa0-uUQHr_XzX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Yq-HLycZy-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.866 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:13.080Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"User not found","success":false,"timestamp":"2025-06-06T15:05:13.107Z","userType":"affiliate","username":"nonexistent"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 27.602 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:13.579Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VTWPZKazKZnvXEVe8AJV2CldKGxTeDQD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8aYx2AMT-frglPQCtO9HsigfR2NYO6XTZLAc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VTWPZKazKZnvXEVe8AJV2CldKGxTeDQD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: vkUkLYanr-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.209 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:13.853Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:466:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:467:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:468:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:501:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 151.410 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:14.489Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TjSy3uGee_HF5qtdbx-YdXKkjhPNMKlg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: yeaQaTXf-phWdllU17-UwQysV9c792ooEQiA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TjSy3uGee_HF5qtdbx-YdXKkjhPNMKlg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: wyv20kjtbv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.773 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:14.718Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:14.870Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 152.627 ms - 509[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:14.873Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.657 ms - 99[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:15.403Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VyBOypcrbN6vlR-tiC7xH3luDbaoWhtj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 44hkOhYK-61pNlPqXfjJOaBqU0p1ztoUZpPc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VyBOypcrbN6vlR-tiC7xH3luDbaoWhtj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TrXJDr9A3z...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.424 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:15.542Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.375 ms - 43[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:16.008Z"}
  console.log
    CSRF token generation: {
      sessionID: '0vB8bRIFZnu9EsXXH1Ic1Ha3k-z9fwiw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mjomSgeW-6tWNGNou0iAytmzK4fD_Ht-nxTs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0vB8bRIFZnu9EsXXH1Ic1Ha3k-z9fwiw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: e6iU-YP6Bd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.085 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:16.146Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.465 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:16.618Z"}
  console.log
    CSRF token generation: {
      sessionID: 'g7jfuw9v7elOz9Ode4ENP8F99WNB7wcW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9f257k4g-U95u663264R6xx6VHPUa3l-TQbY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: g7jfuw9v7elOz9Ode4ENP8F99WNB7wcW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zdXRkE7d3v...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.570 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:16.846Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:16.993Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.300 ms - 509[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:16.995Z"}
[0mPOST /api/v1/auth/refresh-token [32m200[0m 122.890 ms - 409[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:17.591Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ZkG9okZ_GR18XJqIrMtf1AXQtYzNX72w',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ib41MEvs-CYY6ztFUxkrfRaMnRulsfbYP538

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ZkG9okZ_GR18XJqIrMtf1AXQtYzNX72w

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CIs3K-ylNO...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.257 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:17.729Z"}
[0mPOST /api/v1/auth/refresh-token [33m400[0m 1.664 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:18.200Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tKYCmdBujjmNfG2_QnRCnWrLLWwiZ4sj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mSp6nQ0p-NrRsBziqRLbeQCI95QYZhIy3z0g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tKYCmdBujjmNfG2_QnRCnWrLLWwiZ4sj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _rj54WRo8j...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.926 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:18.457Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 27.495 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:18.959Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ahaxsL4jZcI6aioAyWhKZWuZt8x71j1e',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WERRiyYr-jv53bn2kSHcK91lH3zI5jVwjquk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ahaxsL4jZcI6aioAyWhKZWuZt8x71j1e

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UYFHRxkfYW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.178 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:19.191Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:19.354Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 163.470 ms - 509[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:19.357Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'ahaxsL4jZcI6aioAyWhKZWuZt8x71j1e',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AahaxsL4jZcI6aioAyWhKZWuZt8x71j1e.T7GGql3xiQkKHnllZZyg6%2Fvua2voQ0sP%2FUzjfguXRA0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 100.958 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:19.461Z"}
[0mGET /api/v1/auth/verify [33m401[0m 27.950 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:19.492Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.437 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:19.993Z"}
  console.log
    CSRF token generation: {
      sessionID: 'PWl5c1KKyQBecsJBVcBExhLhBhXC2TFJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ah1Ah26G-r7ANrmL78yxDZKrh-v_O5vVHHdk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: PWl5c1KKyQBecsJBVcBExhLhBhXC2TFJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dnFgo6BMBy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.611 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.271Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:20.421Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 150.299 ms - 509[0m
  console.log
    Got refresh token: 0b39110d1a5bededf24aa1ba7e5f75068e520f2dc45d02d7151a2b72518988a94f78f02ec6b2866a

      at Object.log (tests/integration/auth.test.js:586:15)

  console.log
    Starting concurrent requests...

      at Object.log (tests/integration/auth.test.js:600:15)

[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.428Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.431Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.432Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.434Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:20.435Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.905 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.005 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 31.595 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 28.063 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [32m200[0m 118.097 ms - 409[0m
  console.log
    Responses received: [
      {
        status: 200,
        body: {
          success: true,
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDMwM2IwNzY0Yzg4MDg0YTVjNTU0NyIsImFmZmlsaWF0ZUlkIjoiQUZGMTIzIiwicm9sZSI6ImFmZmlsaWF0ZSIsImlhdCI6MTc0OTIyMjMyMCwiZXhwIjoxNzQ5MjI1OTIwLCJhdWQiOiJ3YXZlbWF4LWNsaWVudCIsImlzcyI6IndhdmVtYXgtYXBpIn0.AH5c9rEoRH0mJQR7c2U5ljAlMGGX-434OdRhfCMt3dA',
          refreshToken: '74cbfc086caaa75dec1229c4901004321d7ad6523fe8b77b519331c08f295426a41b9372cf8a089c'
        }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      }
    ]

      at Object.log (tests/integration/auth.test.js:602:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:21.026Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3l2WvCCo-0wVd87_wQSAw1He2sqhWkaKWbxM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Ec8h4PX9dQ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.077 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:21.247Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:21.389Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 142.864 ms - 512[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.494Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:22.639Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.056 ms - 512[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.644Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.608 ms - 99[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.676Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.122 ms - 99[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.709Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'dyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH.mo4xtztQhtJCGRIwXHWWKHtpMqLXs0yvD%2FuvFmRmsAQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 94.041 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.805Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.091 ms - 56[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.836Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.019 ms - 99[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.868Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'dyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Adyqu6lt8ylsgGSgbsCXMpPRj2X5jqjcH.mo4xtztQhtJCGRIwXHWWKHtpMqLXs0yvD%2FuvFmRmsAQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 94.838 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:22.965Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.607 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:23.471Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ICmErshZOWyUIUdpysUNDDw28FO2XNjT',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HLj3i8dy-3PK7K4LZm4B9buGX5Uq8hmG7qlo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ICmErshZOWyUIUdpysUNDDw28FO2XNjT

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gnn9HHsrEz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.522 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:23.699Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:23.840Z","userType":"administrator","username":"admin@example.com"}
info: undefined {"adminId":"ADM001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:23.840Z","userId":"684303b3764c88084a5c559b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.787 ms - 684[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:24.308Z"}
  console.log
    CSRF token generation: {
      sessionID: 'K4VFd_ooFyxJPAQJpKHB_Y3uf7CA2jaG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Y9w783ap-YyCq13KBPR7gPKDXfT7gOd8E2cs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: K4VFd_ooFyxJPAQJpKHB_Y3uf7CA2jaG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Vz8v-OgynZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.629 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:24.539Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Invalid password","success":false,"timestamp":"2025-06-06T15:05:24.647Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 108.105 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:25.109Z"}
  console.log
    CSRF token generation: {
      sessionID: 'IDMbIYRatvcYzDnmyzZlQ8GTWRcAc2ah',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: v343qapQ-5UbvI4dWpAXHmiAgZzTxwi8XalQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: IDMbIYRatvcYzDnmyzZlQ8GTWRcAc2ah

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: GL2-u4eljH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.357 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:25.333Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-06T15:05:25.362Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.472 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:25.858Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xOZBejlZ8dd72-y3jilPO8FMxBEpNcmi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QB2qW2f8-kkjtSlE_ZLyk0Q2CxgFIRFFp29E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xOZBejlZ8dd72-y3jilPO8FMxBEpNcmi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Z2WjkglseZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.665 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:26.206Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:26.362Z","userType":"operator","username":"operator@example.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:26.362Z","userId":"684303b6764c88084a5c55ef","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.783 ms - 593[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:26.844Z"}
  console.log
    CSRF token generation: {
      sessionID: '51wz5Tg1wIKF1E1nQDVi5Fahdu36nWFq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0SP4sKmT-w8krZnU_vBPuMm7Mj1rGcI74CSc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 51wz5Tg1wIKF1E1nQDVi5Fahdu36nWFq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eiMsItUSAa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.350 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:27.147Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Invalid password","success":false,"timestamp":"2025-06-06T15:05:27.259Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m401[0m 111.572 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:27.756Z"}
  console.log
    CSRF token generation: {
      sessionID: '28FN396uGbHK0-PUiAyqEN2gKFr70ez7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: cjvCCtX0-V6ZBngJM4L0d1NRPy0yTifxl0I8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 28FN396uGbHK0-PUiAyqEN2gKFr70ez7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: glGZFnXu9P...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.822 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:28.085Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-06T15:05:28.113Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 28.308 ms - 82[0m
PASS tests/integration/auth.test.js (18.767 s)
  Authentication Integration Tests
    POST /api/v1/auth/affiliate/login
      ✓ should login affiliate with valid credentials (1399 ms)
      ✓ should fail with invalid credentials (832 ms)
      ✓ should fail with non-existent username (636 ms)
    POST /api/v1/auth/customer/login
      ✓ should login customer with valid credentials (910 ms)
    GET /api/v1/auth/verify
      ✓ should verify valid token (914 ms)
      ✓ should fail with invalid token (605 ms)
      ✓ should fail with missing token (608 ms)
    POST /api/v1/auth/refresh-token
      ✓ should refresh token successfully (974 ms)
      ✓ should fail with invalid refresh token (608 ms)
      ✓ should fail with expired refresh token (759 ms)
    POST /api/v1/auth/logout
      ✓ should logout successfully and blacklist tokens (1034 ms)
    Rate limiting tests
      ○ skipped should rate limit login attempts
      ○ skipped should rate limit refresh token requests
    Concurrent refresh token usage
      ✓ should handle concurrent refresh token requests safely (1032 ms)
    Token blacklisting after logout
      ✓ should blacklist all active tokens on logout (2445 ms)
    POST /api/v1/auth/administrator/login
      ✓ should login administrator with valid credentials (837 ms)
      ✓ should fail with invalid administrator credentials (802 ms)
      ✓ should fail when administrator is inactive (747 ms)
    POST /api/v1/auth/operator/login
      ✓ should login operator with valid credentials (987 ms)
      ✓ should fail with invalid operator credentials (912 ms)
      ✓ should fail when operator is inactive (829 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.271Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lORiVDNVXgyBfWkIqtfaXlO_rL7GJSM3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FHTnPM2S-u-iLDfwiwjEPtNSwOMBfqHqnUyc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lORiVDNVXgyBfWkIqtfaXlO_rL7GJSM3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ERokJeGQZT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.792 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.378Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:30.526Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:30.526Z","userId":"684303bac70fd528064101dc","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.685 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.529Z"}
  console.log
    CSRF token generation: {
      sessionID: '7trsxuM5uFupql_jBtRaRTJ1IGkHSAdk',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hEgaaZyD-TuulY960T0yJR3HQBNXWwktnwS8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7trsxuM5uFupql_jBtRaRTJ1IGkHSAdk

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ggkhrXnQbr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.497 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.624Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:30.775Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:30.776Z","userId":"684303bac70fd528064101e5","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.826 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.779Z"}
  console.log
    CSRF token generation: {
      sessionID: 'yYTi1rq7rYmvApORh4--GotonLUfjKIk',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rjbnEeSQ--ChGJTPGkg6IQIonvJ0ZcR5Svu8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: yYTi1rq7rYmvApORh4--GotonLUfjKIk

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9yQOTsfVuQ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.956 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:30.948Z"}
[0mGET /api/v1/operators [32m200[0m 185.077 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:31.795Z"}
  console.log
    CSRF token generation: {
      sessionID: '554akQ_GFzKhmBUtO6NlYtxG0Wd5JQyM',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: yTwERxVT-jS6hlXb4AnI8T8vaM4U3jn5jIRM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 554akQ_GFzKhmBUtO6NlYtxG0Wd5JQyM

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xkmFI-ZI2C...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.785 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:31.930Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:32.091Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:32.092Z","userId":"684303bbc70fd5280641020d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.164 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:32.095Z"}
  console.log
    CSRF token generation: {
      sessionID: 'O1_5CIYAesLz2tTrTzKOPInM3lArZ7QL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: tuudd1k4-3GgpYsX4x0VDEoGRFxfCJz0GdN0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: O1_5CIYAesLz2tTrTzKOPInM3lArZ7QL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: w5qaXnqj9e...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.649 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:32.188Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:32.330Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:32.331Z","userId":"684303bcc70fd52806410213","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.096 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:32.333Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HKzdivtgcixY_dAR8WSAAmSJC6B-Qi3R',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WMIlpDkO-O8w8Zbgl5BdfwTGww6nzgGs2Oss

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HKzdivtgcixY_dAR8WSAAmSJC6B-Qi3R

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xPmPjQkwZt...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.892 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?active=true {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:32.428Z"}
[0mGET /api/v1/operators?active=true [32m200[0m 135.576 ms - 554[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.124Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jDY9m2WQWa9P9KlE0zPUcc8Xar2Mwlcv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FkZWSAUV-tY0EFnOnOgaEiUCtSD6YmSfUWx4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jDY9m2WQWa9P9KlE0zPUcc8Xar2Mwlcv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kuoVifYjjZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.015 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.244Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:33.434Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:33.435Z","userId":"684303bdc70fd52806410235","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.960 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.439Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ELA4OvvU-YepIKUvb8_87EnqTwnm7qyM',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MedVSDMk-lRFmcQI53v-gBSAP9AbjnHQc_WE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ELA4OvvU-YepIKUvb8_87EnqTwnm7qyM

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: W_J61yoPJs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.104 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.537Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:33.710Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:33.711Z","userId":"684303bdc70fd5280641023b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 173.906 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.713Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CPOFfTG2UTjsCGiKWNwJxiyrnZ7oKtB9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kUV1Un0k-tta_RNcj8BDYnI8-zd4cemy6CQY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CPOFfTG2UTjsCGiKWNwJxiyrnZ7oKtB9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Lyimz1LNgV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.447 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?workStation=Station%20A {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:33.865Z"}
[0mGET /api/v1/operators?workStation=Station%20A [32m200[0m 134.936 ms - 973[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:34.564Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rc8DRqgwcHBezcYvuyIqLFTBhzPodsip',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FihOMjX1-dpnrdtKxMreFTaUIYvdChsWtp0w

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rc8DRqgwcHBezcYvuyIqLFTBhzPodsip

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: tL10a3U3ZM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.410 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:34.665Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:34.809Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:34.810Z","userId":"684303bec70fd5280641025f","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.814 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:34.813Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E73XtjF_ZnyTUXqAV0r2sLTbRutTg8-i',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UvbZJMbm-9pIp0QNVS7YcHp7oqyWCAjSWUto

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E73XtjF_ZnyTUXqAV0r2sLTbRutTg8-i

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Ir2HeakI9y...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.914 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:34.912Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:35.077Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:35.077Z","userId":"684303bec70fd52806410265","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 164.959 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:35.080Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QxxnzuIxpOjvGNBI4EDaX-hv2TIIsHGA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1HXfgc5q-yQMTNJgsN9jl-VZnXcKYOhkhG2U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QxxnzuIxpOjvGNBI4EDaX-hv2TIIsHGA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5rOG-3jJ2J...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.851 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?onShift=true {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:35.178Z"}
[0mGET /api/v1/operators?onShift=true [32m200[0m 107.873 ms - 554[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:35.861Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XgxyIG0Q7dYL1Tq_mFOnNSJT-aOvQ4tz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: S3EjsMQX-JV9yR76dm14zLvBeVaYngPMff4Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XgxyIG0Q7dYL1Tq_mFOnNSJT-aOvQ4tz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: IYWvlmkg9n...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 16.723 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:35.968Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:36.126Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:36.126Z","userId":"684303bfc70fd52806410286","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 158.751 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:36.130Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pRjkSpteGbdPaviKeCYCTTxLQEgItT_F',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AbGP8TBH-hkmMxBiqyPrawB7UYkDXq7aj9Wo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pRjkSpteGbdPaviKeCYCTTxLQEgItT_F

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8YIZvr97aU...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.413 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:36.224Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:36.367Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:36.368Z","userId":"684303c0c70fd5280641028c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.798 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:36.372Z"}
  console.log
    CSRF token generation: {
      sessionID: '_lT5VxkpINzCGdJuZ9vJjKypi1wCjqaC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IAwJwDPG-VdG7Z_zik5-hzhEYbjhJHKgcGaQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _lT5VxkpINzCGdJuZ9vJjKypi1wCjqaC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: p5NfgYunXe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.207 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:37.840Z"}
[0mGET /api/v1/operators?page=2&limit=5 [32m200[0m 387.890 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:39.754Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pdQ3v4pHkBrW3CCKWADQ12b2C1McVhqT',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: luy88E5N-IjXoWZaP-CzWQv6aQcCSuApKlPA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pdQ3v4pHkBrW3CCKWADQ12b2C1McVhqT

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ZQbcK5acys...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.160 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:39.849Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:40.239Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:40.239Z","userId":"684303c3c70fd528064102cb","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 390.191 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:40.242Z"}
  console.log
    CSRF token generation: {
      sessionID: '4RRdJayJA3Wcou-bLNssYeY56PpqUbbv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: iuOrbUOg-bfVlk3BzsyWSus6f60jv0QWMrxA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4RRdJayJA3Wcou-bLNssYeY56PpqUbbv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dv-esmwqY7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.655 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:40.349Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:40.762Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:40.763Z","userId":"684303c4c70fd528064102d1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 414.177 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:40.765Z"}
  console.log
    CSRF token generation: {
      sessionID: '0TfOJbQ2hoFv0Ot9pSreShnMWoqtxNJB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: YaLffgwl-g9u25UO17PsT6nVpClTwFzAvCag

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0TfOJbQ2hoFv0Ot9pSreShnMWoqtxNJB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0yJLM-78eB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.068 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:40.775Z"}
[0mGET /api/v1/operators [33m401[0m 0.923 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:41.866Z"}
  console.log
    CSRF token generation: {
      sessionID: '63ExR_0fa3R8gwRP7II_PgLfJyfoL206',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wSIyWDSn-7pPWo_9LQLyb8z_ifwmBvO3PO3M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 63ExR_0fa3R8gwRP7II_PgLfJyfoL206

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: iTsJ3BS3Sk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.472 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:42.225Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:42.386Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:42.386Z","userId":"684303c5c70fd528064102ec","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.011 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:42.389Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HLRTNx4rKorT-w7dOYaCd8mQb4KHk91z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Iu861KVW-4Cu6nQWqUEKrTMb1meuu3ckqkmw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HLRTNx4rKorT-w7dOYaCd8mQb4KHk91z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: GMQ5NK5o6O...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.925 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:42.484Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:42.628Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:42.628Z","userId":"684303c6c70fd528064102f2","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.151 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:42.631Z"}
  console.log
    CSRF token generation: {
      sessionID: '_80tPeFcs1wUaL9GICg7ZL56maIOmxKi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ic2rEyrN-QSDvxt7qdzT3HW_-3W5eHay7ZlM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _80tPeFcs1wUaL9GICg7ZL56maIOmxKi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OU8u7nBr_5...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.381 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:42.721Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:43.135Z","userType":"administrator","username":"limited@wavemax.com"}
info: undefined {"adminId":"LIMITED001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:43.136Z","userId":"684303c6c70fd528064102f8","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 415.116 ms - 649[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:43.138Z"}
[0mGET /api/v1/operators [33m403[0m 582.399 ms - 79[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.024Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pk-zdTw1zNSdL8275bU9pNH0Sdj0-ZGN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: JCpP2jKb-HSOJ4-BxQ2o9cEBukexZAGBnRvw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pk-zdTw1zNSdL8275bU9pNH0Sdj0-ZGN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: vtJnvljQw9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.501 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.118Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:45.263Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:45.263Z","userId":"684303c9c70fd52806410315","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.155 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.266Z"}
  console.log
    CSRF token generation: {
      sessionID: 'PgJ6GpBKJUXcyQTVE42XRSXsrMO19Myu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8X86rSis--zTwPLR1rqjo9k7JpVDGy6s95BE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: PgJ6GpBKJUXcyQTVE42XRSXsrMO19Myu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: b_bDQ7v5OJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.166 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.357Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:45.758Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:45.758Z","userId":"684303c9c70fd5280641031b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 400.966 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.761Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Bkj6mHnPOeTuiqsoWI_FmN55Q7BD5YEv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3Z0MHCBt-T7pxudshhCa4tgKW9FGbaorVvEU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Bkj6mHnPOeTuiqsoWI_FmN55Q7BD5YEv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Pa-UxkfPjv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.453 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/684303c9c70fd52806410321 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:45.856Z"}
[0mGET /api/v1/operators/684303c9c70fd52806410321 [32m200[0m 668.272 ms - 591[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.099Z"}
  console.log
    CSRF token generation: {
      sessionID: 'D_U4oMUxUs-LJZa38L2woTkSBT2llmz5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bnDUUese-ilE3Y-JEYuTTiZEsyZyZiXuQ7go

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: D_U4oMUxUs-LJZa38L2woTkSBT2llmz5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xUa6ghqcCC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.100 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.204Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:48.358Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:48.358Z","userId":"684303ccc70fd5280641033e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.016 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.361Z"}
  console.log
    CSRF token generation: {
      sessionID: 'oLlBTGY2lhmrCNgrXdTz9wJ6F7RAIikn',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MStO77Dc-FJOJ5X4i9Dv6x4WLslpyXxxLU6E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: oLlBTGY2lhmrCNgrXdTz9wJ6F7RAIikn

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BJpTDdHRWc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.965 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.458Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:48.867Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:48.867Z","userId":"684303ccc70fd52806410344","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 409.281 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.870Z"}
  console.log
    CSRF token generation: {
      sessionID: '7AADa_n1CwmSueftw7Iqftqb_ky8VwGr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: jiIwlODK-5Ts1do8TDsAUtFqwe6OiZeWh9zE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7AADa_n1CwmSueftw7Iqftqb_ky8VwGr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Hp3sZ97zhd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.521 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/684303ccc70fd52806410344 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:48.879Z"}
[0mGET /api/v1/operators/684303ccc70fd52806410344 [32m200[0m 80.879 ms - 227[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:50.510Z"}
  console.log
    CSRF token generation: {
      sessionID: '0RgbduIcn4uAYeYJTSWPulcVNlSa0Y4m',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GhcRFIkp-PpFzOJm28AicY-iLSlufH-3eA78

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0RgbduIcn4uAYeYJTSWPulcVNlSa0Y4m

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: GO7_KvpPv-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.820 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:50.603Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:50.754Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:50.755Z","userId":"684303cec70fd52806410362","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.084 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:50.757Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ZTJyI8a5hrpVUQQTHUAjDdDEXbyQG0CX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OGsVg0I6-wLz9d4n0FVyY2jYU2hbAOskYHts

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ZTJyI8a5hrpVUQQTHUAjDdDEXbyQG0CX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jL4SNeHXt4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.467 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:50.861Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:51.245Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:51.245Z","userId":"684303cec70fd52806410368","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 384.161 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:51.248Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JQcYC-cF58aVeQ3E3d1-PbOh8lqLHJDY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kszLeSEd-U4z062Onnq6ygtkbMexE3FCBHnk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JQcYC-cF58aVeQ3E3d1-PbOh8lqLHJDY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BTCPBP4Brh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.614 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/684303cfc70fd5280641036e {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:51.342Z"}
[0mGET /api/v1/operators/684303cfc70fd5280641036e [33m403[0m 64.381 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:52.734Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jvjugYBkym8eaFjhZ8nY0GSatoeAHGZu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OnVkdXGY-WbVImBbtA10Cd4oBzQHIWpmPwKU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jvjugYBkym8eaFjhZ8nY0GSatoeAHGZu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HbDlo3F--B...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.082 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:52.838Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:53.240Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:53.241Z","userId":"684303d0c70fd52806410387","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 402.605 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:53.244Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rRPCyfNdofeAVeWDQy8CCjSI4iMUyMKb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WpApYFKT-tYJRWenCl9n4qUIVa3DBcsWSRE0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rRPCyfNdofeAVeWDQy8CCjSI4iMUyMKb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: EnjOZ-gr_2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.080 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:53.336Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:53.753Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:53.754Z","userId":"684303d1c70fd5280641038d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 417.620 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:53.756Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sljWYoJpMHISD1wcxtL9yYzEEKrvkGCS',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: vGW8MPAT-L5ifPytjR1BTY-9qp-1ulsuwDIU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sljWYoJpMHISD1wcxtL9yYzEEKrvkGCS

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9-bovkpKOT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.275 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/684303d1c70fd52806410393 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:53.766Z"}
[0mGET /api/v1/operators/684303d1c70fd52806410393 [33m404[0m 373.151 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:55.460Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OvQAeom-C05Wk53H8KBmsYaphBEFA_UD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FaGncSHY-Wyi_LPinLX4dv6KFh0BzAH4M1Dk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OvQAeom-C05Wk53H8KBmsYaphBEFA_UD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -6PqYVGNhH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.164 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:55.569Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:57.261Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:05:57.261Z","userId":"684303d3c70fd528064103ad","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 1693.364 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:57.267Z"}
  console.log
    CSRF token generation: {
      sessionID: '463XNO0m7R11nsQ7QO4TZdFeHPEHS4SQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sLEWENuH-J9-ZWmx3jRTVg3uOUaKSFM7X3gs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 463XNO0m7R11nsQ7QO4TZdFeHPEHS4SQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3uEnF1E7Fd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 12.073 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:57.385Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:57.775Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:57.776Z","userId":"684303d5c70fd528064103b3","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 391.476 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:57.779Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VEvhgkw43zxZ6nQiPR9GMvXDZjvNM3RH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dOPLKfnk--3KbFpSMOzhdnVH6CFaCYampuG4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VEvhgkw43zxZ6nQiPR9GMvXDZjvNM3RH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kFtqX0WuaC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.898 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:57.791Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '463XNO0m7R11nsQ7QO4TZdFeHPEHS4SQ',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A463XNO0m7R11nsQ7QO4TZdFeHPEHS4SQ.ymPOsCrfJ3tAF54639LlfQ1YCEVckt%2FgOBc0Dx%2BvOY8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newop@wavemax.com","operatorId":"OPRMBKXTTH103A997"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"684303d5c70fd528064103bc","targetType":"operator","timestamp":"2025-06-06T15:05:57.976Z","userId":"684303d3c70fd528064103ad","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 186.548 ms - 475[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:05:57.983Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:05:58.670Z","userType":"operator","username":"newop@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPRMBKXTTH103A997","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:05:58.671Z","userId":"684303d5c70fd528064103bc","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 687.718 ms - 647[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:00.742Z"}
  console.log
    CSRF token generation: {
      sessionID: '9Q5NIkxu6J8947E65maY5pU6-EtILg33',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: iy3g6Z9e-uD6lxNJ2MyWHWHUYqPWDR8_uq04

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9Q5NIkxu6J8947E65maY5pU6-EtILg33

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: D_ZYaliB6g...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 11.787 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:00.846Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:00.990Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:00.991Z","userId":"684303d8c70fd528064103d7","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.216 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:00.993Z"}
  console.log
    CSRF token generation: {
      sessionID: 'miKfZtjCrpFOt-DKb0jHd8hvCtPTg98M',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RbsjvU3e-Oh_NdXQZvJ2k5Q_5-rXrBpKMWHs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: miKfZtjCrpFOt-DKb0jHd8hvCtPTg98M

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3QIBFCQHHl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.183 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:01.093Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:01.790Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:01.791Z","userId":"684303d9c70fd528064103dd","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 697.775 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:01.794Z"}
  console.log
    CSRF token generation: {
      sessionID: '1OqP3bjQkSQcx28T2XhKsAAD0vZmlvTh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Htkeztgs-mZMVZpaRL0eaWLEsMPjDSiW8-tg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 1OqP3bjQkSQcx28T2XhKsAAD0vZmlvTh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fZowrTF_MY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.525 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:01.803Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'miKfZtjCrpFOt-DKb0jHd8hvCtPTg98M',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AmiKfZtjCrpFOt-DKb0jHd8hvCtPTg98M.jlwak7%2FGBB70CwblOcNQ6IhtGmV5cFDKRXRRtKyifgk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 57.174 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.168Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CjMef6lqn68qO30l6bfuIiIJO8VN9kX3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uwc1IUVv-OCKKHqN4OhcUEZdyxXzVTHJ-Zes

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CjMef6lqn68qO30l6bfuIiIJO8VN9kX3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: m_HSQi-J6d...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.481 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.261Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:03.415Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:03.416Z","userId":"684303dbc70fd528064103fa","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 154.799 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.419Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NB0q_1KBKx7mMxXUO7FoPsEBWuWRZH5L',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZsWodr9Q-FEymWxgC38KkC-5JXdupAoinIiQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NB0q_1KBKx7mMxXUO7FoPsEBWuWRZH5L

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fJAOhNiPtX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.016 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.772Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:03.923Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:03.924Z","userId":"684303dbc70fd52806410400","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.896 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.927Z"}
  console.log
    CSRF token generation: {
      sessionID: 'orpURrkC3vXLY6FvbJAfMWJ_C4KlCBCL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fTrfaoUX-hZfc_GcavZ2LtXAJ5w1rPYVVZxE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: orpURrkC3vXLY6FvbJAfMWJ_C4KlCBCL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gcFuHNc8vn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.302 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:03.939Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'NB0q_1KBKx7mMxXUO7FoPsEBWuWRZH5L',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ANB0q_1KBKx7mMxXUO7FoPsEBWuWRZH5L.ckvnp4F0oUhWDJgOdK1lRXqrab9Lq1psmThjVyQts1I',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 55.933 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:05.557Z"}
  console.log
    CSRF token generation: {
      sessionID: '5IV08JBey0EEnOYDgsBaHN14ujsYIIml',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5f2rLxWw-BotevrXdPZECEN3D4bwrvqN5b28

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5IV08JBey0EEnOYDgsBaHN14ujsYIIml

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Bdnw1i0eVP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.716 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:05.647Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:05.790Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:05.790Z","userId":"684303ddc70fd5280641041d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.995 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:05.793Z"}
  console.log
    CSRF token generation: {
      sessionID: '742EJ-MnWdGlWu_AFg4kIW93yugG3yol',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 89JKXQBP-Qnef9vKrFs8A4MgHacmUbJCPsjI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 742EJ-MnWdGlWu_AFg4kIW93yugG3yol

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mlweM1NJ1o...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.565 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:05.888Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:06.280Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:06.280Z","userId":"684303ddc70fd52806410423","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 392.456 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:06.283Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lw_VtiB-22HLfOvSG6uCsyt6qy2mrjW2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hJgMUxNg-266RjIWvwjXAwo7YVjKNc-0_AWc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lw_VtiB-22HLfOvSG6uCsyt6qy2mrjW2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jeADNajfa9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.819 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:06.295Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '742EJ-MnWdGlWu_AFg4kIW93yugG3yol',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A742EJ-MnWdGlWu_AFg4kIW93yugG3yol.eVa9rF%2FzurMjocicTe5DPT5%2Fo8ccZWlMBi7NPlVjGiI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 312.753 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:07.462Z"}
  console.log
    CSRF token generation: {
      sessionID: 'q7vR5TrTJqGL4x8tx_Vp8MoktuiomMDG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uGqIxt1V-qoV61c_ApdO--sDz9whSdKbf49Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: q7vR5TrTJqGL4x8tx_Vp8MoktuiomMDG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 07xaYh7myG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.291 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:07.574Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:08.290Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:08.291Z","userId":"684303dfc70fd52806410440","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 717.259 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:08.293Z"}
  console.log
    CSRF token generation: {
      sessionID: 'DVjqAAyaZziW5_44RMJbrXDkYcFdoHJu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hSh5gCjl-k2KF9XXqKsq6eUAqu38xNYdWbQg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: DVjqAAyaZziW5_44RMJbrXDkYcFdoHJu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -6rbBffjif...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.693 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:08.381Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:08.537Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:08.537Z","userId":"684303e0c70fd52806410446","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.376 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:08.540Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lM_m9h3aMp42gtZK9zIPnRJ5p01edADl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: o5Gz8kLz-ago01x01p4siEJV5nnu1bulGxow

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lM_m9h3aMp42gtZK9zIPnRJ5p01edADl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: T3TdVL6A93...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.680 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:08.546Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'DVjqAAyaZziW5_44RMJbrXDkYcFdoHJu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ADVjqAAyaZziW5_44RMJbrXDkYcFdoHJu.dsjQCZP8B9pGL9Z22RSAdIEXPoohzoHaV6iJKWcr2IQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m409[0m 102.474 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:10.481Z"}
  console.log
    CSRF token generation: {
      sessionID: 'uo-09b2cNof4IhO9oYApZr2D4VKoCV3_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: zoygrTvH-R-4xN2Cbp9Ft2yRQYzMRqyccpHM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: uo-09b2cNof4IhO9oYApZr2D4VKoCV3_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zTyg05NFDP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.397 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:10.574Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:10.970Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:10.971Z","userId":"684303e2c70fd52806410464","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 397.019 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:10.973Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tImlFYhFzmbzV55VS9ZSTt-M82v0M-e3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0e4DRdHn-y4dt3rmnVJJ78NqqiNDq8fiklNk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tImlFYhFzmbzV55VS9ZSTt-M82v0M-e3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jiIhVFqxTB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.598 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:11.076Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:11.217Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:11.218Z","userId":"684303e2c70fd5280641046a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 141.585 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:11.220Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fBGzDi8_zzaWR6mzaOU7CseiYoGLntvo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WrPjI1nw-Z31B1GsibgNFgfdUkj0z-wxzCa0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fBGzDi8_zzaWR6mzaOU7CseiYoGLntvo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 41VEEbsyK1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.301 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:11.313Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:11.723Z","userType":"administrator","username":"limited2@wavemax.com"}
info: undefined {"adminId":"LIMITED002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:11.724Z","userId":"684303e3c70fd52806410470","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 411.196 ms - 655[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:11.726Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'uo-09b2cNof4IhO9oYApZr2D4VKoCV3_',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Auo-09b2cNof4IhO9oYApZr2D4VKoCV3_.WLph8onLci%2BnEcfrTL2ZJJqtYzNIYQfLrpN74s48rL8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m403[0m 56.940 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.099Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YHuR5UNBbsiW8lVu-rn25dB6oTJtOSkj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: y8J3zxki-fNaaClVGtAE0ySClkglCMi3NGQs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YHuR5UNBbsiW8lVu-rn25dB6oTJtOSkj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1byMcE6IgM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.678 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.188Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:13.344Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:13.344Z","userId":"684303e5c70fd5280641048d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.050 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.347Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CX1OpswArk99m7usDQaqxDC8sjCGFgGK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: h0Y1KqxV-eaQrkj6W0I-8XfpSBAXuSAfM3BY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CX1OpswArk99m7usDQaqxDC8sjCGFgGK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: j_Wz9A4cMI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.646 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.440Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:13.580Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:13.580Z","userId":"684303e5c70fd52806410493","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 140.746 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.583Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aMJWXggKJ-qC_grlYkzbn1VeTR8SI6FJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: XeeC7wDn-OkX4MhxgdzHV27kM7VorWA4e8I4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: aMJWXggKJ-qC_grlYkzbn1VeTR8SI6FJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Iy0MHYjZNa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.629 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/684303e5c70fd52806410499 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:13.674Z"}
  console.log
    CSRF check for: /api/v1/operators/684303e5c70fd52806410499 {
      sessionID: 'CX1OpswArk99m7usDQaqxDC8sjCGFgGK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ACX1OpswArk99m7usDQaqxDC8sjCGFgGK.x0uYz1bNXMZYNXaLvJx5o3cu6D6q49E1GUfEcY3fFzo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"firstName":"Updated","lastName":"Name","shiftEnd":"18:00","shiftStart":"10:00","workStation":"Station Y"}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/684303e5c70fd52806410499","targetId":"684303e5c70fd52806410499","targetType":"operator","timestamp":"2025-06-06T15:06:14.309Z","userId":"684303e5c70fd5280641048d","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/684303e5c70fd52806410499 [32m200[0m 635.928 ms - 468[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:15.874Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Qj3dWp45qBn-xU4YZjNmyiiOYNbmfeCA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: J2eJ6lCK-KgmGIeQFYaqEkHMILNOROHJKPhY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Qj3dWp45qBn-xU4YZjNmyiiOYNbmfeCA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3hYcnplvC8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.175 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:15.965Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:16.110Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:16.111Z","userId":"684303e7c70fd528064104b5","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.683 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:16.114Z"}
  console.log
    CSRF token generation: {
      sessionID: 'De8DTzr2e5Wz3lOZ9yK-T2g1mn3ynDJV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GX4SAH4U-Dma0KjDm_sb-YHQvp230UGsyzVY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: De8DTzr2e5Wz3lOZ9yK-T2g1mn3ynDJV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: DhAlH34TWq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.245 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:16.208Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:16.612Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:16.612Z","userId":"684303e8c70fd528064104bb","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 403.998 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:16.615Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OvMjh2egFC36RcjEKQOHj5kFS-tJH68i',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rVvynM4b-CUTZNjEd5rZHaQnh2F8t4bbq66k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OvMjh2egFC36RcjEKQOHj5kFS-tJH68i

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9AiInIV_kl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.057 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/684303e8c70fd528064104c1 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:16.724Z"}
  console.log
    CSRF check for: /api/v1/operators/684303e8c70fd528064104c1 {
      sessionID: 'De8DTzr2e5Wz3lOZ9yK-T2g1mn3ynDJV',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ADe8DTzr2e5Wz3lOZ9yK-T2g1mn3ynDJV.axj%2BThofvAMAbr2FccXWoyxIvUACN4Qb3sOi4yE1nR8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/684303e8c70fd528064104c1","targetId":"684303e8c70fd528064104c1","targetType":"operator","timestamp":"2025-06-06T15:06:17.471Z","userId":"684303e7c70fd528064104b5","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/684303e8c70fd528064104c1 [32m200[0m 747.866 ms - 471[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:17.474Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:17.614Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:17.614Z","userId":"684303e8c70fd528064104c1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 139.925 ms - 632[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:19.177Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JJLOhDmfp4nIfpoJC-rBZhTfD6czeZnl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HE1ukNY8-YeiMpp53xxmKJzc3bDNhtLKEeKw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JJLOhDmfp4nIfpoJC-rBZhTfD6czeZnl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: W_TOjWt7UW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.126 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:19.265Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:19.418Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:19.419Z","userId":"684303ebc70fd528064104e3","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.369 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:19.421Z"}
  console.log
    CSRF token generation: {
      sessionID: 'smEiZp8vjCtrJsg28iei_pnAgB6kRMZv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3nC6iLT5-aY4R4L-qu66hx-yT5FNZxTWFm1c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: smEiZp8vjCtrJsg28iei_pnAgB6kRMZv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: IG31-3CFt6...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.101 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:19.526Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:19.925Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:19.926Z","userId":"684303ebc70fd528064104e9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 400.057 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:19.937Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FW4vqwp9GGutz4Q169OiifKQAafC50x4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: yQ6uDLyu-bQ-6YlnEpt-zKNplfq7ejfFfCgw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FW4vqwp9GGutz4Q169OiifKQAafC50x4

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: D6pB3BoHpM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 29.511 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/684303ebc70fd528064104ef {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:20.110Z"}
  console.log
    CSRF check for: /api/v1/operators/684303ebc70fd528064104ef {
      sessionID: 'smEiZp8vjCtrJsg28iei_pnAgB6kRMZv',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AsmEiZp8vjCtrJsg28iei_pnAgB6kRMZv.h3tlornEjCvA6PM0KBEo6mnYanGpNibQopRT8BtGUHk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"isActive":false}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/684303ebc70fd528064104ef","targetId":"684303ebc70fd528064104ef","targetType":"operator","timestamp":"2025-06-06T15:06:21.301Z","userId":"684303ebc70fd528064104e3","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/684303ebc70fd528064104ef [32m200[0m 1189.858 ms - 472[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:21.304Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-06T15:06:21.333Z","userType":"operator","username":"target@wavemax.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 29.534 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:22.152Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JHl1wXMbo_WZQCsqYAfj_7E_4g74dRt-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uRM1NmxB-Z3xvfQsHMmmZUoFqR35RWLAZzaw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JHl1wXMbo_WZQCsqYAfj_7E_4g74dRt-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LkW9Rw3iUJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.731 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:22.491Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:22.894Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:22.894Z","userId":"684303eec70fd5280641050c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 403.033 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:22.897Z"}
  console.log
    CSRF token generation: {
      sessionID: 'IOsmq3bwD7T4llaKSNBBZNOkigOaOU2O',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: k8OFBU1K-otemdoAoBeTUC8UzAP0Q_Vgbk-o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: IOsmq3bwD7T4llaKSNBBZNOkigOaOU2O

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eEpwYuvyVa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.700 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:23.007Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:23.393Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:23.394Z","userId":"684303eec70fd52806410512","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 387.104 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:23.397Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YfAkypzibzqUQT6PD5yztmspCCRqrIZ8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TfXDcBL3-HjY7gw5cH9OXrQJlCPRZMAn4PE4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YfAkypzibzqUQT6PD5yztmspCCRqrIZ8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jcT7RoOYFq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.063 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:23.501Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:23.900Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:23.901Z","userId":"684303efc70fd52806410518","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 400.053 ms - 632[0m
[34mdebug[39m: PATCH /api/v1/operators/684303efc70fd52806410518 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:23.904Z"}
  console.log
    CSRF check for: /api/v1/operators/684303efc70fd52806410518 {
      sessionID: 'JHl1wXMbo_WZQCsqYAfj_7E_4g74dRt-',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AJHl1wXMbo_WZQCsqYAfj_7E_4g74dRt-.OMmeeulhbOsNNjsJvIn1Rw0Y2WqOXXQPa%2BhKhW0lWzI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/684303efc70fd52806410518 [32m200[0m 166.953 ms - 266[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:24.930Z"}
  console.log
    CSRF token generation: {
      sessionID: 'MIX6nPjsAV33cV6I6oJurW2ERyXGBVNz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LxCrnK7q-WFKP3N3r4b7Qfrk7o8ITifq3YPE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: MIX6nPjsAV33cV6I6oJurW2ERyXGBVNz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Xb5w9pOqcf...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.851 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:25.020Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:25.410Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:25.410Z","userId":"684303f0c70fd52806410537","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 389.721 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:25.413Z"}
  console.log
    CSRF token generation: {
      sessionID: 'WE5tcVAxgypqtdvGB_EG6EoPzQp_oEYb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PCHepn3m-Qz5EaFM26ALO1pQ8r2us6ePhCdY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: WE5tcVAxgypqtdvGB_EG6EoPzQp_oEYb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HwEpPJx9gy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.773 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:25.501Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:25.890Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:25.891Z","userId":"684303f1c70fd5280641053d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 389.891 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:25.893Z"}
  console.log
    CSRF token generation: {
      sessionID: 'emn0NoOIfJAhM1ZVJuSGf9bTrXGbQo0d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3Y2hM1C5-Cx4IsKjLcusb2CcvtB3ntTIhcTU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: emn0NoOIfJAhM1ZVJuSGf9bTrXGbQo0d

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UY9jfLRYiY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.846 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:25.993Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:26.410Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:26.411Z","userId":"684303f1c70fd52806410543","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 418.230 ms - 632[0m
[34mdebug[39m: PATCH /api/v1/operators/684303f1c70fd52806410543 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:26.413Z"}
  console.log
    CSRF check for: /api/v1/operators/684303f1c70fd52806410543 {
      sessionID: 'MIX6nPjsAV33cV6I6oJurW2ERyXGBVNz',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AMIX6nPjsAV33cV6I6oJurW2ERyXGBVNz.3x%2Fw691dfQaq%2BVmtYmm3yWzPkLTampKGiNyN%2FQLz4u8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/684303f1c70fd52806410543 [32m200[0m 887.294 ms - 271[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:29.134Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kKGCMD9JTRxZgZ7dw5f0-3yhIZWg5goh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: T9L7czgK-Z-FXCBt_7-3-aY8XUG0w1kvqRXs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kKGCMD9JTRxZgZ7dw5f0-3yhIZWg5goh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xkfaC85b5J...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.698 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:29.502Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:29.689Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:29.690Z","userId":"684303f5c70fd52806410562","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 187.201 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:29.693Z"}
  console.log
    CSRF token generation: {
      sessionID: '8yYJIjoLJFkCJUY5tihjOVXPvnpec3DP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qx9OJVhP-ahAawkN2G1Aw4PkBurRn-QxCzwY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8yYJIjoLJFkCJUY5tihjOVXPvnpec3DP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3jLXT_GYIG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.843 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:29.795Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:30.200Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:30.203Z","userId":"684303f5c70fd52806410568","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 408.697 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:30.209Z"}
  console.log
    CSRF token generation: {
      sessionID: 'f5TVRUue5r4yseWR6KDAQUqjP0AFafER',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wl2iDtaP-VW75f3eW0csv92WPxxbKDLiVAFo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: f5TVRUue5r4yseWR6KDAQUqjP0AFafER

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1jJOHJnPZn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 39.542 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/684303f6c70fd5280641056e {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:30.394Z"}
  console.log
    CSRF check for: /api/v1/operators/684303f6c70fd5280641056e {
      sessionID: '8yYJIjoLJFkCJUY5tihjOVXPvnpec3DP',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8yYJIjoLJFkCJUY5tihjOVXPvnpec3DP.OzyF3tC64t9g%2BJf1ngX9NGXyPtPeCkYpECe3nMvp%2BwI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/684303f6c70fd5280641056e","targetId":"684303f6c70fd5280641056e","targetType":"operator","timestamp":"2025-06-06T15:06:31.075Z","userId":"684303f5c70fd52806410562","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/684303f6c70fd5280641056e [32m200[0m 681.801 ms - 471[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:32.404Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QP6ResF139nV2Z28X13OGMO-qW9H3ihf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: BpkiVZ3c-c4fBeYEk9n6ezLVnDe5z1x4jt_s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QP6ResF139nV2Z28X13OGMO-qW9H3ihf

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AnqNVhQrqg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.732 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:32.505Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:32.920Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:32.921Z","userId":"684303f8c70fd5280641058a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 416.289 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:32.924Z"}
  console.log
    CSRF token generation: {
      sessionID: 'L2stPRTuHlo9D48OJOuAbLPaLfqYQ5Ot',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mfsO6ToH-E280d6N_RvM4nnv4vI9PvPsJKOE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: L2stPRTuHlo9D48OJOuAbLPaLfqYQ5Ot

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: wji7SvNp8r...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.824 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:33.050Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:33.740Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:33.741Z","userId":"684303f8c70fd52806410590","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 690.769 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:33.743Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YDGJaBF2dQhFyWiu3mo1fP9B3BNL8Dcj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HgZhUcjG-lYTUECUDsMOmbB_dwevU8U1o70U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YDGJaBF2dQhFyWiu3mo1fP9B3BNL8Dcj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BsHcJKEp6U...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.814 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/684303f9c70fd52806410596 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:33.833Z"}
  console.log
    CSRF check for: /api/v1/operators/684303f9c70fd52806410596 {
      sessionID: 'L2stPRTuHlo9D48OJOuAbLPaLfqYQ5Ot',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AL2stPRTuHlo9D48OJOuAbLPaLfqYQ5Ot.4%2B88zgol93cNtNhZYIV368ZqQO39kPWhN2rl1HBxmVE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/684303f9c70fd52806410596 [33m409[0m 906.049 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.319Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dfJHqnmNpJQTQFRpr9m8o_WcrvQo3f-s',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wBI1TzZq-jWBYQYkNyaIfSPCjo7O09revjH8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dfJHqnmNpJQTQFRpr9m8o_WcrvQo3f-s

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YJqTcDTAVS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.672 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.422Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:36.574Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:36.574Z","userId":"684303fcc70fd528064105b2","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.278 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.577Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ItVWqOMsSMQ2IrUJtxjt921SdN7xl7Tw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7KZgKMld-wAhEezGcrxm504ukb_ZbPF2EbP8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ItVWqOMsSMQ2IrUJtxjt921SdN7xl7Tw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1xK5K7saM2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.582 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.683Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:36.826Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:36.826Z","userId":"684303fcc70fd528064105b8","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.870 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.831Z"}
  console.log
    CSRF token generation: {
      sessionID: '5589NzIQPynuNfWxuoS9yEP4xFuVslXo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sGv0HWIM-3D7EiIlZOrZg2p7uPp7u7hbuAIU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5589NzIQPynuNfWxuoS9yEP4xFuVslXo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fuqQli35ra...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.555 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/684303fcc70fd528064105be {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:36.929Z"}
  console.log
    CSRF check for: /api/v1/operators/684303fcc70fd528064105be {
      sessionID: 'ItVWqOMsSMQ2IrUJtxjt921SdN7xl7Tw',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AItVWqOMsSMQ2IrUJtxjt921SdN7xl7Tw.a%2FRnqb414rWfVcsz9HxaQZQKJa9JsbOuayP6Xk8uZhw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"0","11":"f","12":"d","13":"5","14":"2","15":"8","16":"0","17":"6","18":"4","19":"1","2":"4","20":"0","21":"5","22":"b","23":"2","3":"3","4":"0","5":"3","6":"f","7":"c","8":"c","9":"7","timestamp":"2025-06-06T15:06:37.853Z"}
[0mDELETE /api/v1/operators/684303fcc70fd528064105be [32m200[0m 924.494 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:39.215Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dq_3GCk870dDpSclsb3OjEA8bgz7_-V6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ycX7NA6f-bGz6ywkKknY7fdswG8BVNKk71wA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dq_3GCk870dDpSclsb3OjEA8bgz7_-V6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0gYrFPZqEK...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.011 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:39.579Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:39.721Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:39.721Z","userId":"684303ffc70fd528064105db","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.406 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:39.724Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ftZ-FPoWZepPIqj7XPuhAYQaw2uy9INu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: L78MYmvY-TlLvzXw1NYD0MvfNmAUyW7FGEKM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ftZ-FPoWZepPIqj7XPuhAYQaw2uy9INu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Mkj9RhWqWq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.555 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:39.818Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:39.962Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:39.962Z","userId":"684303ffc70fd528064105e1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.474 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:39.965Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HPHWhGtKm2848enZmRULSTUI07hK084d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: exzrOJaW-Tijwwsl4sqCMqEBgCLaKHlBDrKM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HPHWhGtKm2848enZmRULSTUI07hK084d

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: SeN3pynYa0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.633 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/684303ffc70fd528064105e7 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:40.098Z"}
  console.log
    CSRF check for: /api/v1/operators/684303ffc70fd528064105e7 {
      sessionID: 'ftZ-FPoWZepPIqj7XPuhAYQaw2uy9INu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AftZ-FPoWZepPIqj7XPuhAYQaw2uy9INu.672jvbfqeB4AMseMuYWpMPL%2F0WcRlK84xX%2BmHZEe9FE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/684303ffc70fd528064105e7 [33m400[0m 120.783 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:41.803Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YyU5sNBWwpGEOYrQTdSLvvGga8kvWUW3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: o9tjJii5-qBpjQvQBk2W_b4H6Ly0rMKpUTYM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YyU5sNBWwpGEOYrQTdSLvvGga8kvWUW3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: SBWyfz6WyG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.112 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:41.901Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:42.061Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:42.062Z","userId":"68430401c70fd52806410603","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.502 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:42.065Z"}
  console.log
    CSRF token generation: {
      sessionID: 'txisk__qA3i6QAwHxbl8ca9u11McX-ai',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HJ8onkwJ-Nv_u0cEKBelsPVbnFg8w_E0ezmg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: txisk__qA3i6QAwHxbl8ca9u11McX-ai

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QI8qEYouQx...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.455 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:42.160Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:42.562Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:42.562Z","userId":"68430402c70fd52806410609","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 402.431 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:42.564Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ik4NJ_DpB1fsYC7N10iMKeQ5bCUWIVVj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pezGXmQ0-W9TWeTlIeO9azpHvZK9K0ODY61Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ik4NJ_DpB1fsYC7N10iMKeQ5bCUWIVVj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: lT1hRW6Zf_...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.401 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:42.739Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:42.892Z","userType":"administrator","username":"limited3@wavemax.com"}
info: undefined {"adminId":"LIMITED003","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:42.893Z","userId":"68430402c70fd52806410611","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.366 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/operators/68430402c70fd5280641060f {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:42.895Z"}
  console.log
    CSRF check for: /api/v1/operators/68430402c70fd5280641060f {
      sessionID: 'YyU5sNBWwpGEOYrQTdSLvvGga8kvWUW3',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYyU5sNBWwpGEOYrQTdSLvvGga8kvWUW3.1hp25IODbcqM7Yg7qQaGDKObBDDj4IDo2hnxVkRojng',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/68430402c70fd5280641060f [33m403[0m 56.490 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:44.755Z"}
  console.log
    CSRF token generation: {
      sessionID: 'zUvz6wdbnvWnsDbjzDw0pQUi09eZXyzW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2GQCWWBw-CzZ7pxePPiRaTqJVQq6EAovohX8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: zUvz6wdbnvWnsDbjzDw0pQUi09eZXyzW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dk_R7wZxH3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.857 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:44.851Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:45.240Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:45.240Z","userId":"68430404c70fd5280641062e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 389.810 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:45.243Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cBpqKiP8g19OlQLO2lnqH4LW0ap5kmQK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MPSajzsl--jBOtQmRQPivf2cr4GnR_2lfNFk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: cBpqKiP8g19OlQLO2lnqH4LW0ap5kmQK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _Q-7Opq0HJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.678 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:45.337Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:45.500Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:45.500Z","userId":"68430405c70fd52806410634","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 163.710 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:45.504Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tR7MHjWJktX119LUD1NyGgan34IrnaE1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FWiedHIK-lZ8SCEGLcXNKnvvGu6SiOq_H4Xc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tR7MHjWJktX119LUD1NyGgan34IrnaE1

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TTTpzUkII2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.310 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/68430405c70fd5280641063c {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:45.599Z"}
  console.log
    CSRF check for: /api/v1/operators/68430405c70fd5280641063c {
      sessionID: 'cBpqKiP8g19OlQLO2lnqH4LW0ap5kmQK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AcBpqKiP8g19OlQLO2lnqH4LW0ap5kmQK.VOaTg59%2F8r9kVUYG5HjuDO5WmLG2l1yz2wZft0tePXA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/68430405c70fd5280641063c [33m404[0m 90.521 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:47.723Z"}
  console.log
    CSRF token generation: {
      sessionID: 'AscFOnQ5b8CHstPloXLTpEzfp7GNgXRD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qBcyOzx3-Hixx3lLG9YqaXdJNfDoi7m6MGnM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: AscFOnQ5b8CHstPloXLTpEzfp7GNgXRD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LXkt01GZv9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.982 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:47.813Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:47.953Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:47.953Z","userId":"68430407c70fd52806410655","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.841 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:47.956Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HcSK0FFbo_U-OcC6jK2N2wGsUZxMzgDy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: KsXUKM5r-TtU9YrFheUFB4Gg49EzejbZk3TY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HcSK0FFbo_U-OcC6jK2N2wGsUZxMzgDy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KpJOVeiiY0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.156 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:48.050Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:48.444Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:48.445Z","userId":"68430407c70fd5280641065b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 394.657 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:48.447Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hwCvWOQWIRrSnjN1THCAm6dLd7L3PYbr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Pez2E5Pd-RdvnbwQ9WU05AodArrDAcnw6OdQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hwCvWOQWIRrSnjN1THCAm6dLd7L3PYbr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qgRa1EsGMp...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.918 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/68430408c70fd52806410661/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:48.543Z"}
  console.log
    CSRF check for: /api/v1/operators/68430408c70fd52806410661/reset-pin {
      sessionID: 'HcSK0FFbo_U-OcC6jK2N2wGsUZxMzgDy',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AHcSK0FFbo_U-OcC6jK2N2wGsUZxMzgDy.0Gm3RWTAcaqKhzvHHRICXp%2B1x2Rq8fAGBuVJIjAdwHg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"0","11":"f","12":"d","13":"5","14":"2","15":"8","16":"0","17":"6","18":"4","19":"1","2":"4","20":"0","21":"6","22":"5","23":"5","3":"3","4":"0","5":"4","6":"0","7":"7","8":"c","9":"7","timestamp":"2025-06-06T15:06:48.722Z"}
[0mPOST /api/v1/operators/68430408c70fd52806410661/reset-pin [32m200[0m 179.805 ms - 51[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:48.725Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:48.868Z","userType":"operator","username":"pinreset@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"PIN001","path":"/operator/login","shift":"undefined - undefined","timestamp":"2025-06-06T15:06:48.868Z","userId":"68430408c70fd52806410661","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.367 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:50.211Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Jw1WQF8e8IrF5PcRXDMY8TKBkgG19XOS',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dyonnBrp-xS5S6XTVGaIDpzmUPEJEwE95NSM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Jw1WQF8e8IrF5PcRXDMY8TKBkgG19XOS

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eT0q-3gh5A...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.538 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:50.313Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:50.473Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:50.474Z","userId":"6843040ac70fd52806410680","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.460 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:50.476Z"}
  console.log
    CSRF token generation: {
      sessionID: 'moxiRb7IVkt8Hzuek-Uc-cOZqeZhb3Ib',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kBTLYA1m-Era41fstnYwGzbqIzjAQPKz6eAE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: moxiRb7IVkt8Hzuek-Uc-cOZqeZhb3Ib

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1xoo5d6v2p...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.595 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:50.577Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:50.977Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:50.977Z","userId":"6843040ac70fd52806410686","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 400.434 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:50.979Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tVSDh8ZRkNtwqkZy4G5Bv-FtKg25fHXD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NRlKjkgh-41H0Aqjz3-YxoPH6U1QAXs3THAc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tVSDh8ZRkNtwqkZy4G5Bv-FtKg25fHXD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8hWE2wPAA7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.555 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/6843040ac70fd5280641068c/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:51.114Z"}
  console.log
    CSRF check for: /api/v1/operators/6843040ac70fd5280641068c/reset-pin {
      sessionID: 'moxiRb7IVkt8Hzuek-Uc-cOZqeZhb3Ib',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AmoxiRb7IVkt8Hzuek-Uc-cOZqeZhb3Ib.vXJc2r7jdRr%2B88Sf9iEURRDgGFMxYquUyWuRPwAdjzg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"0","11":"f","12":"d","13":"5","14":"2","15":"8","16":"0","17":"6","18":"4","19":"1","2":"4","20":"0","21":"6","22":"8","23":"0","3":"3","4":"0","5":"4","6":"0","7":"a","8":"c","9":"7","timestamp":"2025-06-06T15:06:51.544Z"}
[0mPOST /api/v1/operators/6843040ac70fd5280641068c/reset-pin [32m200[0m 429.716 ms - 51[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:52.405Z"}
  console.log
    CSRF token generation: {
      sessionID: '_QFTldn7uaceE2TTVqEeXas4xSnV10Qt',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: guSxGAQF-Rtj25n6FVjxoU4wtat8vgOSa9CE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _QFTldn7uaceE2TTVqEeXas4xSnV10Qt

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4g3yG-Z0JV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.909 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:52.510Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:52.904Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:52.904Z","userId":"6843040cc70fd528064106a9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 394.147 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:52.907Z"}
  console.log
    CSRF token generation: {
      sessionID: 'MJPxY9cFFwzOTtVnpAnx7J4JzlpF-Rrn',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9VuoQHOt-zntWriearF3zhBYVKsXD4XvM1Zo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: MJPxY9cFFwzOTtVnpAnx7J4JzlpF-Rrn

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3yBYhxokbJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.753 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:53.019Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:53.163Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:53.163Z","userId":"6843040cc70fd528064106af","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.995 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:53.166Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Elm-5srgVVG5rdnkHa_S3T8KG1fGAofi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7i9W9TIN-k-ihBapWL68bD9_3BPHr0FAbjcc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Elm-5srgVVG5rdnkHa_S3T8KG1fGAofi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 12IXZ-9FoI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.688 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:53.932Z"}
[0mGET /api/v1/operators/available [32m200[0m 333.588 ms - 597[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:57.086Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QWHttJjkx2aQaN-GLB40XQsIQpEOw_hu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GOLfafs9-Y67QzJMYFmephqF6yK9z87upVmE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QWHttJjkx2aQaN-GLB40XQsIQpEOw_hu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _unAWL168e...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.657 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:57.183Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:57.870Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:06:57.871Z","userId":"68430411c70fd528064106d5","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 688.445 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:57.874Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bzHgQ1qWy1wRowglgUp3bivYSdp_Sn9N',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: O4ffFLoe-CPzCGBE2lbzMF-la9j5B1aTCRXM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bzHgQ1qWy1wRowglgUp3bivYSdp_Sn9N

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: R-5qrvbq-q...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.426 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:57.970Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:06:58.358Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:06:58.359Z","userId":"68430411c70fd528064106db","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 389.316 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:58.362Z"}
  console.log
    CSRF token generation: {
      sessionID: '6D6qEjLFnnOv5J3vzaxpou7RqvwaC_vQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: w5GrZ39u-TcwgzPoHi8iWP1xCM5lKz9Y2ZAw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6D6qEjLFnnOv5J3vzaxpou7RqvwaC_vQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0S9DotYHf-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 13.598 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available?limit=2 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:06:58.892Z"}
[0mGET /api/v1/operators/available?limit=2 [32m200[0m 81.986 ms - 430[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:01.278Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nxsjaIuuH7_toSM2jtQDMLq39WBixNEo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: aGXWvbBB-COr0K-8ii_C6JQptH7D8ef5en50

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nxsjaIuuH7_toSM2jtQDMLq39WBixNEo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: J85P0-cXbc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.844 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:01.380Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:01.788Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:01.788Z","userId":"68430415c70fd52806410701","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 409.063 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:01.792Z"}
  console.log
    CSRF token generation: {
      sessionID: 'AHK4_B7Qg14e_Yw2TsjjOT4TuaTDlWqs',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MwRxYyVJ-7wZD-UdbP33gmM6C7i9CVZfWeow

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: AHK4_B7Qg14e_Yw2TsjjOT4TuaTDlWqs

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XpxGGEdimj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.612 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:02.152Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:02.305Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:02.305Z","userId":"68430415c70fd52806410707","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.986 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:02.308Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gsFCDeYu10j756zDmQtbQdawzI_Ebn7t',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 715r1ZFy-QPKvhKtUA6FxbE8Dywxvpuqhqv0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gsFCDeYu10j756zDmQtbQdawzI_Ebn7t

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AZeqFKqPVD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.608 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:02.577Z"}
[0mGET /api/v1/operators/available [32m200[0m 93.209 ms - 597[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:03.221Z"}
  console.log
    CSRF token generation: {
      sessionID: 'W6YkJuL9SCHMmxI0jTNT-NHdcCX0j1b0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TRbq9rQK-VckFcUZiPJRE42P6I7g-H3Iw9_E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: W6YkJuL9SCHMmxI0jTNT-NHdcCX0j1b0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7H7WdDlStk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.803 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:03.326Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:03.491Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:03.491Z","userId":"68430417c70fd5280641072d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 165.338 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:03.494Z"}
  console.log
    CSRF token generation: {
      sessionID: 'k6VWCG8YA4n9apmlLGbRCgoGBqJ_dnp3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: nGpKk5QR-vvyOga-5yWq4oTipy-Uz-FGwiG0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: k6VWCG8YA4n9apmlLGbRCgoGBqJ_dnp3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JDw8AzTNDB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.612 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:03.587Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:03.739Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:03.739Z","userId":"68430417c70fd52806410733","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.975 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:03.742Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XV3CrrlGvhgCHwM6jUZhWayijH7BpCBQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PmmnsXVv-04u1GZFDCXuvSR8CQQU7cXZK23g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XV3CrrlGvhgCHwM6jUZhWayijH7BpCBQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Y-mOQiwAZ6...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.779 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:04.266Z"}
[0mGET /api/v1/operators/available [33m401[0m 1.139 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:05.888Z"}
  console.log
    CSRF token generation: {
      sessionID: 'j4CtQ5x5Gsk3qIY0Q8PJ0swvBbpZqJSr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xeApb72s-ly5BxCOi-Gfefj6ZZuNVMKwLKi8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: j4CtQ5x5Gsk3qIY0Q8PJ0swvBbpZqJSr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5AhHdfuiOu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.112 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:05.979Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:06.135Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:06.136Z","userId":"68430419c70fd52806410756","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.783 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:06.139Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CZ4Wjr8542HXCpiZPS24kJFwP_Dcn34K',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: joRa780c-4b0nHETtx1Hf6CbaAxcmH7cosGo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CZ4Wjr8542HXCpiZPS24kJFwP_Dcn34K

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: tpu2WcTtU1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.169 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:06.254Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:06.400Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:06.401Z","userId":"6843041ac70fd5280641075c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.075 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:06.404Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ME72_P6LvTq9s28AG3kKlDGUDnXYzNvw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: v7w3305W-Wgl2VTyj-9YqcucfGsVqonjtR1o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ME72_P6LvTq9s28AG3kKlDGUDnXYzNvw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2mmDXTu8hZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.783 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/6843041ac70fd52806410762/stats {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:06.508Z"}
  console.log
    CSRF check for: /api/v1/operators/6843041ac70fd52806410762/stats {
      sessionID: 'CZ4Wjr8542HXCpiZPS24kJFwP_Dcn34K',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ACZ4Wjr8542HXCpiZPS24kJFwP_Dcn34K.%2Bk%2FqookovQDPDwInpzP8VRuRW4Y6D%2FhHhoaobZo6eo0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/6843041ac70fd52806410762/stats [32m200[0m 362.707 ms - 267[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:09.673Z"}
  console.log
    CSRF token generation: {
      sessionID: 'KDX_vRsgI5kedZy9QZNOStZ6SmFBP3fh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WBxky6DC-kKMwR6kg6SojWWZ5Ct2NIhTZpWE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: KDX_vRsgI5kedZy9QZNOStZ6SmFBP3fh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dgGQ20y3Q6...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 10.680 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:09.772Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:09.914Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:09.914Z","userId":"6843041dc70fd5280641077d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.149 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:09.918Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OUvvXOZ1745UHFarq_kzAjNHeLDgjOzB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OewdTean-xxZsyq9jbp1Sijrha4lV2nYinBk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OUvvXOZ1745UHFarq_kzAjNHeLDgjOzB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OB3g8_S0wW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 10.112 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:10.271Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:10.661Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:10.661Z","userId":"6843041dc70fd52806410783","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 390.107 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:10.664Z"}
  console.log
    CSRF token generation: {
      sessionID: 'srkNd7oK3UubTR90dzmT0buqC5atLyLj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OvIT4Wj5-M_Oj80VpLPuW6CmAUZ04jOg7T_Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: srkNd7oK3UubTR90dzmT0buqC5atLyLj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ZBPuyPEz7o...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.211 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/6843041ec70fd52806410789/stats {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:10.758Z"}
  console.log
    CSRF check for: /api/v1/operators/6843041ec70fd52806410789/stats {
      sessionID: 'OUvvXOZ1745UHFarq_kzAjNHeLDgjOzB',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOUvvXOZ1745UHFarq_kzAjNHeLDgjOzB.G5mHfBaV0IvRTF%2BclodTJbroQTyR%2FFxjI6moJgawGZ4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/6843041ec70fd52806410789/stats [32m200[0m 112.645 ms - 252[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:12.426Z"}
  console.log
    CSRF token generation: {
      sessionID: '8tKuupCulHxxXMTLGfGn3C0mjtNaA92Z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Wy5jkOgC-lihlqr1n2MkgXPTbKJsa0F2qlY4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8tKuupCulHxxXMTLGfGn3C0mjtNaA92Z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ziWv3YVhW_...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.242 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:12.516Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:12.672Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:12.672Z","userId":"68430420c70fd528064107a4","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.956 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:12.675Z"}
  console.log
    CSRF token generation: {
      sessionID: 'yF1S0FX4z0pQMcbSxL_ZgBOr7ywQZ2x_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ufdBvqyf-eA7eN_qp9nqo_UTUsbBBlNSogoo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: yF1S0FX4z0pQMcbSxL_ZgBOr7ywQZ2x_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FjlNp3hkkl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.315 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:12.766Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:13.170Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:13.171Z","userId":"68430420c70fd528064107aa","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 404.791 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:13.173Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JVJnwAQ8fpffmJpQoeRy0X7GAnhl0tqI',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9tymT9ku-qrzdKkuQbfr0ZS0zIPYKEQQPPik

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JVJnwAQ8fpffmJpQoeRy0X7GAnhl0tqI

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: PRWqSiaJBg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.219 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68430421c70fd528064107b0/stats {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:13.297Z"}
  console.log
    CSRF check for: /api/v1/operators/68430421c70fd528064107b0/stats {
      sessionID: 'yF1S0FX4z0pQMcbSxL_ZgBOr7ywQZ2x_',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AyF1S0FX4z0pQMcbSxL_ZgBOr7ywQZ2x_.pL3DzGvzCls3hvQ5Hs5HR9N6OVMcd63qn%2BlRrwaWgVo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68430421c70fd528064107b0/stats [32m200[0m 649.963 ms - 268[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:15.274Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SkjOWByxuVlbX6Uof6403QuiSqEq_bL-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qJ7jMpuV-q8J12yjmXUmk0A5RwC-tlIqr7yw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SkjOWByxuVlbX6Uof6403QuiSqEq_bL-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: h92pfFBCsb...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.655 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:15.376Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:15.519Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-06T15:07:15.519Z","userId":"68430423c70fd528064107cb","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.014 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:15.522Z"}
  console.log
    CSRF token generation: {
      sessionID: '3cLSYWBxcB7vNGVeG1sofY8KSdndkKPg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AA48d5pg-vN5dzm_JmdIXg1GE55_S1wVDYZg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3cLSYWBxcB7vNGVeG1sofY8KSdndkKPg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: syuqfMnCWX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.883 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:15.625Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-06T15:07:16.305Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-06T15:07:16.306Z","userId":"68430423c70fd528064107d1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 681.199 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:16.309Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ifA_3-XHP9xlTU7pPw0RoxURdffzIJTN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NBtE13HT-d6idAdbY741uI7pqUvo-T8Sjgdk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ifA_3-XHP9xlTU7pPw0RoxURdffzIJTN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Fie3F5aZya...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.025 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68430424c70fd528064107d7/stats {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:16.402Z"}
  console.log
    CSRF check for: /api/v1/operators/68430424c70fd528064107d7/stats {
      sessionID: '3cLSYWBxcB7vNGVeG1sofY8KSdndkKPg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3cLSYWBxcB7vNGVeG1sofY8KSdndkKPg.TYpsOheQYKt8VPTMMFGCp4HvVbxapyhFiI7rrSKf%2BTQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68430424c70fd528064107d7/stats [33m400[0m 56.201 ms - 62[0m
PASS tests/integration/operator.test.js (109.702 s)
  Operator Integration Tests
    GET /api/v1/operators
      ✓ should get all operators with admin token (2020 ms)
      ✓ should filter by active status (1328 ms)
      ✓ should filter by work station (1439 ms)
      ✓ should filter by on-shift status (1290 ms)
      ✓ should support pagination (3662 ms)
      ✓ should require authentication (2334 ms)
      ✓ should require operator management permissions (3171 ms)
    GET /api/v1/operators/:id
      ✓ should get operator by ID (3076 ms)
      ✓ should allow operators to view their own profile (2153 ms)
      ✓ should prevent operators from viewing other operators (2484 ms)
      ✓ should return 404 for non-existent operator (2485 ms)
    POST /api/v1/operators
      ✓ should create new operator (5034 ms)
      ✓ should validate required fields (2673 ms)
      ✓ should validate email format (2391 ms)
      ✓ should validate shift time format (1887 ms)
      ✓ should prevent duplicate emails (3258 ms)
      ✓ should require operators.manage permission (2396 ms)
    PATCH /api/v1/operators/:id
      ✓ should update operator details (2997 ms)
      ✓ should update password (3315 ms)
      ✓ should deactivate operator (2978 ms)
      ✓ should allow operators to update their own profile (limited fields) (2766 ms)
      ✓ should prevent operators from changing their own work station (3982 ms)
      ✓ should not allow updating operatorId (3482 ms)
      ✓ should validate email uniqueness on update (3697 ms)
    DELETE /api/v1/operators/:id
      ✓ should delete operator (3130 ms)
      ✓ should prevent deleting operator with active orders (2587 ms)
      ✓ should require operators.manage permission (2718 ms)
      ✓ should handle non-existent operator (3199 ms)
    POST /api/v1/operators/:id/reset-pin
      ✓ should reset operator PIN/password (2484 ms)
      ✓ should clear login attempts on PIN reset (2190 ms)
    GET /api/v1/operators/available
      ✓ should get available operators sorted by order count (4440 ms)
      ✓ should respect limit parameter (4439 ms)
      ✓ should only include active operators (1950 ms)
      ✓ should require authentication (2662 ms)
    PATCH /api/v1/operators/:id/stats
      ✓ should update processing statistics (3283 ms)
      ✓ should update quality score (3249 ms)
      ✓ should update both stats in one call (2854 ms)
      ✓ should validate processingTime is positive (2563 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:20.413Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: L24WfmSM-lvJ7nNrKK00tf9kqzLg7-Hi8X4s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.201 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:21.318Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: C1lX8Z33-5b4v1Ts7axdYK6FzoCahWbbKIpc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 16.269 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/poll-test-session-456 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:21.368Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'poll-test-session-456',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        socialToken: 'mock-social-jwt-token',
        provider: 'facebook',
        socialId: 'facebook-user-456',
        email: 'poll@example.com',
        firstName: 'Poll',
        lastName: 'Test'
      }
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        socialToken: 'mock-social-jwt-token',
        provider: 'facebook',
        socialId: 'facebook-user-456',
        email: 'poll@example.com',
        firstName: 'Poll',
        lastName: 'Test'
      }
    }

      at log (server/controllers/authController.js:1561:13)

[0mGET /api/v1/auth/oauth-session/poll-test-session-456 [32m200[0m 33.984 ms - 211[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:22.026Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 6Yo4iVx8--dQCFYqNzZBttoupa24klMvB2TA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.302 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/login-test-session-789 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:22.064Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'login-test-session-789',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-auth-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF-123e4567-e89b-12d3-a456-426614174000',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-auth-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF-123e4567-e89b-12d3-a456-426614174000',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at log (server/controllers/authController.js:1561:13)

[0mGET /api/v1/auth/oauth-session/login-test-session-789 [32m200[0m 32.785 ms - 295[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:22.719Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QVNnAf9q-UH4ePBxrMfJeDL4q14L-G-L4di8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.273 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/non-existent-session {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:22.734Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'non-existent-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1542:13)

[0mGET /api/v1/auth/oauth-session/non-existent-session [33m404[0m 27.849 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:23.354Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: gZHTtWH7-HKcGxBfBqV69gYR2oZF5tncc7BA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.565 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:23.397Z"}
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:23.400Z"}
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:23.401Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'found',
      resultData: {
        sessionId: 'race-condition-session',
        provider: 'linkedin',
        socialId: 'linkedin-race-user',
        email: 'race@example.com',
        firstName: 'Race',
        lastName: 'Condition',
        context: 'affiliate'
      }
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        sessionId: 'race-condition-session',
        provider: 'linkedin',
        socialId: 'linkedin-race-user',
        email: 'race@example.com',
        firstName: 'Race',
        lastName: 'Condition',
        context: 'affiliate'
      }
    }

      at log (server/controllers/authController.js:1561:13)

[0mGET /api/v1/auth/oauth-session/race-condition-session [32m200[0m 32.687 ms - 209[0m
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1542:13)

[0mGET /api/v1/auth/oauth-session/race-condition-session [33m404[0m 31.957 ms - 58[0m
[0mGET /api/v1/auth/oauth-session/race-condition-session [33m404[0m 31.705 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:24.076Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IwUSYAhg-Ctdk_LlPfvCCrlSvYmx7GpYTb2o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.615 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:24.087Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-ca03dd03-3fdc-473c-98f8-3f9488a76d58","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:24.298Z","userId":"6843042cb6549fb6da598f98","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 211.881 ms - 798[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:24.950Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: O7AwAV7v-SMa-QF2B0OSRCsMlEz8c9IgWpz0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.465 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:24.965Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.977 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:25.616Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: KppkY69c-BSaWG9aU83s0T_Vz4rNBiPFVxrI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.679 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:25.625Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-033c9fca-6fbb-4761-b97c-51ac5c2a1750","provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:25.824Z","userId":"6843042db6549fb6da598fd1","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 200.284 ms - 790[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:25.830Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 85.052 ms - 108[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:26.530Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: X4JBASBM-FP0NKPT4C0k7PLYhOYM-irBrUDA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.007 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:26.574Z"}
[0mPOST /api/v1/auth/social/register [33m409[0m 55.924 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:27.249Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qdBnze9Q-hG9zY9QZVkm98U58ObA5ATYnw5g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.354 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:27.263Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-b4573877-03c6-468d-96f6-afa5cf727bc6","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:27.466Z","userId":"6843042fb6549fb6da59900d","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 203.461 ms - 786[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:27.471Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-d86394e8-73a1-4995-917e-67635f432e73","provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:27.705Z","userId":"6843042fb6549fb6da599015","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 234.448 ms - 788[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:27.709Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-4ed6d47d-6bd3-45e3-9b34-dc6ee4e233df","provider":"linkedin","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:27.962Z","userId":"6843042fb6549fb6da59901e","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 253.666 ms - 788[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:28.625Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SI9VDmO7-11_Qylisz2jKFolloQtnoKs5rgQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.644 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:28.667Z"}
info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"affiliateId":"AFF999999","customerId":"CUST-6ee44a10-88f7-4361-9c52-f59d51b62dad","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/customer/social/register","timestamp":"2025-06-06T15:07:28.895Z","userId":"68430430b6549fb6da599040","userType":"customer"}
[0mPOST /api/v1/auth/customer/social/register [32m201[0m 228.542 ms - 828[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:29.552Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0tXj36AZ-MVZ9qbTi6JehAvbyE3Qt92bo0Lo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.759 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:29.564Z"}
[0mPOST /api/v1/auth/customer/social/register [33m400[0m 109.456 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:30.311Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: EkLPYIbI-aPTxrMbZqdG62-zBlfY4yKjVVGY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 24.158 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:30.377Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK.ld608%2BmebRLOUpBQIGKDsvuKOO%2FT6JMqVwrejTvhRA0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:07:30.476Z","userType":"affiliate","username":"existing"}
info: undefined {"affiliateId":"AFF888888","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"google","timestamp":"2025-06-06T15:07:30.476Z","userId":"68430432b6549fb6da599077","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 99.622 ms - 525[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:31.101Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3biQLZ8i-mKoa72VdoxiLEX_ShTHa2lX5uxM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.210 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:31.175Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK.ld608%2BmebRLOUpBQIGKDsvuKOO%2FT6JMqVwrejTvhRA0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-06T15:07:31.296Z","userType":"customer","username":"existingcustomer"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 121.664 ms - 531[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:31.947Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PBNgMl9G-bDXvRKXNS7qdbT-Dfv8de20gqQY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.659 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:31.955Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK.ld608%2BmebRLOUpBQIGKDsvuKOO%2FT6JMqVwrejTvhRA0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/social/callback [33m404[0m 55.699 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:32.637Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lqPRXm4Q-rtiSjyL8AHuFhu9TdH4Xs8v1IIY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.928 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:32.682Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK.ld608%2BmebRLOUpBQIGKDsvuKOO%2FT6JMqVwrejTvhRA0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"twitter","socialAccountId":"twitter-link-123"},"eventType":"ACCOUNT_UPDATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/link","timestamp":"2025-06-06T15:07:32.783Z","userId":"68430434b6549fb6da5990cd","userType":"affiliate"}
[0mPOST /api/v1/auth/social/link [32m200[0m 101.772 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:33.397Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: r5otA6G3-GqJOsWBNU-He1qbNOpT4TBwEiL4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.731 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:33.406Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-a6cfb2a3-b9fc-41a2-8dc7-41a3bbd2c0b2","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-06T15:07:33.619Z","userId":"68430435b6549fb6da5990ec","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 213.047 ms - 786[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:34.235Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Zds3CX1u-UOpI4odEZPb7QwUJF5Fy8b5IWQY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.278 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:34.244Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.963 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:34.875Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rq5MicEG-GXrQbYMaeUYCaYt5yu5xHTbhaII

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.647 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:34.883Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.670 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:35.484Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lKgWGqFj-cEruOkoJwl5ltwjpaUodRQzzjEQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.719 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:35.494Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 3.064 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:36.113Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: P0CqvRUK-wOG1o2rMlVOWqOWifSeUZs-YqN4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.761 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:36.818Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pKmBNKM2-aty0GY5ClAA-nSMRWkp5MoqdbZY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.815 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:37.522Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: M5vFsGKx-86wnOxil3ViCO7kPaiuDjFTAexE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.659 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/conflict-test-session-123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:37.594Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'conflict-test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john.affiliate@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john.affiliate@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at log (server/controllers/authController.js:1561:13)

[0mGET /api/v1/auth/oauth-session/conflict-test-session-123 [32m200[0m 33.394 ms - 402[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:38.264Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GeoCjEGV-S0yLRfgwjwWeqMIWxs0Y-_g7IxE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wAhs5XO7-G7iW-sL5NVTKPjRzSO9r_RK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mcPPNumg3E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.329 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/customer-conflict-session-456 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:38.337Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'customer-conflict-session-456',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane.customer@example.com'
        }
      }
    }

      at log (server/controllers/authController.js:1542:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane.customer@example.com'
        }
      }
    }

      at log (server/controllers/authController.js:1561:13)

[0mGET /api/v1/auth/oauth-session/customer-conflict-session-456 [32m200[0m 33.541 ms - 336[0m
PASS tests/integration/oAuthFlows.test.js (20.632 s)
  OAuth Authentication Integration Tests
    OAuth Session Management
      ✓ should create and store OAuth session on callback (1327 ms)
      ✓ should poll for OAuth session results with complete data structure (707 ms)
      ✓ should poll for OAuth login session results (690 ms)
      ✓ should return pending status for non-existent session (639 ms)
      ✓ should handle session polling race conditions (719 ms)
    Social Registration - Affiliates
      ✓ should complete affiliate social registration with valid data (874 ms)
      ✓ should reject registration with malicious social data (664 ms)
      ✓ should prevent duplicate social account registration (915 ms)
      ✓ should prevent duplicate email registration (720 ms)
      ✓ should generate unique usernames for social registrations (1372 ms)
    Social Registration - Customers
      ✓ should complete customer social registration with valid data (921 ms)
      ✓ should reject customer registration with invalid affiliate ID (742 ms)
    Social Login
      ✓ should login existing affiliate with social account (816 ms)
      ✓ should login existing customer with social account (841 ms)
      ✓ should return error for non-existent social account (692 ms)
    Social Account Linking
      ✓ should link social account to existing affiliate (762 ms)
    Security and Error Handling
      ✓ should accept requests without CSRF token for social registration (837 ms)
      ✓ should handle expired JWT tokens gracefully (640 ms)
      ✓ should handle invalid JWT tokens (609 ms)
      ✓ should validate required fields (628 ms)
    OAuth Session TTL and Cleanup
      ✓ should automatically expire OAuth sessions after TTL (705 ms)
      ✓ should preserve fresh OAuth sessions during cleanup (703 ms)
    OAuth Account Conflict Scenarios
      ✓ should create social-auth-account-conflict session for customer trying to register with affiliate Google account (741 ms)
      ✓ should create social-auth-account-conflict session for affiliate trying to register with customer Google account (776 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:40.040Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c75FdBrcZlXLoWZV-RaFGifF8V2X4Xqo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sms1fcf8-YOM-tXFUEYUO2uHsEZ5I4ezPutI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: c75FdBrcZlXLoWZV-RaFGifF8V2X4Xqo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: iiGSXgrMSj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.513 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:40.645Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'c75FdBrcZlXLoWZV-RaFGifF8V2X4Xqo',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac75FdBrcZlXLoWZV-RaFGifF8V2X4Xqo.CU4CoJ0kWSspKvmoiSASGVtK1YSB8dRkz33ZjaNqa9k',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2,
      serviceNotes: 'Handle with care',
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon',
      specialDeliveryInstructions: 'Leave at door'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 226.683 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:41.444Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TXZVMwQ7h4TRiuaXxWROx4VfeTygWFZ5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MSJiR7Hd-25iyWQZ0eDxiW_LNv6iwI-TJi2Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TXZVMwQ7h4TRiuaXxWROx4VfeTygWFZ5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: c8iJV8yWPr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.664 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:41.698Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'TXZVMwQ7h4TRiuaXxWROx4VfeTygWFZ5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ATXZVMwQ7h4TRiuaXxWROx4VfeTygWFZ5.3BzDnJIRO171oWzYYhPKbOx%2BffUG3raBQU%2FJ1sZtnSk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1,
      deliveryDate: '2025-05-27',
      deliveryTime: 'evening'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 198.797 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:42.382Z"}
  console.log
    CSRF token generation: {
      sessionID: '3DJsje5xPOZ0lYnc1FuaHAaWRB0srUj1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mslDMoH6-PZwF0JY73oFMrcKvSK6mt32twxY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3DJsje5xPOZ0lYnc1FuaHAaWRB0srUj1

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: F3yhULRvU9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.661 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:42.670Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '3DJsje5xPOZ0lYnc1FuaHAaWRB0srUj1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3DJsje5xPOZ0lYnc1FuaHAaWRB0srUj1.0DXBDimMlksBjfM7hLigBwBdhl3gfnY4bI2GYj5HJvw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'INVALID',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: INVALID

      at log (server/controllers/orderController.js:82:13)

  console.log
    Customer not found with ID: INVALID

      at log (server/controllers/orderController.js:86:15)

[0mPOST /api/v1/orders [33m400[0m 57.868 ms - 49[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:43.201Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xpokanLIHA0A-_fdvs4Ia7jWu0ZdPmY-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: yJAQQTE1-d0GGb2t8_GKm2isWf1suoYQBEUI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xpokanLIHA0A-_fdvs4Ia7jWu0ZdPmY-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: byf8uYnno-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.813 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:43.472Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'xpokanLIHA0A-_fdvs4Ia7jWu0ZdPmY-',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AxpokanLIHA0A-_fdvs4Ia7jWu0ZdPmY-.seSYiUyl%2Bm%2BThqkmK24PB7ytyuzQ9IyWCsSJTz5W1kw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'INVALID',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: INVALID

      at log (server/controllers/orderController.js:95:13)

  console.log
    Affiliate not found with ID: INVALID

      at log (server/controllers/orderController.js:99:15)

[0mPOST /api/v1/orders [33m400[0m 89.931 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:44.042Z"}
  console.log
    CSRF token generation: {
      sessionID: 'N3-Yo6Y5NLguNaudA16P2Pr2bAzr00tY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Axn9kwmz-BZEStzrCdXhMzuqxBpqkxAfwhDY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: N3-Yo6Y5NLguNaudA16P2Pr2bAzr00tY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: F6NMYMbJI4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.241 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:44.324Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'N3-Yo6Y5NLguNaudA16P2Pr2bAzr00tY',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AN3-Yo6Y5NLguNaudA16P2Pr2bAzr00tY.DjOgwOhDj4LmPav469wDqDwPJH3KrEBvMvq87nzDo68',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST999',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST999

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Bob Jones

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [33m403[0m 86.077 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:44.896Z"}
  console.log
    CSRF token generation: {
      sessionID: '-d2BYOQO3XwDT3SMpqpoNX6UH5KMQXom',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: P6wwvS4Y-l6c5ALdCj2iAKQ8pyABRpKAgvwg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -d2BYOQO3XwDT3SMpqpoNX6UH5KMQXom

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YIInaouaaB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.551 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:45.153Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '-d2BYOQO3XwDT3SMpqpoNX6UH5KMQXom',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A-d2BYOQO3XwDT3SMpqpoNX6UH5KMQXom.x7%2FSocmBg%2F8VIKJnNI%2BfpXeMXBCgwJRYLBi5cE%2Fn%2F3c',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Validation errors: [
      {
        type: 'field',
        value: undefined,
        msg: 'Valid pickup date is required',
        path: 'pickupDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid pickup time',
        path: 'pickupTime',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Number of bags must be at least 1',
        path: 'numberOfBags',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Estimated weight must be a positive number',
        path: 'estimatedWeight',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Valid delivery date is required',
        path: 'deliveryDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid delivery time',
        path: 'deliveryTime',
        location: 'body'
      }
    ]

      at log (server/controllers/orderController.js:57:15)

[0mPOST /api/v1/orders [33m400[0m 31.389 ms - 628[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:45.671Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HMmvq8niPY_-EyznkTh0n1uOu0lz2IuF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: maJxyMH4-Rv2-5LHlQAyNrBIdUuaalRwyQD0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HMmvq8niPY_-EyznkTh0n1uOu0lz2IuF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: H8BCk1wc3c...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 13.343 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:45.990Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 108.396 ms - 662[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:46.577Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Nsn5-zwCW0OxS-6AIVkq45mOhwvduRoL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: OjysHH7A-pyWK9inswr2AG_qn23EGKNI5-Yc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Nsn5-zwCW0OxS-6AIVkq45mOhwvduRoL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: pEEUSq9zga...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.680 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:46.901Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 108.497 ms - 662[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:47.485Z"}
  console.log
    CSRF token generation: {
      sessionID: '6BPYIPNXmgZ0D7mo-o04DNZREGizrWgA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UfqaZ47z-Eg91HIMHSAYH2CBO1NCGYnEdp88

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6BPYIPNXmgZ0D7mo-o04DNZREGizrWgA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QabqNaCWz7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.431 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:47.788Z"}
[0mGET /api/v1/orders/ORD123456 [33m403[0m 56.735 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:48.322Z"}
  console.log
    CSRF token generation: {
      sessionID: '3kMDsOE2zUzVzC5Nrd9gaPUXJMZzO33N',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0OUPUflf-YQ44Tc9EtWF4xYD3pHEICDmTx94

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3kMDsOE2zUzVzC5Nrd9gaPUXJMZzO33N

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: INXSqufQ5K...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.050 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/NONEXISTENT {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:48.629Z"}
[0mGET /api/v1/orders/NONEXISTENT [33m404[0m 53.858 ms - 45[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:49.159Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sCaWTdvSgaT1FGiUKU5ERnOI2NXlJwLq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pq9a3wkS-SvHLF--s_LFjis3VJgTBEMygt68

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sCaWTdvSgaT1FGiUKU5ERnOI2NXlJwLq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Lb96qg1MCN...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.378 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:49.449Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'sCaWTdvSgaT1FGiUKU5ERnOI2NXlJwLq',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AsCaWTdvSgaT1FGiUKU5ERnOI2NXlJwLq.DKzYltlOVgcWWIYPjZBXPQKJuLdrWj%2Bc9WkSZq5L3G8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 142.699 ms - 130[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:50.098Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bqVkUN6BirKBHU8RbSZj2Qf8mgWSuO9X',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: JuUOyBGl-c7Br0Nhlmqobh_QIZ6YVk0FWOLw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bqVkUN6BirKBHU8RbSZj2Qf8mgWSuO9X

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Z_s5fDeiHB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.527 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:50.424Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'bqVkUN6BirKBHU8RbSZj2Qf8mgWSuO9X',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AbqVkUN6BirKBHU8RbSZj2Qf8mgWSuO9X.WDGHPyqBUaaVNt%2B5vHSayBVY%2F%2B69CWGuKuPN6IEEOns',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 142.115 ms - 173[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:51.071Z"}
  console.log
    CSRF token generation: {
      sessionID: 'H8T4LAfz1siV3ifWnkiDwOHrbPFHzwc6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ixv2L91e-tPiSSRMsH-0a0iHz6WTg8rZDaDE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: H8T4LAfz1siV3ifWnkiDwOHrbPFHzwc6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: a-E-duq7zO...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.457 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:51.403Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'H8T4LAfz1siV3ifWnkiDwOHrbPFHzwc6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AH8T4LAfz1siV3ifWnkiDwOHrbPFHzwc6.2bPNLxnxUv2ztIyyVtnByJXLggXjFT%2FZxS%2FXh9D0Ct0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m400[0m 55.685 ms - 83[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:51.951Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E78Ok1gAetmiDr_gZYHO-DFF4og6N5Hj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: e4emWdFL-oAOetgNlLJlID7y9dbBTbFHJRj4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E78Ok1gAetmiDr_gZYHO-DFF4og6N5Hj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zMUQBoNyjD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.612 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:52.259Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'E78Ok1gAetmiDr_gZYHO-DFF4og6N5Hj',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AE78Ok1gAetmiDr_gZYHO-DFF4og6N5Hj.IeiBXG%2BWPJqwlzQU2MVHsTW2FrttU52ClOKHK0PjilU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 55.513 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:52.792Z"}
  console.log
    CSRF token generation: {
      sessionID: '4XDR0PoKFLuA4yJ8uKY_dh9PinIFGJ-U',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mVvmI3nf-pBiCyBxnR_ab22w2XhuOgVAuCaA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4XDR0PoKFLuA4yJ8uKY_dh9PinIFGJ-U

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9_I0rhrc9m...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.686 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:53.083Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '4XDR0PoKFLuA4yJ8uKY_dh9PinIFGJ-U',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4XDR0PoKFLuA4yJ8uKY_dh9PinIFGJ-U.FuWHrmBy7deSRhBOK8XLmgiBbgYBYYQtohy0XY5l%2BE8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 55.724 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:53.619Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wTKp37IeNnzQ-cNU1LZCPLs3Phvz2q0f',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VSH70Bi8-HIyQRyyqq13E8DItX_-vbhpDBJY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wTKp37IeNnzQ-cNU1LZCPLs3Phvz2q0f

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cFANwJXgaM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.186 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:53.935Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'wTKp37IeNnzQ-cNU1LZCPLs3Phvz2q0f',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwTKp37IeNnzQ-cNU1LZCPLs3Phvz2q0f.S7YaU3d2w80BtoBCA3LBevum19fVYlpf3eogdjvSScw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 144.726 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:54.590Z"}
  console.log
    CSRF token generation: {
      sessionID: 'epV7CcQF6V3RQAacb4IHMq2arcxo1ris',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WBq6ENWb-rdxig_sTTmEaCcJpZpLI3lzhKgY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: epV7CcQF6V3RQAacb4IHMq2arcxo1ris

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: uiHRoEXETk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.981 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:54.872Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'epV7CcQF6V3RQAacb4IHMq2arcxo1ris',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AepV7CcQF6V3RQAacb4IHMq2arcxo1ris.hbgOCkbs6LqdoVqbQrrKt588YWaWWEnCC0sUdHtad5Y',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 142.538 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:55.487Z"}
  console.log
    CSRF token generation: {
      sessionID: '22nkgdyLSRbsMetNrlfq0oAUNK7hA47U',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8w3tWluH-YQS-MXSMU2N4lePdVhyCudz_HNw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 22nkgdyLSRbsMetNrlfq0oAUNK7hA47U

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XV3WvQchaG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.953 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:55.807Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: '22nkgdyLSRbsMetNrlfq0oAUNK7hA47U',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A22nkgdyLSRbsMetNrlfq0oAUNK7hA47U.LzqLNNkF%2F4nwxbznERXG2xcQ3%2Bevh0mUwsfIMhT2U%2Fc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m400[0m 55.661 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:56.339Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xzdxLZh1yBGvUE2hNo5aUPhixipFUZdY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1TbK3Nrh-hXYXzM6BSFd9zx4nZIGLdNpDsy4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xzdxLZh1yBGvUE2hNo5aUPhixipFUZdY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: W2UW-YHvb5...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.237 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:56.630Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'xzdxLZh1yBGvUE2hNo5aUPhixipFUZdY',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AxzdxLZh1yBGvUE2hNo5aUPhixipFUZdY.OyYXU%2FVuohGY6S2jNU2UoY0%2FHgGPgduZDbmmTYjin%2F4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m403[0m 55.260 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:57.185Z"}
  console.log
    CSRF token generation: {
      sessionID: '-GRPIFYDtpBtd9IlxAsxmwnk7cO4s7Jg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 6laBvYHH-Gi6NldKxVHFgbLghlkKoEiym0v8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -GRPIFYDtpBtd9IlxAsxmwnk7cO4s7Jg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0ctzBATte1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.547 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:57.470Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '-GRPIFYDtpBtd9IlxAsxmwnk7cO4s7Jg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A-GRPIFYDtpBtd9IlxAsxmwnk7cO4s7Jg.5oDqe90OKPL3MDI24w7kSwa4T1OVWOgcQbc9%2FLdEnkI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 137.760 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:58.109Z"}
  console.log
    CSRF token generation: {
      sessionID: '28XygAsWTlj33xKMH-EbVyBTWQPACZWo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: t5pPi8DW-43jvFZzVsQZUwe5cE3JInvUvRbY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 28XygAsWTlj33xKMH-EbVyBTWQPACZWo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zN20FRc3Eu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.886 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:58.443Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '28XygAsWTlj33xKMH-EbVyBTWQPACZWo',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A28XygAsWTlj33xKMH-EbVyBTWQPACZWo.Xoo1wJXTTcKnsm4wgaB5YwolLrlihGx9QxMBJtrYPK4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 121.737 ms - 296[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:59.054Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hej1qpPIuiEeL816Fb7hhWYRYhz1pu8Y',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xt3MJsQk-YxsUvMR6lqqCoGc_oI1uYdXthUM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hej1qpPIuiEeL816Fb7hhWYRYhz1pu8Y

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KLjhflisMr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.290 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/bulk/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:07:59.379Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/cancel {
      sessionID: 'hej1qpPIuiEeL816Fb7hhWYRYhz1pu8Y',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ahej1qpPIuiEeL816Fb7hhWYRYhz1pu8Y.QlipHSPqjMb7%2BWbaHztSO0H2zecCnDUM%2Fy2rrAuw6PY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/bulk/cancel [32m200[0m 166.117 ms - 161[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:00.066Z"}
  console.log
    CSRF token generation: {
      sessionID: '4S8WpJZlU73dY3VVyVLAHAqOQbcrhq6P',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: gMRkFryr-tUeO2emByaNEkxnFN_k26VhfXR8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4S8WpJZlU73dY3VVyVLAHAqOQbcrhq6P

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: t3ySP__7h8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.645 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:00.381Z"}
[0mGET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 [32m200[0m 85.196 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:00.963Z"}
  console.log
    CSRF token generation: {
      sessionID: '3G1Hdcz4JJiGWC7fbFnmOPa66yLFjchh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rnThAJr4-4KCeVE-ZMNPwYardw4R_0zySHrg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3G1Hdcz4JJiGWC7fbFnmOPa66yLFjchh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: uDw8lCcGuG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.893 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=json&status=delivered&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:01.316Z"}
[0mGET /api/v1/orders/export?format=json&status=delivered&affiliateId=AFF123 [32m200[0m 83.863 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:01.884Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tV3ptPRu2hIUt11KWZKk-WCH5uFIpy7U',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: udgmS8Hm-qcTiun-TXO6T5S2Qvdr0lr4ihbY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tV3ptPRu2hIUt11KWZKk-WCH5uFIpy7U

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gfbFIMNw5K...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.616 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=excel&customerId=CUST123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:02.209Z"}
[0mGET /api/v1/orders/export?format=excel&customerId=CUST123 [31m501[0m 82.039 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:02.779Z"}
  console.log
    CSRF token generation: {
      sessionID: '7X3zE4QbXLxThc-vK78l4iaAtHw9qSWm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3QE4To2M-VY-z-t9E6r-ICL-s5gc-75Y4LVA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7X3zE4QbXLxThc-vK78l4iaAtHw9qSWm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HPMIA3MBUg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.081 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:03.091Z"}
[0mGET /api/v1/orders/export?format=csv [33m403[0m 27.744 ms - 70[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:03.596Z"}
  console.log
    CSRF token generation: {
      sessionID: 'UnuB3ej0JnXc99E0xANexMdbY__eKIX8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ae0BvEc8-Df1Y5C78-R8UZjrENzD6E5ha7ew

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: UnuB3ej0JnXc99E0xANexMdbY__eKIX8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: N5o55pQIKj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.825 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:03.887Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'UnuB3ej0JnXc99E0xANexMdbY__eKIX8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AUnuB3ej0JnXc99E0xANexMdbY__eKIX8.OAZS05Z6oyhXzCfUzbS97BF%2BAXfJhaIyBvac%2F9mm2iE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 86.929 ms - 223[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:04.479Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wzR51SkYJz2kUZWNDmH4-6WgDQBedL6z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pPT9jpmA-a4GYCwZ6NPrjI6SdsPENS59KUgU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wzR51SkYJz2kUZWNDmH4-6WgDQBedL6z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: bX9ATmpthn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.223 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:04.765Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'wzR51SkYJz2kUZWNDmH4-6WgDQBedL6z',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AwzR51SkYJz2kUZWNDmH4-6WgDQBedL6z.TrlHAegKifMBshu%2BmkdLBEYdFELj67cjXPemBFAG3C4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 87.590 ms - 180[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:05.331Z"}
  console.log
    CSRF token generation: {
      sessionID: 'RuaJASDq6clNSC6ORBW88piYLIYdr7xi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Y4UE0T4G-2rcRgnUWRR5o7hIQwtnL8AvJz-8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: RuaJASDq6clNSC6ORBW88piYLIYdr7xi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: N31TVquELC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.606 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:05.671Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'RuaJASDq6clNSC6ORBW88piYLIYdr7xi',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ARuaJASDq6clNSC6ORBW88piYLIYdr7xi.DQe6%2Fc1TNmBUotRf2b82zJR5KpVFI920DUoiWcwmn0s',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [33m400[0m 56.142 ms - 83[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:06.209Z"}
  console.log
    CSRF token generation: {
      sessionID: 'k9Azym9P7hVJ_hMqH4Ta6z8zd93NoouI',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RWiCwwRB-8FPLjyqN9Q3uNUgCxnnI1r305KI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: k9Azym9P7hVJ_hMqH4Ta6z8zd93NoouI

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gwY26BN6AD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.778 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:06.527Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'k9Azym9P7hVJ_hMqH4Ta6z8zd93NoouI',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ak9Azym9P7hVJ_hMqH4Ta6z8zd93NoouI.RJFxKOdTgOSPvYRE6BL6bXwY2LgU%2BwbP4c82PlxanxI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 86.237 ms - 319[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:07.094Z"}
  console.log
    CSRF token generation: {
      sessionID: 'X4cXvyH3m2y6hH1K94bIs79dv8nbSBmW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xaQpJzYK-PHLrwnYoWkrd8_B5B3IW9R9L4q0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: X4cXvyH3m2y6hH1K94bIs79dv8nbSBmW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CQTRpk2yGU...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.177 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/search?search=alice&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:07.412Z"}
[0mGET /api/v1/orders/search?search=alice&affiliateId=AFF123 [32m200[0m 136.463 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:08.025Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Sq_9yxt_mPZHJ_4YhzWZtp75nv1pEXHW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UexVn5I1-Uy21yA_IZl52Wq4rsWEmxUoxn-g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Sq_9yxt_mPZHJ_4YhzWZtp75nv1pEXHW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: uIy7XsVQ8O...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.749 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=delivered&date=month {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:08.344Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=delivered&date=month [32m200[0m 107.458 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:08.940Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sPCLioQCjd-u1bWJV5RXo-sT75rqnv-G',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: zSXfW1Ge-CpYxRpeS8TbPBuhuSxX4QiJWD80

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sPCLioQCjd-u1bWJV5RXo-sT75rqnv-G

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2oe5exoFh6...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.414 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=all {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:09.259Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=all [32m200[0m 108.604 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:09.848Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xWScVq-eLeUmODZYFluz4w2lbpLNCyNk',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uDmL12Ih-kUd50TR0ut9Cck5n7ZyAJPZOzVE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xWScVq-eLeUmODZYFluz4w2lbpLNCyNk

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8-qu1dDkiJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.706 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:10.175Z"}
[0mGET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true [32m200[0m 58.715 ms - 251[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:10.717Z"}
  console.log
    CSRF token generation: {
      sessionID: '0oIhPZTmNluDh9ibZyTMARJPIN6tQ6xV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IlxgGdbf-Dv5tCc7AhJ_0nR_hRFkoNcSjmCQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0oIhPZTmNluDh9ibZyTMARJPIN6tQ6xV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: O_DEQSpEpJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.298 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:11.384Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '0oIhPZTmNluDh9ibZyTMARJPIN6tQ6xV',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0oIhPZTmNluDh9ibZyTMARJPIN6tQ6xV.svoC3PaZm6WJS57MZDtRriz4FbFUEos%2BWAAnL78b6q8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 194.002 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:12.137Z"}
  console.log
    CSRF token generation: {
      sessionID: 'iMqhDJV_J9zZh_muTXzI-reCXBaYR8F6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: roaLixk2-29W2NEE4nT8LsrXA8xPPXLH9R38

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: iMqhDJV_J9zZh_muTXzI-reCXBaYR8F6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9x7N7SH91p...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.194 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:12.884Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'iMqhDJV_J9zZh_muTXzI-reCXBaYR8F6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AiMqhDJV_J9zZh_muTXzI-reCXBaYR8F6.PX4QstV5FPSW4cvZILWxvEd43g6lu4yr%2B9M%2BxTPSYrM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 50,
      numberOfBags: 3,
      deliveryDate: '2025-05-28',
      deliveryTime: 'evening'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 193.698 ms - 102[0m
  console.log
    Order baseRate: 2 Expected: 2.00

      at Object.log (tests/integration/order.test.js:1173:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:13.748Z"}
  console.log
    CSRF token generation: {
      sessionID: 'GeVtukiXPlLsyRv9oNe1SBSncOGub9kM',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: XxLEIUBV-i-p9QFpf7kNoegYU8KMSAlyDnH4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: GeVtukiXPlLsyRv9oNe1SBSncOGub9kM

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0LyPjaZXfg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.236 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:14.411Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'GeVtukiXPlLsyRv9oNe1SBSncOGub9kM',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AGeVtukiXPlLsyRv9oNe1SBSncOGub9kM.Fw8IUXmOkIekMnsOd9%2Fvk5Fe%2Bo3lg6cCDXXsf1txK7w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 198.000 ms - 103[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:14.612Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'GeVtukiXPlLsyRv9oNe1SBSncOGub9kM',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AGeVtukiXPlLsyRv9oNe1SBSncOGub9kM.Fw8IUXmOkIekMnsOd9%2Fvk5Fe%2Bo3lg6cCDXXsf1txK7w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 197.604 ms - 103[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:14.812Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'GeVtukiXPlLsyRv9oNe1SBSncOGub9kM',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AGeVtukiXPlLsyRv9oNe1SBSncOGub9kM.Fw8IUXmOkIekMnsOd9%2Fvk5Fe%2Bo3lg6cCDXXsf1txK7w',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 196.555 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:15.696Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mM87R785yCg6MvvrAgiGn3T-LJad2cCF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Sbr3Iep6-KPcczeQXfnmGn0Ufax-yvNsOQe8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mM87R785yCg6MvvrAgiGn3T-LJad2cCF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -k6q3ldHKz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 10.185 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-06T15:08:16.446Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'mM87R785yCg6MvvrAgiGn3T-LJad2cCF',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AmM87R785yCg6MvvrAgiGn3T-LJad2cCF.9rz6p3WtGoDWehsRhmlOgQ1HtB6GEp9JoiFNly2B54g',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1,
      deliveryDate: '2025-05-28',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 194.033 ms - 104[0m
PASS tests/integration/order.test.js (38.04 s)
  Order Integration Tests
    POST /api/v1/orders
      ✓ should create order as customer (1423 ms)
      ✓ should create order as affiliate for their customer (938 ms)
      ✓ should fail with invalid customer ID (819 ms)
      ✓ should fail with invalid affiliate ID (841 ms)
      ✓ should fail when customer tries to create order for another customer (853 ms)
      ✓ should validate required fields (775 ms)
    GET /api/v1/orders/:orderId
      ✓ should return order details for customer (907 ms)
      ✓ should return order details for affiliate (907 ms)
      ✓ should fail for unauthorized customer (837 ms)
      ✓ should return 404 for non-existent order (837 ms)
    PUT /api/v1/orders/:orderId/status
      ✓ should update order status as affiliate (939 ms)
      ✓ should update weight when processing (973 ms)
      ✓ should prevent invalid status transitions (879 ms)
      ✓ should fail for unauthorized affiliate (841 ms)
      ✓ should fail for customers (827 ms)
    POST /api/v1/orders/:orderId/cancel
      ✓ should cancel order as customer (970 ms)
      ✓ should cancel order as affiliate (897 ms)
      ✓ should prevent cancelling non-cancellable orders (852 ms)
      ✓ should fail for unauthorized user (846 ms)
    Bulk order operations
      ✓ should update multiple orders status in bulk (924 ms)
      ✓ should handle partial bulk update failures (945 ms)
      ✓ should cancel multiple orders in bulk (1011 ms)
    Order export functionality
      ✓ should export orders as CSV (897 ms)
      ✓ should export orders as JSON (920 ms)
      ✓ should export orders as Excel (894 ms)
      ✓ should respect export permissions (817 ms)
    Payment status updates
      ✓ should update payment status (882 ms)
      ✓ should handle payment failure (852 ms)
      ✓ should prevent payment status update on non-delivered orders (878 ms)
      ✓ should record refund (885 ms)
    Order filtering and search
      ✓ should search orders by customer name (931 ms)
      ✓ should filter orders by multiple criteria (915 ms)
      ✓ should filter by pickup time slots (907 ms)
      ✓ should provide aggregated statistics with filters (870 ms)
    Commission Calculation Tests
      ✓ should calculate commission correctly when order is completed (1419 ms)
      ✓ should use dynamic WDF rate from SystemConfig (1611 ms)
      ✓ should calculate commission for multiple orders (1947 ms)
      ✓ should handle high delivery fee scenarios (1501 ms)

-----------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                                                                                                                                                                                                                                   
-----------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                    |   77.78 |     68.8 |   83.23 |   77.67 |                                                                                                                                                                                                                                                                                                                                                                                     
 config                      |    94.9 |       80 |     100 |    94.9 |                                                                                                                                                                                                                                                                                                                                                                                     
  csrf-config.js             |   85.45 |       70 |     100 |   85.45 | 212-236,246-247,262,277-278                                                                                                                                                                                                                                                                                                                                                         
  passport-config.js         |     100 |    86.66 |     100 |     100 | 19,210,225,250-251,304,330-331                                                                                                                                                                                                                                                                                                                                                      
 controllers                 |   75.28 |    62.91 |   88.43 |   75.36 |                                                                                                                                                                                                                                                                                                                                                                                     
  administratorController.js |    68.3 |    54.26 |   72.34 |   68.25 | 43,72-73,110-111,185-203,220,271,294-295,311,332-334,366-367,384,402,430-431,470-471,558-576,614,674-675,739-740,758,816-817,828-878,889-925,1091-1092,1188-1189,1200-1318,1329-1418,1429-1483,1501,1512-1513,1576-1577,1585-1586,1595-1744,1769,1778,1807,1812,1831-1832,1860-1861,1910-1911,1927,1935,1958-1959,1976,2013-2014,2030,2045-2046                                     
  affiliateController.js     |   89.11 |    81.29 |     100 |   88.88 | 204,214,245-247,281-282,299,309,324,383-384,436-437,442,502-503,526,557-560,575,664,722-723,739,822-823,858,940-941                                                                                                                                                                                                                                                                 
  authController.js          |   71.03 |    55.47 |     100 |   71.03 | 127-128,140,173-178,182,212-213,231-232,249-250,311-312,330-331,339-340,369-370,420-421,453-454,504-505,520,530-537,544,566-574,582-583,598,611-627,634,643,646,668-669,716,730,754,764,775-776,819-834,946,951-996,1024,1066-1107,1251,1318,1329,1392-1393,1408,1517-1518,1533,1586-1587,1599-1643,1664-1727,1732-1778,1806,1842-1880,1892,1928,1942-1943,1956,1969,2026,2075-2076 
  customerController.js      |   74.35 |    68.88 |   86.66 |   73.95 | 128,147-148,207-208,227,240,263-279,289-290,309,322,334,336,338,372-373,391,404,471-494,506-548,582,625,637,677-678                                                                                                                                                                                                                                                                 
  operatorController.js      |   65.61 |    45.79 |   83.33 |   67.12 | 17,85-86,105,109-111,135-136,148,163,186-187,200,204,217,228-230,235-236,255-256,269,273,289-291,324-325,338,342-344,367-368,374-404,416,421,431,436-452,470-471,483,491-492,497-498,582-583,596,610-611,624,635,653-654                                                                                                                                                            
  orderController.js         |    86.4 |    73.48 |     100 |   86.98 | 165-166,252-253,272,341-342,360,410-411,427,436,446,457,503-508,519-520,535,545,558,571-576,599-600,739-746,773,785,802,844-845,872-873,940-941,967-968,1030-1031                                                                                                                                                                                                                   
 middleware                  |   96.95 |    93.65 |   94.73 |   96.78 |                                                                                                                                                                                                                                                                                                                                                                                     
  auth.js                    |   84.44 |    88.88 |   66.66 |   84.44 | 88-90,129-139                                                                                                                                                                                                                                                                                                                                                                       
  errorHandler.js            |   97.82 |    87.09 |     100 |   97.82 | 10                                                                                                                                                                                                                                                                                                                                                                                  
  rbac.js                    |     100 |    95.45 |     100 |     100 | 248,268,274,301                                                                                                                                                                                                                                                                                                                                                                     
  sanitization.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
 models                      |   95.08 |    90.95 |     100 |   95.54 |                                                                                                                                                                                                                                                                                                                                                                                     
  Administrator.js           |   97.18 |    92.85 |     100 |     100 | 202-209                                                                                                                                                                                                                                                                                                                                                                             
  Affiliate.js               |   91.66 |    86.11 |     100 |   91.66 | 77,164,168                                                                                                                                                                                                                                                                                                                                                                          
  Customer.js                |   86.66 |    85.71 |     100 |   86.66 | 97,101                                                                                                                                                                                                                                                                                                                                                                              
  OAuthSession.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  Operator.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  Order.js                   |   74.41 |    74.28 |     100 |   74.41 | 118,160-176                                                                                                                                                                                                                                                                                                                                                                         
  RefreshToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  SystemConfig.js            |     100 |     98.3 |     100 |     100 | 70                                                                                                                                                                                                                                                                                                                                                                                  
  TokenBlacklist.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  Transaction.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
 routes                      |   82.07 |    36.36 |   54.83 |   82.01 |                                                                                                                                                                                                                                                                                                                                                                                     
  administratorRoutes.js     |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  affiliateRoutes.js         |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  authRoutes.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  coverageRoutes.js          |   42.42 |        0 |       0 |   42.42 | 11-25,30-76,88-90,96,100,104,108,113                                                                                                                                                                                                                                                                                                                                                
  customerRoutes.js          |   95.45 |    83.33 |     100 |   95.45 | 41                                                                                                                                                                                                                                                                                                                                                                                  
  operatorRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  orderRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  socialAuthRoutes.js        |   56.25 |    17.64 |   14.28 |   56.25 | 50-57,79-86,150-163,176-177,187-196,219-228                                                                                                                                                                                                                                                                                                                                         
  systemConfigRoutes.js      |   80.85 |       75 |     100 |   80.43 | 23-24,49-50,65,72-73,105-106                                                                                                                                                                                                                                                                                                                                                        
 utils                       |   56.39 |    63.74 |   55.35 |    54.7 |                                                                                                                                                                                                                                                                                                                                                                                     
  auditLogger.js             |     100 |    97.14 |     100 |     100 | 98                                                                                                                                                                                                                                                                                                                                                                                  
  emailService.js            |       0 |        0 |       0 |       0 | 4-743                                                                                                                                                                                                                                                                                                                                                                               
  encryption.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  fieldFilter.js             |   92.06 |    81.17 |     100 |   92.98 | 140,202,204,206                                                                                                                                                                                                                                                                                                                                                                     
  logger.js                  |     100 |       50 |     100 |     100 | 11-30                                                                                                                                                                                                                                                                                                                                                                               
  paginationMiddleware.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                     
  passwordValidator.js       |   90.83 |    89.71 |     100 |   89.81 | 141-145,193,231-232,234-235,246-247                                                                                                                                                                                                                                                                                                                                                 
-----------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for statements (80%) not met: 77.78%
Jest: "global" coverage threshold for branches (80%) not met: 68.8%
Jest: "global" coverage threshold for lines (80%) not met: 77.67%
Test Suites: 49 passed, 49 total
Tests:       6 skipped, 1053 passed, 1059 total
Snapshots:   0 total
Time:        422.137 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
