
> wavemax-affiliate-program@1.0.0 test:coverage
> jest --coverage --runInBand --forceExit

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/logger.test.js
  Logger Utility
    ✓ should export logger methods (73 ms)
    ✓ should be a winston logger instance (18 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/encryption.test.js
  Encryption Utility
    ✓ should hash password correctly (70 ms)
    ✓ should verify password correctly (205 ms)
    ✓ should encrypt and decrypt data correctly (3 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/paginationMiddleware.test.js
  Pagination Middleware
    ✓ should set default pagination values when no query params provided (2 ms)
    ✓ should parse page and limit from query params
    ✓ should enforce minimum values
    ✓ should enforce maximum limit (1 ms)
    ✓ should handle non-numeric values (1 ms)
    ✓ should calculate skip correctly for different pages (1 ms)
    ✓ should handle floating point numbers
    ✓ should preserve other query parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportGoogleOnly.test.js (5.416 s)
  Google OAuth Passport Configuration - Isolated
    ✓ should handle Google OAuth callback correctly (2 ms)
    ✓ should configure Google strategy with correct parameters (2 ms)
    ✓ should support state parameter for context detection

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportFacebookOnly.test.js
  Facebook OAuth Passport Configuration - Isolated
    ✓ should handle Facebook OAuth callback correctly (2 ms)
    ✓ should configure Facebook strategy with profile fields (1 ms)
    ✓ should configure Facebook strategy with correct parameters (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportLinkedInOnly.test.js
  LinkedIn OAuth Passport Configuration - Isolated
    ✓ should handle LinkedIn OAuth callback correctly (1 ms)
    ✓ should configure LinkedIn strategy with correct scope
    ✓ should configure LinkedIn strategy with correct parameters

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/affiliateLoginInit.test.js
  Affiliate Login Initialization
    Module Loading
      ✓ should initialize when form is found (178 ms)
      ✓ should handle missing form gracefully
    URL Parameter Handling Logic
      ✓ should correctly parse customer parameter from URL
      ✓ should handle URL without customer parameter
      ✓ should construct redirect URL correctly with customer parameter (1 ms)
      ✓ should construct redirect URL correctly without customer parameter
    URL Validation
      ✓ should validate customer ID format
      ✓ should handle URL encoding correctly
    Integration with Email URLs
      ✓ should parse email-generated URLs correctly
      ✓ should handle both login and customer parameters together
    Parameter Preservation Logic
      ✓ should preserve customer parameter through login flow (1 ms)
      ✓ should handle multiple URL parameters correctly (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/administratorEmailService.test.js
  Administrator Email Service Tests
    sendAdministratorWelcomeEmail
      ✓ should call sendAdministratorWelcomeEmail function (1 ms)
      ✓ should handle admin with different permission sets
      ✓ should handle admin with single permission
      ✓ should handle admin with no permissions (1 ms)
    sendAdministratorPasswordResetEmail
      ✓ should call sendAdministratorPasswordResetEmail function
      ✓ should handle different reset URLs
    Email template data processing
      ✓ should replace uppercase placeholders correctly (1 ms)
      ✓ should handle missing placeholders gracefully
      ✓ should include current year in template data (1 ms)
      ✓ should format permissions correctly as comma-separated string
      ✓ should handle empty permissions array
      ✓ should handle single permission
    Email service integration
      ✓ should be available as a module export (1 ms)
      ✓ should not throw error when sending welcome email
      ✓ should not throw error when sending password reset email
    Admin data validation
      ✓ should handle admin with required fields (1 ms)
      ✓ should handle admin with different adminId formats (1 ms)
      ✓ should handle admin with different email formats

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/authMiddleware.test.js
  Auth Middleware
    authenticate
      ✓ should authenticate valid Bearer token (493 ms)
      ✓ should authenticate valid x-auth-token header (266 ms)
      ✓ should reject request with no token (216 ms)
      ✓ should reject request with invalid token (205 ms)
      ✓ should reject request with expired token (214 ms)
      ✓ should handle malformed Authorization header (204 ms)
      ✓ should reject blacklisted token (213 ms)
    authorize
      ✓ should authorize user with correct role (207 ms)
      ✓ should authorize user with one of multiple roles (209 ms)
      ✓ should reject user with incorrect role (207 ms)
      ✓ should reject user with no role (222 ms)
      ✓ should reject when user is not set (213 ms)
    authLimiter
      ✓ should be a function (205 ms)
      ✓ should have rate limit configuration (207 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/createAdminDirectly.test.js
  Create Admin Directly Script Unit Tests
    generateAdminId function
      ✓ should generate ADM001 when no administrators exist (1 ms)
      ✓ should generate next sequential ID when administrators exist
      ✓ should handle double-digit admin IDs correctly (1 ms)
    Permission selection
      ✓ should handle "all" permission selection
      ✓ should handle specific permission selection
      ✓ should filter out invalid permission numbers
    Database operations
      ✓ should connect to MongoDB successfully
      ✓ should create administrator with correct data (1 ms)
      ✓ should handle database save errors
    Email functionality
      ✓ should send welcome email after admin creation (1 ms)
      ✓ should handle email sending errors gracefully
    Input validation
      ✓ should handle empty input fields (1 ms)
      ✓ should handle whitespace in permission input
    Error handling
      ✓ should handle MongoDB connection errors
      ✓ should close database connection in finally block
      ✓ should close readline interface in finally block

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/affiliateDashboardInit.test.js
  Affiliate Dashboard Customer Filtering
    URL Parameter Detection Logic
      ✓ should detect customer parameter from URL search params (1 ms)
      ✓ should handle URL without customer parameter
      ✓ should parse customer parameter from complex URL (1 ms)
      ✓ should handle regex pattern matching for customer parameter
    Customer Highlighting Logic
      ✓ should identify highlighted customer correctly (1 ms)
      ✓ should generate correct CSS classes for highlighted customer
      ✓ should generate correct HTML content for highlighted customer
      ✓ should not highlight non-matching customers
    Tab Switching Logic
      ✓ should determine correct tab activation based on customer parameter
      ✓ should not switch tabs when no customer parameter
      ✓ should handle empty string customer parameter (1 ms)
    Authentication Check Logic
      ✓ should identify authenticated state correctly
      ✓ should identify unauthenticated state when missing token
      ✓ should identify unauthenticated state when missing affiliate
    Customer Data Processing
      ✓ should handle empty customer list (1 ms)
      ✓ should process customer list without filtering
      ✓ should filter customer list by customer ID
    URL Construction and Validation
      ✓ should construct API URLs correctly (1 ms)
      ✓ should validate customer ID format
    Timing and Delays
      ✓ should calculate correct delay for tab switching
      ✓ should handle immediate execution when no customer parameter

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/errorHandler.test.js
  Error Handler Middleware
    errorHandler
      ✓ should handle generic errors with 500 status (10 ms)
      ✓ should handle custom status codes (1 ms)
      ✓ should handle Mongoose validation errors (1 ms)
      ✓ should handle MongoDB duplicate key errors
      ✓ should handle JWT errors (2 ms)
      ✓ should handle JWT token expiration errors
      ✓ should handle rate limiting errors
      ✓ should handle CastError (invalid MongoDB ObjectId) (1 ms)
      ✓ should include user context when available
      ✓ should handle errors with customer context (1 ms)
      ✓ should hide error details in production
      ✓ should show error details in development (1 ms)
      ✓ should use original message for non-500 errors in production (1 ms)
      ✓ should handle errors without message
      ✓ should handle errors with code property
      ✓ should log all console error sections (1 ms)
    AppError
      ✓ should create custom error with status code (1 ms)
      ✓ should have stack trace
      ✓ should work with error handler (1 ms)
    Edge cases
      ✓ should handle null error (2 ms)
      ✓ should handle undefined error (1 ms)
      ✓ should handle non-error objects
      ✓ should handle errors thrown from within error handler (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/coverageRoutes.test.js
  Coverage Routes
    Access Control Middleware
      ✓ should allow access in development environment (26 ms)
      ✓ should allow access in test environment (5 ms)
      ✓ should deny access in production without key (1 ms)
      ✓ should allow access in production with valid key (4 ms)
      ✓ should deny access in production with invalid key (3 ms)
    Embedded Access Prevention
      ✓ should deny access when Sec-Fetch-Dest is iframe (3 ms)
      ✓ should deny access when X-Frame-Options is present (2 ms)
      ✓ should deny access when referer contains /embed (3 ms)
      ✓ should allow access with normal referer (10 ms)
    Route Handlers
      ✓ should serve index.html at root path (4 ms)
      ✓ should serve critical-files page (5 ms)
      ✓ should serve test-templates page (4 ms)
      ✓ should serve action-plan page (3 ms)
      ✓ should return 404 for non-existent pages (4 ms)
    Static File Headers
      ✓ should set no-cache headers for static files (3 ms)
    Environment Variable Handling
      ✓ should handle missing COVERAGE_ACCESS_KEY (2 ms)
      ✓ should handle empty COVERAGE_ACCESS_KEY (3 ms)
    Multiple Middleware Interaction
      ✓ should check embedded access before access control (2 ms)
      ✓ should apply X-Frame-Options even with valid access (3 ms)
    HTML Response Validation
      ✓ should return valid HTML for access denied page (3 ms)
      ✓ should return valid HTML for 404 page (2 ms)
    Query Parameter Handling
      ✓ should ignore extra query parameters (2 ms)
      ✓ should handle URL-encoded keys (2 ms)
    Edge Cases
      ✓ should handle root path without trailing slash (2 ms)
      ✓ should handle specific route handlers (2 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/orderWithSystemConfig.test.js (10.234 s)
  Order Model with SystemConfig Integration
    Dynamic WDF Pricing
      ✓ should fetch base rate from SystemConfig on order creation (907 ms)
      ✓ should use default rate when SystemConfig is not available (962 ms)
      ✓ should calculate estimated total using SystemConfig rate (697 ms)
      ✓ should calculate actual total using SystemConfig rate (679 ms)
    Commission Calculations
      ✓ should calculate affiliate commission correctly with custom WDF rate (677 ms)
      ✓ should calculate commission for zero delivery fee (689 ms)
      ✓ should handle commission calculation for large orders (670 ms)
    Edge Cases
      ✓ should handle commission when only estimated size is available (688 ms)
      ✓ should update calculations when base rate changes (830 ms)
      ✓ should validate minimum and maximum base rates (989 ms)
    Revenue Calculator Scenarios
      ✓ should match revenue calculator example - 10 customers scenario (1220 ms)
      ✓ should match revenue calculator with different parameters (676 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/tokenBlacklist.test.js
  TokenBlacklist Model
    Schema Validation
      ✓ should create a valid token blacklist entry (288 ms)
      ✓ should use default values for blacklistedAt and reason (122 ms)
      ✓ should require all mandatory fields (81 ms)
      ✓ should enforce unique token constraint (254 ms)
      ✓ should validate userType enum (86 ms)
      ✓ should accept all valid userTypes (214 ms)
    Static Methods
      blacklistToken
        ✓ should successfully blacklist a token (125 ms)
        ✓ should use default reason when not provided (115 ms)
        ✓ should return null when token already blacklisted (249 ms)
        ✓ should handle custom reasons (111 ms)
        ✓ should propagate non-duplicate errors (77 ms)
      isBlacklisted
        ✓ should return true for blacklisted token (144 ms)
        ✓ should return false for non-blacklisted token (102 ms)
        ✓ should handle empty token (103 ms)
        ✓ should handle null token (102 ms)
      cleanupExpired
        ✓ should delete expired tokens (243 ms)
        ✓ should return 0 when no expired tokens (210 ms)
        ✓ should handle empty collection (103 ms)
    Index Configuration
      ○ skipped should have required indexes
    TTL Behavior
      ○ skipped should have TTL index configured for 24 hours

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/adminIdGeneration.test.js
  Admin ID Generation Logic Tests
    generateAdminId function logic
      ✓ should generate ADM001 when no administrators exist (287 ms)
      ✓ should generate ADM002 when ADM001 exists (247 ms)
      ✓ should generate ADM003 when ADM001 and ADM002 exist (285 ms)
      ✓ should handle non-sequential admin IDs correctly (287 ms)
      ✓ should handle double-digit admin IDs (229 ms)
      ✓ should handle triple-digit admin IDs (217 ms)
      ✓ should handle large admin ID numbers (220 ms)
    Admin ID format validation
      ✓ should maintain three-digit padding for numbers below 100 (105 ms)
      ✓ should handle numbers above 999 without padding issues (117 ms)
    Admin ID parsing logic
      ✓ should correctly parse admin ID numbers (108 ms)
      ✓ should handle edge cases in admin ID parsing (104 ms)
    Admin ID generation with mixed data
      ✓ should work correctly with inactive administrators (279 ms)
      ✓ should work correctly with different creation dates (281 ms)
      ✓ should work correctly with different permissions (278 ms)
    Performance and reliability
      ✓ should handle database query efficiently (217 ms)
      ✓ should handle concurrent admin creation scenario (387 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/encryptionEnhanced.test.js
  Encryption Utility - Enhanced Coverage
    Encryption Error Paths
      ✓ should return null for falsy inputs (1 ms)
      ✓ should throw error with invalid encryption key length (12 ms)
      ✓ should throw error when encryption key is missing (1 ms)
      ✓ should handle crypto errors gracefully (2 ms)
    Decryption Error Paths
      ✓ should return null for falsy inputs
      ✓ should throw error with invalid encrypted object structure (2 ms)
      ✓ should throw error with tampered data (1 ms)
      ✓ should throw error with wrong encryption key (1 ms)
      ✓ should handle corrupted encrypted data (1 ms)
    Password Hashing Error Paths
      ✓ should handle crypto.randomBytes failure (1 ms)
      ✓ should handle crypto.pbkdf2Sync failure (7 ms)
      ✓ should handle empty password (58 ms)
    Password Verification Error Paths
      ✓ should throw error when pbkdf2Sync fails (1 ms)
      ✓ should handle invalid inputs gracefully (157 ms)
      ✓ should return false for invalid salt format (51 ms)
    Token and Barcode Generation
      ✓ should generate tokens of correct length (1 ms)
      ✓ should generate unique tokens (1 ms)
      ✓ should handle token generation errors (1 ms)
      ✓ should generate barcodes with correct format
      ✓ should generate unique barcodes (1 ms)
      ✓ should handle barcode generation errors (1 ms)
    Edge Cases and Security Tests
      ✓ should handle large data encryption/decryption (6 ms)
      ✓ should handle unicode and special characters (1 ms)
      ✓ should produce different IVs for same input (2 ms)
      ✓ should validate encryption output structure (1 ms)
      ✓ should handle password edge cases (1255 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/models.test.js (6.669 s)
  Model Tests
    Affiliate Model
      ✓ should create a valid affiliate (628 ms)
      ✓ should require required fields (325 ms)
      ✓ should enforce unique constraints (627 ms)
      ✓ should handle payment information correctly (355 ms)
    Customer Model
      ✓ should create a valid customer (353 ms)
    Order Model
      ✓ should create a valid order (401 ms)
      ✓ should calculate estimated total correctly (382 ms)
      ✓ should calculate actual total and commission when weight is set (378 ms)
      ✓ should update timestamps for status changes (517 ms)
    Transaction Model
      ✓ should create a valid transaction (361 ms)
      ✓ should validate transaction type (311 ms)
      ✓ should validate transaction status (309 ms)
    RefreshToken Model
      ✓ should create a valid refresh token (350 ms)
      ✓ should validate user type (311 ms)
      ✓ should check if token is expired (390 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/csrfConfig.test.js
  CSRF Configuration
    CSRF_CONFIG
      ✓ should define all endpoint categories (1 ms)
      ✓ should have valid endpoint patterns (5 ms)
      ✓ should not have duplicate endpoints across categories
      ✓ should include critical security endpoints (1 ms)
      ✓ should exclude authentication endpoints from CSRF
      ✓ should exclude registration endpoints from CSRF (1 ms)
    shouldEnforceCsrf
      HTTP method checks
        ✓ should not enforce CSRF for GET requests
        ✓ should not enforce CSRF for HEAD requests
        ✓ should not enforce CSRF for OPTIONS requests (1 ms)
        ✓ should consider CSRF for POST requests
        ✓ should consider CSRF for PUT requests
        ✓ should consider CSRF for DELETE requests
        ✓ should consider CSRF for PATCH requests
      Public endpoints
        ✓ should not enforce CSRF for public endpoints
        ✓ should not enforce CSRF for health check endpoints (1 ms)
      Authentication endpoints
        ✓ should not enforce CSRF for login endpoints
        ✓ should not enforce CSRF for forgot password
        ✓ should not enforce CSRF for refresh token
      Registration endpoints
        ✓ should not enforce CSRF for affiliate registration (1 ms)
        ✓ should not enforce CSRF for customer registration
      Critical endpoints
        ✓ should enforce CSRF for logout
        ✓ should enforce CSRF for order creation
        ✓ should enforce CSRF for order cancellation (1 ms)
        ✓ should enforce CSRF for password changes
        ✓ should enforce CSRF for data deletion (1 ms)
        ✓ should enforce CSRF for admin operations
        ✓ should enforce CSRF for operator shift changes
        ✓ should enforce CSRF for order status updates (1 ms)
      High priority endpoints
        ✓ should not enforce CSRF for high priority endpoints when CSRF_PHASE < 2
        ✓ should enforce CSRF for high priority endpoints when CSRF_PHASE >= 2
        ✓ should handle bag management endpoints based on phase (1 ms)
        ✓ should handle payment updates based on phase
      Read-only endpoints
        ✓ should not enforce CSRF for dashboard endpoints (1 ms)
        ✓ should enforce CSRF for search endpoints with state-changing methods
        ✓ should enforce CSRF for export endpoints with state-changing methods
      Pattern matching
        ✓ should match parameterized routes
        ✓ should match nested parameterized routes
        ✓ should not match partial paths
        ✓ should handle complex IDs in paths
      Default behavior
        ✓ should enforce CSRF for unknown state-changing endpoints (1 ms)
        ✓ should enforce CSRF for unmatched PUT requests
        ✓ should not enforce CSRF for unknown GET endpoints
      Edge cases
        ✓ should handle missing CSRF_PHASE environment variable
        ✓ should handle non-numeric CSRF_PHASE
        ✓ should handle paths with query parameters
        ✓ should handle paths with trailing slashes

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/fieldFilter.test.js
  Field Filter Utility
    filterFields
      ✓ should filter object to include only allowed fields (1 ms)
      ✓ should handle empty allowed fields array
      ✓ should handle null or undefined objects
      ✓ should handle non-object inputs
      ✓ should handle missing fields gracefully
      ✓ should not include inherited properties (1 ms)
      ✓ should handle nested objects without deep filtering
    filterArray
      ✓ should filter array of objects (1 ms)
      ✓ should handle empty array
      ✓ should handle non-array inputs
      ✓ should handle arrays with mixed types (1 ms)
    fieldDefinitions
      ✓ should have definitions for all data types
      ✓ should have different field sets for different roles (1 ms)
      ✓ should not expose sensitive fields in public view
      ✓ should include appropriate fields for each role (1 ms)
    getFilteredData
      ✓ should filter data based on admin role
      ✓ should filter data based on public role (1 ms)
      ✓ should handle self context for customers
      ✓ should handle arrays of data
      ✓ should return data as-is for unknown data types
      ✓ should handle null or undefined data (1 ms)
      ✓ should use fallback field definitions
    responseFilter middleware
      ✓ should create filtered json method (1 ms)
      ✓ should filter response data when _filterType is provided
      ✓ should not filter when _filterType is not provided
      ✓ should handle public role when user is not authenticated
      ✓ should extract user ID from different user types
      ✓ should preserve other response properties (1 ms)
      ✓ should handle responses without data property
      ✓ should maintain this context in json method (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/sanitization.test.js
  Sanitization Middleware
    sanitizeInput
      ✓ should sanitize string input (1 ms)
      ✓ should sanitize arrays recursively
      ✓ should sanitize objects recursively
      ✓ should handle null values
      ✓ should handle undefined values (1 ms)
      ✓ should handle numbers
      ✓ should handle booleans
      ✓ should handle deeply nested objects (1 ms)
      ✓ should handle arrays of objects
      ✓ should not modify prototype properties
    sanitizeRequest
      ✓ should sanitize request body
      ✓ should sanitize query parameters
      ✓ should sanitize URL parameters (1 ms)
      ✓ should handle missing request properties
      ✓ should handle all properties in one request (1 ms)
    sanitizeEmail
      ✓ should sanitize and validate email (1 ms)
      ✓ should remove HTML from email
      ✓ should return empty string for invalid email (1 ms)
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should handle empty string (1 ms)
      ✓ should validate complex email formats
    sanitizePhone
      ✓ should keep only allowed characters
      ✓ should remove invalid characters
      ✓ should handle international format
      ✓ should remove HTML and special characters
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
    sanitizeId
      ✓ should keep alphanumeric characters and hyphens (1 ms)
      ✓ should remove special characters
      ✓ should remove spaces
      ✓ should handle script injection attempts
      ✓ should handle null and undefined (1 ms)
      ✓ should handle non-string inputs
      ✓ should trim whitespace
      ✓ should handle empty string
      ✓ should handle MongoDB ObjectId format (1 ms)
    sanitizePath
      ✓ should allow valid file paths
      ✓ should remove directory traversal attempts
      ✓ should remove multiple directory traversal attempts
      ✓ should allow valid characters in paths (1 ms)
      ✓ should remove invalid characters
      ✓ should handle Windows-style paths
      ✓ should handle null and undefined
      ✓ should handle non-string inputs
      ✓ should handle empty string
      ✓ should handle complex path traversal attempts
      ✓ should preserve forward slashes
    Integration tests
      ✓ should work with express middleware chain (1 ms)
      ✓ should handle complex nested structures (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passwordValidator.test.js
  Password Validator Utility
    validatePasswordStrength
      Basic Requirements
        ✓ should validate minimum length requirement (1 ms)
        ✓ should require uppercase letters
        ✓ should require lowercase letters
        ✓ should require numbers
        ✓ should require special characters
      Security Validations
        ✓ should reject common passwords
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email
        ✓ should reject sequential characters (5 ms)
        ✓ should reject repeated characters (1 ms)
      Valid Passwords
        ✓ should accept strong valid passwords (1 ms)
      Edge Cases
        ✓ should handle empty password
        ✓ should handle null/undefined password
        ✓ should handle case-insensitive username/email checks (1 ms)
    customPasswordValidator
      ✓ should work as express-validator custom validator (13 ms)
      ✓ should include validation errors in thrown message
    passwordValidationMiddleware
      ✓ should create middleware function (1 ms)
      ✓ should validate password and call next on success
      ✓ should return error response on validation failure (1 ms)
    isPasswordInHistory
      ✓ should return false for empty history
      ✓ should return false for password not in history (50 ms)
      ✓ should handle null/undefined history
    getPasswordStrength
      ✓ should return higher scores for stronger passwords (1 ms)
      ✓ should score length appropriately
      ✓ should score character variety
      ✓ should penalize common patterns (1 ms)
    commonPasswords array
      ✓ should contain common passwords
      ✓ should contain domain-specific passwords

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2,
      serviceNotes: 'Handle with care',
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon',
      specialDeliveryInstructions: 'Leave at door'
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

  console.error
    Failed to send notification emails: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/orderController.test.js:114:73)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      152 |       await emailService.sendAffiliateNewOrderEmail(affiliate, customer, newOrder);
      153 |     } catch (emailError) {
    > 154 |       console.error('Failed to send notification emails:', emailError);
          |               ^
      155 |       // Continue with the response even if emails fail
      156 |     }
      157 |

      at Object.error [as createOrder] (server/controllers/orderController.js:154:15)
      at Object.<anonymous> (tests/unit/orderController.test.js:117:7)

  console.log
    Creating order with data: { customerId: 'INVALID', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Customer not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:86:15)

  console.log
    Creating order with data: { customerId: 'CUST123', affiliateId: 'INVALID' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Affiliate not found with ID: INVALID

      at Object.log [as createOrder] (server/controllers/orderController.js:99:15)

  console.log
    Creating order with data: { customerId: 'CUST456', affiliateId: 'AFF123' }

      at Object.log [as createOrder] (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST456

      at Object.log [as createOrder] (server/controllers/orderController.js:82:13)

  console.log
    Found customer: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at Object.log [as createOrder] (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: undefined undefined

      at Object.log [as createOrder] (server/controllers/orderController.js:105:13)

PASS tests/unit/orderController.test.js
  Order Controller
    createOrder
      ✓ should successfully create a new order (400 ms)
      ✓ should handle email sending failures gracefully (120 ms)
      ✓ should return error for invalid customer (54 ms)
      ✓ should return error for invalid affiliate (56 ms)
      ✓ should enforce authorization (55 ms)
    getOrderDetails
      ✓ should return order details for authorized user (56 ms)
      ✓ should return 404 for non-existent order (52 ms)
      ✓ should enforce authorization for customers (53 ms)
    updateOrderStatus
      ✓ should successfully update order status (53 ms)
      ✓ should update actual weight when processing (52 ms)
      ✓ should validate status transitions (52 ms)
      ✓ should send commission email when delivered (59 ms)
    cancelOrder
      ✓ should successfully cancel an order (52 ms)
      ✓ should prevent cancelling non-cancellable orders (51 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.error
    Error fetching administrators: Error: DB Error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorController.test.js:93:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      70 |
      71 |   } catch (error) {
    > 72 |     console.error('Error fetching administrators:', error);
         |             ^
      73 |     res.status(500).json({
      74 |       success: false,
      75 |       message: 'Failed to fetch administrators'

      at Object.error [as getAdministrators] (server/controllers/administratorController.js:72:13)
      at Object.<anonymous> (tests/unit/administratorController.test.js:96:7)

PASS tests/unit/administratorController.test.js (5.399 s)
  Administrator Controller
    getAdministrators
      ✓ should get administrators with pagination (292 ms)
      ✓ should handle errors (381 ms)
    createAdministrator
      ✓ should create administrator (542 ms)
      ✓ should handle validation errors (60 ms)
    updateAdministrator
      ✓ should update administrator (61 ms)
      ✓ should prevent self-deactivation (286 ms)
    deleteAdministrator
      ✓ should delete administrator (54 ms)
      ✓ should prevent self-deletion (52 ms)
    resetAdministratorPassword
      ✓ should reset password (283 ms)
    Operator Management
      ✓ createOperator should create new operator (61 ms)
      ✓ getOperators should return operators list (53 ms)
      ✓ updateOperator should update operator details (52 ms)
      ✓ deactivateOperator should deactivate operator (52 ms)
    Analytics Functions
      ✓ getDashboard should return dashboard data (292 ms)
      ✓ getOrderAnalytics should return order analytics (285 ms)
    System Configuration
      ✓ getSystemConfig should return configurations (288 ms)
      ✓ updateSystemConfig should update configuration (52 ms)
    getPermissions
      ✓ should return available permissions (283 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/auditLogger.test.js
  Audit Logger
    AuditEvents
      ✓ should define all audit event types (2 ms)
      ✓ should have unique event names (1 ms)
    logAuditEvent
      ✓ should log basic audit event
      ✓ should add request context when provided (1 ms)
      ✓ should handle customer context
      ✓ should use error level for critical events (1 ms)
      ✓ should use info level for non-critical events
      ✓ should handle missing user context
      ✓ should handle connection.remoteAddress fallback (1 ms)
    auditMiddleware
      ✓ should create middleware that logs on response finish
      ✓ should log successful responses (1 ms)
      ✓ should not log failed responses
      ✓ should include request context in logs (1 ms)
    logLoginAttempt
      ✓ should log successful login
      ✓ should log failed login with reason
      ✓ should handle null reason (1 ms)
    logSensitiveDataAccess
      ✓ should log sensitive data access
      ✓ should handle different data types and actions (1 ms)
    logPaymentActivity
      ✓ should log payment info access (1 ms)
      ✓ should log payment info update
      ✓ should handle additional details (1 ms)
    logSuspiciousActivity
      ✓ should log suspicious activity with error level
      ✓ should include request context
      ✓ should merge all details (1 ms)
    Logger configuration
      ✓ should export audit logger with required methods
      ✓ should not add console transport in production (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.error
    Delete customer data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/customerController.test.js:460:42)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      605 |     });
      606 |   } catch (error) {
    > 607 |     console.error('Delete customer data error:', error);
          |             ^
      608 |     res.status(500).json({
      609 |       success: false,
      610 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteCustomerData] (server/controllers/customerController.js:607:13)
      at Object.<anonymous> (tests/unit/customerController.test.js:462:7)

PASS tests/unit/customerController.test.js
  Customer Controller
    registerCustomer
      ✓ should successfully register a new customer (2 ms)
      ✓ should return error for invalid affiliate
      ✓ should return error for duplicate email
    getCustomerProfile
      ✓ should return customer profile for authorized customer
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should return 404 for non-existent customer
    updateCustomerProfile
      ✓ should successfully update customer profile (1 ms)
      ✓ should prevent updating protected fields (1 ms)
    getCustomerOrders
      ✓ should return customer orders with pagination (1 ms)
    deleteCustomerData
      ✓ should delete all customer data in development environment (1 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (27 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/createAdminScript.test.js (16.955 s)
  Create Admin Script Tests
    Script File Structure
      ✓ should exist and be readable (753 ms)
      ✓ should contain required functionality markers (383 ms)
    Admin ID Generation Logic
      ✓ should generate sequential admin IDs starting from ADM001 (578 ms)
      ✓ should calculate next admin ID correctly (689 ms)
    Password Security Requirements
      ✓ should enforce strong password requirements for admins (404 ms)
      ✓ should accept strong passwords for admins (737 ms)
    Permission System Validation
      ✓ should validate all permission types (515 ms)
      ✓ should handle partial permission sets (460 ms)
    Unique Constraint Validation
      ✓ should prevent duplicate administrator IDs (599 ms)
      ✓ should prevent duplicate emails (552 ms)
    Email Integration
      ✓ should handle admin creation with welcome email sending (514 ms)
    Data Validation and Sanitization
      ✓ should handle special characters in names correctly (517 ms)
      ✓ should normalize email addresses (465 ms)
      ✓ should validate email format (380 ms)
    Administrator Model Integration
      ✓ should integrate with existing administrator model schema (460 ms)
      ✓ should work with password hashing middleware (504 ms)
    Script Error Handling
      ✓ should handle database connection errors gracefully (619 ms)
      ✓ should handle invalid input gracefully (6173 ms)
    Security Considerations
      ✓ should not log or expose passwords (461 ms)
      ✓ should generate secure random passwords when needed (390 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/oAuthSession.test.js (7.458 s)
  OAuthSession Model
    Schema Validation
      ✓ should create a valid OAuth session with all required fields (407 ms)
      ✓ should require sessionId field (229 ms)
      ✓ should require result field (235 ms)
      ✓ should automatically set createdAt (251 ms)
      ✓ should automatically set expiresAt to 5 minutes from now (267 ms)
      ✓ should enforce unique sessionId (299 ms)
      ✓ should allow complex result objects (268 ms)
    Static Methods
      createSession
        ✓ should create and save a new OAuth session (269 ms)
        ✓ should throw error for duplicate session IDs (298 ms)
        ✓ should handle database errors (208 ms)
      getSession
        ✓ should retrieve existing session result by sessionId (293 ms)
        ✓ should return null for non-existent session (229 ms)
      consumeSession
        ✓ should retrieve and delete session in one operation (291 ms)
        ✓ should return null when consuming non-existent session (241 ms)
        ✓ should handle race conditions safely (311 ms)
      cleanupExpired
        ✓ should manually delete expired sessions (463 ms)
        ✓ should return zero deletions when no expired sessions exist (318 ms)
    TTL Behavior
      ✓ should have TTL index configured on expiresAt field (245 ms)
      ✓ should respect custom expiresAt when provided (273 ms)
    Data Integrity
      ✓ should preserve all data types in result field (261 ms)
      ✓ should handle empty and minimal result objects (404 ms)
    Error Handling
      ✓ should handle MongoDB connection errors gracefully (212 ms)
      ✓ should handle very large result objects (385 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/socialAuthRoutes.test.js
  Social Auth Routes - Simple Tests
    Google OAuth Routes
      ✓ should initiate Google OAuth when configured (10 ms)
      ✓ should return 404 when Google OAuth is not configured (3 ms)
      ✓ should handle Google OAuth callback (3 ms)
    Facebook OAuth Routes
      ✓ should initiate Facebook OAuth when configured (2 ms)
      ✓ should return 404 when Facebook OAuth is not configured (1 ms)
      ✓ should handle Facebook OAuth callback (2 ms)
    LinkedIn OAuth Routes
      ✓ should initiate LinkedIn OAuth when configured (2 ms)
      ✓ should return 404 when LinkedIn OAuth is not configured (2 ms)
      ✓ should handle LinkedIn OAuth callback (2 ms)
    Social Registration Route
      ✓ should handle social registration with valid data (11 ms)
      ✓ should validate required fields for social registration (4 ms)
      ✓ should validate service radius range (2 ms)
      ✓ should validate payment method (3 ms)
    Social Account Linking Route
      ✓ should handle social account linking (3 ms)
      ✓ should validate provider for account linking (2 ms)
      ✓ should require social token for account linking (2 ms)
    Social Login Callback Route
      ✓ should handle social login callback (3 ms)
      ✓ should validate social login data (2 ms)
    Customer OAuth Routes
      ✓ should initiate Google OAuth for customers (2 ms)
      ✓ should handle customer Google OAuth callback redirect (2 ms)
      ✓ should handle customer Facebook callback (3 ms)
      ✓ should handle customer LinkedIn callback (2 ms)
    Customer Social Registration Route
      ✓ should handle customer social registration (3 ms)
      ✓ should validate customer registration fields (3 ms)
      ✓ should validate service frequency (3 ms)
    Error Handling
      ✓ should handle errors gracefully (16 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.log
    Customer affiliateId: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:467:13)

  console.log
    Found affiliate: AFF123

      at Object.log [as customerLogin] (server/controllers/authController.js:468:13)

  console.log
    Affiliate fees: min: undefined, per-bag: undefined

      at Object.log [as customerLogin] (server/controllers/authController.js:469:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "undefined undefined"
      }
    }

      at Object.log [as customerLogin] (server/controllers/authController.js:502:13)

  console.error
    Token verification error: Error: User data not found in request
        at Object.<anonymous>.exports.verifyToken (/var/www/wavemax/wavemax-affiliate-program/server/controllers/authController.js:687:13)
        at Object.verifyToken (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authController.test.js:253:28)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      698 |     });
      699 |   } catch (error) {
    > 700 |     console.error('Token verification error:', error);
          |             ^
      701 |     res.status(500).json({
      702 |       success: false,
      703 |       message: 'An error occurred during token verification'

      at Object.error [as verifyToken] (server/controllers/authController.js:700:13)
      at Object.verifyToken (tests/unit/authController.test.js:253:28)

PASS tests/unit/authController.test.js
  Auth Controller
    affiliateLogin
      ✓ should successfully login an affiliate with valid credentials (2 ms)
      ✓ should return 401 for non-existent affiliate (1 ms)
      ✓ should return 401 for incorrect password
    customerLogin
      ✓ should successfully login a customer with valid credentials (16 ms)
      ✓ should return 401 for non-existent customer
    verifyToken
      ✓ should verify a valid JWT token (1 ms)
      ✓ should handle missing user data (41 ms)
      ✓ should return customer user data (1 ms)
    refreshToken
      ✓ should refresh token successfully (1 ms)
      ✓ should return error for invalid refresh token (1 ms)
      ✓ should return error for expired refresh token
    administratorLogin
      ✓ should successfully login administrator (1 ms)
      ✓ should handle locked account
      ✓ should handle inactive administrator
    operatorLogin
      ✓ should successfully login operator with PIN
      ✓ should increment login attempts on failure (1 ms)
    logout
      ✓ should logout user and blacklist token
    forgotPassword
      ✓ should send password reset email for affiliate (1 ms)
      ✓ should handle non-existent email gracefully
    resetPassword
      ✓ should reset password with valid token (1 ms)
      ✓ should reject expired token

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/administrator.test.js (7.968 s)
  Administrator Model
    Schema Validation
      ✓ should create a valid administrator (347 ms)
      ✓ should require all mandatory fields (95 ms)
      ✓ should enforce email format validation (80 ms)
      ✓ should enforce unique email constraint (541 ms)
      ✓ should enforce unique adminId constraint (547 ms)
      ✓ should validate permission enum values (82 ms)
      ✓ should accept valid permissions (174 ms)
      ✓ should trim whitespace from string fields (171 ms)
      ✓ should convert email to lowercase (177 ms)
      ✓ should not allow role to be changed after creation (234 ms)
    Password Handling
      ✓ should hash password on save (195 ms)
      ✓ should verify correct password (253 ms)
      ✓ should reject incorrect password (273 ms)
      ✓ should not expose password in JSON output (208 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (266 ms)
      ✓ should lock account after 5 failed attempts (241 ms)
      ✓ should reset login attempts on successful login (229 ms)
      ✓ should reset attempts if lock has expired (229 ms)
      ✓ should correctly identify locked accounts (174 ms)
    Password Reset
      ✓ should generate password reset token (181 ms)
      ✓ should set password reset expiry to 30 minutes (176 ms)
    Permissions
      ✓ should check single permission correctly (176 ms)
      ✓ should check multiple permissions with AND operation (166 ms)
      ✓ should check multiple permissions with OR operation (185 ms)
      ✓ should set default permissions if none provided (170 ms)
    Static Methods
      ✓ should find active administrators (467 ms)
      ✓ should find administrator by email with password (208 ms)
      ✓ should handle case-insensitive email search (211 ms)
      ✓ should return null for non-existent email (106 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (169 ms)
      ✓ should update updatedAt on modification (313 ms)
    Admin ID Generation
      ✓ should auto-generate unique admin ID (260 ms)
      ✓ should not override provided admin ID (200 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passwordValidatorEnhanced.test.js
  Enhanced Password Validator
    validatePasswordStrength
      Length Requirements
        ✓ should reject passwords shorter than 8 characters (2 ms)
        ✓ should accept passwords with 8 or more characters
      Character Type Requirements
        ✓ should require at least one uppercase letter (1 ms)
        ✓ should require at least one lowercase letter (1 ms)
        ✓ should require at least one number (1 ms)
        ✓ should require at least one special character (11 ms)
        ✓ should accept passwords with all required character types (1 ms)
      Common Password Detection
        ✓ should reject common passwords (2 ms)
        ✓ should accept non-common passwords (1 ms)
      Sequential Character Detection
        ✓ should reject passwords with sequential numbers
        ✓ should reject passwords with sequential letters
        ✓ should accept passwords without sequential characters (1 ms)
      Repeated Character Detection
        ✓ should reject passwords with too many repeated characters
        ✓ should accept passwords with acceptable repeated characters (1 ms)
      Username/Email Inclusion Check
        ✓ should reject passwords containing username (1 ms)
        ✓ should reject passwords containing email
        ✓ should accept passwords not containing username or email (1 ms)
      Password History Check
        ✓ should reject passwords in history
        ✓ should accept passwords not in history (1 ms)
      Complete Valid Passwords
        ✓ should accept completely valid passwords
    getPasswordStrength
      ✓ should return correct strength scores (1 ms)
      ✓ should return correct strength labels
    isPasswordInHistory
      ✓ should return true for passwords in history (1 ms)
      ✓ should return false for passwords not in history
      ✓ should handle empty history (1 ms)
    customPasswordValidator
      ✓ should return custom validator function
      ✓ should validate passwords correctly in express-validator context
      ✓ should throw for invalid passwords in express-validator context (17 ms)
      ✓ should include admin-specific validation when userType is admin
      ✓ should include admin-specific validation when userType is operator
    passwordValidationMiddleware
      ✓ should call next() for valid passwords (1 ms)
      ✓ should return 400 error for invalid passwords (1 ms)
      ✓ should skip validation if no password in request
      ✓ should include strength assessment in response for invalid passwords (1 ms)
    Edge Cases and Security
      ✓ should handle null and undefined inputs gracefully (6 ms)
      ✓ should handle very long passwords
      ✓ should handle special Unicode characters (1 ms)
      ✓ should be case-sensitive for username/email checks

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/rbac.test.js
  RBAC Middleware
    Role Hierarchy
      ✓ should define correct role hierarchy (1 ms)
      ✓ should define allowed roles
    checkRole Middleware
      ✓ should reject when no user is present (1 ms)
      ✓ should reject when user has no role
      ✓ should reject when user has invalid role (1 ms)
      ✓ should accept when user has exact required role
      ✓ should accept when user has higher role in hierarchy (1 ms)
      ✓ should reject when user has lower role in hierarchy
      ✓ should handle array of required roles (1 ms)
      ✓ should accept administrator accessing operator resources
      ✓ should reject operator accessing administrator resources (1 ms)
    checkAllRoles Middleware
      ✓ should reject when no user is present
      ✓ should accept when user has access to all required roles (1 ms)
      ✓ should reject when user lacks access to any required role
      ✓ should accept admin for any combination of roles (1 ms)
    checkResourceOwnership Middleware
      ✓ should reject when no user is present
      ✓ should allow admin access to any resource
      ✓ should allow administrator access to any resource
      ✓ should allow affiliate access to own resource via params
      ✓ should allow customer access to own resource via body
      ✓ should allow operator access to own resource (1 ms)
      ✓ should reject affiliate access to another affiliate resource (6 ms)
      ✓ should prefer params over body for resource ID
    checkAdminPermission Middleware
      ✓ should reject when user is not administrator (1 ms)
      ✓ should reject when administrator not found (1 ms)
      ✓ should reject when administrator is not active
      ✓ should accept when administrator has required permission (1 ms)
      ✓ should handle array of required permissions
      ✓ should reject when administrator lacks any required permission (1 ms)
      ✓ should handle database errors (1 ms)
    checkOperatorStatus Middleware
      ✓ should skip check for non-operators
      ✓ should reject when operator not found (1 ms)
      ✓ should reject when operator is not active
      ✓ should reject when operator is not on shift (1 ms)
      ✓ should accept active operator on shift
      ✓ should handle database errors (1 ms)
    filterResponseFields Middleware
      ✓ should pass through data when no user present
      ✓ should pass through data when user has no role (1 ms)
      ✓ should pass through all fields when role has wildcard permission
      ✓ should filter fields based on role permissions
      ✓ should handle nested field permissions (1 ms)
      ✓ should handle array data
      ✓ should handle standard response format with data property (1 ms)
      ✓ should use default permissions when role not specified
      ✓ should handle deeply nested fields
      ✓ should handle non-object data gracefully (1 ms)
      ✓ should handle empty allowed fields

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/passportConfig.test.js
  Passport Configuration Tests
    Strategy Configuration
      ✓ should configure Google strategy when credentials are present (3 ms)
      ✓ should not configure Google strategy without credentials (1 ms)
      ✓ should configure Facebook strategy when credentials are present (1 ms)
      ✓ should not configure Facebook strategy without credentials (1 ms)
      ✓ should configure LinkedIn strategy when credentials are present (1 ms)
    Google OAuth Strategy
      ✓ should handle database errors (1 ms)
      Customer Context
        ✓ should handle existing customer with Google account (1 ms)
        ✓ should link Google account to existing customer (1 ms)
        ✓ should handle existing affiliate conflict (1 ms)
        ✓ should return new user data (1 ms)
      Affiliate Context
        ✓ should handle existing affiliate with Google account (1 ms)
        ✓ should handle customer conflict (1 ms)
        ✓ should link Google account to existing affiliate with email (1 ms)
        ✓ should return new affiliate user data (1 ms)
    Facebook OAuth Strategy
      ✓ should handle existing affiliate (1 ms)
      ✓ should return new user data for registration (1 ms)
      ✓ should link Facebook account to existing affiliate (1 ms)
      ✓ should handle Facebook error (1 ms)
    LinkedIn OAuth Strategy
      ✓ should handle existing affiliate (2 ms)
      ✓ should link LinkedIn account to existing affiliate (1 ms)
      ✓ should return new LinkedIn user data (1 ms)
      ✓ should handle LinkedIn error (1 ms)
    Serialization
      ✓ should serialize user with _id (1 ms)
      ✓ should serialize user with socialId (1 ms)
      ✓ should deserialize user (1 ms)
      ✓ should handle deserialization errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/systemConfig.test.js (8.568 s)
  SystemConfig Model
    Schema Validation
      ✓ should create a valid system config (287 ms)
      ✓ should require mandatory fields (81 ms)
      ✓ should enforce unique key constraint (293 ms)
      ✓ should validate category enum (83 ms)
      ✓ should validate dataType enum (78 ms)
      ✓ should accept all valid categories (426 ms)
      ✓ should accept all valid data types (265 ms)
      ✓ should trim string fields (120 ms)
    Value Validation
      Number validation
        ✓ should reject non-number values for number dataType (82 ms)
        ✓ should enforce minimum value validation (82 ms)
        ✓ should enforce maximum value validation (82 ms)
        ✓ should accept valid number within range (117 ms)
      Boolean validation
        ✓ should reject non-boolean values for boolean dataType (77 ms)
        ✓ should accept boolean values (113 ms)
      String validation
        ✓ should reject non-string values for string dataType (78 ms)
        ✓ should enforce regex validation (86 ms)
        ✓ should accept valid string matching regex (114 ms)
      Array validation
        ✓ should reject non-array values for array dataType (84 ms)
        ✓ should accept array values (117 ms)
      Object validation
        ✓ should reject non-object values for object dataType (81 ms)
        ✓ should reject arrays for object dataType (78 ms)
        ✓ should accept object values (113 ms)
      Allowed values validation
        ✓ should enforce allowed values (79 ms)
        ✓ should accept allowed values (115 ms)
    Static Methods
      getValue
        ✓ should return config value (142 ms)
        ✓ should return defaultValue when value is undefined (143 ms)
        ✓ should return provided default when config not found (105 ms)
        ✓ should return null when config not found and no default provided (105 ms)
      setValue
        ✓ should update config value (174 ms)
        ✓ should throw error for non-existent config (103 ms)
        ✓ should throw error for non-editable config (140 ms)
        ✓ should update updatedBy when provided (181 ms)
        ✓ should validate new value according to dataType (144 ms)
      getByCategory
        ✓ should return all configs for a category (343 ms)
        ✓ should return only public configs when specified (169 ms)
        ✓ should return empty array for non-existent category (153 ms)
        ✓ should sort by key (196 ms)
      getPublicConfigs
        ✓ should return only public configs (159 ms)
        ✓ should sort by category then key (154 ms)
      initializeDefaults
        ✓ should create default configurations (551 ms)
        ✓ should not overwrite existing configurations (530 ms)
        ✓ should add missing configurations (487 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (117 ms)
      ✓ should update updatedAt on modification (257 ms)
    toJSON transformation
      ✓ should include currentValue in JSON output (119 ms)
      ✓ should use defaultValue when value is undefined (119 ms)
    Edge Cases
      ✓ should handle mixed types for value and defaultValue (120 ms)
      ✓ should handle empty validation object (120 ms)
      ✓ should skip validation when value is not modified (151 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:805:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:870:13)

  console.log
    OAuth Callback State Parameter Debug: { state: undefined, sessionId: null, allParams: {} }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:805:13)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:805:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: false
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:870:13)

info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:30:38.692Z","userType":"affiliate","username":"johndoe"}
  console.error
    Error storing OAuth session: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:127:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      916 |             await OAuthSession.createSession(sessionId, message);
      917 |           } catch (dbError) {
    > 918 |             console.error('Error storing OAuth session:', dbError);
          |                     ^
      919 |           }
      920 |         }
      921 |         

      at Object.error [as handleSocialCallback] (server/controllers/authController.js:918:21)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:129:7)

  console.log
    OAuth Callback State Parameter Debug: {
      state: 'oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'oauth_test-session-id', popup: 'true' }
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:805:13)

  console.log
    OAuth Callback Debug: {
      popup: 'true',
      state: 'oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleSocialCallback] (server/controllers/authController.js:870:13)

  console.log
    Customer OAuth Callback State Parameter Debug: {
      state: 'customer_oauth_test-session-id',
      sessionId: 'oauth_test-session-id',
      allParams: { state: 'customer_oauth_test-session-id' }
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1596:13)

  console.log
    Customer OAuth Callback Debug: {
      popup: undefined,
      state: 'customer_oauth_test-session-id',
      referer: undefined,
      isPopup: true,
      userIsNew: true
    }

      at Object.log [as handleCustomerSocialCallback] (server/controllers/authController.js:1658:13)

info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-10T00:30:39.275Z","userType":"affiliate"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-10T00:30:39.926Z","userType":"affiliate"}
info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","timestamp":"2025-06-10T00:30:40.302Z","userType":"customer"}
info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:30:40.792Z","userType":"affiliate"}
info: undefined {"affiliateId":"AFF123456","loginMethod":"social","provider":"google","timestamp":"2025-06-10T00:30:40.792Z","userType":"affiliate"}
info: undefined {"eventType":"LOGIN_SUCCESS","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:30:41.110Z","userType":"customer"}
info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"linkedin","socialAccountId":"linkedin789"},"eventType":"ACCOUNT_UPDATED","timestamp":"2025-06-10T00:30:41.275Z","userId":"507f1f77bcf86cd799439011","userType":"affiliate"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        provider: 'google',
        socialToken: 'social-jwt-token',
        socialId: 'google123',
        email: 'test@example.com',
        firstName: 'John',
        lastName: 'Doe'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1566:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF001',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1566:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-error',
        message: 'Social authentication failed'
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1566:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1566:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane@example.com'
        }
      }
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1566:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'test-session-123',
      sessionResult: 'not found',
      resultData: null
    }

      at Object.log [as pollOAuthSession] (server/controllers/authController.js:1547:13)

  console.error
    OAuth session polling error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/authControllerEnhanced.test.js:752:65)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1568 |     
      1569 |   } catch (error) {
    > 1570 |     console.error('OAuth session polling error:', error);
           |             ^
      1571 |     res.status(500).json({
      1572 |       success: false,
      1573 |       message: 'An error occurred while polling OAuth session'

      at Object.error [as pollOAuthSession] (server/controllers/authController.js:1570:13)
      at Object.<anonymous> (tests/unit/authControllerEnhanced.test.js:754:7)

PASS tests/unit/authControllerEnhanced.test.js (6.576 s)
  Enhanced Auth Controller - OAuth Methods
    handleSocialCallback
      ✓ should create OAuth session and redirect for affiliate context (468 ms)
      ✓ should handle customer context from state parameter (176 ms)
      ✓ should handle missing user data gracefully (164 ms)
      ✓ should handle OAuth session creation errors (182 ms)
      ✓ should extract profile data correctly for different providers (162 ms)
    handleCustomerSocialCallback
      ✓ should create customer OAuth session (188 ms)
    completeSocialRegistration
      ✓ should complete social registration successfully (215 ms)
      ✓ should sanitize social data and reject if fields become empty (160 ms)
      ✓ should check for existing email and username (166 ms)
      ✓ should check for existing social account (163 ms)
      ✓ should generate unique username from social data (158 ms)
      ✓ should handle JWT verification errors (163 ms)
    completeSocialCustomerRegistration
      ✓ should complete customer social registration successfully (218 ms)
      ✓ should validate affiliate existence (159 ms)
      ✓ should sanitize customer social data (166 ms)
    socialLogin
      ✓ should login existing affiliate with social account (159 ms)
      ✓ should return error for non-existent social account (159 ms)
      ✓ should login existing customer with social account (164 ms)
    linkSocialAccount
      ✓ should link social account to existing affiliate (164 ms)
      ✓ should prevent linking already existing social account (158 ms)
      ✓ should handle user not found error (159 ms)
    pollOAuthSession
      ✓ should return complete session data when available (168 ms)
      ✓ should return social-auth-login session data (159 ms)
      ✓ should return social-auth-error session data (160 ms)
      ✓ should return social-auth-account-conflict session data for affiliate conflict (171 ms)
      ✓ should return social-auth-account-conflict session data for customer conflict (165 ms)
      ✓ should return pending status when session not ready (160 ms)
      ✓ should handle database errors gracefully (162 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed JWT tokens (157 ms)
      ✓ should handle database connection errors (158 ms)
      ✓ should handle missing required fields in social data (160 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/operator.test.js (11.522 s)
  Operator Model
    Schema Validation
      ✓ should create a valid operator (350 ms)
      ✓ should require all mandatory fields (90 ms)
      ✓ should enforce email format validation (87 ms)
      ✓ should enforce unique email constraint (733 ms)
      ✓ should enforce unique operatorId constraint (735 ms)
      ✓ should validate shift time format (81 ms)
      ✓ should accept valid shift times (167 ms)
      ✓ should enforce quality score range (81 ms)
      ✓ should trim whitespace from string fields (168 ms)
      ✓ should convert email to lowercase (169 ms)
      ✓ should not allow role to be changed after creation (233 ms)
    Password Handling
      ✓ should hash password on save (193 ms)
      ✓ should verify correct password (278 ms)
      ✓ should reject incorrect password (260 ms)
      ✓ should not expose password in JSON output (194 ms)
    Login Attempts and Account Locking
      ✓ should increment login attempts (264 ms)
      ✓ should lock account after 5 failed attempts (236 ms)
      ✓ should lock for 30 minutes (225 ms)
      ✓ should reset login attempts on successful login (226 ms)
      ✓ should reset attempts if lock has expired (229 ms)
      ✓ should correctly identify locked accounts (176 ms)
    Password Reset
      ✓ should generate password reset token (170 ms)
      ✓ should set password reset expiry to 30 minutes (169 ms)
    Shift Management
      isOnShift virtual
        ✓ should return true when no shift times are set (170 ms)
        ✓ should correctly identify operator on shift during normal hours (185 ms)
        ✓ should correctly identify operator off shift (173 ms)
        ✓ should handle overnight shifts correctly (176 ms)
    Processing Statistics
      ✓ should update processing stats correctly (212 ms)
      ✓ should handle first order processing (194 ms)
      ✓ should update quality score with passing result (210 ms)
      ✓ should update quality score with failing result (206 ms)
    Static Methods
      findActive
        ✓ should find only active operators (448 ms)
      findOnShift
        ✓ should find only operators on shift (323 ms)
      findByEmailWithPassword
        ✓ should find operator by email with password (215 ms)
        ✓ should handle case-insensitive email search (195 ms)
        ✓ should return null for non-existent email (105 ms)
      findAvailableOperators
        ✓ should find operators with low order count (515 ms)
        ✓ should sort by current order count (329 ms)
        ✓ should respect limit parameter (879 ms)
    Timestamps
      ✓ should auto-generate timestamps on creation (187 ms)
      ✓ should update updatedAt on modification (351 ms)
    Operator ID Generation
      ✓ should auto-generate unique operator ID (270 ms)
      ✓ should not override provided operator ID (174 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.error
    Error fetching administrators: TypeError: Administrator.find(...).select is not a function
        at select (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:53:8)
        at Object.getAdministrators (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:156:15)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      70 |
      71 |   } catch (error) {
    > 72 |     console.error('Error fetching administrators:', error);
         |             ^
      73 |     res.status(500).json({
      74 |       success: false,
      75 |       message: 'Failed to fetch administrators'

      at error (server/controllers/administratorController.js:72:13)
      at Object.getAdministrators (tests/unit/administratorControllerEnhanced.test.js:156:15)

  console.error
    Error updating operator profile: TypeError: updatedOperator.toObject is not a function
        at toObject (/var/www/wavemax/wavemax-affiliate-program/server/controllers/administratorController.js:2005:70)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/administratorControllerEnhanced.test.js:925:9)

      2011 |     });
      2012 |   } catch (error) {
    > 2013 |     console.error('Error updating operator profile:', error);
           |             ^
      2014 |     res.status(500).json({
      2015 |       success: false,
      2016 |       message: 'An error occurred while updating the profile'

      at error (server/controllers/administratorController.js:2013:13)
      at Object.<anonymous> (tests/unit/administratorControllerEnhanced.test.js:925:9)

PASS tests/unit/administratorControllerEnhanced.test.js
  Administrator Controller - Enhanced Coverage
    Administrator Management
      getAdministrators
        ✓ should get all administrators with pagination (2 ms)
        ✓ should filter administrators by search query (1 ms)
        ✓ should handle database errors (51 ms)
      getAdministratorById
        ✓ should get administrator by ID (1 ms)
        ✓ should return 404 for non-existent administrator
        ✓ should return 400 for invalid ObjectId
      createAdministrator
        ✓ should create new administrator with valid data (1 ms)
        ✓ should return validation errors
        ✓ should handle duplicate email error (1 ms)
      updateAdministrator
        ✓ should update administrator successfully (1 ms)
        ○ skipped should not allow self-demotion of last super admin
      deleteAdministrator
        ✓ should delete administrator successfully
        ✓ should prevent self-deletion (1 ms)
        ✓ should prevent deletion of last administrator (1 ms)
      resetAdministratorPassword
        ✓ should reset administrator password
        ✓ should handle email sending failure
      getPermissions
        ✓ should return all available permissions
    Operator Management Extensions
      deactivateOperator
        ✓ should deactivate operator
        ✓ should handle non-existent operator (1 ms)
      resetOperatorPassword
        ○ skipped should reset operator password and send email
      resetOperatorPin
        ✓ should validate PIN format
        ○ skipped should reset operator PIN
      deleteOperator
        ○ skipped should delete operator permanently
      getAvailableOperators
        ✓ should get available operators for assignment (1 ms)
      updateOperatorStats
        ○ skipped should update operator statistics
    Analytics Extensions
      getOperatorAnalytics
        ○ skipped should get operator analytics with date range
        ○ skipped should handle missing date range
      getAffiliateAnalytics
        ○ skipped should get affiliate analytics
      exportReport
        ○ skipped should export report as CSV
        ○ skipped should export report as JSON
        ○ skipped should reject invalid format
    Operator Self-Management
      getOperatorSelf
        ○ skipped should get current operator profile
        ○ skipped should handle non-operator users
      updateOperatorSelf
        ✓ should prevent changing restricted fields (2 ms)
        ○ skipped should allow operator to update own profile
    Error Handling
      ○ skipped should handle database connection errors
      ○ skipped should handle validation errors

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

  console.warn
    Welcome email could not be sent: Error: Email failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:159:64)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      101 |       // Email sent successfully - no need to check result
      102 |     } catch (emailError) {
    > 103 |       console.warn('Welcome email could not be sent:', emailError);
          |               ^
      104 |       // Continue with registration process even if email fails
      105 |     }
      106 |

      at Object.warn [as registerAffiliate] (server/controllers/affiliateController.js:103:15)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:161:7)

  console.error
    Affiliate registration error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:176:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      111 |     });
      112 |   } catch (error) {
    > 113 |     console.error('Affiliate registration error:', error);
          |             ^
      114 |     res.status(500).json({
      115 |       success: false,
      116 |       message: 'An error occurred during registration'

      at Object.error [as registerAffiliate] (server/controllers/affiliateController.js:113:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:178:7)

  console.error
    Error decrypting PayPal email: Error: Decryption failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:273:15)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:397:39
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:404:13)
        at Object.mockConstructor [as decrypt] (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-mock/build/index.js:148:19)
        at Object.decrypt [as getAffiliateProfile] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:175:28)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:276:7)

      176 |           : affiliate.paypalEmail;
      177 |       } catch (error) {
    > 178 |         console.error('Error decrypting PayPal email:', error);
          |                 ^
      179 |         // Don't include if decryption fails
      180 |       }
      181 |     }

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:178:17)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:276:7)

  console.error
    Get affiliate orders error: TypeError: Cannot read properties of undefined (reading 'forEach')
        at Object.forEach [as getAffiliateOrders] (/var/www/wavemax/wavemax-affiliate-program/server/controllers/affiliateController.js:599:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:695:7)

      647 |     });
      648 |   } catch (error) {
    > 649 |     console.error('Get affiliate orders error:', error);
          |             ^
      650 |     res.status(500).json({
      651 |       success: false,
      652 |       message: 'An error occurred while retrieving orders'

      at Object.error [as getAffiliateOrders] (server/controllers/affiliateController.js:649:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:695:7)

  console.error
    Get affiliate profile error: Error: Database connection lost
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:904:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      187 |     });
      188 |   } catch (error) {
    > 189 |     console.error('Get affiliate profile error:', error);
          |             ^
      190 |     res.status(500).json({
      191 |       success: false,
      192 |       message: 'An error occurred while retrieving affiliate profile'

      at Object.error [as getAffiliateProfile] (server/controllers/affiliateController.js:189:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:906:7)

  console.error
    Delete affiliate data error: Error: Database error
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/unit/affiliateController.test.js:993:43)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error('Delete affiliate data error:', error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       message: 'An error occurred while deleting data'

      at Object.error [as deleteAffiliateData] (server/controllers/affiliateController.js:901:13)
      at Object.<anonymous> (tests/unit/affiliateController.test.js:995:7)

PASS tests/unit/affiliateController.test.js
  Affiliate Controller
    registerAffiliate
      ✓ should successfully register a new affiliate (2 ms)
      ✓ should return validation errors (1 ms)
      ✓ should handle duplicate email or username
      ✓ should handle email service failure gracefully (31 ms)
      ✓ should handle database errors (1 ms)
    getAffiliateProfile
      ✓ should return affiliate profile for authorized user (1 ms)
      ✓ should return 404 for non-existent affiliate
      ✓ should return 403 for unauthorized access (1 ms)
      ✓ should handle decryption errors gracefully (12 ms)
    updateAffiliateProfile
      ✓ should successfully update affiliate profile (2 ms)
      ✓ should handle password change
      ✓ should reject incorrect current password
      ✓ should update payment method (1 ms)
    getAffiliateEarnings
      ✓ should return earnings for specified period (1 ms)
      ✓ should handle different time periods
      ✓ should handle missing customers gracefully (1 ms)
    getAffiliateCustomers
      ✓ should return paginated customers with search (1 ms)
      ✓ should handle different sort options
    getAffiliateOrders
      ✓ should return filtered orders (2 ms)
      ✓ should handle date filters correctly (2 ms)
    getAffiliateTransactions
      ✓ should return paginated transactions (1 ms)
    getAffiliateDashboardStats
      ✓ should return comprehensive dashboard statistics (1 ms)
      ✓ should handle empty data gracefully
    getPublicAffiliateInfo
      ✓ should return only public affiliate information (7 ms)
      ✓ should return 404 for non-existent affiliate
    Error handling
      ✓ should handle database connection errors (2 ms)
    deleteAffiliateData
      ✓ should delete all affiliate data in development environment (2 ms)
      ✓ should reject deletion in production environment
      ✓ should reject unauthorized deletion
      ✓ should handle deletion errors (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/unit/operatorController.test.js
  Operator Controller
    getDashboard
      ✓ should return operator dashboard data (2 ms)
    getOrderQueue
      ✓ should return available orders for operator workstation (1 ms)
    claimOrder
      ✓ should allow operator to claim an order (1 ms)
      ✓ should fail if order is already claimed
      ✓ should fail if order not found (1 ms)
      ✓ should handle database error during claim (1 ms)
    updateOrderStatus
      ✓ should update order status (1 ms)
      ✓ should handle invalid status transition
      ✓ should handle order not found (1 ms)
      ✓ should handle unauthorized operator (1 ms)
      ✓ should update workstation when washing status with new workstation
      ✓ should set processingCompleted when status is ready
      ✓ should handle database error (1 ms)
    performQualityCheck
      ✓ should record quality check results (6 ms)
      ✓ should handle order not found (1 ms)
      ✓ should handle order not ready for quality check (1 ms)
      ✓ should handle database error during quality check
    getMyOrders
      ✓ should return orders assigned to operator (1 ms)
    updateShiftStatus
      ✓ should update operator shift status (1 ms)
      ✓ should handle operator not found
      ✓ should end shift successfully
      ✓ should handle database error (1 ms)
    getPerformanceStats
      ✓ should return operator performance statistics
    getCustomerDetails
      ✓ should return customer details for an order (1 ms)
    addCustomerNote
      ✓ should add a note to an order (1 ms)
      ✓ should handle customer not found
      ✓ should handle errors during note addition (1 ms)
    Error handling in existing functions
      ✓ should handle error in getDashboard when operator not found
      ✓ should handle database error in getDashboard
      ✓ should handle error in getOrderQueue (1 ms)
      ✓ should handle different filters in getOrderQueue
      ✓ should handle operator at max capacity in claimOrder
      ✓ should handle quality check failure in performQualityCheck
      ✓ should handle workstation conflict in updateShiftStatus (1 ms)
      ✓ should handle incomplete orders when ending shift
      ✓ should handle invalid action in updateShiftStatus (1 ms)
      ✓ should handle missing workstation when starting shift
      ✓ should handle different time periods in getPerformanceStats
      ✓ should handle operator not found in getPerformanceStats (1 ms)
      ✓ should handle customer not found in getCustomerDetails
      ✓ should handle filters in getMyOrders (1 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:00.577Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:01.173Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 595.994 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:01.952Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:02.106Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.026 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-c770efd0-009a-44b0-9913-91018befd9bc/customers {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:02.119Z"}
[0mGET /api/v1/affiliates/AFF-c770efd0-009a-44b0-9913-91018befd9bc/customers [32m200[0m 115.668 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:02.921Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:03.076Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.124 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-47edc89b-113e-44e3-a2ae-a036b5ab97fa/customers?customerId=CUST-450b9e79-533f-453d-923c-8f03b128926b {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:03.183Z"}
[0mGET /api/v1/affiliates/AFF-47edc89b-113e-44e3-a2ae-a036b5ab97fa/customers?customerId=CUST-450b9e79-533f-453d-923c-8f03b128926b [32m200[0m 111.100 ms - 437[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:03.975Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:04.129Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 154.042 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-bd5d556c-5bfa-49de-81c6-af807083645f/customers?customerId=NONEXISTENT123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:04.133Z"}
[0mGET /api/v1/affiliates/AFF-bd5d556c-5bfa-49de-81c6-af807083645f/customers?customerId=NONEXISTENT123 [32m200[0m 118.088 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:04.929Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:05.084Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 155.515 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-3cafd0bc-e1b8-4916-90e8-09f76142c79f/customers {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:05.088Z"}
[0mGET /api/v1/affiliates/AFF-3cafd0bc-e1b8-4916-90e8-09f76142c79f/customers [33m401[0m 1.407 ms - 47[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:05.767Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:05.921Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 154.128 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:05.926Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:06.102Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 176.153 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-f31edc85-0f95-40c0-bb89-a69b1247f2b4/customers {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:06.106Z"}
[0mGET /api/v1/affiliates/AFF-f31edc85-0f95-40c0-bb89-a69b1247f2b4/customers [32m200[0m 111.606 ms - 437[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-f31edc85-0f95-40c0-bb89-a69b1247f2b4/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:06.221Z"}
[0mGET /api/v1/affiliates/AFF-f31edc85-0f95-40c0-bb89-a69b1247f2b4/dashboard [32m200[0m 139.287 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:07.074Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:07.224Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 150.988 ms - 629[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:07.925Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:08.077Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 152.245 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-69b4ad42-5e56-4479-8e94-ea6100e80d0c {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:08.080Z"}
[0mGET /api/v1/affiliates/AFF-69b4ad42-5e56-4479-8e94-ea6100e80d0c [32m200[0m 55.843 ms - 573[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:08.820Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:08.966Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 146.221 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-28519454-1c6e-45e0-a0bc-0b1bbe097ca8/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:08.970Z"}
[0mGET /api/v1/affiliates/AFF-28519454-1c6e-45e0-a0bc-0b1bbe097ca8/dashboard [32m200[0m 138.265 ms - 217[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:09.798Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:09.952Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 154.006 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-67ee331f-9884-4d4c-a1ea-641d4a50e94f/customers?customerId=INVALID_ID {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:09.955Z"}
[0mGET /api/v1/affiliates/AFF-67ee331f-9884-4d4c-a1ea-641d4a50e94f/customers?customerId=INVALID_ID [32m200[0m 113.215 ms - 130[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:10.747Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:10.889Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 142.747 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/INVALID_AFFILIATE/customers {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:10.892Z"}
[0mGET /api/v1/affiliates/INVALID_AFFILIATE/customers [33m403[0m 31.687 ms - 42[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:11.651Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:11.794Z","userType":"affiliate","username":"john@testaffiliate.com"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 143.767 ms - 629[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-17fc19ec-0393-4be1-b9bf-7fd61e202199/customers {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:11.797Z"}
[0mGET /api/v1/affiliates/AFF-17fc19ec-0393-4be1-b9bf-7fd61e202199/customers [32m200[0m 111.676 ms - 437[0m
PASS tests/integration/affiliateCustomerFiltering.test.js (13.44 s)
  Affiliate Customer Filtering Integration Tests
    Email URL Generation for Customer Filtering
      ✓ should generate correct dashboard URL with customer parameter (1828 ms)
    Affiliate Dashboard Customer Filtering API
      ✓ should return customers for authenticated affiliate (970 ms)
      ✓ should filter customers by customerId when provided (1052 ms)
      ✓ should return empty array when filtering by non-existent customerId (957 ms)
      ✓ should require authentication to access customer list (841 ms)
    Complete Email-to-Dashboard Flow Simulation
      ✓ should handle complete flow from email generation to dashboard access (1268 ms)
      ✓ should handle URL parameters correctly throughout the flow (869 ms)
    Dashboard Data Loading for Customer Highlighting
      ✓ should load affiliate profile data correctly (921 ms)
      ✓ should load dashboard statistics correctly (971 ms)
    Error Handling in Customer Filtering Flow
      ✓ should handle invalid customer ID gracefully (952 ms)
      ✓ should handle invalid affiliate ID (913 ms)
      ✓ should handle database connection issues gracefully (917 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

PASS tests/integration/adminCreation.test.js (5.044 s)
  Admin Creation Integration Tests
    Direct Database Admin Creation
      ✓ should create admin with sequential ID when no admins exist (386 ms)
      ✓ should create admin with next sequential ID when admins exist (334 ms)
      ✓ should handle admin creation with all permissions (193 ms)
      ✓ should handle admin creation with partial permissions (188 ms)
    Admin Model Validation
      ✓ should require email field (104 ms)
      ✓ should save admins with different adminIds successfully (298 ms)
      ✓ should save admins with different emails successfully (285 ms)
    Password Handling
      ✓ should hash password before saving (197 ms)
      ✓ should validate password with verifyPassword method (306 ms)
    Admin Query Operations
      ✓ should find admin by adminId (508 ms)
      ✓ should find admin by email (353 ms)
      ✓ should find active admins only (333 ms)
      ✓ should find admins with specific permissions (326 ms)
      ✓ should get last admin for ID generation (344 ms)
    Email Integration
      ✓ should call email service after admin creation (191 ms)
      ✓ should handle email service failures gracefully (239 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:18.384Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jQsj63U9_cVkG1CXaJDo2J5P6EMeC92v',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: k6HAG8du-dOXZbuUBd42ksCbeARGr63uhMZ8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jQsj63U9_cVkG1CXaJDo2J5P6EMeC92v

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: x9ApF_Nl4j...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 10.121 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:18.585Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 424.103 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:19.589Z"}
  console.log
    CSRF token generation: {
      sessionID: 'G9AlZu5bF3iQe6yxIrZuu33vRn8hOsLf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RsL4FYHS-_66fOr4BJA3XwalBHmRyOemVzeI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: G9AlZu5bF3iQe6yxIrZuu33vRn8hOsLf

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: yy1cq7ZAJm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.942 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-a221c628-f92c-4289-bfe5-e7b107140e6b {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:19.636Z"}
[0mGET /api/v1/affiliates/AFF-a221c628-f92c-4289-bfe5-e7b107140e6b [32m200[0m 58.687 ms - 495[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:20.190Z"}
  console.log
    CSRF token generation: {
      sessionID: 'runQyACEUDJzsbSjoN2I6ghg0m5IG8IA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bysizFQC-SeK_aH7QtqbgdBkN6avMALIBTF8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: runQyACEUDJzsbSjoN2I6ghg0m5IG8IA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JOQg56OOCo...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.342 ms - 67[0m
[34mdebug[39m: PUT /api/v1/affiliates/AFF-94499788-f52a-479a-aeaa-3101a9e818b7 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:20.242Z"}
[0mPUT /api/v1/affiliates/AFF-94499788-f52a-479a-aeaa-3101a9e818b7 [32m200[0m 97.393 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:20.888Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tK71es7xfhmNMK0bAinTTcUW4oNTmtSl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dPImVmQU-x9gbDRwG6FfYH9wnaIFK8yjXSqk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tK71es7xfhmNMK0bAinTTcUW4oNTmtSl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: sS_-nmtLQ3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.092 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:21.039Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:31:21.182Z","userType":"affiliate","username":"testaffiliate"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 143.348 ms - 629[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:21.701Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rzv-piB7i8chr0d9IQT9fsjF3IPnm96C',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: P6uWQ0il-kDwt-wcyaK5oUf9TKU53p97a6xo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rzv-piB7i8chr0d9IQT9fsjF3IPnm96C

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XsPI3uFKkh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.282 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-4393b0ff-caf8-431e-952e-33b1f324558b/customers?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:21.783Z"}
[0mGET /api/v1/affiliates/AFF-4393b0ff-caf8-431e-952e-33b1f324558b/customers?page=1&limit=10 [32m200[0m 132.803 ms - 689[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:23.037Z"}
  console.log
    CSRF token generation: {
      sessionID: 'axH3UQa5ARmEwEDTGzOQ84dZ3PiUAicX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QJ3WUPqs-PYfMR51USh1AQvBbdDXvsvOJqBE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: axH3UQa5ARmEwEDTGzOQ84dZ3PiUAicX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: GkO4dlRmXE...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.308 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-95932fd7-f799-43d1-b93b-51d6cb9f8685/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:23.258Z"}
[0mGET /api/v1/affiliates/AFF-95932fd7-f799-43d1-b93b-51d6cb9f8685/orders?page=1&limit=10 [32m200[0m 236.641 ms - 713[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:24.333Z"}
  console.log
    CSRF token generation: {
      sessionID: '5_rVWui505urLhDTSXIMZ1r9rsjQrRHA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dqulQkhe-TTnFOgwfUBjvZD-qBXhlhqo6BYE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5_rVWui505urLhDTSXIMZ1r9rsjQrRHA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aQ5AsBHk3D...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.248 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF-77545386-e067-4523-90df-88d3d873e9c6/transactions?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:24.424Z"}
[0mGET /api/v1/affiliates/AFF-77545386-e067-4523-90df-88d3d873e9c6/transactions?page=1&limit=10 [32m200[0m 108.354 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:25.011Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sgatiXgDteKnUnS1CCqtNgWjay5CP_61',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ns8RIoUF-ZBcpUr5EFaGvHYAsOpH-1AVYvNs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sgatiXgDteKnUnS1CCqtNgWjay5CP_61

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: t4sYfNmDjI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.587 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-d017f364-ff12-464f-8e92-687bd3fa7ee8/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:25.149Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-d017f364-ff12-464f-8e92-687bd3fa7ee8/delete-all-data {
      sessionID: 'sgatiXgDteKnUnS1CCqtNgWjay5CP_61',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AsgatiXgDteKnUnS1CCqtNgWjay5CP_61.r7Kwbh%2FFsttwv246KbqjcScCBehzUV%2F9FyUvkcgY8Gg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/affiliates/AFF-d017f364-ff12-464f-8e92-687bd3fa7ee8/delete-all-data [32m200[0m 239.028 ms - 191[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:25.949Z"}
  console.log
    CSRF token generation: {
      sessionID: '4Nm9crCbppndHviF8wn1UTSVzjWnhJ19',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LQAs3ZFt-B2ysiWSe3A90CC6Cbam3BhyBaXs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4Nm9crCbppndHviF8wn1UTSVzjWnhJ19

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 6zopo-MdQn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.159 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/affiliates/AFF-aa45bedc-ac85-429a-85ee-5cd0cc68e746/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:25.994Z"}
  console.log
    CSRF check for: /api/v1/affiliates/AFF-aa45bedc-ac85-429a-85ee-5cd0cc68e746/delete-all-data {
      sessionID: '4Nm9crCbppndHviF8wn1UTSVzjWnhJ19',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4Nm9crCbppndHviF8wn1UTSVzjWnhJ19.akzmb05tJaOnHZNynJV7qWUpoaK%2FTi6EHcFZO0L2RPM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/affiliates/AFF-aa45bedc-ac85-429a-85ee-5cd0cc68e746/delete-all-data [33m403[0m 29.634 ms - 59[0m
PASS tests/integration/affiliate.test.js (8.958 s)
  Affiliate API
    ✓ should register a new affiliate (1217 ms)
    ✓ should get affiliate profile (601 ms)
    ✓ should update affiliate profile (698 ms)
    ✓ should login affiliate (813 ms)
    ✓ should get affiliate's customers list (1335 ms)
    ✓ should get affiliate's orders (1297 ms)
    ✓ should get affiliate's earnings/transactions (675 ms)
    ✓ Delete all affiliate data (development only) (939 ms)
    ✓ Reject delete in production environment (550 ms)
    ○ skipped should update payment information
    ○ skipped should handle commission-related endpoints

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:28.397Z"}
[0mGET /api/v1/system/config/public [32m200[0m 29.899 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:29.437Z"}
[0mGET /api/v1/system/config/public [32m200[0m 31.783 ms - 472[0m
[34mdebug[39m: GET /api/v1/system/config/public/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:30.377Z"}
[0mGET /api/v1/system/config/public/wdf_base_rate_per_pound [32m200[0m 28.333 ms - 172[0m
[34mdebug[39m: GET /api/v1/system/config/public/non_existent_key {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:31.267Z"}
[0mGET /api/v1/system/config/public/non_existent_key [33m404[0m 27.251 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config/public/private_key {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:32.204Z"}
[0mGET /api/v1/system/config/public/private_key [33m404[0m 28.691 ms - 35[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:33.140Z"}
[0mGET /api/v1/system/config [32m200[0m 57.942 ms - -[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:34.074Z"}
[0mGET /api/v1/system/config [33m401[0m 1.178 ms - 47[0m
[34mdebug[39m: GET /api/v1/system/config {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:34.937Z"}
[0mGET /api/v1/system/config [33m403[0m 27.376 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:35.824Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cLH2Mn-_uTi8j4RWg7VPcRgoZZaZY8W6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IBD49VkL-YG_SmR0jsV9FGaBwsfBkwFwnKKs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: cLH2Mn-_uTi8j4RWg7VPcRgoZZaZY8W6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: I6Ndm-8Tks...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.651 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:35.947Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'cLH2Mn-_uTi8j4RWg7VPcRgoZZaZY8W6',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AcLH2Mn-_uTi8j4RWg7VPcRgoZZaZY8W6.D95J9L8WaQYGrxzlSpjNtZ05wVBe5G%2BYrjQjEU0opq8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [32m200[0m 120.181 ms - 149[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:37.037Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Mei7x9aHkX3D7JEC5OntvxnKB8nmI9M7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sy2fdfK3-jsZIKdZ_nKhgHsC9LjntyjPBmHo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Mei7x9aHkX3D7JEC5OntvxnKB8nmI9M7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zpga5K38YC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.039 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:37.157Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'Mei7x9aHkX3D7JEC5OntvxnKB8nmI9M7',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AMei7x9aHkX3D7JEC5OntvxnKB8nmI9M7.GXtYMgoAiaa%2BLGk3InjyXkj1m%2BfFBEnWGqCvfDojLsE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Value must be a number for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:67:21)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 91.734 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:38.161Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eKFzJuZjxzqCN1kiBZj8WlPe0rZ9Q7Pb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HTC6NJzO-JSdTF9aJ6OvcX1NbEUecbp9oiU4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: eKFzJuZjxzqCN1kiBZj8WlPe0rZ9Q7Pb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8M2YZkvI6w...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.938 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:38.286Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'eKFzJuZjxzqCN1kiBZj8WlPe0rZ9Q7Pb',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AeKFzJuZjxzqCN1kiBZj8WlPe0rZ9Q7Pb.T0I9Tw%2FED465QJGq%2FOi2gcjjVNf1hrzdI3WP8%2BFlibc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Value must be at least 0.5 for key: wdf_base_rate_per_pound
        at model.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:72:23)
        at callMiddlewareFunction (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:628:27)
        at model.next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:93:7)
        at _next (/var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:146:10)
        at /var/www/wavemax/wavemax-affiliate-program/node_modules/kareem/index.js:653:30
        at processTicksAndRejections (node:internal/process/task_queues:77:11)

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m400[0m 83.765 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:39.312Z"}
  console.log
    CSRF token generation: {
      sessionID: 'vYMFSrv4dtlSRwUMSmIA-2Dg-bmXBqVC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RTwz5Tjj-CDngBdn_awNAK0Wt771B7rCkk78

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: vYMFSrv4dtlSRwUMSmIA-2Dg-bmXBqVC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HzLQR4gO9G...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.119 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/non_editable_config {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:39.497Z"}
  console.log
    CSRF check for: /api/v1/system/config/non_editable_config {
      sessionID: 'vYMFSrv4dtlSRwUMSmIA-2Dg-bmXBqVC',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AvYMFSrv4dtlSRwUMSmIA-2Dg-bmXBqVC.QCklgB3WokakscSpTRWj9t0%2BeNnBpvmWykhucJv9UBc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.error
    Error updating config: Error: Configuration is not editable: non_editable_config
        at Function.Object.<anonymous>.systemConfigSchema.statics.setValue (/var/www/wavemax/wavemax-affiliate-program/server/models/SystemConfig.js:140:11)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /var/www/wavemax/wavemax-affiliate-program/server/routes/systemConfigRoutes.js:83:20

      92 |     });
      93 |   } catch (error) {
    > 94 |     console.error('Error updating config:', error);
         |             ^
      95 |     res.status(400).json({ error: error.message });
      96 |   }
      97 | });

      at error (server/routes/systemConfigRoutes.js:94:13)

[0mPUT /api/v1/system/config/non_editable_config [33m400[0m 89.095 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:40.507Z"}
  console.log
    CSRF token generation: {
      sessionID: 'up__VCA-AmS7LlwXAM4pxe3cR-10t7AH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NNGtUwDH-cpF82K8N6qergQXm2_hbaUkiP9k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: up__VCA-AmS7LlwXAM4pxe3cR-10t7AH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: r0iyFHiI3b...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.954 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:40.716Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qU4rcJCepXPSrDgXZEooRD9Ws5rCgzfl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: q6YOR6MD-wc5-1j9wBYmalpVb70IXMl4sM4Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qU4rcJCepXPSrDgXZEooRD9Ws5rCgzfl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: VQSBk1U5OV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.220 ms - 67[0m
[34mdebug[39m: PUT /api/v1/system/config/wdf_base_rate_per_pound {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:40.725Z"}
  console.log
    CSRF check for: /api/v1/system/config/wdf_base_rate_per_pound {
      sessionID: 'qU4rcJCepXPSrDgXZEooRD9Ws5rCgzfl',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AqU4rcJCepXPSrDgXZEooRD9Ws5rCgzfl.taTi4BLYGoiSig%2F3UKrITV36lJEPpn9aldObNqtWVqM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/system/config/wdf_base_rate_per_pound [33m403[0m 56.371 ms - 78[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:41.715Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XAa22v0Hdm0lZEQ9MizgKu7QofVx9mFD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: nJ6AaiAp-m5djMfncTaCBYTLjezNYkeRUGfY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XAa22v0Hdm0lZEQ9MizgKu7QofVx9mFD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KJAgGE0vYW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.570 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:41.754Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'XAa22v0Hdm0lZEQ9MizgKu7QofVx9mFD',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AXAa22v0Hdm0lZEQ9MizgKu7QofVx9mFD.YGdKQTsh%2Ffvjb23oJI2U273kSQP9bBe27jEdhViIMOY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 337.794 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:43.021Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cjVbVYJxcEFWJuR-fDHrrcW5Gr7Q4xwj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0mrSzpsP-pq_K2WQtjOMip1NSAvL7v2DIBGA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: cjVbVYJxcEFWJuR-fDHrrcW5Gr7Q4xwj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YtrHqbg9wr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.126 ms - 67[0m
[34mdebug[39m: POST /api/v1/system/config/initialize {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:43.094Z"}
  console.log
    CSRF check for: /api/v1/system/config/initialize {
      sessionID: 'cjVbVYJxcEFWJuR-fDHrrcW5Gr7Q4xwj',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AcjVbVYJxcEFWJuR-fDHrrcW5Gr7Q4xwj.a0modyLuIYc5ynF%2BFIY1ty%2Fz26MXjaHBdFwH0aK8kNg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/system/config/initialize [32m200[0m 332.961 ms - 48[0m
PASS tests/integration/systemConfig.test.js (18.644 s)
  System Config API Tests
    Public Endpoints
      GET /api/v1/system/config/public
        ✓ should return all public configurations (1210 ms)
        ✓ should not return private configurations (978 ms)
      GET /api/v1/system/config/public/:key
        ✓ should return a specific public configuration (886 ms)
        ✓ should return 404 for non-existent config (909 ms)
        ✓ should return 404 for private config accessed via public endpoint (963 ms)
    Admin Endpoints
      GET /api/v1/system/config
        ✓ should return all configurations for admin (930 ms)
        ✓ should return 401 without authentication (878 ms)
        ✓ should return 403 for non-admin users (883 ms)
      PUT /api/v1/system/config/:key
        ✓ should update a configuration value (1211 ms)
        ✓ should validate value based on data type (1109 ms)
        ✓ should validate value against min/max constraints (1101 ms)
        ✓ should not allow updating non-editable configs (1245 ms)
        ✓ should require system_config permission (1221 ms)
      POST /api/v1/system/config/initialize
        ✓ should initialize default configurations (1266 ms)
        ✓ should not overwrite existing configurations (1403 ms)
    Integration with Order Model
      ✓ should use SystemConfig WDF rate in new orders (1082 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:46.467Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LDdB8U7aWVMAj4hM-xGsRocrTH44OGio',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QRVW4iTU-M3avA1dn53fJvG_lXwlm_-aSruY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LDdB8U7aWVMAj4hM-xGsRocrTH44OGio

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -167sgj9lr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.822 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/google {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:46.480Z"}
[0mGET /api/v1/auth/google [36m302[0m 2.449 ms - 0[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:47.323Z"}
  console.log
    CSRF token generation: {
      sessionID: 'zVTm0zbaW3GOQRBQN1fFQml52n16SnuD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xAA3X1TQ-0Gv_yXklpdhiRLzZDfQpGlPTma8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: zVTm0zbaW3GOQRBQN1fFQml52n16SnuD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0xREzFhVlQ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.506 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:47.890Z"}
  console.log
    CSRF token generation: {
      sessionID: 'p1snJZWY5imSog2kbTdSrrZonu4dk_eJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3JrlOXTB-vygEaS5VfarG8eeO4n3jA5_xPyw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: p1snJZWY5imSog2kbTdSrrZonu4dk_eJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KOt0V1BWHT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.041 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:48.421Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nfDqUX88TP5QcVNjfp5q79ZKOOfoFu6t',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Z96GM2Vd-_fkOX5KhXlURjKHgpMtiuJtnTIk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nfDqUX88TP5QcVNjfp5q79ZKOOfoFu6t

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: VSGLTqKwWo...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.797 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/google {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:48.430Z"}
[0mGET /api/v1/auth/google [33m404[0m 1.506 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:48.932Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fiyWiuRvRyjbgwM4gaYcel7uLUHpm_xY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: K0VimZPI-O21EBvq8hbmf5szSybZnDcsD9Ug

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fiyWiuRvRyjbgwM4gaYcel7uLUHpm_xY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Zc503PLCaW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.733 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:48.943Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-034aaf85-8505-4c32-8a29-88ac2fb855f2","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:31:49.159Z","userId":"68477cf54f9c7f8b58902941","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 216.075 ms - 785[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:49.702Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c3frhvp-2gSDAzHdsAMj87b2wzXWiqpJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FsFsioxH-FuoFaRFoh3ZUKZyYHWB2C-mX_ck

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: c3frhvp-2gSDAzHdsAMj87b2wzXWiqpJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: MEZO0x0cmo...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.455 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:49.713Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.797 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:50.220Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CVpBox7acDAnRWq0ajyfaPUtyVgEoI80',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: tLXOAy74-OZq2c1VqTq-qbKNmpmRJj4IHTaE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CVpBox7acDAnRWq0ajyfaPUtyVgEoI80

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: NLWM-7veJ0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.747 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:50.229Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.845 ms - 511[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:50.734Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dyxi89PWYKWZAlYwrL1iNeDpBvU648It',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5V1ilR7K-EPOnFN3D-1ku8ptIRg2QRfAv8qw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dyxi89PWYKWZAlYwrL1iNeDpBvU648It

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ENhamYozEJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.234 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:50.839Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.627 ms - 661[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:51.357Z"}
  console.log
    CSRF token generation: {
      sessionID: '2wnVU6BsCM9W_DSBXq9lB_nNGXHLXE-S',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: unT34sVx-AMYKLNiN6dJpDbP0CiZjBqGCNnI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2wnVU6BsCM9W_DSBXq9lB_nNGXHLXE-S

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: bjKnmD1Q0L...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.322 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:51.367Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dnSjOunbgeHRrPKLXtbwv29LkutVexFH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: T0ZtoSA6-BNpSm02BSvhZiArIZQJnbiehmX4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dnSjOunbgeHRrPKLXtbwv29LkutVexFH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qPLnPFuyyF...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.755 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:51.464Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: 'dnSjOunbgeHRrPKLXtbwv29LkutVexFH',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AdnSjOunbgeHRrPKLXtbwv29LkutVexFH.ZE460RPzayhDvV8s%2B0Txx3wS%2F1x%2BQhcOZiq%2BRjAf5VI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"facebook","socialAccountId":"facebook456"},"eventType":"ACCOUNT_UPDATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/link","timestamp":"2025-06-10T00:31:51.553Z","userId":"68477cf74f9c7f8b58902994","userType":"affiliate"}
[0mPOST /api/v1/auth/social/link [32m200[0m 88.596 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.081Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nKc3GpSj4CLJfWa6egTdE5ROIUHYMczC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Wu8yY5Xs-FjNOIlk3CeMbWy73_O7Cb4wACr8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nKc3GpSj4CLJfWa6egTdE5ROIUHYMczC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dWH4GlCYN7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.382 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.089Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xTYoVkvsJ4dVGtLMLqMQSm2kAIM0cmcA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SsiKwxFc-1PURosioBSxLisxdXXhPf6Z8FHI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xTYoVkvsJ4dVGtLMLqMQSm2kAIM0cmcA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5UY7-2sk6t...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.364 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.237Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: 'xTYoVkvsJ4dVGtLMLqMQSm2kAIM0cmcA',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AxTYoVkvsJ4dVGtLMLqMQSm2kAIM0cmcA.3JUen0F2KToHmnJDy9TVwFGrEoIFtHxitYBbVUHUUzY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/social/link [33m400[0m 36.147 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.778Z"}
  console.log
    CSRF token generation: {
      sessionID: '5TChnvEe12gLqeYkQ1x5sw4LiZ6-a68-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VpqC2GEs-nJC2DoJU7hafTTN_xm2G7nDhU3U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5TChnvEe12gLqeYkQ1x5sw4LiZ6-a68-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eqC7c124uU...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.998 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.787Z"}
  console.log
    CSRF token generation: {
      sessionID: 'RD-ukONJXgWyuQxbFgWb5WMFdOE0xtSS',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uqsanqy5-mZIGMLofMq8hN_u7l7L9QkaC7F4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: RD-ukONJXgWyuQxbFgWb5WMFdOE0xtSS

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: EjDxajbzhh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.600 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:52.883Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: 'RD-ukONJXgWyuQxbFgWb5WMFdOE0xtSS',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ARD-ukONJXgWyuQxbFgWb5WMFdOE0xtSS.8lRQ1s5vkMFWoDYOxRgnIWGF2mjt2myEwoNugNVmDbg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:31:52.978Z","userType":"affiliate","username":"socialuser"}
info: undefined {"affiliateId":"AFF-f55101b8-8d66-484e-9e13-890f01974562","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"linkedin","timestamp":"2025-06-10T00:31:52.979Z","userId":"68477cf84f9c7f8b589029c5","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 95.887 ms - 622[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:53.525Z"}
  console.log
    CSRF token generation: {
      sessionID: 'dnAGXQ8Y4yQ4W_KXRqWTsw-BqpmKZgq6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SxtcfP57-Ac7IWdP6vF5bF7WoLlRSVNdHkSs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: dnAGXQ8Y4yQ4W_KXRqWTsw-BqpmKZgq6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: pNOeSxXYJ3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.824 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:53.534Z"}
  console.log
    CSRF token generation: {
      sessionID: '9OA8X22w_cvXzr-wvDuG-m5AsLitIMlg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5yvfsPF5-IEaxDbPgaugU_U-CQGynN1ZW5Q0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9OA8X22w_cvXzr-wvDuG-m5AsLitIMlg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: awmu1Sm1gp...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.142 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:53.624Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: '9OA8X22w_cvXzr-wvDuG-m5AsLitIMlg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9OA8X22w_cvXzr-wvDuG-m5AsLitIMlg.z9qt6pxfsL6Rulmb3SzqJAitdpj7QpmpRSfio0xyhow',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:31:53.754Z","userType":"affiliate","username":"socialuser"}
info: undefined {"affiliateId":"AFF-0e14013f-0e91-4b5e-93a0-c7558c438401","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"linkedin","timestamp":"2025-06-10T00:31:53.755Z","userId":"68477cf94f9c7f8b589029df","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 130.471 ms - 622[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:54.285Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eN04ISPqyDQLntEKfxlpU6iziKe4bqzk',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: d2veuskA-a0moAoS4ol54DnfBjcBwi2Lxmxo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: eN04ISPqyDQLntEKfxlpU6iziKe4bqzk

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Ck4QwZCmtY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.120 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:54.296Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.909 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:54.809Z"}
  console.log
    CSRF token generation: {
      sessionID: 'eS4dNOA016T87HvgoKfdaSZZMpXvmfWE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ds3tm1vJ-cNXCL2AqmQh7pwaS5wPdnIrYyto

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: eS4dNOA016T87HvgoKfdaSZZMpXvmfWE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CkXXrXHiTN...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.016 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:54.819Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.828 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:55.344Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JBDvL_HlX1gYTPT_nYghPSDg_elhABdb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ruIkOoWe-lIHGB7rwArpnGr9JJ0aavVgp7KE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JBDvL_HlX1gYTPT_nYghPSDg_elhABdb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: PulhDACSOs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.414 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:55.353Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.463 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:55.848Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ARthY3qnrZhwa0A1mCTB1Am0X7MU6t6A',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wDC60R23-xLnySYOkSAvzT5CwO0F8CBwPMJA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ARthY3qnrZhwa0A1mCTB1Am0X7MU6t6A

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mlDlU1VOGt...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.669 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:55.860Z"}
  console.error
    Social registration error: Error: Database connection failed
        at Object.<anonymous> (/var/www/wavemax/wavemax-affiliate-program/tests/integration/socialAuth.test.js:583:62)
        at Promise.then.completed (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:121:9)
        at run (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/var/www/wavemax/wavemax-affiliate-program/node_modules/jest-runner/build/runTest.js:444:34)

      1300 |     
      1301 |   } catch (error) {
    > 1302 |     console.error('Social registration error:', error);
           |             ^
      1303 |     res.status(500).json({
      1304 |       success: false,
      1305 |       message: 'Registration failed'

      at error (server/controllers/authController.js:1302:13)

[0mPOST /api/v1/auth/social/register [31m500[0m 84.142 ms - 49[0m
PASS tests/integration/socialAuth.test.js (11.141 s)
  Social Authentication Integration Tests
    OAuth Initiation Endpoints
      ✓ should redirect to Google OAuth when Google auth is configured (1045 ms)
      ✓ should redirect to Facebook OAuth when Facebook auth is configured (566 ms)
      ✓ should redirect to LinkedIn OAuth when LinkedIn auth is configured (529 ms)
      ✓ should return 404 for unconfigured OAuth providers (512 ms)
    Social Registration Flow
      ✓ should complete social registration with all required fields (770 ms)
      ✓ should reject social registration with invalid social token (515 ms)
      ✓ should reject social registration with missing required fields (516 ms)
      ✓ should prevent duplicate social registrations (622 ms)
    Account Linking Flow
      ✓ should link social account to existing affiliate by email (724 ms)
      ✓ should reject linking if social account already exists (698 ms)
    Social Login Flow
      ✓ should successfully login with existing social account (747 ms)
      ✓ should update social account tokens on login (760 ms)
    Security and Edge Cases
      ✓ should handle malformed social tokens gracefully (522 ms)
      ✓ should handle expired social tokens (538 ms)
      ✓ should sanitize social profile data (503 ms)
      ✓ should handle database errors during social registration (595 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:57.329Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wV4BPRmhY42HDBLr9CTNWOj2gnxi89LL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bDLYGK6H--8Cb2UXc9Juc76k3JPDDbqkZxto

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wV4BPRmhY42HDBLr9CTNWOj2gnxi89LL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cHaKFHvBVV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.529 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:57.984Z"}
[0mPOST /api/v1/customers/register [32m201[0m 221.887 ms - 297[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:58.831Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lUbaLxVhBFRaIv4tSgt1hPII1KFKcxkg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NjUgQl02-iMtUpWT7qh9s-rPhdpikHL1mN6k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lUbaLxVhBFRaIv4tSgt1hPII1KFKcxkg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: hUIU5d7z7a...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 13.540 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:59.109Z"}
[0mPOST /api/v1/customers/register [33m400[0m 29.365 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:59.647Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NNcXMwy3Bush-ixV_fl3peAhuYtTKa-h',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qcQhBQ8b-_7ttmrlHDK2GS2SjYEcpVyeEHxQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NNcXMwy3Bush-ixV_fl3peAhuYtTKa-h

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UHdfwtxiAl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.964 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:31:59.916Z"}
[0mPOST /api/v1/customers/register [33m400[0m 56.455 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:00.496Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Yq9B7doBy-gb7NmhqaqsoWP4rSaqj-f6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3BWAh1L5-9CQmkhSfPHWjb3O7ozS5tcNnrgI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Yq9B7doBy-gb7NmhqaqsoWP4rSaqj-f6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UHCiDeD6-g...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.498 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:00.775Z"}
[0mPOST /api/v1/customers/register [33m400[0m 56.074 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:01.314Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HUDgxK0sHuo1tW3STaLatfwK_ToxDfCV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: oxxVptWN-CYVkduch9NhqFEnQoAmE3UvoVy8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HUDgxK0sHuo1tW3STaLatfwK_ToxDfCV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -iEWEYdfvO...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.472 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:01.580Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 85.470 ms - 472[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:02.173Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HwK8exD9dml0xXT557LGAgQaOSfd333c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: dczeFgcg-_2cADRVeOF1X0cFfJkUC1h2-dSI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HwK8exD9dml0xXT557LGAgQaOSfd333c

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: WaCWLnwJGJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.851 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:02.446Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 83.732 ms - 448[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:03.032Z"}
  console.log
    CSRF token generation: {
      sessionID: '5H9qkHXbIZi5w76j8Lp0zjSHto3UHjlH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: t1GqTDEJ-fPRIkO1W493TmmK8PB-aUFqj_MM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5H9qkHXbIZi5w76j8Lp0zjSHto3UHjlH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8cw2hn39I3...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.712 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:03.325Z"}
[0mGET /api/v1/customers/CUST123/profile [33m403[0m 61.382 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:03.890Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Q9mUrHBKAsq9bytvfEMDiozXQ3DI-7HF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: XcEyvPBD-jUlQ9k4zhtDBppjgPPzD1YPI50g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Q9mUrHBKAsq9bytvfEMDiozXQ3DI-7HF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UeSIAzE2n7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.991 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:04.159Z"}
[0mGET /api/v1/customers/CUST123/profile [32m200[0m 58.190 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:04.719Z"}
  console.log
    CSRF token generation: {
      sessionID: '-0CMQ5ndcB4eRVTy1zktMZ2ZmezcI00z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ov3K1TFJ-FGc5MkRTSr--BxAXh6xhT1UwgYQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -0CMQ5ndcB4eRVTy1zktMZ2ZmezcI00z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Qy7TXY7JVG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.335 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:05.002Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 93.629 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:05.620Z"}
  console.log
    CSRF token generation: {
      sessionID: '57KlkHoi1cfpOOqqaDvY9PzoDPbP-bDy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: x3BgL8Fq-YvuOYyKJPnSkSEeJtZIFps5u5G8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 57KlkHoi1cfpOOqqaDvY9PzoDPbP-bDy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: MHHSVLUx26...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.709 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/profile {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:05.899Z"}
[0mPUT /api/v1/customers/CUST123/profile [32m200[0m 84.293 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:06.551Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sFcTI483o2nAixnL64eFwVfuYbeNf6Xu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AQWMhCcm-XLl1QG2gAQA5y1wJSbnjl7gZmdo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sFcTI483o2nAixnL64eFwVfuYbeNf6Xu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: snM9zqJCDS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.105 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?page=1&limit=10 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:06.851Z"}
[0mGET /api/v1/customers/CUST123/orders?page=1&limit=10 [32m200[0m 118.229 ms - 610[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:07.469Z"}
  console.log
    CSRF token generation: {
      sessionID: 'RDFwfvrINOE4QS3gjozrUdp_u8E9XXF0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2OHvzARY-WC7oc5wku8t_N2nP7wYOBimnabI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: RDFwfvrINOE4QS3gjozrUdp_u8E9XXF0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0w8ThZobEe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.435 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/orders?status=delivered {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:07.771Z"}
[0mGET /api/v1/customers/CUST123/orders?status=delivered [32m200[0m 112.647 ms - 370[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:08.381Z"}
  console.log
    CSRF token generation: {
      sessionID: 'H59aJi7HoQyt-sw0VwF5oPVowFP1dkOm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ODMIWNXj-Ay6FSxXmNsXSFtZkgrpCjvnWs60

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: H59aJi7HoQyt-sw0VwF5oPVowFP1dkOm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9UTN4QWZJQ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.040 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:08.635Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'H59aJi7HoQyt-sw0VwF5oPVowFP1dkOm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AH59aJi7HoQyt-sw0VwF5oPVowFP1dkOm.9Bya2%2B95Jvi686rZk%2FpUL6ZCIArb7%2FdVj6BJrWK%2Btis',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [32m200[0m 203.439 ms - 58[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:08.841Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:467:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:468:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:469:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:502:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 145.790 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:09.475Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cL3y6QJMsXiCUGLE9wSEwYv9f2-eK0qm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0R4fUHAk-6NxoQdE1oBmiuJT7-A4vShf-OUE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: cL3y6QJMsXiCUGLE9wSEwYv9f2-eK0qm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: GMkonDzGcG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.662 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:09.744Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'cL3y6QJMsXiCUGLE9wSEwYv9f2-eK0qm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AcL3y6QJMsXiCUGLE9wSEwYv9f2-eK0qm.z1%2FLAyGLuhA2ZEYdTZFd2HHrKrWF8o2rsrt8J74%2B7lU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [33m401[0m 128.050 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:10.375Z"}
  console.log
    CSRF token generation: {
      sessionID: 'X5MpR0-z2L8Scf7R4gT-YKEpsUH_DAlK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: v0orqpQU-AH1i4JF8Y8C8NNQlRatMjLXXe6U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: X5MpR0-z2L8Scf7R4gT-YKEpsUH_DAlK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3adGEKPYHX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.706 ms - 67[0m
[34mdebug[39m: PUT /api/v1/customers/CUST123/password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:10.646Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/password {
      sessionID: 'X5MpR0-z2L8Scf7R4gT-YKEpsUH_DAlK',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AX5MpR0-z2L8Scf7R4gT-YKEpsUH_DAlK.mO0I4sYn8SEvgTOdUw%2Bs1bt0IECj9YG4lFqAK%2FUlYXo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/customers/CUST123/password [33m400[0m 121.965 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:11.276Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aK-ozcDAEfdfAtOVVsj0qxb6ntInuaF5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ap7BThri-MmgCNYDIT9NNHzoQ3Lf4c_DoSSE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: aK-ozcDAEfdfAtOVVsj0qxb6ntInuaF5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: y4xBOTC9AC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.571 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:11.591Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 164.507 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:12.256Z"}
  console.log
    CSRF token generation: {
      sessionID: '9H3ZGjiKVaXeDT1CxYJVOyYRXiGyd6le',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ArDEM9MD-DkAclDEZxv7rv1bJImfnlOcJxJE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9H3ZGjiKVaXeDT1CxYJVOyYRXiGyd6le

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aG3F_Y3sU8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.290 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:12.619Z"}
[0mGET /api/v1/customers/CUST123/dashboard?includeMonthlyStats=true [32m200[0m 141.156 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:13.504Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TtwASkq93qaKXthD8SGv9rBBwX4cv20H',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 06Kg9RTN-FC31VhoY6q9wtGNusukfy1nChI0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TtwASkq93qaKXthD8SGv9rBBwX4cv20H

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AHFiDvh074...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.429 ms - 67[0m
[34mdebug[39m: GET /api/v1/customers/CUST123/dashboard {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:13.817Z"}
[0mGET /api/v1/customers/CUST123/dashboard [32m200[0m 142.617 ms - 956[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:14.473Z"}
  console.log
    CSRF token generation: {
      sessionID: 'I05pH6P-YuiqRV0NJy2ZEERXtxbhuWvD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fkDGRRiE-bELXLrBJ_xFg1A3pb2amA349a-0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: I05pH6P-YuiqRV0NJy2ZEERXtxbhuWvD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: An1mSHnaJD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.489 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:14.830Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'I05pH6P-YuiqRV0NJy2ZEERXtxbhuWvD',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AI05pH6P-YuiqRV0NJy2ZEERXtxbhuWvD.Zhe3SY3fTnm6xk2BBfufujn0SRaJv5OiY2D0rWPSOCw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [32m200[0m 121.850 ms - 107[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:15.504Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XqUYjYExTbq4LVpmyfhCGR2uJpfH2yMe',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: co6DzNMB-l4TmrWCnA-K7xbNiPS871GM4ux8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XqUYjYExTbq4LVpmyfhCGR2uJpfH2yMe

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Na-Ba19OC1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.730 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:15.769Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'XqUYjYExTbq4LVpmyfhCGR2uJpfH2yMe',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AXqUYjYExTbq4LVpmyfhCGR2uJpfH2yMe.n%2FpVh4E8fUJtVxO8BUKQw6Jh%2FhmFyGJGYiMDz9nXfnY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 29.962 ms - 59[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:16.299Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Vh9IULCOcd-pHvCy9wkltpoVQ9Vdjep0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bAlr8M42-S2cbCIcejHzxiZV83s01QBawANQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Vh9IULCOcd-pHvCy9wkltpoVQ9Vdjep0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ORNUvjQ9A1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.755 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/customers/CUST123/delete-all-data {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:16.651Z"}
  console.log
    CSRF check for: /api/v1/customers/CUST123/delete-all-data {
      sessionID: 'Vh9IULCOcd-pHvCy9wkltpoVQ9Vdjep0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AVh9IULCOcd-pHvCy9wkltpoVQ9Vdjep0.Bi7vpX9TBNRsRu3VNOi4p3nlKm8rquz%2FHn67So7dlB0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/customers/CUST123/delete-all-data [33m403[0m 29.884 ms - 63[0m
PASS tests/integration/customer.test.js (20.763 s)
  Customer Integration Tests
    POST /api/v1/customers/register
      ✓ should register a new customer (1515 ms)
      ✓ should fail with invalid affiliate ID (816 ms)
      ✓ should fail with duplicate email (849 ms)
      ✓ should fail with duplicate username (818 ms)
    GET /api/v1/customers/:customerId/profile
      ✓ should return customer profile for authenticated customer (860 ms)
      ✓ should return customer profile for affiliate (858 ms)
      ✓ should fail for unauthorized customer (858 ms)
      ✓ should return limited data without authentication (827 ms)
    PUT /api/v1/customers/:customerId/profile
      ✓ should update customer profile (901 ms)
      ✓ should not update protected fields (931 ms)
    GET /api/v1/customers/:customerId/orders
      ✓ should return customer orders with pagination (917 ms)
      ✓ should filter orders by status (910 ms)
    PUT /api/v1/customers/:customerId/password
      ✓ should update customer password (1094 ms)
      ✓ should fail with incorrect current password (899 ms)
      ✓ should fail with weak new password (902 ms)
    GET /api/v1/customers/:customerId/dashboard
      ✓ should return customer dashboard statistics (980 ms)
      ✓ should return monthly statistics (1247 ms)
      ✓ should allow affiliate to view customer dashboard (969 ms)
    DELETE /api/v1/customers/:customerId/delete-all-data
      ✓ should delete all customer data in development environment (1030 ms)
      ✓ should reject deletion in production environment (795 ms)
      ✓ should reject unauthorized deletion (941 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:18.925Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FqjaDni1xEFNQhQOnokoln45aZ0amkQc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kefNE1hw-yQX8QrAbqbAn3GCzs5Awb381RqI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FqjaDni1xEFNQhQOnokoln45aZ0amkQc

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: bkt1NDLCFd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.481 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:19.052Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 195.186 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:19.402Z"}
[0mGET /api/v1/administrators [32m200[0m 115.502 ms - 865[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:20.193Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rSG3hqdcvDvIvuViMTDI_eGq37qxltN6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: JvRxcuck--oK5Sdi9HYyEvwclodWejgO77L0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rSG3hqdcvDvIvuViMTDI_eGq37qxltN6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4DbjhGIYTd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.147 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:20.294Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.739 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?active=true {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:20.553Z"}
[0mGET /api/v1/administrators?active=true [32m200[0m 111.972 ms - 376[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:21.281Z"}
  console.log
    CSRF token generation: {
      sessionID: '3h7OYt69OM865Mg5ekicd_879RkmFCND',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: oebDkNJb-oboC4W7ta2PZT-INDhYbvOpe0wo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3h7OYt69OM865Mg5ekicd_879RkmFCND

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XBYi2rxzOc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.986 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:21.414Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.877 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:22.891Z"}
[0mGET /api/v1/administrators?page=2&limit=5 [32m200[0m 112.207 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:23.603Z"}
  console.log
    CSRF token generation: {
      sessionID: '7PnedxcD16w3p9KRqmsvHz1z_s00Axdy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mjc72F4J-7mlYiUMErsp4FBkcenbIYq7zeOI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7PnedxcD16w3p9KRqmsvHz1z_s00Axdy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LrzfAJJgBp...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.811 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:23.702Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 162.575 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:23.868Z"}
[0mGET /api/v1/administrators [33m401[0m 1.406 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:24.444Z"}
  console.log
    CSRF token generation: {
      sessionID: '1lTNaEne7tiPZvBSJ4ms2MHeY4MbuRjO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: oCnXwfCf-qlVjhzQc2pZVG4V5HHSFtr0MGWA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 1lTNaEne7tiPZvBSJ4ms2MHeY4MbuRjO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: to6G66kUaP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.406 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:24.553Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.096 ms - 615[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:24.782Z"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.240 ms - 555[0m
[34mdebug[39m: GET /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:24.934Z"}
[0mGET /api/v1/administrators [33m403[0m 28.028 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:25.580Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Lfx8juPfUnZS3u1IatOsR6LwvhBb0FDH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZYhSm5ii-KT0lqnw5rUYmazdRe4TGdV9-h4k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Lfx8juPfUnZS3u1IatOsR6LwvhBb0FDH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: A4udY0wZ_A...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.889 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:25.693Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.326 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/68477d19e2c2d5d019c00c5d {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:25.926Z"}
[0mGET /api/v1/administrators/68477d19e2c2d5d019c00c5d [32m200[0m 81.566 ms - 283[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:26.602Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nR5K0uer36QSBIcL1rAVmyBm1BkPSg1K',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7yLnPFGm-79TAHv-lOfyiDCwjjnH5daUUhgI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nR5K0uer36QSBIcL1rAVmyBm1BkPSg1K

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JbpzTXch6k...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.158 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:26.698Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.921 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/68477d1ae2c2d5d019c00c7e {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:26.843Z"}
[0mGET /api/v1/administrators/68477d1ae2c2d5d019c00c7e [33m404[0m 80.453 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:27.505Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ER-9n8I2UtvdIqnoxDxcnQZqqaRYXgSi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 17GOaxIR-en1NL9u0pwABba2X2gfrx37z0jo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ER-9n8I2UtvdIqnoxDxcnQZqqaRYXgSi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9m8b3EMKfl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.937 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:27.597Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.929 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/invalid-id {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:27.753Z"}
[0mGET /api/v1/administrators/invalid-id [33m400[0m 55.039 ms - 54[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:28.400Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Fm1iB_G4IhQaqzaGC5D0CVOmnvTysQq4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Sf7wdTos-6TIYrOTpcWTaw1XUfvaz9DyYkq0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Fm1iB_G4IhQaqzaGC5D0CVOmnvTysQq4

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8n4g6bjuXT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.537 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:28.496Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.745 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:28.643Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'Fm1iB_G4IhQaqzaGC5D0CVOmnvTysQq4',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AFm1iB_G4IhQaqzaGC5D0CVOmnvTysQq4.KB%2Fvxvema6lUHfpKWRsJyIRYbzXTKPeFjJ4ZQblH9NI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [32m201[0m 201.188 ms - 329[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:28.848Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.522 ms - 677[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:29.601Z"}
  console.log
    CSRF token generation: {
      sessionID: 'PTQRMt4T7EZLGi2Dle1BTKnlXc7NC4Lv',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: DLxU2N0Z-MrRA1rbG419fDrmH7bb0MceybdI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: PTQRMt4T7EZLGi2Dle1BTKnlXc7NC4Lv

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: T5pI7ogX_b...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.444 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:29.692Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.316 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:29.841Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'PTQRMt4T7EZLGi2Dle1BTKnlXc7NC4Lv',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3APTQRMt4T7EZLGi2Dle1BTKnlXc7NC4Lv.ya1q0nWpnU1VGOoxgGVyME2BC3dKUo%2Fte9yaEhjAJNE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 56.032 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:30.483Z"}
  console.log
    CSRF token generation: {
      sessionID: 'scq-4dQ7BQQW8RKtavCpOckEI7wapvll',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: tsFEhHoI-u2BGdy3iz5JOoKhiSfml5rjaMdM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: scq-4dQ7BQQW8RKtavCpOckEI7wapvll

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zQChEGWGMc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.163 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:30.572Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.780 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:30.719Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'scq-4dQ7BQQW8RKtavCpOckEI7wapvll',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ascq-4dQ7BQQW8RKtavCpOckEI7wapvll.C0U7qzDc6TmoiTdvSF7Zqs2wg9VtuB47F1755pzwr4M',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 56.452 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:31.358Z"}
  console.log
    CSRF token generation: {
      sessionID: 'g_gknXurZoLQrLRUdu2GEST-gFs7BUZh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 4yB08hNP-axLNThVAXHIkOEOX8Xat-E-W8hk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: g_gknXurZoLQrLRUdu2GEST-gFs7BUZh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UhhjxjNJOg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.102 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:31.451Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.223 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:31.602Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'g_gknXurZoLQrLRUdu2GEST-gFs7BUZh',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ag_gknXurZoLQrLRUdu2GEST-gFs7BUZh.uIa%2BSsHDgAK5169evEjjPwkPy0lqxBereoXHROytsuI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 57.641 ms - 204[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:32.237Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CKXZ-60wq38OZ2v9-opgvXQvr-Jclumw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: oGQmdZnL-YC1tVu15p05z8VY-626GXEzxlKI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CKXZ-60wq38OZ2v9-opgvXQvr-Jclumw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 44WZjn5BGs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.519 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:32.331Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.374 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:32.477Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'CKXZ-60wq38OZ2v9-opgvXQvr-Jclumw',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ACKXZ-60wq38OZ2v9-opgvXQvr-Jclumw.lJjaE2daBF4erQl4oZ6%2Bc%2BnMAiJxiupOKUn6%2Bmcva4M',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m409[0m 90.120 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:33.157Z"}
  console.log
    CSRF token generation: {
      sessionID: '_3EawQtI3JYczE2jmc77OccZm0wffOXf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3DXV02is-MavIx91546huFl1HIPKrz1v43gY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _3EawQtI3JYczE2jmc77OccZm0wffOXf

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: yFi-KzU7zG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.743 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:33.256Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.690 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:33.485Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Nd2y1kF4niTuAIfh6qwzysI-oo-suVJE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5wyhoH9E-epFFii7H2HLgDc6ruG1iEmS7AoM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Nd2y1kF4niTuAIfh6qwzysI-oo-suVJE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Z60uvby4LJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.534 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:33.498Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.355 ms - 649[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:33.654Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'Nd2y1kF4niTuAIfh6qwzysI-oo-suVJE',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ANd2y1kF4niTuAIfh6qwzysI-oo-suVJE.kNKvb8teCHbxMMqq44Q5trV7kcWqYMxO2Yx8c8zX6ec',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m403[0m 59.881 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:34.298Z"}
  console.log
    CSRF token generation: {
      sessionID: 'BJuF8fqfdQ8LbPDaMmFz91hYXW2uZ5Hp',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: n7zIQpbe-3W8k4ySk-oKBoW5WPkucno--d90

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: BJuF8fqfdQ8LbPDaMmFz91hYXW2uZ5Hp

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: hS9iKttz4y...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.974 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:34.391Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.664 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d22e2c2d5d019c00d7f {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:34.625Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d22e2c2d5d019c00d7f {
      sessionID: 'BJuF8fqfdQ8LbPDaMmFz91hYXW2uZ5Hp',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ABJuF8fqfdQ8LbPDaMmFz91hYXW2uZ5Hp.lRG6tx3acxqdF1SK%2FX1P69H%2FWnxS7zH9aeA5OrnIXAU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d22e2c2d5d019c00d7f [32m200[0m 93.615 ms - 337[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:35.299Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c_2EiSYiIEc9AuFw0r6ZoGtTkOhrvXNV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2MNEuLII-Kmvma-IGB2SgdobezYvbnHY69KU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: c_2EiSYiIEc9AuFw0r6ZoGtTkOhrvXNV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: awwH6vZxOX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.292 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:35.401Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.368 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d23e2c2d5d019c00da0 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:35.643Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d23e2c2d5d019c00da0 {
      sessionID: 'c_2EiSYiIEc9AuFw0r6ZoGtTkOhrvXNV',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac_2EiSYiIEc9AuFw0r6ZoGtTkOhrvXNV.FM5W6plz25Yem1yGMDnEYAU4kUEpTKKo%2BqUYWKhJbkM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d23e2c2d5d019c00da0 [32m200[0m 124.101 ms - 318[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:36.355Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Ueto_tmpIfoBQckKgvX8V3baha4cVKD2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Onpv228m-wcRVyae6iYPks5d3IurrGrnm42g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Ueto_tmpIfoBQckKgvX8V3baha4cVKD2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eGVOOnFXKJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.389 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:36.446Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.364 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d24e2c2d5d019c00dc2 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:36.672Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d24e2c2d5d019c00dc2 {
      sessionID: 'Ueto_tmpIfoBQckKgvX8V3baha4cVKD2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AUeto_tmpIfoBQckKgvX8V3baha4cVKD2.zMfN9pPg0Xl201Mf4heRyAP81jVtEi%2BhFNUl8%2FTJTJk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d24e2c2d5d019c00dc2 [32m200[0m 189.705 ms - 316[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:36.865Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.130 ms - 645[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:37.612Z"}
  console.log
    CSRF token generation: {
      sessionID: 'M9wlx9Fvg9Y_dNSSULf7eY53g5IFP_un',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Uk1Dsaq7-Z-s-nj2Cl53Z4cPbkyvcNILCBYc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: M9wlx9Fvg9Y_dNSSULf7eY53g5IFP_un

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0d0n98Oesa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.029 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:37.706Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 139.551 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d25e2c2d5d019c00de9 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:37.931Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d25e2c2d5d019c00de9 {
      sessionID: 'M9wlx9Fvg9Y_dNSSULf7eY53g5IFP_un',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AM9wlx9Fvg9Y_dNSSULf7eY53g5IFP_un.TbMwZe5pRf8RrsPgiuIhqeYjzRLDjoqLyADJZ0cDw1o',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d25e2c2d5d019c00de9 [32m200[0m 93.219 ms - 317[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:38.027Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 27.553 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:38.633Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ek0qWecfkwiVxq6bWWwuRqXw6U-LAwEd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: vOVSesFn-gyHxwRm9eLkHZVp7fTv1vQPlG6s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ek0qWecfkwiVxq6bWWwuRqXw6U-LAwEd

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KBqqCzkKPE...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.172 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:38.743Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.468 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d26e2c2d5d019c00e0b {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:38.968Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d26e2c2d5d019c00e0b {
      sessionID: 'ek0qWecfkwiVxq6bWWwuRqXw6U-LAwEd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aek0qWecfkwiVxq6bWWwuRqXw6U-LAwEd.1AnmfASwdPQ2CfP9oQ4lN%2BvMp3zxyXweH2gAmGuLWHs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d26e2c2d5d019c00e0b [32m200[0m 82.300 ms - 316[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:39.655Z"}
  console.log
    CSRF token generation: {
      sessionID: 'u-ldNWtYoyJ86lvRdNoTd2c7LCibBsHU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0OURdKiW-H5B-1FRsWgXg-czx45q3ZStaOtk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: u-ldNWtYoyJ86lvRdNoTd2c7LCibBsHU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qU_RpcXKc4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.357 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:39.751Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.028 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d27e2c2d5d019c00e2c {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:39.981Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d27e2c2d5d019c00e2c {
      sessionID: 'u-ldNWtYoyJ86lvRdNoTd2c7LCibBsHU',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Au-ldNWtYoyJ86lvRdNoTd2c7LCibBsHU.xx1Qd2vCze3hgjFnXhDLPeJ%2Fu0iO0HWA2lT3DQY801o',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d27e2c2d5d019c00e2c [33m409[0m 82.438 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:40.647Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mNKTTFIZ68bPNxfEbdPMyJD9b4Vx7VbX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 6HJ8Pm32-gBOjQwHLNtOHBvpxavOlvWVE7zc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mNKTTFIZ68bPNxfEbdPMyJD9b4Vx7VbX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gGJ1FChgU-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.015 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:40.738Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.230 ms - 615[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d28e2c2d5d019c00e47 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:40.969Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d28e2c2d5d019c00e47 {
      sessionID: 'mNKTTFIZ68bPNxfEbdPMyJD9b4Vx7VbX',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AmNKTTFIZ68bPNxfEbdPMyJD9b4Vx7VbX.1YpxoukWe7Bvx7B67bsKlZEg4Y%2B5t4jLHkXy3aLmxe8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d28e2c2d5d019c00e47 [33m400[0m 59.181 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:41.621Z"}
  console.log
    CSRF token generation: {
      sessionID: 'RXt9mxVPjEIL-J-yTS-qSH6IateZLpa4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WSnRAh1u-OmVATEypl56rgtyb3FXSQIHIl9s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: RXt9mxVPjEIL-J-yTS-qSH6IateZLpa4

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ODNcL1Tsxe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.378 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:41.705Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 144.036 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:42.100Z"}
  console.log
    CSRF token generation: {
      sessionID: 'IHVrFmc7jwF90oLZOlkeOceyVFn7CF2-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: e4fNfzcN-RqBtQtGCy6BwA3S-k4wRIM1pavM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: IHVrFmc7jwF90oLZOlkeOceyVFn7CF2-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FjcQ7C2BWd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.728 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:42.109Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.890 ms - 650[0m
[34mdebug[39m: PATCH /api/v1/administrators/68477d29e2c2d5d019c00e6d {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:42.259Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d29e2c2d5d019c00e6d {
      sessionID: 'IHVrFmc7jwF90oLZOlkeOceyVFn7CF2-',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AIHVrFmc7jwF90oLZOlkeOceyVFn7CF2-.9gAG4stBVuRCtcjW9lZ9oFy5cOGk2FSbdWgaNuW8ykE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/administrators/68477d29e2c2d5d019c00e6d [33m403[0m 56.210 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:42.934Z"}
  console.log
    CSRF token generation: {
      sessionID: 'fAc9zwa8EckSGL519jtMJb_Uxth461ra',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Nmu3DPhc-2xsduZVgJ0401daXWBXU20zXajI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: fAc9zwa8EckSGL519jtMJb_Uxth461ra

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 5DOCMKQRjz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.736 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:43.027Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 140.865 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/68477d2be2c2d5d019c00e93 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:43.257Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d2be2c2d5d019c00e93 {
      sessionID: 'fAc9zwa8EckSGL519jtMJb_Uxth461ra',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AfAc9zwa8EckSGL519jtMJb_Uxth461ra.sUkLibAeHvifaAWHvv0bfWvN%2Buv51pMy%2FPihO%2Fl%2FG1I',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/68477d2be2c2d5d019c00e93 [32m200[0m 120.250 ms - 63[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:43.987Z"}
  console.log
    CSRF token generation: {
      sessionID: 'x-6p5pf8IqXgxln5L0yR8Lv7V2avtCMz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0Pg6DQcw-gwc50iEt0Uc18PCbGqEdkY1KD8M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: x-6p5pf8IqXgxln5L0yR8Lv7V2avtCMz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YuFMILITz9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.249 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:44.074Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.989 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/68477d2be2c2d5d019c00eb0 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:44.305Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d2be2c2d5d019c00eb0 {
      sessionID: 'x-6p5pf8IqXgxln5L0yR8Lv7V2avtCMz',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ax-6p5pf8IqXgxln5L0yR8Lv7V2avtCMz.iDnW40h%2FK9s%2FuM2%2FttuNIfWZIc%2FmJs1QMmaSnEJdBmM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/68477d2be2c2d5d019c00eb0 [33m400[0m 56.244 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:44.950Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ta27ZpySk5KJDKmVetEoLsCQTtpUDFe5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lwyv2JlU-cT-yel21lpqwmOrerda4vmvvTTI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ta27ZpySk5KJDKmVetEoLsCQTtpUDFe5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aAcuse73v1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.783 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:45.042Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.299 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/68477d2ce2c2d5d019c00ed0 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:45.313Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d2ce2c2d5d019c00ed0 {
      sessionID: 'ta27ZpySk5KJDKmVetEoLsCQTtpUDFe5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ata27ZpySk5KJDKmVetEoLsCQTtpUDFe5.UVD1UwxOBpUL9%2BT7VAfvblcJcRoa9pOH2rrffzkS1ME',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/68477d2ce2c2d5d019c00ed0 [33m400[0m 56.185 ms - 60[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:45.956Z"}
  console.log
    CSRF token generation: {
      sessionID: 'JDmdSwtKsXN_EP7ctaqoiOA7fEBUiqKi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lbXN0twg-4i2zQhrnqhweiiSglTzERpC-KF0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: JDmdSwtKsXN_EP7ctaqoiOA7fEBUiqKi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: k2J-klq5mA...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.951 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:46.065Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 168.210 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:46.400Z"}
  console.log
    CSRF token generation: {
      sessionID: '9s6zosa4dDLEQvluSRNnlmsFruJ6mcBh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UpH7Cauj-POPgtlNJqcEJm9vqp5tvCSENZVs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9s6zosa4dDLEQvluSRNnlmsFruJ6mcBh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: c31d0K-Ryj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.380 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:46.408Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.754 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/administrators/68477d2ee2c2d5d019c00ef7 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:46.552Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d2ee2c2d5d019c00ef7 {
      sessionID: '9s6zosa4dDLEQvluSRNnlmsFruJ6mcBh',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9s6zosa4dDLEQvluSRNnlmsFruJ6mcBh.x%2FXwSidLd2xQGkUPG6jYgHs4gndR%2Bip88AG%2BZqeS1Qg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/68477d2ee2c2d5d019c00ef7 [33m403[0m 55.878 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:47.205Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SWyEWlnNy8bvxPmcY_bJBL6s4C5zKW_w',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: B9AJkFNi-qcDVg9A-kleYfoXYHRsyWjawrKY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SWyEWlnNy8bvxPmcY_bJBL6s4C5zKW_w

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9fWiofAhJ_...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.463 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:47.299Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.153 ms - 615[0m
[34mdebug[39m: DELETE /api/v1/administrators/68477d2fe2c2d5d019c00f1f {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:47.545Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d2fe2c2d5d019c00f1f {
      sessionID: 'SWyEWlnNy8bvxPmcY_bJBL6s4C5zKW_w',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ASWyEWlnNy8bvxPmcY_bJBL6s4C5zKW_w.fWgspKVjLPLWScJ7L8p%2FI2jh7zUjbmPvAGohk%2BeXjP4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/administrators/68477d2fe2c2d5d019c00f1f [33m404[0m 106.358 ms - 53[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:48.240Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QMdW4gz1N-AyghrtpC0_rHQyaIphcnig',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wR7Tz6Io-q-lgYQoNcIAsKWp10F3jAhJV5DQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QMdW4gz1N-AyghrtpC0_rHQyaIphcnig

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BjPJLI0x2B...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.445 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:48.330Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.968 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/68477d30e2c2d5d019c00f40/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:48.567Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d30e2c2d5d019c00f40/reset-password {
      sessionID: 'QMdW4gz1N-AyghrtpC0_rHQyaIphcnig',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AQMdW4gz1N-AyghrtpC0_rHQyaIphcnig.ujufntzjlSlqLj9Q5pCm5cdLs481qoNU8T%2FnpNQsKc0',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/68477d30e2c2d5d019c00f40/reset-password [32m200[0m 174.468 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:48.746Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.355 ms - 644[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:48.900Z"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 110.401 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:49.598Z"}
  console.log
    CSRF token generation: {
      sessionID: '-Q3rOMEEIFUD5L5YJSujV_cjXYqdrn20',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uGZ7pplv-VPbAu0_Bc_076R7jnNL3S7HUPgg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -Q3rOMEEIFUD5L5YJSujV_cjXYqdrn20

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Wrg1JaovFn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.454 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:49.710Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.396 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/68477d31e2c2d5d019c00f68/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:50.000Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d31e2c2d5d019c00f68/reset-password {
      sessionID: '-Q3rOMEEIFUD5L5YJSujV_cjXYqdrn20',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A-Q3rOMEEIFUD5L5YJSujV_cjXYqdrn20.osb8PGMvn2nBukOFJg79IOSp198hCziwHpWLYeZqrbk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/68477d31e2c2d5d019c00f68/reset-password [32m200[0m 166.281 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:50.800Z"}
  console.log
    CSRF token generation: {
      sessionID: '0vPQubsdqPAQM5VayANSBO9R72bX692W',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PToqTDP8-KptSW9YFzphqANh0fMtsBzxQRas

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0vPQubsdqPAQM5VayANSBO9R72bX692W

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 8e-UdrlVtw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.765 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:50.919Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.467 ms - 615[0m
[34mdebug[39m: POST /api/v1/administrators/68477d33e2c2d5d019c00f8c/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:51.159Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d33e2c2d5d019c00f8c/reset-password {
      sessionID: '0vPQubsdqPAQM5VayANSBO9R72bX692W',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A0vPQubsdqPAQM5VayANSBO9R72bX692W.YOJXNUpBb0RO9F5D8PnkDrEYzxM2ZKPxnEAuPEjelQA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/68477d33e2c2d5d019c00f8c/reset-password [33m400[0m 56.443 ms - 313[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:51.811Z"}
  console.log
    CSRF token generation: {
      sessionID: '3ONiuAIDOc_yWxiLxrpDOY9YtwKmg-2Z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3qI2i9MS-eaPrCFi0RxXFQNKFQQ5kPn2YqwY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3ONiuAIDOc_yWxiLxrpDOY9YtwKmg-2Z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qpxxZhR6EB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.352 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:51.903Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.703 ms - 615[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:52.233Z"}
  console.log
    CSRF token generation: {
      sessionID: '5Ro7TDhzN5tlPbX3sX6oKZv3inlEVQaM',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: aeEyQ8ck-9J8SrsYwQls-sS9cK_o0c_setSs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5Ro7TDhzN5tlPbX3sX6oKZv3inlEVQaM

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aege3R38RJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.982 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:52.242Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.667 ms - 650[0m
[34mdebug[39m: POST /api/v1/administrators/68477d34e2c2d5d019c00fac/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:52.389Z"}
  console.log
    CSRF check for: /api/v1/administrators/68477d34e2c2d5d019c00fac/reset-password {
      sessionID: '5Ro7TDhzN5tlPbX3sX6oKZv3inlEVQaM',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A5Ro7TDhzN5tlPbX3sX6oKZv3inlEVQaM.ut46VRdRMoAgD6BU4denOubERC8hfcbIS%2BMeiOqqVhw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators/68477d34e2c2d5d019c00fac/reset-password [33m403[0m 94.442 ms - 86[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:53.088Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Q7Wvtn4fznk7sSlkXohV1T0Auws459fR',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Lz1PQRBT-cgP0r5qQ2Rq1s3-DoQ-GHcRBw8c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Q7Wvtn4fznk7sSlkXohV1T0Auws459fR

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: WkJdR5v86U...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.943 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:53.184Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.582 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:53.339Z"}
[0mGET /api/v1/administrators/permissions [32m200[0m 31.368 ms - 361[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:53.958Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lh9BjqxTFwqFKKOqWhVYxYESt_buFYAr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TpJINvd2-fjTPp2Zypnd1V4-tGh2gktMi1kM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lh9BjqxTFwqFKKOqWhVYxYESt_buFYAr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KzTYws96dH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.039 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:54.056Z"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.791 ms - 615[0m
[34mdebug[39m: GET /api/v1/administrators/permissions {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:32:54.205Z"}
[0mGET /api/v1/administrators/permissions [33m401[0m 1.371 ms - 47[0m
PASS tests/integration/administrator.test.js (37.367 s)
  Administrator Integration Tests
    GET /api/v1/administrators
      ✓ should get all administrators with admin token (1740 ms)
      ✓ should filter by active status (1068 ms)
      ✓ should support pagination (2341 ms)
      ✓ should require admin authentication (844 ms)
      ✓ should require administrator permissions (1112 ms)
    GET /api/v1/administrators/:id
      ✓ should get administrator by ID (1038 ms)
      ✓ should return 404 for non-existent administrator (911 ms)
      ✓ should handle invalid ObjectId (890 ms)
    POST /api/v1/administrators
      ✓ should create new administrator (1194 ms)
      ✓ should validate required fields (889 ms)
      ✓ should validate email format (880 ms)
      ✓ should validate password strength (881 ms)
      ✓ should prevent duplicate emails (917 ms)
      ✓ should require administrators.create permission (1139 ms)
    PATCH /api/v1/administrators/:id
      ✓ should update administrator details (1000 ms)
      ✓ should update email (1060 ms)
      ✓ should update password (1254 ms)
      ✓ should deactivate administrator (1023 ms)
      ✓ should not allow updating adminId (1020 ms)
      ✓ should validate email uniqueness on update (993 ms)
      ✓ should prevent self-deactivation (972 ms)
      ✓ should require administrators.update permission (1315 ms)
    DELETE /api/v1/administrators/:id
      ✓ should delete administrator (1051 ms)
      ✓ should prevent self-deletion (964 ms)
      ✓ should prevent deleting last administrator with all permissions (1006 ms)
      ✓ should require administrators.delete permission (1245 ms)
      ✓ should handle non-existent administrator (1038 ms)
    POST /api/v1/administrators/:id/reset-password
      ✓ should reset administrator password (1355 ms)
      ✓ should clear login attempts on password reset (1194 ms)
      ✓ should validate password strength (1011 ms)
      ✓ should require administrators.update permission (1287 ms)
    GET /api/v1/administrators/permissions
      ✓ should get available permissions list (865 ms)
      ✓ should require authentication (859 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.631Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lQbIXMH15wYDWrixMwMyI-IbZrdmQ3JV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LRp562jU-WpRqJJmmTc5CbzvEtzThyVfCdtQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lQbIXMH15wYDWrixMwMyI-IbZrdmQ3JV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7Gmc99X2xF...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.464 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.655Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 7.276 ms - 148[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.668Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.472 ms - 241[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: weak, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'weak',
          msg: 'Password must be at least 8 characters long',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.683Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 2.240 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.688Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.781 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.694Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.669 ms - 160[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.697Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.420 ms - 253[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: 12345678, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '12345678',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.702Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.740 ms - 191[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.705Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.507 ms - 284[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: Password1, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'Password1',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.710Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.703 ms - 163[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.714Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.647 ms - 256[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: password123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'password123',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.719Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.920 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.724Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.678 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: ALLUPPERCASE123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'ALLUPPERCASE123!',
          msg: 'Password must contain at least one lowercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.729Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.734 ms - 168[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.732Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.481 ms - 261[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: alllowercase123!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'alllowercase123!',
          msg: 'Password must contain at least one uppercase letter',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.737Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.653 ms - 152[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.741Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.546 ms - 245[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoNumbers!, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoNumbers!',
          msg: 'Password must contain at least one number',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.752Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.551 ms - 199[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:01.755Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.291 ms - 292[0m
  console.log
    Email validation test - Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: '',
          msg: 'Valid email is required',
          path: 'email',
          location: 'body'
        },
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:77:17)

  console.log
    Test password: NoSpecialChars123, Status: 400, Body: {
      success: false,
      errors: [
        {
          type: 'field',
          value: 'NoSpecialChars123',
          msg: 'Password must contain at least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)',
          path: 'password',
          location: 'body'
        }
      ]
    }

      at Object.log (tests/integration/passwordValidation.test.js:79:17)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.403Z"}
  console.log
    CSRF token generation: {
      sessionID: 'w8vXrIzqIfp6zenWj55uiTQGOAvooqrq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qEmHT3Bv-RyMbeziQSK27NpWCF7fo3KEyJHc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: w8vXrIzqIfp6zenWj55uiTQGOAvooqrq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: FRsvY5dZyr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.433 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.411Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 123.924 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.537Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 120.184 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.660Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 142.003 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.805Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 135.882 ms - 120[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:02.943Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 119.478 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:03.659Z"}
  console.log
    CSRF token generation: {
      sessionID: 'WVQkRW__fVYAOXqg1Y-dP404w7-J_IeN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8N9sj4sz-mJny1ljmEIiJQGyOwABUNUy4-hM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: WVQkRW__fVYAOXqg1Y-dP404w7-J_IeN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rXlzjupwPG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.289 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:03.673Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.508 ms - 166[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.267Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QDbmotlEl9-NBG4PUROQBaus4EIV9kha',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZIufw9Cs-hKoaDhmWmk_w7CBVANHVVsnI9NI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QDbmotlEl9-NBG4PUROQBaus4EIV9kha

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: U7Pu56DhLX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.781 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.275Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.626 ms - 167[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.864Z"}
  console.log
    CSRF token generation: {
      sessionID: 'MFejz3dwfhG5XksvXgifdnGI7CWqdGFw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZtrfRf4Q-BjRvBGQ1tC0fwovaMU5RCJTjpjQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: MFejz3dwfhG5XksvXgifdnGI7CWqdGFw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BxBdUDQ-w-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.398 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.872Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.596 ms - 180[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.876Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.279 ms - 181[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.879Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.439 ms - 182[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:04.882Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.322 ms - 182[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:05.472Z"}
  console.log
    CSRF token generation: {
      sessionID: 'zcqWVqcGBvy67A4ELRIVSbjw3bhdHcj7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: gZZABK3T-qCmamsWMeOngxSQpk_aEW88Bn5E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: zcqWVqcGBvy67A4ELRIVSbjw3bhdHcj7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TtAbRH3Y7E...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.186 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:05.632Z"}
[0mPOST /api/v1/customers/register [33m400[0m 1.886 ms - 151[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:06.245Z"}
  console.log
    CSRF token generation: {
      sessionID: 'H_mJ6oQVmB5x3FSIt4MkL056x_u3Sz52',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: nkvBAjNm-1pEqvmu88BF-NxHn_V7dY2ZZs-M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: H_mJ6oQVmB5x3FSIt4MkL056x_u3Sz52

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kbIu97P72W...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.699 ms - 67[0m
[34mdebug[39m: POST /api/v1/customers/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:06.395Z"}
[0mPOST /api/v1/customers/register [32m201[0m 165.550 ms - 345[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:07.168Z"}
  console.log
    CSRF token generation: {
      sessionID: '3Bd4xQoeiXk6wWBmcU6l6lvMajy9XzNd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1wvcWf0b-XUiWhkA729wGBcztZc0msa0VlnA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 3Bd4xQoeiXk6wWBmcU6l6lvMajy9XzNd

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0woseKdMfh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.961 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:07.267Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:07.418Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:07.418Z","userId":"68477d436e4419c4d02e2dc6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.757 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:07.421Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: '3Bd4xQoeiXk6wWBmcU6l6lvMajy9XzNd',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A3Bd4xQoeiXk6wWBmcU6l6lvMajy9XzNd.6dla863UgM1SsGAqj61ASkyaohEPY0mZbGl%2BdJLlY1c',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/administrators [33m400[0m 60.272 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:08.088Z"}
  console.log
    CSRF token generation: {
      sessionID: 'CsIc0juKEhFJYYgx99VsYVhBctqLpdu9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: J7ZHPldS-jOpQvBzKmqR2Zo9PgJoQw5b0kZE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: CsIc0juKEhFJYYgx99VsYVhBctqLpdu9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aymbvefqFh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.871 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:08.188Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:08.335Z","userType":"administrator","username":"setup@example.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:08.336Z","userId":"68477d446e4419c4d02e2de4","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.832 ms - 656[0m
[34mdebug[39m: POST /api/v1/administrators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:08.339Z"}
  console.log
    CSRF check for: /api/v1/administrators {
      sessionID: 'CsIc0juKEhFJYYgx99VsYVhBctqLpdu9',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ACsIc0juKEhFJYYgx99VsYVhBctqLpdu9.ONEny%2FqhnlMQlMBfl7brqO5BO4lnzVLiK2FjtMdXMBA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_ADMINISTRATOR","details":{"adminId":"ADM002","email":"newuser@example.com"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"68477d446e4419c4d02e2dee","targetType":"administrator","timestamp":"2025-06-10T00:33:08.546Z","userId":"68477d446e4419c4d02e2de4","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/administrators [32m201[0m 207.739 ms - 341[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:09.144Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YYUPPot7qpsfPjsyLk2HvWm1c2PUaCk8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: nU9wxcy0-0T-p_AU2jqrn4QBK-JDJjnDxKaw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YYUPPot7qpsfPjsyLk2HvWm1c2PUaCk8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 23ej7fHp9W...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.381 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:09.249Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:09.439Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:09.439Z","userId":"68477d456e4419c4d02e2e06","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.556 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:09.442Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'YYUPPot7qpsfPjsyLk2HvWm1c2PUaCk8',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYYUPPot7qpsfPjsyLk2HvWm1c2PUaCk8.zPPsvUg7Hqz3CjERo3NJXfpfcU1C5ySjTmOZeT5PB34',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 58.186 ms - 207[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:10.103Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FLWInK6xfvv3D9QusRkEGtg29ZbAt7u_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wSvV1Ort-KNKKiYkJ1DvB91Or9ALlg2JQYHc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FLWInK6xfvv3D9QusRkEGtg29ZbAt7u_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: t92EH3ROVr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.082 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:10.200Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:10.350Z","userType":"administrator","username":"opsetup@example.com"}
info: undefined {"adminId":"ADMIN002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:10.350Z","userId":"68477d466e4419c4d02e2e24","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.970 ms - 646[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:10.353Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'FLWInK6xfvv3D9QusRkEGtg29ZbAt7u_',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AFLWInK6xfvv3D9QusRkEGtg29ZbAt7u_.tHQtsxjwOjCDEkRk%2FviN0n7G2BKL77tw9wKzfvRjSVQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newoperator@example.com","operatorId":"OPRMBPSET61B11B3D"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"68477d466e4419c4d02e2e2d","targetType":"operator","timestamp":"2025-06-10T00:33:10.534Z","userId":"68477d466e4419c4d02e2e24","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 181.736 ms - 656[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:11.168Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FX0o-D2OMC4TCqBsMScI9JSOoAukf5Xr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: g9pBqRPe-Ha4tpIHwbhmGZLSCrr8R4LHqXo8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FX0o-D2OMC4TCqBsMScI9JSOoAukf5Xr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: N2S88yORAk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.214 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/forgot-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:11.261Z"}
[0mPOST /api/v1/auth/forgot-password [32m200[0m 62.929 ms - 54[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:11.355Z"}
[0mPOST /api/v1/auth/reset-password [33m400[0m 1.687 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:11.956Z"}
  console.log
    CSRF token generation: {
      sessionID: '9_G2q1s56gR1ZdS2dgZ4xY424qgy6C6z',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: n1dMULyH-wdmVRfVEIQuD91uC8X6980tK0mE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9_G2q1s56gR1ZdS2dgZ4xY424qgy6C6z

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ClGbJ-Y7hj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.342 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/forgot-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:12.055Z"}
[0mPOST /api/v1/auth/forgot-password [32m200[0m 62.074 ms - 54[0m
[34mdebug[39m: POST /api/v1/auth/reset-password {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:12.148Z"}
[0mPOST /api/v1/auth/reset-password [32m200[0m 114.882 ms - 65[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:12.865Z"}
  console.log
    CSRF token generation: {
      sessionID: 'xRePu4EtOSwrnxeUaM7yrAbJTvxHr8mg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: D4F6a1Iz-00T_1UkHeiT8UDddz852CVKi6ZY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: xRePu4EtOSwrnxeUaM7yrAbJTvxHr8mg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JWWTksO8fv...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.201 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:12.972Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:13.120Z","userType":"affiliate","username":"logintest"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 148.262 ms - 630[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:13.746Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Gh9w9S2uCa62OiexKF9Dw35rZR4-829P',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wG1Jh3xK-p4gjkBFEy5p03wYBOWME0s5ayM0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Gh9w9S2uCa62OiexKF9Dw35rZR4-829P

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rPCxeFrpYc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.342 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:13.754Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.633 ms - 164[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:14.366Z"}
  console.log
    CSRF token generation: {
      sessionID: 'iR92O88jBnhuO-owExwCHR2xBaR2veXD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qkHkjRdm-w_crpDzc44TufsKcJJBkh-x9rCc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: iR92O88jBnhuO-owExwCHR2xBaR2veXD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: IbTvzehVwq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.600 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:14.375Z"}
[0mPOST /api/v1/affiliates/register [33m400[0m 1.578 ms - 185[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:14.966Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Gl55KQrLZPwXBt6c3AZCwWZAiS7ug35O',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 53efQylP-DyAjpnPaRQMI1Dy0mwzg-coxMNc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Gl55KQrLZPwXBt6c3AZCwWZAiS7ug35O

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Ph0n5D1vJL...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.287 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:14.975Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 119.889 ms - 120[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:15.682Z"}
  console.log
    CSRF token generation: {
      sessionID: 'zqRu4EoDDl-PKNITRg26wbwRzJsfYAPA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: G1OYunSn-TAZFD2HJfaswraCZM6hnm1E89Xs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: zqRu4EoDDl-PKNITRg26wbwRzJsfYAPA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dagxc1vbRG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.187 ms - 67[0m
[34mdebug[39m: POST /api/v1/affiliates/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:15.693Z"}
[0mPOST /api/v1/affiliates/register [32m201[0m 116.965 ms - 120[0m
PASS tests/integration/passwordValidation.test.js (21.466 s)
  Password Validation Integration Tests
    Affiliate Registration Password Validation
      ✓ should reject weak passwords during affiliate registration (1502 ms)
      ✓ should accept strong passwords during affiliate registration (1257 ms)
      ✓ should reject passwords containing username (609 ms)
      ✓ should reject passwords containing email (589 ms)
      ✓ should reject passwords with sequential characters (615 ms)
    Customer Registration Password Validation
      ✓ should enforce strong passwords for customer registration (776 ms)
      ✓ should accept strong passwords for customer registration (913 ms)
    Administrator Password Validation
      ✓ should enforce strong passwords for administrator creation (925 ms)
      ✓ should accept strong passwords for administrator creation (1059 ms)
    Operator Password Validation
      ✓ should enforce strong passwords for operator creation (956 ms)
      ✓ should accept strong passwords for operator creation (1065 ms)
    Password Reset Validation
      ✓ should enforce strong passwords during password reset (788 ms)
      ✓ should accept strong passwords during password reset (899 ms)
    Login with Updated Passwords
      ✓ should successfully login with strong password (888 ms)
      ✓ should handle case-insensitive username/email validation during registration (623 ms)
    Password Strength Edge Cases
      ✓ should reject passwords with only special characters at the end (600 ms)
      ✓ should accept passwords with mixed character distribution (717 ms)
      ✓ should handle Unicode characters in passwords appropriately (724 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:17.344Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YsKyvBK6ERUqVzebyGur3gA2zICAEStz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mh1lBZ1x-fv8T8lnYwwGLo-V2tySYfPy9xQ0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YsKyvBK6ERUqVzebyGur3gA2zICAEStz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: pboqFIhYBC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.650 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:17.978Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:18.156Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 178.709 ms - 544[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:18.717Z"}
  console.log
    CSRF token generation: {
      sessionID: 'r-C13XQeGbl4ybZNMpm7F2cBEFAvkO7d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wdA0k9Y6-wZrGEdh3xBxlPDoh94cagXoRfM4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: r-C13XQeGbl4ybZNMpm7F2cBEFAvkO7d

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4ixCc7MzJz...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.687 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:18.962Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"Invalid password","success":false,"timestamp":"2025-06-10T00:33:19.045Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 83.524 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:19.526Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SQaBZwyhprBKjWLnEBPMfUL48RND_Hnp',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: V73cKLpP-yRhj8vh3bEo1X7qT4F-_An7fdp8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SQaBZwyhprBKjWLnEBPMfUL48RND_Hnp

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 74mx5-lfYg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.614 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:19.667Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":"User not found","success":false,"timestamp":"2025-06-10T00:33:19.694Z","userType":"affiliate","username":"nonexistent"}
[0mPOST /api/v1/auth/affiliate/login [33m401[0m 28.358 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:20.162Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NckmHUuyYTkcoULzKMakAmmaMbRoZU9V',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HBhhJXG9-VbkTSePaSmCQGQHUxQ6LZtGuXBQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NckmHUuyYTkcoULzKMakAmmaMbRoZU9V

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: WjY18cIxk5...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.397 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:20.426Z"}
  console.log
    Customer affiliateId: AFF123

      at log (server/controllers/authController.js:467:13)

  console.log
    Found affiliate: AFF123

      at log (server/controllers/authController.js:468:13)

  console.log
    Affiliate fees: min: 25, per-bag: 5

      at log (server/controllers/authController.js:469:13)

  console.log
    Sending customer login response: {
      "customerId": "CUST123",
      "firstName": "Jane",
      "lastName": "Smith",
      "email": "jane@example.com",
      "phone": "555-987-6543",
      "address": "456 Oak Ave",
      "city": "Austin",
      "state": "TX",
      "zipCode": "78702",
      "affiliateId": "AFF123",
      "affiliate": {
        "affiliateId": "AFF123",
        "name": "John Doe",
        "minimumDeliveryFee": 25,
        "perBagDeliveryFee": 5
      }
    }

      at log (server/controllers/authController.js:502:13)

[0mPOST /api/v1/auth/customer/login [32m200[0m 142.350 ms - 659[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:21.048Z"}
  console.log
    CSRF token generation: {
      sessionID: '_Qic-UMqNg_TIRm6Wbi5Q9GjL3i6R7gF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: DVP4tg7n-Jw73raK_qYegS2JoR1mGZw05s6k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _Qic-UMqNg_TIRm6Wbi5Q9GjL3i6R7gF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JX6-948xul...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.176 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:21.290Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:21.437Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 147.527 ms - 544[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:21.440Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.212 ms - 99[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:21.946Z"}
  console.log
    CSRF token generation: {
      sessionID: 'W5Eja5TxxgunonlOwwnYFQwGn0WfybNn',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hIJiwDza-2FV4kxH_huMfJsewxGpw8dgR4Ec

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: W5Eja5TxxgunonlOwwnYFQwGn0WfybNn

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qcGI_0UHcZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.975 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:22.085Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.522 ms - 43[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:22.561Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ly6AIiP3wcYDgMnCTWb7viTWkUxk_as8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: eYGY390L-3cIdp6m84SR9zVa1tAUVW2nazp4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ly6AIiP3wcYDgMnCTWb7viTWkUxk_as8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: wq_OZjxPgn...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.627 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:22.708Z"}
[0mGET /api/v1/auth/verify [33m401[0m 1.381 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:23.187Z"}
  console.log
    CSRF token generation: {
      sessionID: 'U7YLO0moYTHrWbn5MFK9taFvc2aFYzxs',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TGdGeMQm-5pYyg0HgfMAo6vWmOcFIO25OJQE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: U7YLO0moYTHrWbn5MFK9taFvc2aFYzxs

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: NGn7Jhzvp8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.942 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:23.410Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:23.562Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 152.030 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:23.565Z"}
[0mPOST /api/v1/auth/refresh-token [32m200[0m 130.210 ms - 409[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:24.180Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E6gBiCpiXaUIFpI-dXxKUpBUucOmdPLm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fWlOIurT-VC4Kkaqz6r19XhX76YPExfJK0pA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E6gBiCpiXaUIFpI-dXxKUpBUucOmdPLm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ptQ_gGtvDo...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.622 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:24.319Z"}
[0mPOST /api/v1/auth/refresh-token [33m400[0m 1.149 ms - 89[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:24.797Z"}
  console.log
    CSRF token generation: {
      sessionID: 'i8ozRVrjUTIHv8T6SXF6i00xSqt-QRCQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: KseiyC4C-pEdHlLgTMUBebD_Bh6FJr2QPFxs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: i8ozRVrjUTIHv8T6SXF6i00xSqt-QRCQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1_My1uGBK-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.250 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:25.079Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 27.654 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:25.592Z"}
  console.log
    CSRF token generation: {
      sessionID: 'XBeM9KxrsYJnNx5yCEUWCzlWy5lR2BgP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RNlJ19GH-uYYR6DsM0DirJOH0JZr4rtf4aXI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: XBeM9KxrsYJnNx5yCEUWCzlWy5lR2BgP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: DqR8ysKN5R...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.867 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:25.815Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:25.964Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 149.628 ms - 544[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:25.967Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'XBeM9KxrsYJnNx5yCEUWCzlWy5lR2BgP',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AXBeM9KxrsYJnNx5yCEUWCzlWy5lR2BgP.fcDPKIzSB7UCW13emnOE0M8Ac8Moh%2BzckQE2%2FAmNbtI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 93.937 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:26.063Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.236 ms - 56[0m
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:26.094Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 27.606 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:26.620Z"}
  console.log
    CSRF token generation: {
      sessionID: 'wgwGAZ6cg4aJUpHYRn6L3jNhunCj8pj_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ElJwXLl2-SkTiNOwfFajlpB4aA6l3BnlSNOQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: wgwGAZ6cg4aJUpHYRn6L3jNhunCj8pj_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4zcYx0N9FS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.705 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:26.870Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:27.036Z","userType":"affiliate","username":"johndoe"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 165.942 ms - 544[0m
  console.log
    Got refresh token: a17ee3b72e77555aa53c3e7c429d0dc511e8620066a253d0293ba9982c1213a2a0938ca39f27bb13

      at Object.log (tests/integration/auth.test.js:586:15)

  console.log
    Starting concurrent requests...

      at Object.log (tests/integration/auth.test.js:600:15)

[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.044Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.048Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.050Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.052Z"}
[34mdebug[39m: POST /api/v1/auth/refresh-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.054Z"}
[0mPOST /api/v1/auth/refresh-token [33m401[0m 44.097 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 46.971 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 49.598 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [33m401[0m 52.929 ms - 62[0m
[0mPOST /api/v1/auth/refresh-token [32m200[0m 145.626 ms - 409[0m
  console.log
    Responses received: [
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 401,
        body: { success: false, message: 'Invalid or expired refresh token' }
      },
      {
        status: 200,
        body: {
          success: true,
          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDc3ZDU2OGIzNmQ4YzI2Y2ExOTYxYSIsImFmZmlsaWF0ZUlkIjoiQUZGMTIzIiwicm9sZSI6ImFmZmlsaWF0ZSIsImlhdCI6MTc0OTUxNTYwNywiZXhwIjoxNzQ5NTE5MjA3LCJhdWQiOiJ3YXZlbWF4LWNsaWVudCIsImlzcyI6IndhdmVtYXgtYXBpIn0.RxYaPccjOc3hKwAywm4GwFqSxoLVFF1FC6Tjn7HM-BU',
          refreshToken: 'e8c0a4d31896fcf62a89821cf5f59ead3bef840fa5ebf5f53e84140249461b3f9f324264aeb51f1c'
        }
      }
    ]

      at Object.log (tests/integration/auth.test.js:602:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.696Z"}
  console.log
    CSRF token generation: {
      sessionID: 'olGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: jdEqBW2A-lGgbs7FeNr2wR-W8Vsa5dbe56Dw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: olGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ov_6rxslgc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.989 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:27.926Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:28.089Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 163.367 ms - 547[0m
[34mdebug[39m: POST /api/v1/auth/affiliate/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.195Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/affiliate/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:29.343Z","userType":"affiliate","username":"johndoe999"}
[0mPOST /api/v1/auth/affiliate/login [32m200[0m 148.369 ms - 547[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.346Z"}
[0mGET /api/v1/auth/verify [32m200[0m 29.250 ms - 99[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.380Z"}
[0mGET /api/v1/auth/verify [32m200[0m 27.914 ms - 99[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.410Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'olGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AolGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO.CnyGwJeHArqqDLUt5Yr9WhbfcOIRooAmuCJCFgEJCWs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 92.455 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.505Z"}
[0mGET /api/v1/auth/verify [33m401[0m 27.570 ms - 56[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.535Z"}
[0mGET /api/v1/auth/verify [32m200[0m 28.038 ms - 99[0m
[34mdebug[39m: POST /api/v1/auth/logout {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.566Z"}
  console.log
    CSRF check for: /api/v1/auth/logout {
      sessionID: 'olGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AolGyfoH5M4Hl3Ow1LPQv8SzuebirgXlO.CnyGwJeHArqqDLUt5Yr9WhbfcOIRooAmuCJCFgEJCWs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/logout [32m200[0m 99.161 ms - 52[0m
[34mdebug[39m: GET /api/v1/auth/verify {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:29.668Z"}
[0mGET /api/v1/auth/verify [33m401[0m 28.868 ms - 56[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:30.185Z"}
  console.log
    CSRF token generation: {
      sessionID: 'zC3KP-4rcM-4IB-JWE_8BxHzKVWmyRSQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xJrKpGjU-FxhyMOt7g6l2JQ5W2iKAhR3y4kI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: zC3KP-4rcM-4IB-JWE_8BxHzKVWmyRSQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: NF6tE4fmVh...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.556 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:30.412Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:30.559Z","userType":"administrator","username":"admin@example.com"}
info: undefined {"adminId":"ADM001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:30.559Z","userId":"68477d5a8b36d8c26ca1966e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.796 ms - 684[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:31.041Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kEctsqVCaTyiiJKNgdCPLMEIyPQk4fvU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HvQAnRph-q6B_0bNIc2ZMaropBt2zVm-Rd0w

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kEctsqVCaTyiiJKNgdCPLMEIyPQk4fvU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0lHPg8J3x9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.264 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:31.270Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Invalid password","success":false,"timestamp":"2025-06-10T00:33:31.380Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 110.117 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:31.856Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ACX5xv-0HuZ-LnX0V9dntFLPfmpGfmig',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9AHydq8S-ClE0uG5SrMB5v_iTkgwVFCT7fWg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ACX5xv-0HuZ-LnX0V9dntFLPfmpGfmig

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cdqDln24hk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.089 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:32.079Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-10T00:33:32.106Z","userType":"administrator","username":"admin@example.com"}
[0mPOST /api/v1/auth/administrator/login [33m401[0m 28.101 ms - 90[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:32.574Z"}
  console.log
    CSRF token generation: {
      sessionID: '7S3rM1Nh6df8s-s4C2tu6HaUlpwVyPQw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wWYe9iOe-UfAwRNLvmB7hnnQEQmlfI7BSXNU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7S3rM1Nh6df8s-s4C2tu6HaUlpwVyPQw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eWxgQe15Es...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.082 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:32.898Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:33.043Z","userType":"operator","username":"operator@example.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:33.044Z","userId":"68477d5c8b36d8c26ca196c2","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 145.463 ms - 593[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:33.524Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tQqRwHw1NRSTe64AFZYWWtFq7-g93OuK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: GMgAGJAD-BuG2-jhTZam_tN52T9PmmDSVu34

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tQqRwHw1NRSTe64AFZYWWtFq7-g93OuK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: a9Le3gvo8W...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.512 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:33.844Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Invalid password","success":false,"timestamp":"2025-06-10T00:33:33.956Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m401[0m 112.342 ms - 55[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:34.432Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TRTfV4S2RDi_LUJhGw-pys-fAHw8aAUi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rh0lNHsA-0dHCyfD3u8QR_6_wjzWCUEpHoV8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TRTfV4S2RDi_LUJhGw-pys-fAHw8aAUi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: f5VDSXHxAq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.123 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:34.745Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-10T00:33:34.773Z","userType":"operator","username":"operator@example.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 28.541 ms - 82[0m
PASS tests/integration/auth.test.js (18.86 s)
  Authentication Integration Tests
    POST /api/v1/auth/affiliate/login
      ✓ should login affiliate with valid credentials (1406 ms)
      ✓ should fail with invalid credentials (808 ms)
      ✓ should fail with non-existent username (636 ms)
    POST /api/v1/auth/customer/login
      ✓ should login customer with valid credentials (886 ms)
    GET /api/v1/auth/verify
      ✓ should verify valid token (898 ms)
      ✓ should fail with invalid token (615 ms)
      ✓ should fail with missing token (626 ms)
    POST /api/v1/auth/refresh-token
      ✓ should refresh token successfully (992 ms)
      ✓ should fail with invalid refresh token (615 ms)
      ✓ should fail with expired refresh token (795 ms)
    POST /api/v1/auth/logout
      ✓ should logout successfully and blacklist tokens (1027 ms)
    Rate limiting tests
      ○ skipped should rate limit login attempts
      ○ skipped should rate limit refresh token requests
    Concurrent refresh token usage
      ✓ should handle concurrent refresh token requests safely (1078 ms)
    Token blacklisting after logout
      ✓ should blacklist all active tokens on logout (2487 ms)
    POST /api/v1/auth/administrator/login
      ✓ should login administrator with valid credentials (857 ms)
      ✓ should fail with invalid administrator credentials (814 ms)
      ✓ should fail when administrator is inactive (718 ms)
    POST /api/v1/auth/operator/login
      ✓ should login operator with valid credentials (950 ms)
      ✓ should fail with invalid operator credentials (908 ms)
      ✓ should fail when operator is inactive (818 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.182Z"}
  console.log
    CSRF token generation: {
      sessionID: 'm-otzNBNiTQIg12UtqX2RN3LNQlnhaei',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qKu9hfg5-k60aMas1R4NVGr707XE0q2oKGoc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: m-otzNBNiTQIg12UtqX2RN3LNQlnhaei

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jfLaPIQ82o...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.400 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.297Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:37.446Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:37.447Z","userId":"68477d61a7199beb8d9c3891","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.400 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.450Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SpzWOaJgogtW67TrUCsoQJn9gUtjkyk5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AaQHe3ar-tqZARE-CkvUW8VTFGWaexL1-R9A

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SpzWOaJgogtW67TrUCsoQJn9gUtjkyk5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zKlFSNGvzk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.811 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.546Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:37.695Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:37.696Z","userId":"68477d61a7199beb8d9c389a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.889 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.699Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jbBZT9VGF4d1yOnlwJd6w4E5t4Onh7dE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 6G8LtbpW-0JLSX8K8zkDZXsjOY-jL1pMZ9O0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jbBZT9VGF4d1yOnlwJd6w4E5t4Onh7dE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: VlP1ja4xT0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.684 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:37.853Z"}
[0mGET /api/v1/operators [32m200[0m 160.756 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:38.642Z"}
  console.log
    CSRF token generation: {
      sessionID: '4PO1kZqdVV8Tl1Cqeo48PqkOxdJLZcHh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WkqD4gXw-G4CPTALmenFOr34BzJb7A8BMHfU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4PO1kZqdVV8Tl1Cqeo48PqkOxdJLZcHh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: t79RKP7WwJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.422 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:38.756Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:38.901Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:38.902Z","userId":"68477d62a7199beb8d9c38be","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.584 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:38.904Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Flndaj5KrqSyCvYGyFYxmXb6ySek4HaA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TaIJYpAQ-_j4PRDjubNlgH_y9Ag_CullZxS0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Flndaj5KrqSyCvYGyFYxmXb6ySek4HaA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dSH2zU0x41...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.883 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:39.000Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:39.166Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:39.166Z","userId":"68477d62a7199beb8d9c38c4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 166.735 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:39.169Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LFRFUIr1OZ8V-jxeuqtMGHHKySPiDOdq',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: w9uEfZD9-fYP5owhFmyccwmmIEilgokBKnhA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LFRFUIr1OZ8V-jxeuqtMGHHKySPiDOdq

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YlZbs-btd0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.208 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?active=true {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:39.259Z"}
[0mGET /api/v1/operators?active=true [32m200[0m 142.676 ms - 554[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:39.977Z"}
  console.log
    CSRF token generation: {
      sessionID: '0XMRWnTXwuOCwjOGceIgpzubcLJ7OQ8c',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5pGbeyU3-vm6XVSeiSh5eyAKKKl4yT_dkSkg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0XMRWnTXwuOCwjOGceIgpzubcLJ7OQ8c

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cafgNpGsm2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.120 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:40.071Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:40.219Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:40.219Z","userId":"68477d63a7199beb8d9c38e6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 148.011 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:40.222Z"}
  console.log
    CSRF token generation: {
      sessionID: '0-A7VRIToNqeVyi88ir_ssqsMColNcLU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: st7wFOpL-wEUsxWWwj48EVXueI4QKa4KViZM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0-A7VRIToNqeVyi88ir_ssqsMColNcLU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: R09Ln5ktAB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.563 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:40.313Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:40.454Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:40.454Z","userId":"68477d64a7199beb8d9c38ec","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 141.570 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:40.457Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rx3wXpzYt3GkakFrwNK8i8ZK1d0Ui3Nu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5c7L2xJG--Xc8ZZzzJIhCPgkDBHYiVIYAMaQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rx3wXpzYt3GkakFrwNK8i8ZK1d0Ui3Nu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mA-nF-1Qld...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.254 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?workStation=Station%20A {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:40.601Z"}
[0mGET /api/v1/operators?workStation=Station%20A [32m200[0m 134.313 ms - 973[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.319Z"}
  console.log
    CSRF token generation: {
      sessionID: 'j1_E-wgpPcn4ZP_XfcVKaRwxSxOXipqj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: tJuX6qh6-B2xSs2EI-_1PPeochGhBwm0kjPM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: j1_E-wgpPcn4ZP_XfcVKaRwxSxOXipqj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: R_FXQlFLjZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.573 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.427Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:41.583Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:41.584Z","userId":"68477d65a7199beb8d9c3910","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.675 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.586Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FyuWURjXOkxqDZFMUT1XEtgCKWxO2mUr',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hn7jyC9T-ov8fKfcZu9zYb0nm0mXJB9WWoE0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FyuWURjXOkxqDZFMUT1XEtgCKWxO2mUr

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: xCL-M9kBEO...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.188 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.680Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:41.822Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:41.823Z","userId":"68477d65a7199beb8d9c3916","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 142.612 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.826Z"}
  console.log
    CSRF token generation: {
      sessionID: '-SilXZ92CSuExZyTW8Jq64QbDuv6ormA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9KySFMDU-ghCtlpK05Dy25UZvfMtIbSqQ5to

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -SilXZ92CSuExZyTW8Jq64QbDuv6ormA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TANsIs1PfP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.302 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?onShift=true {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:41.917Z"}
[0mGET /api/v1/operators?onShift=true [32m200[0m 109.574 ms - 554[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:42.596Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bkbeAZdBpClJzKJw-spu-gvaBiKqBwpQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: VXxqlq4n-YzYi3TYjZrfp_oPPFYDDCFlH_6U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bkbeAZdBpClJzKJw-spu-gvaBiKqBwpQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3UU4sXC74x...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.535 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:42.692Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:42.835Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:42.836Z","userId":"68477d66a7199beb8d9c3937","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.724 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:42.838Z"}
  console.log
    CSRF token generation: {
      sessionID: 'csKEB9Zf0aFLVldAp8EWKeHx49VzPOwV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: YVIsNq0v-pJ6Zuvu15olenri_xvpnTXNtf8o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: csKEB9Zf0aFLVldAp8EWKeHx49VzPOwV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: pRfpsUe3l4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.963 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:42.932Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:43.079Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:43.079Z","userId":"68477d66a7199beb8d9c393d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.413 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:43.082Z"}
  console.log
    CSRF token generation: {
      sessionID: 'lpTlYqXfeWVbqApo7w5etH--vA9lt6xR',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: E8D2VMWl-GTKRE9jYq4yqCcQQQbQmJP3xc6c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: lpTlYqXfeWVbqApo7w5etH--vA9lt6xR

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ZOlgIOoRnZ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.731 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators?page=2&limit=5 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:44.169Z"}
[0mGET /api/v1/operators?page=2&limit=5 [32m200[0m 139.030 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:44.877Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LmTlZkzN4sbgBowkTd_GywxohSOlqAE3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2EiVip1t-WFGRORAQI8tpQNUDFU3lx-uUs88

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LmTlZkzN4sbgBowkTd_GywxohSOlqAE3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: lIos2HeEX8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.519 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:44.974Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:45.115Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:45.116Z","userId":"68477d68a7199beb8d9c397c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.686 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:45.119Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NiIVVTqH7C7fDaZjWg70g-vknVf7yyZQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: diT9WdnD-l9ef6DeRasZo-lYMuY5rNuyF2Z0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NiIVVTqH7C7fDaZjWg70g-vknVf7yyZQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7f7rsG8378...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.779 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:45.218Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:45.380Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:45.381Z","userId":"68477d69a7199beb8d9c3982","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 163.239 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:45.384Z"}
  console.log
    CSRF token generation: {
      sessionID: 'd8wb2VKMnquHSVY_TZukBgU63yjtaXoY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: YF4znr3x-RiG4uj50npNKdaa475-yj9bPIr8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: d8wb2VKMnquHSVY_TZukBgU63yjtaXoY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 46w1xgOROu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.038 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:45.394Z"}
[0mGET /api/v1/operators [33m401[0m 1.313 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:45.974Z"}
  console.log
    CSRF token generation: {
      sessionID: 'UNuLcomvnfTVMS_X8W7naMTFTWvAUIrl',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fj6CflS6-L_VyA7Y0bf4wBOUld4lsnNhnpE4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: UNuLcomvnfTVMS_X8W7naMTFTWvAUIrl

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4HkBn5H_ZH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.687 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.066Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:46.215Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:46.215Z","userId":"68477d69a7199beb8d9c399d","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.205 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.217Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kjpGFsA7BVg8u1ndh1mt56M5DWror5Jd',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: or2kAjER-g9Y4HEcoRMXimpjs95AuxLMVNKQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kjpGFsA7BVg8u1ndh1mt56M5DWror5Jd

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TKhYv_MNJd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.597 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.311Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:46.461Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:46.462Z","userId":"68477d6aa7199beb8d9c39a3","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.072 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.466Z"}
  console.log
    CSRF token generation: {
      sessionID: '_ziA7XmjyKmp_fqyL40yrOJmwZ4RVDKN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: y00YEz3E-3Snoe53RiDeZEZ2iI_2KS7xwMZw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _ziA7XmjyKmp_fqyL40yrOJmwZ4RVDKN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: MFd9DJ20j0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.543 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.562Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:46.703Z","userType":"administrator","username":"limited@wavemax.com"}
info: undefined {"adminId":"LIMITED001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:46.704Z","userId":"68477d6aa7199beb8d9c39a9","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.019 ms - 649[0m
[34mdebug[39m: GET /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:46.706Z"}
[0mGET /api/v1/operators [33m403[0m 53.543 ms - 79[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.342Z"}
  console.log
    CSRF token generation: {
      sessionID: 'oUDca5a9DjDBOwuNJ_dEeChGmbd8Bje_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ekdBDs8C-RmlQRQdjA7AnKq5npmCI2mFo3-4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: oUDca5a9DjDBOwuNJ_dEeChGmbd8Bje_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: LFZHSeeC1g...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.442 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.437Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:47.597Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:47.598Z","userId":"68477d6ba7199beb8d9c39c6","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.408 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.601Z"}
  console.log
    CSRF token generation: {
      sessionID: 'I8gfwtikwhAy4SHujiVVjc9lCp0BJkf0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: RqQ1dPCj-ZQJxJx1X-imQDG7ifiLArNc9K_E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: I8gfwtikwhAy4SHujiVVjc9lCp0BJkf0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kWgjbgxjyj...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.065 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.697Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:47.843Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:47.844Z","userId":"68477d6ba7199beb8d9c39cc","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.891 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.848Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kYadXWWPlL3ivbWgYE4y-mbB6C5ib-KE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3i1QwZAi-4uBxiQUtNC-leA1rfrRllLYa08I

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kYadXWWPlL3ivbWgYE4y-mbB6C5ib-KE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cgfQSYviSu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.380 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/68477d6ba7199beb8d9c39d2 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:47.945Z"}
[0mGET /api/v1/operators/68477d6ba7199beb8d9c39d2 [32m200[0m 172.420 ms - 591[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:48.706Z"}
  console.log
    CSRF token generation: {
      sessionID: 'WnlO2zBofD53vUPadsp2m-mirChw2pNO',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: quyd3oZV-da6NluUyu8XH6GeDBNx7PyaTvg8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: WnlO2zBofD53vUPadsp2m-mirChw2pNO

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: SZxsPF3-Em...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.246 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:48.802Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:48.945Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:48.945Z","userId":"68477d6ca7199beb8d9c39ef","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 142.509 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:48.947Z"}
  console.log
    CSRF token generation: {
      sessionID: '-B5fixRygUJfsNL27vOeztqZSzhb1dcV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1PrHuiKm-OVOxfLNAJaMTlLHWi7hm_VQT_d8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -B5fixRygUJfsNL27vOeztqZSzhb1dcV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qqpa0kzCJ1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.487 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:49.042Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:49.194Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:49.194Z","userId":"68477d6ca7199beb8d9c39f5","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.173 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:49.197Z"}
  console.log
    CSRF token generation: {
      sessionID: 'uEf7MP_zNGDidJ6FL7e5si7aXFchpmeg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WscyeKHx-o-6VJNCzbLzXSDTQ-agdAnQNJY8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: uEf7MP_zNGDidJ6FL7e5si7aXFchpmeg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: yY2xAZOKFf...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.458 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/68477d6ca7199beb8d9c39f5 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:49.207Z"}
[0mGET /api/v1/operators/68477d6ca7199beb8d9c39f5 [32m200[0m 84.956 ms - 227[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:49.864Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pSQpkSB-fvlRGEaUTmQkOcfLuUwy-EG3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 779Iqji9-cTAQLgW_f62uzYnG6b6oOoPiAJA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pSQpkSB-fvlRGEaUTmQkOcfLuUwy-EG3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: iH5B7LNIWg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.348 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:49.958Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:50.100Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:50.101Z","userId":"68477d6da7199beb8d9c3a13","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.204 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:50.103Z"}
  console.log
    CSRF token generation: {
      sessionID: 'uJ22bvOMBSPq167wx6ANvBf2JfxBduF2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fcdu4awh-Pp4XBfxBsW4ABs7_4wkqonKwVWA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: uJ22bvOMBSPq167wx6ANvBf2JfxBduF2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zgRdKC_CwD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.404 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:50.202Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:50.352Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:50.352Z","userId":"68477d6ea7199beb8d9c3a19","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 150.908 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:50.355Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Gnec6tVm11ma36_o_4awNJJlIX0QflV6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: i1yUDzNT-5DX6CFd8kW1H8TiKfhqT0uCqgPA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Gnec6tVm11ma36_o_4awNJJlIX0QflV6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kOkhiCDD8G...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.973 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/68477d6ea7199beb8d9c3a1f {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:50.458Z"}
[0mGET /api/v1/operators/68477d6ea7199beb8d9c3a1f [33m403[0m 54.881 ms - 68[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.071Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qLMClupILXqd24qSL-Xb4sRJU5QiObVT',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: KaGNGcQ0-P0tO-weoQzmtYSdaKnK2g5IQv90

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qLMClupILXqd24qSL-Xb4sRJU5QiObVT

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YSuendLb2V...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.031 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.172Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:51.322Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:51.323Z","userId":"68477d6fa7199beb8d9c3a38","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.241 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.325Z"}
  console.log
    CSRF token generation: {
      sessionID: 'F4VvI2PLNWHvfjfuX6m9ikih575Y8xnC',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SfyS3Fvq-JfmdR4nMpSeDNBqoTSF_o6WeSWM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: F4VvI2PLNWHvfjfuX6m9ikih575Y8xnC

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: t0fYHyDOG1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.801 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.420Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:51.560Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:51.560Z","userId":"68477d6fa7199beb8d9c3a3e","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 140.877 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.564Z"}
  console.log
    CSRF token generation: {
      sessionID: '_mwP1VpwiYpAzDWLtCggH2kQlDObGi-E',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: UMJLnZ3K-ZW_3RfgMtZGo7TSolaRYTVv5obc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _mwP1VpwiYpAzDWLtCggH2kQlDObGi-E

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: d_sqLPso6z...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.188 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/68477d6fa7199beb8d9c3a44 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:51.573Z"}
[0mGET /api/v1/operators/68477d6fa7199beb8d9c3a44 [33m404[0m 107.343 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.248Z"}
  console.log
    CSRF token generation: {
      sessionID: 'BILddJdR-9oLkSzXFJ96VZ_RyhzbHmeE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NoF69tzK-WfV4LPhENs5LOn3AjCi7cRGs7Gs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: BILddJdR-9oLkSzXFJ96VZ_RyhzbHmeE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: swFds8pdCA...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.393 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.342Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:52.496Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:52.497Z","userId":"68477d70a7199beb8d9c3a5e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 155.237 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.503Z"}
  console.log
    CSRF token generation: {
      sessionID: '9SiNkFc6Ibk7nEurVQBueGYeP_2M8_8s',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: b18yG84R-EM7OHdcu_3UPM7C4X83iC5-G-pI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9SiNkFc6Ibk7nEurVQBueGYeP_2M8_8s

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1OYnRA-ADq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.892 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.599Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:52.745Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:52.745Z","userId":"68477d70a7199beb8d9c3a64","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.363 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.748Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E3ShNBkZ0l_0HWW2cqLWm6n0qUbni5_T',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SmjxvUy8-MKNOAPfQLvikqDCy02uV4wMEgoU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E3ShNBkZ0l_0HWW2cqLWm6n0qUbni5_T

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: hGzmoL06Ne...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.077 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.755Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '9SiNkFc6Ibk7nEurVQBueGYeP_2M8_8s',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A9SiNkFc6Ibk7nEurVQBueGYeP_2M8_8s.JfXca69htXpHtI8lsz2KPn5184j9Z%2FoS9c%2F38n3oXtI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"CREATE_OPERATOR","details":{"email":"newop@wavemax.com","operatorId":"OPRMBPSFPVR490E01"},"ip":"::ffff:127.0.0.1","method":"POST","path":"/","targetId":"68477d70a7199beb8d9c3a6d","targetType":"operator","timestamp":"2025-06-10T00:33:52.924Z","userId":"68477d70a7199beb8d9c3a5e","userRole":"administrator","userType":"administrator"}
[0mPOST /api/v1/operators [32m201[0m 169.966 ms - 475[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:52.928Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:53.075Z","userType":"operator","username":"newop@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPRMBPSFPVR490E01","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:53.076Z","userId":"68477d70a7199beb8d9c3a6d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.955 ms - 647[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:53.654Z"}
  console.log
    CSRF token generation: {
      sessionID: 'bMNgmQHiERq-nv60Cvp51QdJM-b3oteQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: u3xInZzg-e5Ow9tpkc9eWJ-h-VfK-vuBe-ZI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: bMNgmQHiERq-nv60Cvp51QdJM-b3oteQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RfXW4VFYF4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.178 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:53.750Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:53.898Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:53.899Z","userId":"68477d71a7199beb8d9c3a88","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.296 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:53.902Z"}
  console.log
    CSRF token generation: {
      sessionID: 'suhtkwGnZox8f3812fnl0Pn46Y4zYoFp',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ybm1endm-M8JrYBZuca2AQB5QL43pKXq8e6g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: suhtkwGnZox8f3812fnl0Pn46Y4zYoFp

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 6sII4HvXLg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.727 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:53.994Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:54.139Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:54.139Z","userId":"68477d71a7199beb8d9c3a8e","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 145.065 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:54.142Z"}
  console.log
    CSRF token generation: {
      sessionID: '0e1mfQtCPLBOKAWbaFUpr77F468XooL6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lvvjWzZc-F6TxZduAh0ZW7Wx6WYoF9G31kcw

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 0e1mfQtCPLBOKAWbaFUpr77F468XooL6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: uN_9nouh7c...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.297 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:54.152Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'suhtkwGnZox8f3812fnl0Pn46Y4zYoFp',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AsuhtkwGnZox8f3812fnl0Pn46Y4zYoFp.JWCqUKlh3LQpLcCAMkZBWA95FS6Qt1XR2keEJOQggnc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 56.836 ms - 309[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:54.775Z"}
  console.log
    CSRF token generation: {
      sessionID: '-YyRAL0gPI7zJ7_mbFX_mT9KZ6kb_0_7',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uvW4oVjC-4yBI7q4BElS_P4evbc_LAF0Us7U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: -YyRAL0gPI7zJ7_mbFX_mT9KZ6kb_0_7

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: H10TA-MoBI...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.195 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:54.881Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:55.032Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:55.032Z","userId":"68477d72a7199beb8d9c3aab","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.325 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:55.035Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tvWRnSGSHjV5xblApV54tYV5zcznC-QQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hFSx7Tb7-t29s6BTOiKnSB3NBDOoitkbARWo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tvWRnSGSHjV5xblApV54tYV5zcznC-QQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: UGFHSgCVjY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.670 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:55.125Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:55.279Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:55.279Z","userId":"68477d73a7199beb8d9c3ab1","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.654 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:55.282Z"}
  console.log
    CSRF token generation: {
      sessionID: 'x-SuU91UR7CLG6kWTS2WSNSWnAq21RVx',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IgWrTrNN-5oWylTuYxgNzdYRFEkE5QLRf68Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: x-SuU91UR7CLG6kWTS2WSNSWnAq21RVx

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CDM9fde1Ty...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.170 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:55.289Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'tvWRnSGSHjV5xblApV54tYV5zcznC-QQ',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AtvWRnSGSHjV5xblApV54tYV5zcznC-QQ.xRYgETKtSlJMRaZq%2BF3FkaAfgxYIk7nlORKQ7CImk8o',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 60.006 ms - 170[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:55.929Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ciGqoQNe2TpnDNTjtKuHbETXP6B4mCiJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: m50FonYN-tH8XiXghAn7ZPpgcJPf1yEmlPEk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ciGqoQNe2TpnDNTjtKuHbETXP6B4mCiJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: T9OxrcJgEH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.178 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:56.028Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:56.177Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:56.177Z","userId":"68477d73a7199beb8d9c3ace","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.295 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:56.179Z"}
  console.log
    CSRF token generation: {
      sessionID: '6Z_Z0TT9_7rd3GdY66Z6oAhaM1AyZrqf',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TG2rXBWn-QYmFovg5Us0UNtER7Bf_HF40Rlk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6Z_Z0TT9_7rd3GdY66Z6oAhaM1AyZrqf

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7KWbOWBNQF...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.490 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:56.275Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:56.418Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:56.419Z","userId":"68477d74a7199beb8d9c3ad4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.838 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:56.421Z"}
  console.log
    CSRF token generation: {
      sessionID: '514mKnNJj3o1xISLEiuMQ2jy9CpHzzpJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WT72XoLm-Hbc5wWWSyAE4DYW1n3qypzGprEI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 514mKnNJj3o1xISLEiuMQ2jy9CpHzzpJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: EzHM9NF7_u...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.950 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:56.428Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '6Z_Z0TT9_7rd3GdY66Z6oAhaM1AyZrqf',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A6Z_Z0TT9_7rd3GdY66Z6oAhaM1AyZrqf.lKSjLZZ%2BFSDLUw2G%2BHO3AYnjISSFA%2FxLEjXaZia4wG4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m400[0m 55.987 ms - 80[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.060Z"}
  console.log
    CSRF token generation: {
      sessionID: 'E4a2TYLLzcih7n-CTPm8E-43vJ-uMksU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hQSK1D8u-fY8KKlxNg1TVPv0OLo8Zwgq9gYk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: E4a2TYLLzcih7n-CTPm8E-43vJ-uMksU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RhfrWLH__V...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.236 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.153Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:57.303Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:57.303Z","userId":"68477d75a7199beb8d9c3af1","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.097 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.306Z"}
  console.log
    CSRF token generation: {
      sessionID: '7DdDLtBjeczt37drOADxw4GV6BeqYyui',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QdKiCm6M-IPPrx8sjHD97CnRNWvViAcmgp_0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7DdDLtBjeczt37drOADxw4GV6BeqYyui

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 6HJ3xMI314...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.357 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.398Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:57.568Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:57.568Z","userId":"68477d75a7199beb8d9c3af7","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 170.751 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.571Z"}
  console.log
    CSRF token generation: {
      sessionID: 'HVLiKrJNDI8hk2NN9ssqBsjQZ0THjZ8k',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Naoouq36-QnijmY1Z53AAMDq91n7pdorj6fk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: HVLiKrJNDI8hk2NN9ssqBsjQZ0THjZ8k

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: O1MSp2hHSD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.134 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:57.582Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: '7DdDLtBjeczt37drOADxw4GV6BeqYyui',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7DdDLtBjeczt37drOADxw4GV6BeqYyui.ivF3kc%2FSxCWW7b0KmIko9TvWN92mLKLm1E%2BvNExVTYg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m409[0m 93.732 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.275Z"}
  console.log
    CSRF token generation: {
      sessionID: 'S4_mXRKHG7XDbPfqKd3F8NgY4HC8CMux',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fuyTg27I-QjUyyjkU92GVemkP_F016OKCsLU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: S4_mXRKHG7XDbPfqKd3F8NgY4HC8CMux

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 0QND5X8_L0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.283 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.402Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:58.562Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:58.563Z","userId":"68477d76a7199beb8d9c3b15","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 161.131 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.566Z"}
  console.log
    CSRF token generation: {
      sessionID: 'T9YeoMVzHdHaJU9yq1Frv3xS5eIV2tKS',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LRrW8Cvd-yW-Z_SODOPILTQACbZwo10ktxko

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: T9YeoMVzHdHaJU9yq1Frv3xS5eIV2tKS

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fzA2tVlTjV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.551 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.665Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:58.812Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:33:58.813Z","userId":"68477d76a7199beb8d9c3b1b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.413 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.816Z"}
  console.log
    CSRF token generation: {
      sessionID: 'yeUTtGTF2IKqmKCM55xiJjEfA7e1vYs6',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: iRam4LQs-VMVye2f98hhTdHFtSAgBL1ww0Dc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: yeUTtGTF2IKqmKCM55xiJjEfA7e1vYs6

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 4oEAtB-Fkt...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.949 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:58.909Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:59.085Z","userType":"administrator","username":"limited2@wavemax.com"}
info: undefined {"adminId":"LIMITED002","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:59.085Z","userId":"68477d76a7199beb8d9c3b21","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 176.002 ms - 655[0m
[34mdebug[39m: POST /api/v1/operators {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:59.088Z"}
  console.log
    CSRF check for: /api/v1/operators {
      sessionID: 'S4_mXRKHG7XDbPfqKd3F8NgY4HC8CMux',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AS4_mXRKHG7XDbPfqKd3F8NgY4HC8CMux.2zPsOZ9msUTtW45C%2BaC0mjZ3LKqwQMNL2B2ogdXpOPM',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/operators [33m403[0m 57.337 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:59.731Z"}
  console.log
    CSRF token generation: {
      sessionID: 'AvA243JVxu1G7gXIRTvLG1BdjYuiIJXD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZjxTpZ5d-kQV9NdqtGGJp9FmLgcfJmP0cksg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: AvA243JVxu1G7gXIRTvLG1BdjYuiIJXD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7SN952BGJr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.859 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:59.827Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:33:59.978Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:33:59.979Z","userId":"68477d77a7199beb8d9c3b3e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 152.232 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:33:59.982Z"}
  console.log
    CSRF token generation: {
      sessionID: 'l0mCgFHsYYHstfrH-5Hk7ObLWi8DnGDi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: uh8pgDBK-_Co1tejMXKwKluTS2CLzMUQi2Ao

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: l0mCgFHsYYHstfrH-5Hk7ObLWi8DnGDi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: g6LaDB1JmF...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.934 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:00.111Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:00.260Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:00.261Z","userId":"68477d77a7199beb8d9c3b44","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.594 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:00.263Z"}
  console.log
    CSRF token generation: {
      sessionID: '8Z2QVrHVOTrJt4W-IrZrl8kZ160wCAa4',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: QsXmG1jy-G6dfzGVxPzUNqCNUYw3Th5okK3k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8Z2QVrHVOTrJt4W-IrZrl8kZ160wCAa4

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Xgoc28FPIe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.727 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d78a7199beb8d9c3b4a {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:00.374Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d78a7199beb8d9c3b4a {
      sessionID: 'l0mCgFHsYYHstfrH-5Hk7ObLWi8DnGDi',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Al0mCgFHsYYHstfrH-5Hk7ObLWi8DnGDi.OFAkm4p1A0SHhtTHk49SSQ3tHtDM8KrGgfvZquOzkM8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"firstName":"Updated","lastName":"Name","shiftEnd":"18:00","shiftStart":"10:00","workStation":"Station Y"}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/68477d78a7199beb8d9c3b4a","targetId":"68477d78a7199beb8d9c3b4a","targetType":"operator","timestamp":"2025-06-10T00:34:00.519Z","userId":"68477d77a7199beb8d9c3b3e","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/68477d78a7199beb8d9c3b4a [32m200[0m 145.565 ms - 468[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.102Z"}
  console.log
    CSRF token generation: {
      sessionID: 'qQb2_WeqqQwZ6TcfxIvU0PlI3cSuHvkA',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: i3Ybv3fh-lbogW-W65fX_6UbjUYhFnDvdC5Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: qQb2_WeqqQwZ6TcfxIvU0PlI3cSuHvkA

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: sQcHKxdJEV...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.973 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.200Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:01.351Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:01.351Z","userId":"68477d79a7199beb8d9c3b66","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.107 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.354Z"}
  console.log
    CSRF token generation: {
      sessionID: 'TnS_Ev-FyfOFRKYQLyncPtrG0wQWIJIy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wdunkJ9T-5Nme5XPLrhCItrh4gYVcxHMR5X8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: TnS_Ev-FyfOFRKYQLyncPtrG0wQWIJIy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TMvmaTZ4cu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.519 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.451Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:01.620Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:01.620Z","userId":"68477d79a7199beb8d9c3b6c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 169.726 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.623Z"}
  console.log
    CSRF token generation: {
      sessionID: 'p3FmCFBVZmu-I5t2-BlYxMAyMca3cR9_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: BxGPofmL-kHUqj2T2UStI8hi5udh4tJupnv8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: p3FmCFBVZmu-I5t2-BlYxMAyMca3cR9_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: vOiFuGoG24...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.456 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d79a7199beb8d9c3b72 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.723Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d79a7199beb8d9c3b72 {
      sessionID: 'TnS_Ev-FyfOFRKYQLyncPtrG0wQWIJIy',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ATnS_Ev-FyfOFRKYQLyncPtrG0wQWIJIy.txy7bDKoZVvOdO7Gpzk6Z%2BVa8B6Am%2FvrKSLuvUuwrh8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/68477d79a7199beb8d9c3b72","targetId":"68477d79a7199beb8d9c3b72","targetType":"operator","timestamp":"2025-06-10T00:34:01.984Z","userId":"68477d79a7199beb8d9c3b66","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/68477d79a7199beb8d9c3b72 [32m200[0m 261.947 ms - 471[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:01.988Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:02.136Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:02.137Z","userId":"68477d79a7199beb8d9c3b72","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.197 ms - 632[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:02.726Z"}
  console.log
    CSRF token generation: {
      sessionID: 'BuA3BXu5RZmjsH8ngOqKIKoelAbRJIsj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2cPuNyfa-xgt8Fp8hGqCQVYlOXQcD6cBEf8s

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: BuA3BXu5RZmjsH8ngOqKIKoelAbRJIsj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Dgyb4dyCuE...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.282 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:02.851Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:03.026Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:03.027Z","userId":"68477d7aa7199beb8d9c3b94","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 176.146 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:03.031Z"}
  console.log
    CSRF token generation: {
      sessionID: 'g15oCt_rn6XI2v6O1_CNi1WzVALB5juJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Z0WbJ5Ea-P-_aNnRKKhMiTKx6psgJkD8hHJM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: g15oCt_rn6XI2v6O1_CNi1WzVALB5juJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: j_chWwt52p...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.621 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:03.148Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:03.302Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:03.303Z","userId":"68477d7ba7199beb8d9c3b9a","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 154.729 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:03.306Z"}
  console.log
    CSRF token generation: {
      sessionID: 'p40cdNWFNh_OABf1KNilflXmyJoB6mo5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0TM0dYiv-xQpEt8xB-ScNtHHNUKLlyIfrKEE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: p40cdNWFNh_OABf1KNilflXmyJoB6mo5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OyLV65gj7-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.460 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d7ba7199beb8d9c3ba0 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:03.395Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d7ba7199beb8d9c3ba0 {
      sessionID: 'g15oCt_rn6XI2v6O1_CNi1WzVALB5juJ',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ag15oCt_rn6XI2v6O1_CNi1WzVALB5juJ.R6MhDGiilXxbxHVWVrZYXkOQZHS%2FRBe7zub%2Bqo3jqPE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{"isActive":false}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/68477d7ba7199beb8d9c3ba0","targetId":"68477d7ba7199beb8d9c3ba0","targetType":"operator","timestamp":"2025-06-10T00:34:03.540Z","userId":"68477d7aa7199beb8d9c3b94","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/68477d7ba7199beb8d9c3ba0 [32m200[0m 146.464 ms - 472[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:03.544Z"}
info: undefined {"eventType":"LOGIN_FAILED","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":"Account inactive","success":false,"timestamp":"2025-06-10T00:34:03.573Z","userType":"operator","username":"target@wavemax.com"}
[0mPOST /api/v1/auth/operator/login [33m403[0m 28.965 ms - 82[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.155Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hSIrjrxIU09nXBUA35XvlNW4Oz9_GG81',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WaVc65Tg-Sv81Bz77f6HMk0BGMx6caKK_2CM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hSIrjrxIU09nXBUA35XvlNW4Oz9_GG81

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: KhCVyObYSm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.028 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.266Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:04.416Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:04.417Z","userId":"68477d7ca7199beb8d9c3bbd","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.346 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.420Z"}
  console.log
    CSRF token generation: {
      sessionID: 'o_KckzzYIMEIOudlCG8GtdvW7__yXfus',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AMOyUrAp-rGvE0ALp8tSUizMo6yjuZt-yAJk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: o_KckzzYIMEIOudlCG8GtdvW7__yXfus

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: z-kXGzTcfJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.203 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.516Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:04.671Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:04.672Z","userId":"68477d7ca7199beb8d9c3bc3","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 155.645 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.674Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NW5XCVM05x2tclpi-olunVRZRzkb5ZS_',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IFnzlI1W-diZhKad8MusIVeWpkN95jrGt6JI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NW5XCVM05x2tclpi-olunVRZRzkb5ZS_

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: hapb2HGHNm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.855 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.771Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:04.918Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:04.919Z","userId":"68477d7ca7199beb8d9c3bc9","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.990 ms - 632[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d7ca7199beb8d9c3bc9 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:04.921Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d7ca7199beb8d9c3bc9 {
      sessionID: 'hSIrjrxIU09nXBUA35XvlNW4Oz9_GG81',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AhSIrjrxIU09nXBUA35XvlNW4Oz9_GG81.bhXrqi5p72GiFCuyJWK0FoBM%2FAEhl%2BshppX%2FRzA7TAs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d7ca7199beb8d9c3bc9 [32m200[0m 174.247 ms - 266[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:05.666Z"}
  console.log
    CSRF token generation: {
      sessionID: 'vtp8PXs0GIw1xnv97A48oqU69UyAawEi',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mHXZA4Da-GWBSN9T9pGG9suF6DizZvV2mcng

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: vtp8PXs0GIw1xnv97A48oqU69UyAawEi

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Jk5aA0gt0c...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.483 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:05.767Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:05.942Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:05.942Z","userId":"68477d7da7199beb8d9c3be8","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 175.454 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:05.946Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hkuQP8LCgPEKtz_ZuM9SAR75cUaM3WvP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 03oiVrnZ-0OFj8DPTWAFYNnSAPYsTl8ULD4E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hkuQP8LCgPEKtz_ZuM9SAR75cUaM3WvP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 9edojUGTfY...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.160 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:06.055Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:06.206Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:06.207Z","userId":"68477d7da7199beb8d9c3bee","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 151.810 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:06.209Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Blw4WCoIucWZTff47ygU4kmtQFDrkfrj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HfVJgZkz-WsoU5Kfro6LTNbNpDe5S-sktMM0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Blw4WCoIucWZTff47ygU4kmtQFDrkfrj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1HllXg1SKB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.568 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:06.304Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:06.462Z","userType":"operator","username":"target@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"TARGET001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:06.463Z","userId":"68477d7ea7199beb8d9c3bf4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 158.347 ms - 632[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d7ea7199beb8d9c3bf4 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:06.465Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d7ea7199beb8d9c3bf4 {
      sessionID: 'vtp8PXs0GIw1xnv97A48oqU69UyAawEi',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Avtp8PXs0GIw1xnv97A48oqU69UyAawEi.6NKLBjjkiOdG520eTPqkWqztOhzgNE%2BpatEbxa6hbJQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d7ea7199beb8d9c3bf4 [32m200[0m 118.732 ms - 271[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.161Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gP9ueKsULO0tJi0Z9FhOeUWqZm9vA-RR',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LSBtvKAc-VVLqXtEuNOmzQamM__6u96gD0oM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gP9ueKsULO0tJi0Z9FhOeUWqZm9vA-RR

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: BNTIysgG4Z...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.301 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.258Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:07.435Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:07.436Z","userId":"68477d7fa7199beb8d9c3c13","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 177.741 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.440Z"}
  console.log
    CSRF token generation: {
      sessionID: 'u6a1fdyzCQlbPjCbjxb_7Yk9N8KiPJS5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xh9aJ34N-hytMiRAld61NnLL0wpEh73G2OD4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: u6a1fdyzCQlbPjCbjxb_7Yk9N8KiPJS5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aapwryDXgc...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.410 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.531Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:07.674Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:07.674Z","userId":"68477d7fa7199beb8d9c3c19","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 143.269 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.677Z"}
  console.log
    CSRF token generation: {
      sessionID: 'S4VgCRCWmS4Ca-1GwTuw5PbC8lhiZIY3',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: P9gDCSSr-EQ6wCLxIS7pE0zfmyzdfTQy0h7c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: S4VgCRCWmS4Ca-1GwTuw5PbC8lhiZIY3

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rRUYH-btdy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.580 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d7fa7199beb8d9c3c1f {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:07.772Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d7fa7199beb8d9c3c1f {
      sessionID: 'u6a1fdyzCQlbPjCbjxb_7Yk9N8KiPJS5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Au6a1fdyzCQlbPjCbjxb_7Yk9N8KiPJS5.I7q2FsEquOIzfjyiHrDTEqlUbnlHPIHuu9Aeezn%2FbmA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"UPDATE_OPERATOR","details":{"updates":{}},"ip":"::ffff:127.0.0.1","method":"PATCH","path":"/68477d7fa7199beb8d9c3c1f","targetId":"68477d7fa7199beb8d9c3c1f","targetType":"operator","timestamp":"2025-06-10T00:34:07.924Z","userId":"68477d7fa7199beb8d9c3c13","userRole":"administrator","userType":"administrator"}
[0mPATCH /api/v1/operators/68477d7fa7199beb8d9c3c1f [32m200[0m 153.274 ms - 471[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:08.512Z"}
  console.log
    CSRF token generation: {
      sessionID: 'UKlQDpLFweUzIGBK8O_WYIVVPJFUfZ8A',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2oIAJeCY-GvJemTpBlVJCa-GKx5swgnqdoqM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: UKlQDpLFweUzIGBK8O_WYIVVPJFUfZ8A

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: WfmOuLL9kB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.772 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:08.628Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:08.777Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:08.777Z","userId":"68477d80a7199beb8d9c3c3b","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 149.123 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:08.780Z"}
  console.log
    CSRF token generation: {
      sessionID: 'o5szDc95ywiudTCuM5Xnm2jurPgguYZN',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: V8ENik65-MoxFD9cxIKWbtKJP9nMPdSBR0EU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: o5szDc95ywiudTCuM5Xnm2jurPgguYZN

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7rIAFdq6Qy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.028 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:08.881Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:09.043Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:09.051Z","userId":"68477d80a7199beb8d9c3c41","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 170.107 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:09.056Z"}
  console.log
    CSRF token generation: {
      sessionID: '9L8MsdRLGqY3Gxs1NI2PxaCwFoNnVMsU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: hyNSeFe2-CggTzrmR0z9Ssiz59gfrK2aMUP8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9L8MsdRLGqY3Gxs1NI2PxaCwFoNnVMsU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: B_KTk0-KWL...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 29.571 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d81a7199beb8d9c3c47 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:09.191Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d81a7199beb8d9c3c47 {
      sessionID: 'o5szDc95ywiudTCuM5Xnm2jurPgguYZN',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ao5szDc95ywiudTCuM5Xnm2jurPgguYZN.dkAwsjKKoLsOT9uPr1D%2B6%2BEmQE06SR8lIdpXSdcLtqs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d81a7199beb8d9c3c47 [33m409[0m 173.328 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:09.974Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ZAnSladyU2qwWDLP5wbdMQkiwNRV5fOD',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sL1BggwJ-o6vb-XJtZW8j6_2ewVYPa5UxzWY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ZAnSladyU2qwWDLP5wbdMQkiwNRV5fOD

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: h3oih9qYp2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.344 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:10.077Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:10.227Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:10.227Z","userId":"68477d81a7199beb8d9c3c63","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 150.387 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:10.230Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mxkOc-xtKRdJYQliD2qBVg1DbwQ0xqDQ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: c1fohfzT-eM4NuQMyRE-ldH6GAubvxQghEHE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mxkOc-xtKRdJYQliD2qBVg1DbwQ0xqDQ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 630O-Xxx4J...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.918 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:10.325Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:10.471Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:10.471Z","userId":"68477d82a7199beb8d9c3c69","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 147.047 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:10.474Z"}
  console.log
    CSRF token generation: {
      sessionID: 'rQeXYaeu15r-HiTkk45jZo3lu3XWf8Gm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9Ngqj5bL-MT8dM9XXi_yIL6xtOzYCmQArqzM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: rQeXYaeu15r-HiTkk45jZo3lu3XWf8Gm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OL55wrSNo2...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.320 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/68477d82a7199beb8d9c3c6f {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:10.577Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d82a7199beb8d9c3c6f {
      sessionID: 'mxkOc-xtKRdJYQliD2qBVg1DbwQ0xqDQ',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AmxkOc-xtKRdJYQliD2qBVg1DbwQ0xqDQ.jJjcDHEWaPZpxb%2BrT6t0OvWw20Y%2FW87Jy75IxAQScsU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"1","11":"9","12":"9","13":"b","14":"e","15":"b","16":"8","17":"d","18":"9","19":"c","2":"4","20":"3","21":"c","22":"6","23":"3","3":"7","4":"7","5":"d","6":"8","7":"1","8":"a","9":"7","timestamp":"2025-06-10T00:34:10.734Z"}
[0mDELETE /api/v1/operators/68477d82a7199beb8d9c3c6f [32m200[0m 156.942 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.352Z"}
  console.log
    CSRF token generation: {
      sessionID: '6Bu2TxlJ1QsSWD251R4BZCd8ynVmS0t-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: SJOtrmub-z7EqTvudVDJLCcdsJ6xvm3fPiFY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 6Bu2TxlJ1QsSWD251R4BZCd8ynVmS0t-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: aLkQFGDzVd...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.451 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.444Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:11.587Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:11.587Z","userId":"68477d83a7199beb8d9c3c8c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 143.408 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.590Z"}
  console.log
    CSRF token generation: {
      sessionID: 'C5vOCdxBOvfn6eWFosu4iSIOhjdAM6U2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: lakQwDH7-suHkukwh3TDathZWjI4nCGR7hN0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: C5vOCdxBOvfn6eWFosu4iSIOhjdAM6U2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zkc7kq1Z1D...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 9.702 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.688Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:11.858Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:11.859Z","userId":"68477d83a7199beb8d9c3c92","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 170.610 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.861Z"}
  console.log
    CSRF token generation: {
      sessionID: 'D-CShWMId_Ce0VeQFPBTEl4mhMCz50UW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7c7k7p9R-LXs6bcMUDBqhzgPwLimY_iXuohY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: D-CShWMId_Ce0VeQFPBTEl4mhMCz50UW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QWJY4sF_9D...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.512 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/68477d83a7199beb8d9c3c98 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:11.987Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d83a7199beb8d9c3c98 {
      sessionID: 'C5vOCdxBOvfn6eWFosu4iSIOhjdAM6U2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AC5vOCdxBOvfn6eWFosu4iSIOhjdAM6U2.aW3nEb%2F9TW8GU%2FUJ2rNRDQmDmyXzxiGQaSmKMoz7tvo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/68477d83a7199beb8d9c3c98 [33m400[0m 111.264 ms - 71[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:12.660Z"}
  console.log
    CSRF token generation: {
      sessionID: '2GftI8I8vq7IzXAhzohKIFSw-_MdeCs2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: zOuI4aP2-R7-U4o1IQwFPQC6Y6PR7EVjM7IU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2GftI8I8vq7IzXAhzohKIFSw-_MdeCs2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RL0OpR2tyL...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.441 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:12.751Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:12.902Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:12.902Z","userId":"68477d84a7199beb8d9c3cb4","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 151.042 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:12.905Z"}
  console.log
    CSRF token generation: {
      sessionID: 'WpVSQCXTwPYHXU1QXvespdHpSij0odfo',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HZtM1xle-QgJta7AVT2rADJY2f6itiKuMsJs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: WpVSQCXTwPYHXU1QXvespdHpSij0odfo

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: D7w7RjP01h...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.548 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:13.004Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:13.157Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:13.158Z","userId":"68477d84a7199beb8d9c3cba","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 153.613 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:13.161Z"}
  console.log
    CSRF token generation: {
      sessionID: 'hwScA-P290qhs7MNG6Im88yzma3uiQNJ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Ton7oy1r-hR3iuThaL9IouppvigFDI3xbOSI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: hwScA-P290qhs7MNG6Im88yzma3uiQNJ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: f9LdVaF3ce...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.042 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:13.348Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:13.495Z","userType":"administrator","username":"limited3@wavemax.com"}
info: undefined {"adminId":"LIMITED003","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:13.495Z","userId":"68477d85a7199beb8d9c3cc2","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.857 ms - 655[0m
[34mdebug[39m: DELETE /api/v1/operators/68477d85a7199beb8d9c3cc0 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:13.498Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d85a7199beb8d9c3cc0 {
      sessionID: '2GftI8I8vq7IzXAhzohKIFSw-_MdeCs2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2GftI8I8vq7IzXAhzohKIFSw-_MdeCs2.DCKo1R8i05y%2B7hxyG2ucVAT%2B68q%2BIqvgvvmUxm8Pcbo',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/68477d85a7199beb8d9c3cc0 [33m403[0m 57.201 ms - 81[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.128Z"}
  console.log
    CSRF token generation: {
      sessionID: '7VdOtG8IFEaPBKoI-isSObIfUC9-7uzj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: L8luZsOd-b7FF-zKV4oNrEaHV_jkYYw0Ue0U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7VdOtG8IFEaPBKoI-isSObIfUC9-7uzj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HOyrBSRkV0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.693 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.226Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:14.373Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:14.373Z","userId":"68477d86a7199beb8d9c3cdf","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 147.117 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.376Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VAVabIZsuD47Qce4P7Bik_qew6l3igg2',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Q3qFzwPR-OhS3kwXH73AccQT_bwN2QnF-rJ0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VAVabIZsuD47Qce4P7Bik_qew6l3igg2

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 6tJNc-lG4u...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.377 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.466Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:14.610Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:14.610Z","userId":"68477d86a7199beb8d9c3ce5","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.032 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.612Z"}
  console.log
    CSRF token generation: {
      sessionID: 'mosCoNtQ7i9qqPkfK74JklzCbPlLotAs',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FROUYYiU-uD4Tg9CRWZ7AOARjTVtI0733cz4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: mosCoNtQ7i9qqPkfK74JklzCbPlLotAs

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Pqy4TilrBJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.726 ms - 67[0m
[34mdebug[39m: DELETE /api/v1/operators/68477d86a7199beb8d9c3ced {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:14.700Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d86a7199beb8d9c3ced {
      sessionID: 'VAVabIZsuD47Qce4P7Bik_qew6l3igg2',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AVAVabIZsuD47Qce4P7Bik_qew6l3igg2.P8T4ZLZIpclnuuM%2FzSvEG2txVIUWbM9%2BtNUVwSjhFKw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mDELETE /api/v1/operators/68477d86a7199beb8d9c3ced [33m404[0m 85.804 ms - 48[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.386Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jT26AePPeAaJOIOLCD21fL89GrE38SlP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ebzqy2qH-VPaAN4AfJrR4ZhEp7KR-UXRU5Vo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jT26AePPeAaJOIOLCD21fL89GrE38SlP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ku8F8XOJqC...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.073 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.483Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:15.640Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:15.640Z","userId":"68477d87a7199beb8d9c3d06","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 156.853 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.643Z"}
  console.log
    CSRF token generation: {
      sessionID: '80nByReQjEb-UvRai5J_vKRv4tmpXC9A',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1t9nvMXs-oflUJo5UCLjaHQm1W58kx3_NMOs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 80nByReQjEb-UvRai5J_vKRv4tmpXC9A

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Bs6HHmD3SJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.139 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.738Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:15.887Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:15.888Z","userId":"68477d87a7199beb8d9c3d0c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 149.638 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.891Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gDqKhGkhpr0tEGLJBj3dDfMJfY1sQUG9',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: L73ibAFd-2KJO2UOaqjbnp5AK9pJTiE1p7rI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gDqKhGkhpr0tEGLJBj3dDfMJfY1sQUG9

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 1Nns9kmVFm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.836 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/68477d87a7199beb8d9c3d12/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:15.982Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d87a7199beb8d9c3d12/reset-pin {
      sessionID: '80nByReQjEb-UvRai5J_vKRv4tmpXC9A',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A80nByReQjEb-UvRai5J_vKRv4tmpXC9A.Tv%2FdOTDB90jLOLJzdareEjlddz1NW6pA3N8rBEP2VsA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"1","11":"9","12":"9","13":"b","14":"e","15":"b","16":"8","17":"d","18":"9","19":"c","2":"4","20":"3","21":"d","22":"0","23":"6","3":"7","4":"7","5":"d","6":"8","7":"7","8":"a","9":"7","timestamp":"2025-06-10T00:34:16.159Z"}
[0mPOST /api/v1/operators/68477d87a7199beb8d9c3d12/reset-pin [32m200[0m 177.140 ms - 51[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:16.162Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:16.385Z","userType":"operator","username":"pinreset@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"PIN001","path":"/operator/login","shift":"undefined - undefined","timestamp":"2025-06-10T00:34:16.385Z","userId":"68477d87a7199beb8d9c3d12","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 223.848 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:16.949Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Apg_OIzk2wQiOCrZhGI1S43NJUDx63SI',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1v8FVJ5Q-Nc6RBr9N2TBj2QE_BsX77JkHtA4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Apg_OIzk2wQiOCrZhGI1S43NJUDx63SI

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CrAnAiiBVe...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.372 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:17.048Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:17.194Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:17.194Z","userId":"68477d88a7199beb8d9c3d31","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 145.905 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:17.196Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SBYEmURRhOY-IpxFZWkOnPMe1oLYLrt1',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xLcMfEEQ-HFC_NCtHKPO19N5k9eWOON5mWqc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SBYEmURRhOY-IpxFZWkOnPMe1oLYLrt1

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dk21QjUAUr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.503 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:17.292Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:17.438Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:17.438Z","userId":"68477d89a7199beb8d9c3d37","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 146.623 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:17.441Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kIN4av8HiO6kqIMuvT9PHTIU2IUSmvPF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: m925xJZk-1HXdWTyyA672agcAtjlqltor4h0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kIN4av8HiO6kqIMuvT9PHTIU2IUSmvPF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QA18HSFQXw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.006 ms - 67[0m
[34mdebug[39m: POST /api/v1/operators/68477d89a7199beb8d9c3d3d/reset-pin {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:17.563Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d89a7199beb8d9c3d3d/reset-pin {
      sessionID: 'SBYEmURRhOY-IpxFZWkOnPMe1oLYLrt1',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ASBYEmURRhOY-IpxFZWkOnPMe1oLYLrt1.H9spzclcnBDUUVDQDz8nwJg5k0CWt4zXBFx6ffI99sg',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"0":"6","1":"8","10":"1","11":"9","12":"9","13":"b","14":"e","15":"b","16":"8","17":"d","18":"9","19":"c","2":"4","20":"3","21":"d","22":"3","23":"1","3":"7","4":"7","5":"d","6":"8","7":"8","8":"a","9":"7","timestamp":"2025-06-10T00:34:17.732Z"}
[0mPOST /api/v1/operators/68477d89a7199beb8d9c3d3d/reset-pin [32m200[0m 169.938 ms - 51[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:18.519Z"}
  console.log
    CSRF token generation: {
      sessionID: 'jq9YnJ49J59lAwi0Xt0VGJzfuNrzBknI',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HWNkYgoP-jEFpdlciRSOxK3GRDkjpAkUEeEM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: jq9YnJ49J59lAwi0Xt0VGJzfuNrzBknI

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Nd2_0a-jq7...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.473 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:18.614Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:18.760Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:18.761Z","userId":"68477d8aa7199beb8d9c3d5a","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.477 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:18.763Z"}
  console.log
    CSRF token generation: {
      sessionID: 'a-9FTcEcuZjVL-qIbexm4KySc7XL2h7i',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: m5u2HFPH-CE3ADvV5ZQkA3AxZE-cDO00xp9U

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: a-9FTcEcuZjVL-qIbexm4KySc7XL2h7i

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kQfJKMnmpA...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.055 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:18.854Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:19.030Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:19.030Z","userId":"68477d8aa7199beb8d9c3d60","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 176.670 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:19.033Z"}
  console.log
    CSRF token generation: {
      sessionID: 'QOR-g-j3_E7IzrJ5l-D4fYx6LG9D7w35',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 68CWK0Qr-6kNPLu85F6T2XehVWhj7RUPPXiQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: QOR-g-j3_E7IzrJ5l-D4fYx6LG9D7w35

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: PkklJCvPT9...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.979 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:19.297Z"}
[0mGET /api/v1/operators/available [32m200[0m 83.228 ms - 597[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:19.966Z"}
  console.log
    CSRF token generation: {
      sessionID: '4HbU9ocCXx9Zp1_hd0_dNNPoCCRnm5TP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: saAjSTb9-7l5WqmacorBgjx7-oE_nwDApQmg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4HbU9ocCXx9Zp1_hd0_dNNPoCCRnm5TP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eGmnJk3Tyu...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.543 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:20.055Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:20.215Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:20.216Z","userId":"68477d8ba7199beb8d9c3d86","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 160.688 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:20.218Z"}
  console.log
    CSRF token generation: {
      sessionID: 'v9RmHLdEau7oCVzYzj0XhPnIuflcPiJX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: mhAJXj4O-cyyEf1eBocVrAIkm-6oTMzBttW8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: v9RmHLdEau7oCVzYzj0XhPnIuflcPiJX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: lMvR2W65Ye...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.245 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:20.310Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:20.458Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:20.458Z","userId":"68477d8ca7199beb8d9c3d8c","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 148.356 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:20.461Z"}
  console.log
    CSRF token generation: {
      sessionID: 'blXaXmsR5UWn35eAqzj1S2YVXmpYkq3J',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 4ZstKao4-gOL1wujutFQnomTnkEEAfws_19Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: blXaXmsR5UWn35eAqzj1S2YVXmpYkq3J

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: m1v-nDOu29...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.532 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available?limit=2 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:20.739Z"}
[0mGET /api/v1/operators/available?limit=2 [32m200[0m 86.242 ms - 430[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:21.404Z"}
  console.log
    CSRF token generation: {
      sessionID: 'gEl4aOAsK6h3JktmWFdHg_bs3eJAo_Js',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: u49lCPNf-mUpnJTg_jwYlES8WhDE_Kk_lrCI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: gEl4aOAsK6h3JktmWFdHg_bs3eJAo_Js

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: EMXeRnyONT...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.606 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:21.504Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:21.645Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:21.646Z","userId":"68477d8da7199beb8d9c3db2","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 141.485 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:21.648Z"}
  console.log
    CSRF token generation: {
      sessionID: 'DApnJOTniW5IDzo9MCOMutrwS57al0ZG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: cn8bbGCr-5CH-llS-7xecNv9Bok1deVYM30E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: DApnJOTniW5IDzo9MCOMutrwS57al0ZG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QsqUBAjBhD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.311 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:21.740Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:21.895Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:21.896Z","userId":"68477d8da7199beb8d9c3db8","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 156.279 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:21.899Z"}
  console.log
    CSRF token generation: {
      sessionID: 'POZ6l1iRWg1z4JaWKpxzX3p2mY-spVXb',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: LV3EA8Wu-rSqCO8nC_re3hq-4gDtx_zAHvFE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: POZ6l1iRWg1z4JaWKpxzX3p2mY-spVXb

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -_5B3EAjnp...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.013 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:22.157Z"}
[0mGET /api/v1/operators/available [32m200[0m 82.976 ms - 597[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:22.817Z"}
  console.log
    CSRF token generation: {
      sessionID: 'iFdJ8GaUEFZ7t0reDOSBETMwM-RcJtYP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: TU8Yo0SV-DlSwieYaRGTXsyd5wks-6Ru8lsg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: iFdJ8GaUEFZ7t0reDOSBETMwM-RcJtYP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: mOExdZne32...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.794 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:22.946Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:23.099Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:23.099Z","userId":"68477d8ea7199beb8d9c3dde","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 153.348 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:23.102Z"}
  console.log
    CSRF token generation: {
      sessionID: 'VtYBM74FUV5BpxtwxgZOzWQi7RYV78-F',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: orqW2LEA-lzv7VA7UIwoKHp5VBgIjmwYqCgU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: VtYBM74FUV5BpxtwxgZOzWQi7RYV78-F

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OwJfEv-6FM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.353 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:23.225Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:23.368Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:23.368Z","userId":"68477d8fa7199beb8d9c3de4","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 142.835 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:23.370Z"}
  console.log
    CSRF token generation: {
      sessionID: 'FM9QxM6kdLbbmSg3gTLeoXGrtt7l6LlE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bKO4oQkv-V5vBriRNmLAMaAZ_uxmbnh_bUiM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: FM9QxM6kdLbbmSg3gTLeoXGrtt7l6LlE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: XsYEN6gIAH...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.141 ms - 67[0m
[34mdebug[39m: GET /api/v1/operators/available {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:23.647Z"}
[0mGET /api/v1/operators/available [33m401[0m 1.477 ms - 47[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.220Z"}
  console.log
    CSRF token generation: {
      sessionID: 'n99G7hnwWF0OtPZgwdtaGRg8lbERE0EH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: PT3Frea9-viKKPgq1GyMXjCtIMclcxTqPQRU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: n99G7hnwWF0OtPZgwdtaGRg8lbERE0EH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: DLp81i9OVP...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.195 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.333Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:24.505Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:24.505Z","userId":"68477d90a7199beb8d9c3e07","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 172.195 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.508Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ftpDbDRACWejwm4AzE4AZA6JU2WNzUfy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZLmm4GMw-qGlWgjXzg5RvBBBqb5543mZQWWM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ftpDbDRACWejwm4AzE4AZA6JU2WNzUfy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 35G3OXjR3A...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.506 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.603Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:24.764Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:24.765Z","userId":"68477d90a7199beb8d9c3e0d","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 162.690 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.769Z"}
  console.log
    CSRF token generation: {
      sessionID: 'tfQhHOpICc9gF6yW_GSRLgxX7Rs8WDbG',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HNIErral-XXkiew394F_vrxFQ2eu7c_QTW84

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: tfQhHOpICc9gF6yW_GSRLgxX7Rs8WDbG

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: x2I9jZmtbi...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.170 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d90a7199beb8d9c3e13/stats {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:24.868Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d90a7199beb8d9c3e13/stats {
      sessionID: 'ftpDbDRACWejwm4AzE4AZA6JU2WNzUfy',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AftpDbDRACWejwm4AzE4AZA6JU2WNzUfy.aNAKwvedVfgBQdzvyHOfL23vcGOoOg5YP5lDc6Hht04',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d90a7199beb8d9c3e13/stats [32m200[0m 117.896 ms - 267[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:25.542Z"}
  console.log
    CSRF token generation: {
      sessionID: 'MSi0h_-dgfzjYykkFtChDyg_TJCezYu8',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kVXea983-A8H1a4WnoWWrCpfIEmRgPTNnoJs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: MSi0h_-dgfzjYykkFtChDyg_TJCezYu8

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: -GdNS8EDvB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.912 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:25.647Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:25.822Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:25.822Z","userId":"68477d91a7199beb8d9c3e2e","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 175.445 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:25.826Z"}
  console.log
    CSRF token generation: {
      sessionID: 'S0GJ5aAVxoi3B7P-zWVgfUHFYUoQUwzt',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7fCocTkM-D36q9Xf4D55YXAo48q4LR0IdJRs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: S0GJ5aAVxoi3B7P-zWVgfUHFYUoQUwzt

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CZ5uDAGCQG...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.896 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:25.933Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:26.085Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:26.085Z","userId":"68477d91a7199beb8d9c3e34","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 152.275 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:26.088Z"}
  console.log
    CSRF token generation: {
      sessionID: '_KxpgKQsYRdvJungleGW8yPqd67SgDiW',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: j2aYPMUv-GTNVS_HjqHadXEHeTA9w6S6hHbU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: _KxpgKQsYRdvJungleGW8yPqd67SgDiW

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: QnLep_zu8-...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.429 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d92a7199beb8d9c3e3a/stats {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:26.181Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d92a7199beb8d9c3e3a/stats {
      sessionID: 'S0GJ5aAVxoi3B7P-zWVgfUHFYUoQUwzt',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AS0GJ5aAVxoi3B7P-zWVgfUHFYUoQUwzt.TYhpkTDuB77js8Lh7zSi%2BDBcMgLFyc59eVqygq%2BhEdE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d92a7199beb8d9c3e3a/stats [32m200[0m 111.706 ms - 252[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:26.864Z"}
  console.log
    CSRF token generation: {
      sessionID: 'btX65G1KU3FAje3-z0xentdewFuPBiXE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: xNfNEFgw-OSW_b4PmI8wFCROJcajJKsCoXMk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: btX65G1KU3FAje3-z0xentdewFuPBiXE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fXl2cemA2I...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.212 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:26.961Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:27.106Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:27.107Z","userId":"68477d92a7199beb8d9c3e55","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 146.270 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:27.110Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pJdJ165jrn1esVdqWli_3UBGwnXccv3m',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fyR3CSrg-V9FO-fo978HFRVT2u1Axv0ZQM1k

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pJdJ165jrn1esVdqWli_3UBGwnXccv3m

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: eZYDnYTVqb...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.119 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:27.212Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:27.371Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:27.372Z","userId":"68477d93a7199beb8d9c3e5b","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 160.191 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:27.375Z"}
  console.log
    CSRF token generation: {
      sessionID: 'r0A0s2plUmSL_7L0MN8J7f-gfXWXu-St',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HP9F3bjX-2SJ-n8Pzk57hJWJoDueY_iHmR-g

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: r0A0s2plUmSL_7L0MN8J7f-gfXWXu-St

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zko4g1DGjs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.443 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d93a7199beb8d9c3e61/stats {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:27.476Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d93a7199beb8d9c3e61/stats {
      sessionID: 'pJdJ165jrn1esVdqWli_3UBGwnXccv3m',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ApJdJ165jrn1esVdqWli_3UBGwnXccv3m.6NFrKOHTyPF8R2ubWJoAIFRpVT%2F9xQ7%2FIPUGtOfK2Is',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d93a7199beb8d9c3e61/stats [32m200[0m 131.373 ms - 268[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.183Z"}
  console.log
    CSRF token generation: {
      sessionID: '9s0UpBFYcj2yWFsonoeLMr-HVJppeC4u',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1X81yoJi-uXQDT61Fo58rGTPM0EQB2Y2q4eo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9s0UpBFYcj2yWFsonoeLMr-HVJppeC4u

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: JHrgm1rf1K...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 8.226 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/administrator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.307Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:28.497Z","userType":"administrator","username":"superuser@wavemax.com"}
info: undefined {"adminId":"ADMIN001","ip":"::ffff:127.0.0.1","method":"POST","path":"/administrator/login","timestamp":"2025-06-10T00:34:28.497Z","userId":"68477d94a7199beb8d9c3e7c","userType":"administrator"}
[0mPOST /api/v1/auth/administrator/login [32m200[0m 190.460 ms - 618[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.500Z"}
  console.log
    CSRF token generation: {
      sessionID: 'DRXmAifyY5wszvnS-oQTNE7Rdw14F5PZ',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qwXXfF2r-0URJbL1voONHY_k0eEiHLwZhja8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: DRXmAifyY5wszvnS-oQTNE7Rdw14F5PZ

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fBZB1pxJ5X...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.932 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/operator/login {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.593Z"}
info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/operator/login","reason":null,"success":true,"timestamp":"2025-06-10T00:34:28.737Z","userType":"operator","username":"operator@wavemax.com"}
info: undefined {"ip":"::ffff:127.0.0.1","method":"POST","operatorId":"OPR001","path":"/operator/login","shift":"00:00 - 23:59","timestamp":"2025-06-10T00:34:28.738Z","userId":"68477d94a7199beb8d9c3e82","userType":"operator"}
[0mPOST /api/v1/auth/operator/login [32m200[0m 144.960 ms - 625[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.741Z"}
  console.log
    CSRF token generation: {
      sessionID: 'GgxFQAI1vBIqEZ54nW6diOQKMhtaFVJ-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9oPQ2BCs-8iU9WJTkO0WpqwfH3qa6GAFUZn4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: GgxFQAI1vBIqEZ54nW6diOQKMhtaFVJ-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: fm90VXUiSs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.865 ms - 67[0m
[34mdebug[39m: PATCH /api/v1/operators/68477d94a7199beb8d9c3e88/stats {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:28.842Z"}
  console.log
    CSRF check for: /api/v1/operators/68477d94a7199beb8d9c3e88/stats {
      sessionID: 'DRXmAifyY5wszvnS-oQTNE7Rdw14F5PZ',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ADRXmAifyY5wszvnS-oQTNE7Rdw14F5PZ.0rDpnCl%2Fj1Krt7c81iConW7KHoXjHM5UJYL9SYU55Ek',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPATCH /api/v1/operators/68477d94a7199beb8d9c3e88/stats [33m400[0m 60.144 ms - 62[0m
PASS tests/integration/operator.test.js (54.417 s)
  Operator Integration Tests
    GET /api/v1/operators
      ✓ should get all operators with admin token (2164 ms)
      ✓ should filter by active status (1335 ms)
      ✓ should filter by work station (1336 ms)
      ✓ should filter by on-shift status (1274 ms)
      ✓ should support pagination (2288 ms)
      ✓ should require authentication (1084 ms)
      ✓ should require operator management permissions (1374 ms)
    GET /api/v1/operators/:id
      ✓ should get operator by ID (1371 ms)
      ✓ should allow operators to view their own profile (1158 ms)
      ✓ should prevent operators from viewing other operators (1207 ms)
      ✓ should return 404 for non-existent operator (1167 ms)
    POST /api/v1/operators
      ✓ should create new operator (1414 ms)
      ✓ should validate required fields (1119 ms)
      ✓ should validate email format (1153 ms)
      ✓ should validate shift time format (1127 ms)
      ✓ should prevent duplicate emails (1217 ms)
      ✓ should require operators.manage permission (1454 ms)
    PATCH /api/v1/operators/:id
      ✓ should update operator details (1374 ms)
      ✓ should update password (1622 ms)
      ✓ should deactivate operator (1427 ms)
      ✓ should allow operators to update their own profile (limited fields) (1513 ms)
      ✓ should prevent operators from changing their own work station (1493 ms)
      ✓ should not allow updating operatorId (1346 ms)
      ✓ should validate email uniqueness on update (1466 ms)
    DELETE /api/v1/operators/:id
      ✓ should delete operator (1380 ms)
      ✓ should prevent deleting operator with active orders (1308 ms)
      ✓ should require operators.manage permission (1468 ms)
      ✓ should handle non-existent operator (1257 ms)
    POST /api/v1/operators/:id/reset-pin
      ✓ should reset operator PIN/password (1563 ms)
      ✓ should clear login attempts on PIN reset (1567 ms)
    GET /api/v1/operators/available
      ✓ should get available operators sorted by order count (1448 ms)
      ✓ should respect limit parameter (1438 ms)
      ✓ should only include active operators (1415 ms)
      ✓ should require authentication (1399 ms)
    PATCH /api/v1/operators/:id/stats
      ✓ should update processing statistics (1323 ms)
      ✓ should update quality score (1322 ms)
      ✓ should update both stats in one call (1313 ms)
      ✓ should validate processingTime is positive (1285 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:31.668Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Jp7yzuh6-Ef30j8gzW9-jAdyJZXQ-EKCP5MY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 10.983 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:32.444Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 8av5oCxz-fCm9tmPkZqOOJyoDNtnqaSWCGd4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.224 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/poll-test-session-456 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:32.485Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'poll-test-session-456',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-success',
        socialToken: 'mock-social-jwt-token',
        provider: 'facebook',
        socialId: 'facebook-user-456',
        email: 'poll@example.com',
        firstName: 'Poll',
        lastName: 'Test'
      }
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-success',
        socialToken: 'mock-social-jwt-token',
        provider: 'facebook',
        socialId: 'facebook-user-456',
        email: 'poll@example.com',
        firstName: 'Poll',
        lastName: 'Test'
      }
    }

      at log (server/controllers/authController.js:1566:13)

[0mGET /api/v1/auth/oauth-session/poll-test-session-456 [32m200[0m 34.940 ms - 211[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:33.160Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: sCrIHrAI-IB2XqdmDmSMr4W8PIOuMINLOEt0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.193 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/login-test-session-789 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:33.200Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'login-test-session-789',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-login',
        token: 'jwt-auth-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF-123e4567-e89b-12d3-a456-426614174000',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-login',
        token: 'jwt-auth-token',
        refreshToken: 'refresh-token',
        affiliate: {
          affiliateId: 'AFF-123e4567-e89b-12d3-a456-426614174000',
          id: 'affiliate-id',
          firstName: 'John',
          lastName: 'Doe',
          email: 'john@example.com',
          businessName: 'Test Business'
        }
      }
    }

      at log (server/controllers/authController.js:1566:13)

[0mGET /api/v1/auth/oauth-session/login-test-session-789 [32m200[0m 35.456 ms - 295[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:33.881Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZSouQn9h-C5962wR6oVb-r_rE1PYJ2e9LgfM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.605 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/non-existent-session {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:33.889Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'non-existent-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1547:13)

[0mGET /api/v1/auth/oauth-session/non-existent-session [33m404[0m 28.167 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:34.520Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: k0PEyZ30-aTI_BvJsubT0dGE3soZYVHcG3HM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.214 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:34.559Z"}
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:34.561Z"}
[34mdebug[39m: GET /api/v1/auth/oauth-session/race-condition-session {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:34.562Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'found',
      resultData: {
        sessionId: 'race-condition-session',
        provider: 'linkedin',
        socialId: 'linkedin-race-user',
        email: 'race@example.com',
        firstName: 'Race',
        lastName: 'Condition',
        context: 'affiliate'
      }
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        sessionId: 'race-condition-session',
        provider: 'linkedin',
        socialId: 'linkedin-race-user',
        email: 'race@example.com',
        firstName: 'Race',
        lastName: 'Condition',
        context: 'affiliate'
      }
    }

      at log (server/controllers/authController.js:1566:13)

[0mGET /api/v1/auth/oauth-session/race-condition-session [32m200[0m 35.733 ms - 209[0m
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    OAuth Session Polling Debug: {
      sessionId: 'race-condition-session',
      sessionResult: 'not found',
      resultData: null
    }

      at log (server/controllers/authController.js:1547:13)

[0mGET /api/v1/auth/oauth-session/race-condition-session [33m404[0m 35.756 ms - 58[0m
[0mGET /api/v1/auth/oauth-session/race-condition-session [33m404[0m 34.700 ms - 58[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:35.231Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: snmOFarO-bVfvB3PEy2oRLz6rFIAIdPxSPR4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.402 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:35.243Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-043d99a7-067f-473a-a139-6ebbad3565af","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:35.458Z","userId":"68477d9b5c2d0789c5202963","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 215.264 ms - 798[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:36.093Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HSN13Pek-xvUVeR8oBBM-fXqAApC1yzWp5no

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.319 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:36.107Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 3.116 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:36.733Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 0VAAxPFD-5VbagOPpszoO8uUSWAmMRuB9O5Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.596 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:36.744Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-7c18015a-8a54-4f0e-a949-12bfcd170763","provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:36.943Z","userId":"68477d9c5c2d0789c520299a","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 199.558 ms - 790[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:36.947Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 82.094 ms - 108[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:37.643Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: cVkQ6M8c-_DPkc4eEHGpMXtcKwtNGFi7udIE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.218 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:37.689Z"}
[0mPOST /api/v1/auth/social/register [33m409[0m 55.291 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:38.346Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: M3weNIfv-nu4tTYA8HKs2f54N8Z0CyueHtlc

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.132 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:38.358Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-f00cbbd0-134b-4375-80d0-137e6bca413f","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:38.587Z","userId":"68477d9e5c2d0789c52029d6","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 230.113 ms - 786[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:38.592Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-af605fa8-3e9a-4d9d-9549-b25c06d227a9","provider":"facebook","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:38.837Z","userId":"68477d9e5c2d0789c52029de","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 245.426 ms - 788[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:38.840Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-c00784d3-c012-4e3c-833a-485c282cd503","provider":"linkedin","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:39.114Z","userId":"68477d9e5c2d0789c52029e7","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 274.889 ms - 788[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:39.788Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Wgy1odIZ-9shiCZr52plRuOLaCWqEXnnpEkg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.797 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:39.833Z"}
info: undefined {"action":"SOCIAL_CUSTOMER_REGISTRATION","details":{"affiliateId":"AFF999999","customerId":"CUST-414779dc-2945-4d29-963b-ced80d3bf49c","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/customer/social/register","timestamp":"2025-06-10T00:34:40.059Z","userId":"68477d9f5c2d0789c5202a09","userType":"customer"}
[0mPOST /api/v1/auth/customer/social/register [32m201[0m 226.082 ms - 828[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:40.698Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: fhP9DI4N-pVJAH1xpo4EIj5oGl9pEnB3xfvI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.162 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/customer/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:40.707Z"}
[0mPOST /api/v1/auth/customer/social/register [33m400[0m 114.126 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:41.473Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: oyiFGjBX-M_O6oXHjDYhAjnijqgm22AAvCBs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.759 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:41.514Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg.%2BKnkiq%2FTmhYmLd3fQB2PzfTBOG%2FKOM3j9MhLsLDXmic',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:34:41.613Z","userType":"affiliate","username":"existing"}
info: undefined {"affiliateId":"AFF888888","ip":"::ffff:127.0.0.1","loginMethod":"social","method":"POST","path":"/social/callback","provider":"google","timestamp":"2025-06-10T00:34:41.613Z","userId":"68477da15c2d0789c5202a40","userType":"affiliate"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 99.721 ms - 560[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:42.286Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: WWoBdaI1-5fc5GlbbaRJ3B_1JgZ-WNLWMjXM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.691 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:42.379Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg.%2BKnkiq%2FTmhYmLd3fQB2PzfTBOG%2FKOM3j9MhLsLDXmic',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"eventType":"LOGIN_SUCCESS","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/callback","reason":"Social login successful","success":true,"timestamp":"2025-06-10T00:34:42.536Z","userType":"customer","username":"existingcustomer"}
[0mPOST /api/v1/auth/social/callback [32m200[0m 157.310 ms - 531[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:43.168Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: vGrt6H32-LVnYi9TsXZIivv_BDl4ZVU1dA3c

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.458 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/callback {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:43.178Z"}
  console.log
    CSRF check for: /api/v1/auth/social/callback {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg.%2BKnkiq%2FTmhYmLd3fQB2PzfTBOG%2FKOM3j9MhLsLDXmic',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/auth/social/callback [33m404[0m 55.170 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:43.843Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: CV7Dtp07-Ovwqb7OCtorRgOPAyIGJcRmy4Zg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.181 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/link {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:43.885Z"}
  console.log
    CSRF check for: /api/v1/auth/social/link {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg.%2BKnkiq%2FTmhYmLd3fQB2PzfTBOG%2FKOM3j9MhLsLDXmic',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

info: undefined {"action":"SOCIAL_ACCOUNT_LINKED","details":{"provider":"twitter","socialAccountId":"twitter-link-123"},"eventType":"ACCOUNT_UPDATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/link","timestamp":"2025-06-10T00:34:43.972Z","userId":"68477da35c2d0789c5202a96","userType":"affiliate"}
[0mPOST /api/v1/auth/social/link [32m200[0m 87.042 ms - 64[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:44.590Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: AwTdWa3q-pXq2VsvyHqX70Ngp6PU5yhG-ZPE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.976 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:44.602Z"}
info: undefined {"action":"SOCIAL_REGISTRATION","details":{"affiliateId":"AFF-4e245eed-dfed-4aad-9a9f-9490bc89ec4f","provider":"google","registrationMethod":"social"},"eventType":"ACCOUNT_CREATED","ip":"::ffff:127.0.0.1","method":"POST","path":"/social/register","timestamp":"2025-06-10T00:34:44.804Z","userId":"68477da45c2d0789c5202ab5","userType":"affiliate"}
[0mPOST /api/v1/auth/social/register [32m201[0m 201.461 ms - 786[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:45.416Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Y1pXIu1i-WUlE3hPR1iFT1cNNxJrEueL82Dg

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.971 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:45.424Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 2.373 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:46.025Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: g5ekHuu1-4LC75FEmhaflBIelXzCwS-opULs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.371 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:46.033Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.560 ms - 76[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:46.638Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NWFtQLhi-pofR7w8aUtj06GNUTY4Jimu1dfk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.161 ms - 67[0m
[34mdebug[39m: POST /api/v1/auth/social/register {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:46.646Z"}
[0mPOST /api/v1/auth/social/register [33m400[0m 1.598 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:47.241Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NGlOGXI5-_Hgi5ggJyj4QOi5FXvfnsGTGM6E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 14.873 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:47.944Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: MtiVGLG0-xoKYNXGYVuKmzp2QsR_EbEqOAlI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.467 ms - 67[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:48.644Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1rLTN8lV-mQFRwhl4yI5Awwk4Ly0XdiTQZUA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.332 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/conflict-test-session-123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:48.720Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'conflict-test-session-123',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john.affiliate@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with an affiliate account. Would you like to login as an affiliate instead?',
        provider: 'google',
        accountType: 'affiliate',
        affiliateData: {
          affiliateId: 'AFF123456',
          firstName: 'John',
          lastName: 'Affiliate',
          email: 'john.affiliate@example.com',
          businessName: 'Johns Business'
        }
      }
    }

      at log (server/controllers/authController.js:1566:13)

[0mGET /api/v1/auth/oauth-session/conflict-test-session-123 [32m200[0m 33.558 ms - 402[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:49.378Z"}
  console.log
    CSRF token generation: {
      sessionID: '7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg',
      hasSession: true,
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: IVCPoQCm--l6fTpoIgIDoZlLR4LmLpSeBO60

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 7rkjDXQ7h0XyJu6t2L7EmJd8kVECQbUg

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 061G035IbS...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.637 ms - 67[0m
[34mdebug[39m: GET /api/v1/auth/oauth-session/customer-conflict-session-456 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:49.451Z"}
  console.log
    OAuth Session Polling Debug: {
      sessionId: 'customer-conflict-session-456',
      sessionResult: 'found',
      resultData: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane.customer@example.com'
        }
      }
    }

      at log (server/controllers/authController.js:1547:13)

  console.log
    Sending OAuth response: {
      success: true,
      result: {
        type: 'social-auth-account-conflict',
        message: 'This social media account is already associated with a customer account. Would you like to login as a customer instead?',
        provider: 'google',
        accountType: 'customer',
        customerData: {
          firstName: 'Jane',
          lastName: 'Customer',
          email: 'jane.customer@example.com'
        }
      }
    }

      at log (server/controllers/authController.js:1566:13)

[0mGET /api/v1/auth/oauth-session/customer-conflict-session-456 [32m200[0m 35.618 ms - 336[0m
PASS tests/integration/oAuthFlows.test.js (20.323 s)
  OAuth Authentication Integration Tests
    OAuth Session Management
      ✓ should create and store OAuth session on callback (1298 ms)
      ✓ should poll for OAuth session results with complete data structure (720 ms)
      ✓ should poll for OAuth login session results (709 ms)
      ✓ should return pending status for non-existent session (654 ms)
      ✓ should handle session polling race conditions (710 ms)
    Social Registration - Affiliates
      ✓ should complete affiliate social registration with valid data (862 ms)
      ✓ should reject registration with malicious social data (638 ms)
      ✓ should prevent duplicate social account registration (910 ms)
      ✓ should prevent duplicate email registration (703 ms)
      ✓ should generate unique usernames for social registrations (1439 ms)
    Social Registration - Customers
      ✓ should complete customer social registration with valid data (914 ms)
      ✓ should reject customer registration with invalid affiliate ID (773 ms)
    Social Login
      ✓ should login existing affiliate with social account (771 ms)
      ✓ should login existing customer with social account (922 ms)
      ✓ should return error for non-existent social account (673 ms)
    Social Account Linking
      ✓ should link social account to existing affiliate (745 ms)
    Security and Error Handling
      ✓ should accept requests without CSRF token for social registration (832 ms)
      ✓ should handle expired JWT tokens gracefully (606 ms)
      ✓ should handle invalid JWT tokens (615 ms)
      ✓ should validate required fields (602 ms)
    OAuth Session TTL and Cleanup
      ✓ should automatically expire OAuth sessions after TTL (705 ms)
      ✓ should preserve fresh OAuth sessions during cleanup (699 ms)
    OAuth Account Conflict Scenarios
      ✓ should create social-auth-account-conflict session for customer trying to register with affiliate Google account (735 ms)
      ✓ should create social-auth-account-conflict session for affiliate trying to register with customer Google account (766 ms)

  console.log
    Connected to test database: mongodb+srv://***:***@cluster0.yiy75zr.mongodb.net/wavemax_test?retryWrites=true&w=majority

      at Object.log (tests/setup.js:46:13)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:51.168Z"}
  console.log
    CSRF token generation: {
      sessionID: 'I1pnd2bAHc0V2c2IBj4XM_-M2EyNj8cF',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: zgdBzbXz-2z3rYmW3KrCQLyBFDs020jPw9JU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: I1pnd2bAHc0V2c2IBj4XM_-M2EyNj8cF

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: jCTrSxYVkJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.875 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:51.871Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'I1pnd2bAHc0V2c2IBj4XM_-M2EyNj8cF',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AI1pnd2bAHc0V2c2IBj4XM_-M2EyNj8cF.rMVlhbIopVIZ8uyZQVvIvuN%2FfdazP3CGEf4CZqkf%2F2I',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      specialPickupInstructions: 'Ring doorbell',
      estimatedWeight: 30,
      numberOfBags: 2,
      serviceNotes: 'Handle with care',
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon',
      specialDeliveryInstructions: 'Leave at door'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 214.824 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:52.685Z"}
  console.log
    CSRF token generation: {
      sessionID: '8xxnIuQNpWqHTap5xorQ4OjvAafQN5fY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: E6rXdAzV-iewYfQgSBod20Rt4oQ1elRPxmQU

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8xxnIuQNpWqHTap5xorQ4OjvAafQN5fY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 3vFf7cpcWm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.915 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:52.948Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '8xxnIuQNpWqHTap5xorQ4OjvAafQN5fY',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8xxnIuQNpWqHTap5xorQ4OjvAafQN5fY.jTtybZA%2FMGIdnshKR3aUmJBu41ovj1IDIaZxetbiwvc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1,
      deliveryDate: '2025-05-27',
      deliveryTime: 'evening'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 202.559 ms - 104[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:53.636Z"}
  console.log
    CSRF token generation: {
      sessionID: 'cgN8TjgJzvXjYijLtfWOktrNwJKx0BBu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: iOg5npzZ-PYBUTBr74YgI6GEORjoCyIpcDBk

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: cgN8TjgJzvXjYijLtfWOktrNwJKx0BBu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ucg-ld3TpJ...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.785 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:53.891Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'cgN8TjgJzvXjYijLtfWOktrNwJKx0BBu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AcgN8TjgJzvXjYijLtfWOktrNwJKx0BBu.V4ndCR0zkAnw6m0M8o9P%2BjRKFcWBvmQyCtN5FlxOIyU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'INVALID',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: INVALID

      at log (server/controllers/orderController.js:82:13)

  console.log
    Customer not found with ID: INVALID

      at log (server/controllers/orderController.js:86:15)

[0mPOST /api/v1/orders [33m400[0m 57.523 ms - 49[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:54.440Z"}
  console.log
    CSRF token generation: {
      sessionID: 'EO2LmN2F6LSfN4CMPG3pY8U4Ka74dhym',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: g5qvvQw4-xKKsB8bdz1R_U9mzmCbnvqo7x9o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: EO2LmN2F6LSfN4CMPG3pY8U4Ka74dhym

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: dbL6QhSDUX...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.193 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:54.707Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'EO2LmN2F6LSfN4CMPG3pY8U4Ka74dhym',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AEO2LmN2F6LSfN4CMPG3pY8U4Ka74dhym.Ia%2FwOkiprl%2Bl3DB%2BVl%2FaVBi1h8GkZHS7WNBVBCUYHPw',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'INVALID',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: INVALID

      at log (server/controllers/orderController.js:95:13)

  console.log
    Affiliate not found with ID: INVALID

      at log (server/controllers/orderController.js:99:15)

[0mPOST /api/v1/orders [33m400[0m 85.703 ms - 50[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:55.288Z"}
  console.log
    CSRF token generation: {
      sessionID: 'P2wLQ_DU0d083qBnasRxzO_oMkwBcd5v',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: rW7xvOfj-SlNPHHaJOsyEUaJzz2d_5AU2onA

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: P2wLQ_DU0d083qBnasRxzO_oMkwBcd5v

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ydWmxNw1Eg...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.510 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:55.587Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'P2wLQ_DU0d083qBnasRxzO_oMkwBcd5v',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AP2wLQ_DU0d083qBnasRxzO_oMkwBcd5v.68kDaMwBFivsg8043PgtkWl6EF3RDkKg51M1ENgnDvs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST999',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST999

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Bob Jones

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [33m403[0m 89.723 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:56.170Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sm9AHSY4JeAvIjaLz1n16y8E6q1k_g5k',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Qs3J4pTu-drWC7kF6Xk-QbdYGH73QRUrFaBo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sm9AHSY4JeAvIjaLz1n16y8E6q1k_g5k

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: CwbYNxSDxa...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.666 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:56.432Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'sm9AHSY4JeAvIjaLz1n16y8E6q1k_g5k',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Asm9AHSY4JeAvIjaLz1n16y8E6q1k_g5k.o9YOQYkV3MlMnJJfMoivxJeakRYN6NuwrK16kp0m97k',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Validation errors: [
      {
        type: 'field',
        value: undefined,
        msg: 'Valid pickup date is required',
        path: 'pickupDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid pickup time',
        path: 'pickupTime',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Number of bags must be at least 1',
        path: 'numberOfBags',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Estimated weight must be a positive number',
        path: 'estimatedWeight',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Valid delivery date is required',
        path: 'deliveryDate',
        location: 'body'
      },
      {
        type: 'field',
        value: undefined,
        msg: 'Invalid delivery time',
        path: 'deliveryTime',
        location: 'body'
      }
    ]

      at log (server/controllers/orderController.js:57:15)

[0mPOST /api/v1/orders [33m400[0m 31.416 ms - 628[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:56.943Z"}
  console.log
    CSRF token generation: {
      sessionID: 'I59xwYsn1fBBL3U8XtdHnpMu7F_tBhLw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: wfYYoQCS-HU2rTPN2tLmXw-66MA_io4bZBNE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: I59xwYsn1fBBL3U8XtdHnpMu7F_tBhLw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ZoYQ-ohNrf...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.992 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:57.235Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 109.520 ms - 662[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:57.836Z"}
  console.log
    CSRF token generation: {
      sessionID: '5Sirrg8AdAILhUc44rgtu1LRF2e89-mP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 1G6ZxuRe-cs6FVetwwK2GWp0DaAbirDdRqGo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 5Sirrg8AdAILhUc44rgtu1LRF2e89-mP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: TJr7-gyz2R...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.638 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:58.151Z"}
[0mGET /api/v1/orders/ORD123456 [32m200[0m 108.170 ms - 662[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:58.804Z"}
  console.log
    CSRF token generation: {
      sessionID: 'LlbD3tek1NLzu__3w4BY5o1p1XqRRkAB',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 2oJinbZJ-q0wObnBYty6lE2Zzdkn5xq4hOkI

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: LlbD3tek1NLzu__3w4BY5o1p1XqRRkAB

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: YXnFBdHi7g...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.321 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/ORD123456 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:59.104Z"}
[0mGET /api/v1/orders/ORD123456 [33m403[0m 66.070 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:59.697Z"}
  console.log
    CSRF token generation: {
      sessionID: '9qXHpd5N01eyH2WkNbCOVww8w1pd8WWX',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 7uoxHmNJ-QAKNAkCrYuQe2ksK_aPPNBKOMRM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 9qXHpd5N01eyH2WkNbCOVww8w1pd8WWX

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: zNQfPamNz8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.315 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/NONEXISTENT {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:34:59.998Z"}
[0mGET /api/v1/orders/NONEXISTENT [33m404[0m 58.307 ms - 45[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:00.641Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OTB-yy6LwFpQE5sLIk4i2hfl5LJzio_Q',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5IR0dguQ-AhGqGqW9x-YLO-Em1fpHZ-mhH_o

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OTB-yy6LwFpQE5sLIk4i2hfl5LJzio_Q

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: bhAp55hl9S...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.533 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:00.978Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'OTB-yy6LwFpQE5sLIk4i2hfl5LJzio_Q',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOTB-yy6LwFpQE5sLIk4i2hfl5LJzio_Q.b3o5AxiG6Ao9okF0xGxwlfTj26w3ClB3d0u7Sv0RmzI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 142.923 ms - 130[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:01.677Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OS3EwqdHeaS833HYao0DyAR8zsBxkMTh',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: S3jPF7yf-zcbgUvbxes84EFFhjbGzpk5bEn4

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OS3EwqdHeaS833HYao0DyAR8zsBxkMTh

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 2-fHU8jgjy...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.090 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:02.027Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'OS3EwqdHeaS833HYao0DyAR8zsBxkMTh',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOS3EwqdHeaS833HYao0DyAR8zsBxkMTh.UJNl491cImul%2B814fvcFpDMo6frNDbk6e9SsEk9bnNY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [32m200[0m 173.069 ms - 173[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:02.724Z"}
  console.log
    CSRF token generation: {
      sessionID: 'nx32DvV3rqn36HtBxY2LPD6yYpgV4HH0',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: eHuOjFnr-Udg8t8n6mTEGN1sLzel6G3c1T70

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: nx32DvV3rqn36HtBxY2LPD6yYpgV4HH0

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: AeeDlJ3CPk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.195 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:03.059Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: 'nx32DvV3rqn36HtBxY2LPD6yYpgV4HH0',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Anx32DvV3rqn36HtBxY2LPD6yYpgV4HH0.DGY1Pgi83ScDWVnrHyQuckYhk96tIoZTWA1sOh7Ng1M',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m400[0m 55.729 ms - 83[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:03.599Z"}
  console.log
    CSRF token generation: {
      sessionID: '4kG0_D27TNNMDORsQ10Q2xqUo8yAPalc',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: pi0ZEtDd-v0z4krf7rdWm76TBcMBRiA-C3AM

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 4kG0_D27TNNMDORsQ10Q2xqUo8yAPalc

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: kq7sNWQqrr...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.671 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:03.926Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '4kG0_D27TNNMDORsQ10Q2xqUo8yAPalc',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A4kG0_D27TNNMDORsQ10Q2xqUo8yAPalc.zbsEHK89nTh23iCCjQoEe%2Ftuacd%2BuZnxW5yr9YMgGOE',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 55.569 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:04.463Z"}
  console.log
    CSRF token generation: {
      sessionID: '8EXCkaTIYf_P81Q49MmguQncMsNMv6o5',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZdPU9C8d-36VYCNdMZXooXjLvZjekrL3vaws

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 8EXCkaTIYf_P81Q49MmguQncMsNMv6o5

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 7G94G68ZJB...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.626 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:04.791Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/status {
      sessionID: '8EXCkaTIYf_P81Q49MmguQncMsNMv6o5',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A8EXCkaTIYf_P81Q49MmguQncMsNMv6o5.8AloHX2pI7nqjLM0ztOIOpbTLZPQTt%2BWLycUOuW5U10',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/status [33m403[0m 67.926 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:05.347Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aBFX3mWcuD4Wz6Oxq5of3J_G7wGMCKfm',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: c1pHjFYV-LOsFEDImSiNl2uoyLy1crmHepAQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: aBFX3mWcuD4Wz6Oxq5of3J_G7wGMCKfm

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cxKQnkehkm...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.155 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:05.685Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'aBFX3mWcuD4Wz6Oxq5of3J_G7wGMCKfm',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AaBFX3mWcuD4Wz6Oxq5of3J_G7wGMCKfm.S5AL9MaVEhxE6EDO5vNvtCiY1FBKq0alTkTN1IAe%2F%2FI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 158.445 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:06.418Z"}
  console.log
    CSRF token generation: {
      sessionID: 'YfC5Mi46Ef6TK9jfNE-Jsk_lba7H8fuV',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: isVgOR3k-bB58vZrhHQkEUN5gE9h5fHv9rig

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: YfC5Mi46Ef6TK9jfNE-Jsk_lba7H8fuV

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: sBUD6EAQyE...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.519 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:06.750Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'YfC5Mi46Ef6TK9jfNE-Jsk_lba7H8fuV',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYfC5Mi46Ef6TK9jfNE-Jsk_lba7H8fuV.Hah0%2BaaAN44aD6crThFwpTjEZfE4EXmZ5U4zHyklYfY',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [32m200[0m 147.202 ms - 57[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:07.427Z"}
  console.log
    CSRF token generation: {
      sessionID: 'B0nhOpBlcDjvaHACp1zw0xWJNLqsJ40i',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: qcf8xXiS-hCR8fie564E8pDzjiJnls9gtk6w

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: B0nhOpBlcDjvaHACp1zw0xWJNLqsJ40i

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: OiU6zTECsl...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 6.622 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:07.771Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'B0nhOpBlcDjvaHACp1zw0xWJNLqsJ40i',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AB0nhOpBlcDjvaHACp1zw0xWJNLqsJ40i.%2Fehc3wIcTpJb5W%2Be8tC3uiPUdBRMvgNQ3XP9gqeqZ9g',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m400[0m 55.068 ms - 77[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:08.305Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Y445Tqhw5qP2K9iGQDIVsolEshBo5jyy',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: BfB1bvJj-Kamr2lwW3BjSyQ5X9EnlpoVl9V0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Y445Tqhw5qP2K9iGQDIVsolEshBo5jyy

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: D5LLgUZ0I8...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.741 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/ORD123456/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:08.603Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/cancel {
      sessionID: 'Y445Tqhw5qP2K9iGQDIVsolEshBo5jyy',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AY445Tqhw5qP2K9iGQDIVsolEshBo5jyy.HWjOJKB9SPGKX5U3NyS9UC9w5luI7HVcAhAXhNUSkmk',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/ORD123456/cancel [33m403[0m 56.892 ms - 42[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:09.152Z"}
  console.log
    CSRF token generation: {
      sessionID: 'ez8OHllbCcsVFmqUFO_0QY8rn0v1cOVz',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: FAXrtgca-Ho6K7I4iIOC1MJElaJSfQNcscto

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: ez8OHllbCcsVFmqUFO_0QY8rn0v1cOVz

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: DARWOFIsfM...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.754 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:09.454Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: 'ez8OHllbCcsVFmqUFO_0QY8rn0v1cOVz',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Aez8OHllbCcsVFmqUFO_0QY8rn0v1cOVz.L2WG1d%2Fw8f5052JvqPKt7vmJZbNqJhQtbTsAztRgUWs',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 129.147 ms - 201[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:10.249Z"}
  console.log
    CSRF token generation: {
      sessionID: '2TSIDNhm1s6wL5i9SPxsDo0jdixx8eDH',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 3UjTza3T-zf7s7ttDL8TWwd3bNnKQOwPwZyE

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2TSIDNhm1s6wL5i9SPxsDo0jdixx8eDH

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: rbPoQpryQ4...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.755 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/bulk/status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:10.591Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/status {
      sessionID: '2TSIDNhm1s6wL5i9SPxsDo0jdixx8eDH',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2TSIDNhm1s6wL5i9SPxsDo0jdixx8eDH.J4xH6IaWe4nnXPlrQ7zqlS4IG5lOYYyPSnyKZYIoEmQ',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/bulk/status [32m200[0m 149.744 ms - 296[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:11.257Z"}
  console.log
    CSRF token generation: {
      sessionID: 'aZe7OOUQTlrqqDGwnvgGZQXdapdPFAsU',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: M52OGqOv-o_OjV03MxmkeEiZCCBCrRy7KWZ8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: aZe7OOUQTlrqqDGwnvgGZQXdapdPFAsU

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: _imzV6ilyf...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 7.262 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders/bulk/cancel {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:11.555Z"}
  console.log
    CSRF check for: /api/v1/orders/bulk/cancel {
      sessionID: 'aZe7OOUQTlrqqDGwnvgGZQXdapdPFAsU',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AaZe7OOUQTlrqqDGwnvgGZQXdapdPFAsU.sVpQ9fcIMTDC%2FdZ3OikBJ%2BwznwAof%2BB7a6qiTADdCwA',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPOST /api/v1/orders/bulk/cancel [32m200[0m 154.982 ms - 161[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:12.218Z"}
  console.log
    CSRF token generation: {
      sessionID: 'yWA1BJxWcpUeCN0Qda9v6UTG4cd7F9md',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: NawV9NZ4-1KCTTIi1gPh5sPi9xy0Cf7ieI7Y

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: yWA1BJxWcpUeCN0Qda9v6UTG4cd7F9md

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: qNZxjICqCs...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.834 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:12.529Z"}
[0mGET /api/v1/orders/export?format=csv&startDate=2025-05-01&endDate=2025-05-31&affiliateId=AFF123 [32m200[0m 85.993 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:13.350Z"}
  console.log
    CSRF token generation: {
      sessionID: 'kJiyQ4Z4GxdXbmkIxQDEjvYt14_S4lSK',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ks9UvOxC-9bMibf4hl1OvyEHvE7wLKqUDByQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: kJiyQ4Z4GxdXbmkIxQDEjvYt14_S4lSK

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: gCRumNgf5c...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.133 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=json&status=delivered&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:13.659Z"}
[0mGET /api/v1/orders/export?format=json&status=delivered&affiliateId=AFF123 [32m200[0m 84.055 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:14.257Z"}
  console.log
    CSRF token generation: {
      sessionID: 'PEDjcRuE3B9BFIuh5TyOuiLGD4YxkpsP',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: ZUh2ZH8T-4F3MOk-mvwrQZETpT9sdZjSQDyo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: PEDjcRuE3B9BFIuh5TyOuiLGD4YxkpsP

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: npMdGKLQ0I...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.759 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=excel&customerId=CUST123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:14.593Z"}
[0mGET /api/v1/orders/export?format=excel&customerId=CUST123 [31m501[0m 93.868 ms - 62[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:15.234Z"}
  console.log
    CSRF token generation: {
      sessionID: 'sl4qu4yOO3yBCfoFSG9QiX1quAbLs1ns',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: HndifIdm-kOfUT5BOH53sMZvFYvL7h69J6wo

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: sl4qu4yOO3yBCfoFSG9QiX1quAbLs1ns

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: RGWaieKn2R...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.253 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/export?format=csv {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:15.540Z"}
[0mGET /api/v1/orders/export?format=csv [33m403[0m 28.660 ms - 70[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:16.075Z"}
  console.log
    CSRF token generation: {
      sessionID: 'c2ZRzc9LqkS_E94tsHcMoEN5Bk-PaIcE',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: kxz3YDj9-JbOMdbranTTAiTWCCeohqv-mc9Q

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: c2ZRzc9LqkS_E94tsHcMoEN5Bk-PaIcE

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: Jj7w-dpcH1...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.092 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:16.374Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'c2ZRzc9LqkS_E94tsHcMoEN5Bk-PaIcE',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3Ac2ZRzc9LqkS_E94tsHcMoEN5Bk-PaIcE.5j8RqkPlJd6SNfU0bdd1plUAba40GhFAnVVfgbA3eGI',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 90.081 ms - 223[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:16.975Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Yc9EJnAlpgJqzKPd6riXdJ0HRMRY3vBY',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: O49g6I9o-gdoqz_S8nC5mX1KpeXmWBb38qgQ

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Yc9EJnAlpgJqzKPd6riXdJ0HRMRY3vBY

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: HoS6ww932h...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.078 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:17.256Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'Yc9EJnAlpgJqzKPd6riXdJ0HRMRY3vBY',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AYc9EJnAlpgJqzKPd6riXdJ0HRMRY3vBY.xNM4mowPha%2Bab5N59WQ3QPV903pzS58rtZrCqwP8ZSc',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 88.629 ms - 180[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:17.837Z"}
  console.log
    CSRF token generation: {
      sessionID: 'OOWZdwODsOqkb21uDREZ_LRBUUCTemin',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: krk67gE6-RehnPbfTKW-HYgeFNiWoukDtWB8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: OOWZdwODsOqkb21uDREZ_LRBUUCTemin

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ju2KLjt62I...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.249 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:18.186Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'OOWZdwODsOqkb21uDREZ_LRBUUCTemin',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AOOWZdwODsOqkb21uDREZ_LRBUUCTemin.hZW7VkRK0czTsh%2FuoC0CJvtcGxz4mXuVjt8S82bKN7Y',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [33m400[0m 58.245 ms - 83[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:18.763Z"}
  console.log
    CSRF token generation: {
      sessionID: 'pkNSEOEJMqS92tt6B0VLeYbuYOIN8zZj',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: nXkhik30-6VxLcuj0XzEhWMHY5kdqUstOkPs

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: pkNSEOEJMqS92tt6B0VLeYbuYOIN8zZj

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: pnkSXI_CDW...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.082 ms - 67[0m
[34mdebug[39m: PUT /api/v1/orders/ORD123456/payment-status {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:19.090Z"}
  console.log
    CSRF check for: /api/v1/orders/ORD123456/payment-status {
      sessionID: 'pkNSEOEJMqS92tt6B0VLeYbuYOIN8zZj',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3ApkNSEOEJMqS92tt6B0VLeYbuYOIN8zZj.1mxoifRNbDCfd29Dl3j6Ct1Oj3JRptJjQ%2F0RTYYLxx4',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

[0mPUT /api/v1/orders/ORD123456/payment-status [32m200[0m 87.869 ms - 319[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:19.668Z"}
  console.log
    CSRF token generation: {
      sessionID: 'MwLJo88h-j7VOVeq1AdAR6HoGEx_DqmL',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 41ykQWJH-voIxWVTEFNlcCSTAaaMQCcJnlK8

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: MwLJo88h-j7VOVeq1AdAR6HoGEx_DqmL

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: PO1zBHw6oq...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.855 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/search?search=alice&affiliateId=AFF123 {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:19.995Z"}
[0mGET /api/v1/orders/search?search=alice&affiliateId=AFF123 [32m200[0m 135.381 ms - 555[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:20.651Z"}
  console.log
    CSRF token generation: {
      sessionID: 'NHuzUAzwlVYIde9wciws0cLMMjdRAuT-',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: M47sqj5B--Y76eSa5EgV4RME_2L6FSjPDy0M

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: NHuzUAzwlVYIde9wciws0cLMMjdRAuT-

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: e-T7ilLY3o...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.136 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=delivered&date=month {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:20.999Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=delivered&date=month [32m200[0m 122.268 ms - 116[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:21.615Z"}
  console.log
    CSRF token generation: {
      sessionID: 'r7_ePHJb_rPH4WKbYQyvqw9l-N5kwO18',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: Cv7JXMX4-FezCOZSpguDU-j96VF0grWschT0

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: r7_ePHJb_rPH4WKbYQyvqw9l-N5kwO18

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: 74V2Bhvbkw...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.673 ms - 67[0m
[34mdebug[39m: GET /api/v1/affiliates/AFF123/orders?status=all {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:21.981Z"}
[0mGET /api/v1/affiliates/AFF123/orders?status=all [32m200[0m 122.899 ms - -[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:22.592Z"}
  console.log
    CSRF token generation: {
      sessionID: 'SB0K9Vc7K0cCAMpMooqfKptuxf32F2lw',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: l9Ez6Dtf-ovpDIZScZPRrbOMUG-d_6cVq_8E

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: SB0K9Vc7K0cCAMpMooqfKptuxf32F2lw

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: cPS3lvixJ0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.665 ms - 67[0m
[34mdebug[39m: GET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:22.947Z"}
[0mGET /api/v1/orders/statistics?affiliateId=AFF123&includeStats=true [32m200[0m 58.164 ms - 251[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:23.518Z"}
  console.log
    CSRF token generation: {
      sessionID: 'G8Tbsx2cwnEp-6n9Z_kUW9ktdbyAfDze',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: bufebdAZ-CWI1WuGsydb0Vwn5a6FBSYtpndY

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: G8Tbsx2cwnEp-6n9Z_kUW9ktdbyAfDze

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: yy7I5Q1xI0...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.904 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:24.213Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'G8Tbsx2cwnEp-6n9Z_kUW9ktdbyAfDze',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AG8Tbsx2cwnEp-6n9Z_kUW9ktdbyAfDze.2yx9adDniRiWXjGb9VCG8syVarsxPKv17KQo9%2BqD3UU',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 200.470 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:25.009Z"}
  console.log
    CSRF token generation: {
      sessionID: 'Jk7FYV3kOT9TifUY9ZFj8lgCkOfVdT_d',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 9qKQsRaA-aJvvwcOFLtj--Ile4JDMlTu3_ew

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: Jk7FYV3kOT9TifUY9ZFj8lgCkOfVdT_d

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: ge0c4p_f-K...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.815 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:25.846Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: 'Jk7FYV3kOT9TifUY9ZFj8lgCkOfVdT_d',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3AJk7FYV3kOT9TifUY9ZFj8lgCkOfVdT_d.YmtaELFgrbAr9tXtnnUiPTam0cdXiY9JXdmvvBDimc8',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 50,
      numberOfBags: 3,
      deliveryDate: '2025-05-28',
      deliveryTime: 'evening'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 219.144 ms - 102[0m
  console.log
    Order baseRate: 2 Expected: 2.00

      at Object.log (tests/integration/order.test.js:1173:15)

[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:26.787Z"}
  console.log
    CSRF token generation: {
      sessionID: '2VPIfquoBnPVByNjtiZb1fubMJO-2DJu',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: R46WOtZf-DupWvyszXzcSnr5W2I72l98r264

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2VPIfquoBnPVByNjtiZb1fubMJO-2DJu

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: djApF0p9Tk...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 5.426 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:27.475Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '2VPIfquoBnPVByNjtiZb1fubMJO-2DJu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2VPIfquoBnPVByNjtiZb1fubMJO-2DJu.WNtkCcf7Q03BLENJHG2utGwicOS1OwRptI7yXiT10II',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 207.778 ms - 103[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:27.685Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '2VPIfquoBnPVByNjtiZb1fubMJO-2DJu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2VPIfquoBnPVByNjtiZb1fubMJO-2DJu.WNtkCcf7Q03BLENJHG2utGwicOS1OwRptI7yXiT10II',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 198.510 ms - 103[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:27.886Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '2VPIfquoBnPVByNjtiZb1fubMJO-2DJu',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2VPIfquoBnPVByNjtiZb1fubMJO-2DJu.WNtkCcf7Q03BLENJHG2utGwicOS1OwRptI7yXiT10II',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-25',
      pickupTime: 'morning',
      estimatedWeight: 30,
      numberOfBags: 2,
      deliveryDate: '2025-05-27',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 197.041 ms - 103[0m
[34mdebug[39m: GET /api/csrf-token {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:28.789Z"}
  console.log
    CSRF token generation: {
      sessionID: '2sorYBKFzccTk2pnbbxogTKQA4C0nB9L',
      hasSession: true,
      hasCsrfSecret: false
    }

      at log (server/config/csrf-config.js:268:11)

  console.log
    === Generated CSRF token ===

      at log (server/config/csrf-config.js:285:13)

  console.log
    Token: 5I2u0gdR-1FgHqj5FAPp4Nvvrd10N1uPGsik

      at log (server/config/csrf-config.js:286:13)

  console.log
    Session ID: 2sorYBKFzccTk2pnbbxogTKQA4C0nB9L

      at log (server/config/csrf-config.js:287:13)

  console.log
    CSRF Secret: epHYU26nmD...

      at log (server/config/csrf-config.js:288:13)

  console.log
    ===========================

      at log (server/config/csrf-config.js:289:13)

[0mGET /api/csrf-token [32m200[0m 4.522 ms - 67[0m
[34mdebug[39m: POST /api/v1/orders {"service":"wavemax-affiliate","timestamp":"2025-06-10T00:35:29.596Z"}
  console.log
    CSRF check for: /api/v1/orders {
      sessionID: '2sorYBKFzccTk2pnbbxogTKQA4C0nB9L',
      hasSession: true,
      sessionCookie: 'wavemax.sid=s%3A2sorYBKFzccTk2pnbbxogTKQA4C0nB9L.6aitMcMG1sIhvcuJ6FLGZJGNSxfCzZi2FZhQ8ChwJ00',
      hasCsrfSecret: true
    }

      at log (server/config/csrf-config.js:201:11)

  console.log
    Creating order with data: {
      customerId: 'CUST123',
      affiliateId: 'AFF123',
      pickupDate: '2025-05-26',
      pickupTime: 'morning',
      estimatedWeight: 15,
      numberOfBags: 1,
      deliveryDate: '2025-05-28',
      deliveryTime: 'afternoon'
    }

      at log (server/controllers/orderController.js:65:13)

  console.log
    Looking for customer with ID: CUST123

      at log (server/controllers/orderController.js:82:13)

  console.log
    Found customer: Jane Smith

      at log (server/controllers/orderController.js:92:13)

  console.log
    Looking for affiliate with ID: AFF123

      at log (server/controllers/orderController.js:95:13)

  console.log
    Found affiliate: John Doe

      at log (server/controllers/orderController.js:105:13)

[0mPOST /api/v1/orders [32m201[0m 280.346 ms - 104[0m
PASS tests/integration/order.test.js (40.312 s)
  Order Integration Tests
    POST /api/v1/orders
      ✓ should create order as customer (1534 ms)
      ✓ should create order as affiliate for their customer (951 ms)
      ✓ should fail with invalid customer ID (805 ms)
      ✓ should fail with invalid affiliate ID (846 ms)
      ✓ should fail when customer tries to create order for another customer (882 ms)
      ✓ should validate required fields (773 ms)
    GET /api/v1/orders/:orderId
      ✓ should return order details for customer (893 ms)
      ✓ should return order details for affiliate (968 ms)
      ✓ should fail for unauthorized customer (892 ms)
      ✓ should return 404 for non-existent order (944 ms)
    PUT /api/v1/orders/:orderId/status
      ✓ should update order status as affiliate (1035 ms)
      ✓ should update weight when processing (1048 ms)
      ✓ should prevent invalid status transitions (874 ms)
      ✓ should fail for unauthorized affiliate (864 ms)
      ✓ should fail for customers (883 ms)
    POST /api/v1/orders/:orderId/cancel
      ✓ should cancel order as customer (1071 ms)
      ✓ should cancel order as affiliate (1008 ms)
      ✓ should prevent cancelling non-cancellable orders (879 ms)
      ✓ should fail for unauthorized user (847 ms)
    Bulk order operations
      ✓ should update multiple orders status in bulk (1097 ms)
      ✓ should handle partial bulk update failures (1004 ms)
      ✓ should cancel multiple orders in bulk (965 ms)
    Order export functionality
      ✓ should export orders as CSV (1132 ms)
      ✓ should export orders as JSON (906 ms)
      ✓ should export orders as Excel (976 ms)
      ✓ should respect export permissions (840 ms)
    Payment status updates
      ✓ should update payment status (900 ms)
      ✓ should handle payment failure (862 ms)
      ✓ should prevent payment status update on non-delivered orders (926 ms)
      ✓ should record refund (904 ms)
    Order filtering and search
      ✓ should search orders by customer name (981 ms)
      ✓ should filter orders by multiple criteria (964 ms)
      ✓ should filter by pickup time slots (977 ms)
      ✓ should provide aggregated statistics with filters (925 ms)
    Commission Calculation Tests
      ✓ should calculate commission correctly when order is completed (1491 ms)
      ✓ should use dynamic WDF rate from SystemConfig (1777 ms)
      ✓ should calculate commission for multiple orders (2002 ms)
      ✓ should handle high delivery fee scenarios (1777 ms)

-----------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                                                                                                                                                                                                                   
-----------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                    |   78.81 |     68.6 |   85.01 |   78.61 |                                                                                                                                                                                                                                                                                                                                                                     
 config                      |    94.9 |       80 |     100 |    94.9 |                                                                                                                                                                                                                                                                                                                                                                     
  csrf-config.js             |   85.45 |       70 |     100 |   85.45 | 212-236,246-247,262,277-278                                                                                                                                                                                                                                                                                                                                         
  passport-config.js         |     100 |    86.66 |     100 |     100 | 19,210,225,250-251,304,330-331                                                                                                                                                                                                                                                                                                                                      
 controllers                 |    78.9 |    67.69 |   88.43 |   78.84 |                                                                                                                                                                                                                                                                                                                                                                     
  administratorController.js |   70.02 |    57.39 |   72.34 |   69.97 | 110-111,185-203,220,271,294-295,311,366-367,384,402,430-431,470-471,558-576,614,674-675,739-740,758,816-817,877-878,889-925,1091-1092,1188-1189,1200-1318,1329-1418,1429-1483,1501,1512-1513,1544-1545,1556-1744,1769,1778,1807,1812,1831-1832,1860-1861,1910-1911,1935,1958-1959,1976,2030,2045-2046                                                               
  affiliateController.js     |   89.11 |    81.52 |     100 |   88.88 | 207,217,248-250,284-285,302,312,327,386-387,439-440,445,505-506,529,560-563,578,667,725-726,742,825-826,861,943-944                                                                                                                                                                                                                                                 
  authController.js          |    72.6 |    58.16 |     100 |    72.6 | 128-129,141,174-179,183,213-214,232-233,312-313,331-332,340-341,370-371,421-422,454-455,505-506,521,533-538,567-575,583-584,599,617-628,644,647,669-670,717,731,755,765,776-777,820-835,948,953-998,1026,1068-1109,1255,1322,1333,1396-1397,1412,1522-1523,1538,1591-1592,1604-1648,1669-1732,1737-1783,1811,1847-1885,1897,1933,1947-1948,1961,1974,2031,2080-2081 
  customerController.js      |   74.35 |    69.34 |   86.66 |   73.95 | 130,149-150,209-210,229,242,265-281,291-292,311,324,336,338,340,374-375,393,406,473-496,508-550,584,627,639,679-680                                                                                                                                                                                                                                                 
  operatorController.js      |    91.4 |     81.3 |   83.33 |   91.66 | 367-368,374-404,491-492,582-583,610-611,635                                                                                                                                                                                                                                                                                                                         
  orderController.js         |    86.4 |    73.48 |     100 |   86.98 | 165-166,252-253,272,341-342,360,410-411,427,436,446,457,503-508,519-520,535,545,558,571-576,599-600,739-746,773,785,802,844-845,872-873,940-941,967-968,1030-1031                                                                                                                                                                                                   
 middleware                  |   96.95 |    93.65 |   94.73 |   96.78 |                                                                                                                                                                                                                                                                                                                                                                     
  auth.js                    |   84.44 |    88.88 |   66.66 |   84.44 | 88-90,129-139                                                                                                                                                                                                                                                                                                                                                       
  errorHandler.js            |   97.82 |    87.09 |     100 |   97.82 | 10                                                                                                                                                                                                                                                                                                                                                                  
  rbac.js                    |     100 |    95.45 |     100 |     100 | 248,268,274,301                                                                                                                                                                                                                                                                                                                                                     
  sanitization.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
 models                      |    95.1 |    90.95 |     100 |   95.56 |                                                                                                                                                                                                                                                                                                                                                                     
  Administrator.js           |   97.18 |    92.85 |     100 |     100 | 202-209                                                                                                                                                                                                                                                                                                                                                             
  Affiliate.js               |   91.66 |    86.11 |     100 |   91.66 | 77,170,174                                                                                                                                                                                                                                                                                                                                                          
  Customer.js                |   86.66 |    85.71 |     100 |   86.66 | 103,107                                                                                                                                                                                                                                                                                                                                                             
  OAuthSession.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  Operator.js                |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  Order.js                   |   75.55 |    74.28 |     100 |   75.55 | 118,163-179                                                                                                                                                                                                                                                                                                                                                         
  RefreshToken.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  SystemConfig.js            |     100 |     98.3 |     100 |     100 | 70                                                                                                                                                                                                                                                                                                                                                                  
  TokenBlacklist.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  Transaction.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
 routes                      |   88.42 |    54.54 |      75 |   88.38 |                                                                                                                                                                                                                                                                                                                                                                     
  administratorRoutes.js     |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  affiliateRoutes.js         |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  authRoutes.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  coverageRoutes.js          |   96.96 |      100 |    87.5 |   96.96 | 96                                                                                                                                                                                                                                                                                                                                                                  
  customerRoutes.js          |   95.45 |    83.33 |     100 |   95.45 | 41                                                                                                                                                                                                                                                                                                                                                                  
  operatorRoutes.js          |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  orderRoutes.js             |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  routingRoutes.js           |   83.33 |      100 |       0 |   83.33 | 7                                                                                                                                                                                                                                                                                                                                                                   
  socialAuthRoutes.js        |   56.25 |    17.64 |   14.28 |   56.25 | 50-57,79-86,150-163,176-177,187-196,219-228                                                                                                                                                                                                                                                                                                                         
  systemConfigRoutes.js      |   80.85 |       75 |     100 |   80.43 | 23-24,49-50,65,72-73,105-106                                                                                                                                                                                                                                                                                                                                        
 utils                       |   49.17 |    48.72 |   55.35 |   47.43 |                                                                                                                                                                                                                                                                                                                                                                     
  auditLogger.js             |     100 |    97.14 |     100 |     100 | 98                                                                                                                                                                                                                                                                                                                                                                  
  emailService.js            |       0 |        0 |       0 |       0 | 4-2094                                                                                                                                                                                                                                                                                                                                                              
  encryption.js              |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  fieldFilter.js             |   92.06 |    81.17 |     100 |   92.98 | 140,202,204,206                                                                                                                                                                                                                                                                                                                                                     
  logger.js                  |     100 |       50 |     100 |     100 | 11-30                                                                                                                                                                                                                                                                                                                                                               
  paginationMiddleware.js    |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                     
  passwordValidator.js       |   90.83 |    89.71 |     100 |   89.81 | 141-145,193,231-232,234-235,246-247                                                                                                                                                                                                                                                                                                                                 
-----------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for statements (80%) not met: 78.81%
Jest: "global" coverage threshold for branches (80%) not met: 68.6%
Jest: "global" coverage threshold for lines (80%) not met: 78.61%
Test Suites: 52 passed, 52 total
Tests:       22 skipped, 1174 passed, 1196 total
Snapshots:   0 total
Time:        394.756 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
